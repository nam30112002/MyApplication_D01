
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001e290  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002874  0801e440  0801e440  0002e440  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00000462  08020cb4  08020cb4  00030cb4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000018  08021118  08021118  00031118  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000001c  08021130  08021130  00031130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 001592e0  0802114c  0802114c  0003114c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0817a42c  0817a42c  0019015c  2**0
                  CONTENTS
  8 .ARM          00000008  0817a42c  0817a42c  0018a42c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  0817a434  0817a434  0019015c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  0817a434  0817a434  0018a434  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  0817a448  0817a448  0018a448  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         0000015c  20000000  0817a450  00190000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00013834  2000015c  0817a5ac  0019015c  2**2
                  ALLOC
 14 ._user_heap_stack 00001400  20013990  0817a5ac  00193990  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  0019015c  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  001a0000  2**2
                  ALLOC
 17 .comment      000000c2  00000000  00000000  0019018c  2**0
                  CONTENTS, READONLY
 18 .debug_line   00063c88  00000000  00000000  0019024e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 0000006c  00000000  00000000  001f3ed6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   000f1945  00000000  00000000  001f3f42  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 0001ad29  00000000  00000000  002e5887  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 000036b0  00000000  00000000  003005b0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    0011234c  00000000  00000000  00303c60  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 00004296  00000000  00000000  00415fac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 0001f7c6  00000000  00000000  0041a242  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  000323b4  00000000  00000000  00439a08  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  000099f8  00000000  00000000  0046bdbc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	2000015c 	.word	0x2000015c
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0801e428 	.word	0x0801e428

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000160 	.word	0x20000160
 80001ec:	0801e428 	.word	0x0801e428

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_dmul>:
 8000290:	b570      	push	{r4, r5, r6, lr}
 8000292:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000296:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800029a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800029e:	bf1d      	ittte	ne
 80002a0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80002a4:	ea94 0f0c 	teqne	r4, ip
 80002a8:	ea95 0f0c 	teqne	r5, ip
 80002ac:	f000 f8de 	bleq	800046c <__aeabi_dmul+0x1dc>
 80002b0:	442c      	add	r4, r5
 80002b2:	ea81 0603 	eor.w	r6, r1, r3
 80002b6:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80002ba:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80002be:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80002c2:	bf18      	it	ne
 80002c4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80002c8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80002cc:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80002d0:	d038      	beq.n	8000344 <__aeabi_dmul+0xb4>
 80002d2:	fba0 ce02 	umull	ip, lr, r0, r2
 80002d6:	f04f 0500 	mov.w	r5, #0
 80002da:	fbe1 e502 	umlal	lr, r5, r1, r2
 80002de:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80002e2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80002e6:	f04f 0600 	mov.w	r6, #0
 80002ea:	fbe1 5603 	umlal	r5, r6, r1, r3
 80002ee:	f09c 0f00 	teq	ip, #0
 80002f2:	bf18      	it	ne
 80002f4:	f04e 0e01 	orrne.w	lr, lr, #1
 80002f8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80002fc:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000300:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8000304:	d204      	bcs.n	8000310 <__aeabi_dmul+0x80>
 8000306:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 800030a:	416d      	adcs	r5, r5
 800030c:	eb46 0606 	adc.w	r6, r6, r6
 8000310:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000314:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000318:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 800031c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000320:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000324:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000328:	bf88      	it	hi
 800032a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800032e:	d81e      	bhi.n	800036e <__aeabi_dmul+0xde>
 8000330:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 8000334:	bf08      	it	eq
 8000336:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800033a:	f150 0000 	adcs.w	r0, r0, #0
 800033e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000342:	bd70      	pop	{r4, r5, r6, pc}
 8000344:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000348:	ea46 0101 	orr.w	r1, r6, r1
 800034c:	ea40 0002 	orr.w	r0, r0, r2
 8000350:	ea81 0103 	eor.w	r1, r1, r3
 8000354:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000358:	bfc2      	ittt	gt
 800035a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800035e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000362:	bd70      	popgt	{r4, r5, r6, pc}
 8000364:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000368:	f04f 0e00 	mov.w	lr, #0
 800036c:	3c01      	subs	r4, #1
 800036e:	f300 80ab 	bgt.w	80004c8 <__aeabi_dmul+0x238>
 8000372:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000376:	bfde      	ittt	le
 8000378:	2000      	movle	r0, #0
 800037a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800037e:	bd70      	pople	{r4, r5, r6, pc}
 8000380:	f1c4 0400 	rsb	r4, r4, #0
 8000384:	3c20      	subs	r4, #32
 8000386:	da35      	bge.n	80003f4 <__aeabi_dmul+0x164>
 8000388:	340c      	adds	r4, #12
 800038a:	dc1b      	bgt.n	80003c4 <__aeabi_dmul+0x134>
 800038c:	f104 0414 	add.w	r4, r4, #20
 8000390:	f1c4 0520 	rsb	r5, r4, #32
 8000394:	fa00 f305 	lsl.w	r3, r0, r5
 8000398:	fa20 f004 	lsr.w	r0, r0, r4
 800039c:	fa01 f205 	lsl.w	r2, r1, r5
 80003a0:	ea40 0002 	orr.w	r0, r0, r2
 80003a4:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80003a8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80003ac:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80003b0:	fa21 f604 	lsr.w	r6, r1, r4
 80003b4:	eb42 0106 	adc.w	r1, r2, r6
 80003b8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80003bc:	bf08      	it	eq
 80003be:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80003c2:	bd70      	pop	{r4, r5, r6, pc}
 80003c4:	f1c4 040c 	rsb	r4, r4, #12
 80003c8:	f1c4 0520 	rsb	r5, r4, #32
 80003cc:	fa00 f304 	lsl.w	r3, r0, r4
 80003d0:	fa20 f005 	lsr.w	r0, r0, r5
 80003d4:	fa01 f204 	lsl.w	r2, r1, r4
 80003d8:	ea40 0002 	orr.w	r0, r0, r2
 80003dc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80003e0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80003e4:	f141 0100 	adc.w	r1, r1, #0
 80003e8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80003ec:	bf08      	it	eq
 80003ee:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80003f2:	bd70      	pop	{r4, r5, r6, pc}
 80003f4:	f1c4 0520 	rsb	r5, r4, #32
 80003f8:	fa00 f205 	lsl.w	r2, r0, r5
 80003fc:	ea4e 0e02 	orr.w	lr, lr, r2
 8000400:	fa20 f304 	lsr.w	r3, r0, r4
 8000404:	fa01 f205 	lsl.w	r2, r1, r5
 8000408:	ea43 0302 	orr.w	r3, r3, r2
 800040c:	fa21 f004 	lsr.w	r0, r1, r4
 8000410:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000414:	fa21 f204 	lsr.w	r2, r1, r4
 8000418:	ea20 0002 	bic.w	r0, r0, r2
 800041c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000420:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000424:	bf08      	it	eq
 8000426:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800042a:	bd70      	pop	{r4, r5, r6, pc}
 800042c:	f094 0f00 	teq	r4, #0
 8000430:	d10f      	bne.n	8000452 <__aeabi_dmul+0x1c2>
 8000432:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 8000436:	0040      	lsls	r0, r0, #1
 8000438:	eb41 0101 	adc.w	r1, r1, r1
 800043c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000440:	bf08      	it	eq
 8000442:	3c01      	subeq	r4, #1
 8000444:	d0f7      	beq.n	8000436 <__aeabi_dmul+0x1a6>
 8000446:	ea41 0106 	orr.w	r1, r1, r6
 800044a:	f095 0f00 	teq	r5, #0
 800044e:	bf18      	it	ne
 8000450:	4770      	bxne	lr
 8000452:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000456:	0052      	lsls	r2, r2, #1
 8000458:	eb43 0303 	adc.w	r3, r3, r3
 800045c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000460:	bf08      	it	eq
 8000462:	3d01      	subeq	r5, #1
 8000464:	d0f7      	beq.n	8000456 <__aeabi_dmul+0x1c6>
 8000466:	ea43 0306 	orr.w	r3, r3, r6
 800046a:	4770      	bx	lr
 800046c:	ea94 0f0c 	teq	r4, ip
 8000470:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000474:	bf18      	it	ne
 8000476:	ea95 0f0c 	teqne	r5, ip
 800047a:	d00c      	beq.n	8000496 <__aeabi_dmul+0x206>
 800047c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000480:	bf18      	it	ne
 8000482:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000486:	d1d1      	bne.n	800042c <__aeabi_dmul+0x19c>
 8000488:	ea81 0103 	eor.w	r1, r1, r3
 800048c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000490:	f04f 0000 	mov.w	r0, #0
 8000494:	bd70      	pop	{r4, r5, r6, pc}
 8000496:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800049a:	bf06      	itte	eq
 800049c:	4610      	moveq	r0, r2
 800049e:	4619      	moveq	r1, r3
 80004a0:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80004a4:	d019      	beq.n	80004da <__aeabi_dmul+0x24a>
 80004a6:	ea94 0f0c 	teq	r4, ip
 80004aa:	d102      	bne.n	80004b2 <__aeabi_dmul+0x222>
 80004ac:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80004b0:	d113      	bne.n	80004da <__aeabi_dmul+0x24a>
 80004b2:	ea95 0f0c 	teq	r5, ip
 80004b6:	d105      	bne.n	80004c4 <__aeabi_dmul+0x234>
 80004b8:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80004bc:	bf1c      	itt	ne
 80004be:	4610      	movne	r0, r2
 80004c0:	4619      	movne	r1, r3
 80004c2:	d10a      	bne.n	80004da <__aeabi_dmul+0x24a>
 80004c4:	ea81 0103 	eor.w	r1, r1, r3
 80004c8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80004cc:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd70      	pop	{r4, r5, r6, pc}
 80004da:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80004de:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80004e2:	bd70      	pop	{r4, r5, r6, pc}

080004e4 <__aeabi_drsub>:
 80004e4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80004e8:	e002      	b.n	80004f0 <__adddf3>
 80004ea:	bf00      	nop

080004ec <__aeabi_dsub>:
 80004ec:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080004f0 <__adddf3>:
 80004f0:	b530      	push	{r4, r5, lr}
 80004f2:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80004f6:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80004fa:	ea94 0f05 	teq	r4, r5
 80004fe:	bf08      	it	eq
 8000500:	ea90 0f02 	teqeq	r0, r2
 8000504:	bf1f      	itttt	ne
 8000506:	ea54 0c00 	orrsne.w	ip, r4, r0
 800050a:	ea55 0c02 	orrsne.w	ip, r5, r2
 800050e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000512:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000516:	f000 80e2 	beq.w	80006de <__adddf3+0x1ee>
 800051a:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800051e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000522:	bfb8      	it	lt
 8000524:	426d      	neglt	r5, r5
 8000526:	dd0c      	ble.n	8000542 <__adddf3+0x52>
 8000528:	442c      	add	r4, r5
 800052a:	ea80 0202 	eor.w	r2, r0, r2
 800052e:	ea81 0303 	eor.w	r3, r1, r3
 8000532:	ea82 0000 	eor.w	r0, r2, r0
 8000536:	ea83 0101 	eor.w	r1, r3, r1
 800053a:	ea80 0202 	eor.w	r2, r0, r2
 800053e:	ea81 0303 	eor.w	r3, r1, r3
 8000542:	2d36      	cmp	r5, #54	; 0x36
 8000544:	bf88      	it	hi
 8000546:	bd30      	pophi	{r4, r5, pc}
 8000548:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 800054c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000550:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000554:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000558:	d002      	beq.n	8000560 <__adddf3+0x70>
 800055a:	4240      	negs	r0, r0
 800055c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000560:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000564:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000568:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 800056c:	d002      	beq.n	8000574 <__adddf3+0x84>
 800056e:	4252      	negs	r2, r2
 8000570:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000574:	ea94 0f05 	teq	r4, r5
 8000578:	f000 80a7 	beq.w	80006ca <__adddf3+0x1da>
 800057c:	f1a4 0401 	sub.w	r4, r4, #1
 8000580:	f1d5 0e20 	rsbs	lr, r5, #32
 8000584:	db0d      	blt.n	80005a2 <__adddf3+0xb2>
 8000586:	fa02 fc0e 	lsl.w	ip, r2, lr
 800058a:	fa22 f205 	lsr.w	r2, r2, r5
 800058e:	1880      	adds	r0, r0, r2
 8000590:	f141 0100 	adc.w	r1, r1, #0
 8000594:	fa03 f20e 	lsl.w	r2, r3, lr
 8000598:	1880      	adds	r0, r0, r2
 800059a:	fa43 f305 	asr.w	r3, r3, r5
 800059e:	4159      	adcs	r1, r3
 80005a0:	e00e      	b.n	80005c0 <__adddf3+0xd0>
 80005a2:	f1a5 0520 	sub.w	r5, r5, #32
 80005a6:	f10e 0e20 	add.w	lr, lr, #32
 80005aa:	2a01      	cmp	r2, #1
 80005ac:	fa03 fc0e 	lsl.w	ip, r3, lr
 80005b0:	bf28      	it	cs
 80005b2:	f04c 0c02 	orrcs.w	ip, ip, #2
 80005b6:	fa43 f305 	asr.w	r3, r3, r5
 80005ba:	18c0      	adds	r0, r0, r3
 80005bc:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005c4:	d507      	bpl.n	80005d6 <__adddf3+0xe6>
 80005c6:	f04f 0e00 	mov.w	lr, #0
 80005ca:	f1dc 0c00 	rsbs	ip, ip, #0
 80005ce:	eb7e 0000 	sbcs.w	r0, lr, r0
 80005d2:	eb6e 0101 	sbc.w	r1, lr, r1
 80005d6:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80005da:	d31b      	bcc.n	8000614 <__adddf3+0x124>
 80005dc:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80005e0:	d30c      	bcc.n	80005fc <__adddf3+0x10c>
 80005e2:	0849      	lsrs	r1, r1, #1
 80005e4:	ea5f 0030 	movs.w	r0, r0, rrx
 80005e8:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80005ec:	f104 0401 	add.w	r4, r4, #1
 80005f0:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80005f4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80005f8:	f080 809a 	bcs.w	8000730 <__adddf3+0x240>
 80005fc:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000600:	bf08      	it	eq
 8000602:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000606:	f150 0000 	adcs.w	r0, r0, #0
 800060a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800060e:	ea41 0105 	orr.w	r1, r1, r5
 8000612:	bd30      	pop	{r4, r5, pc}
 8000614:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000618:	4140      	adcs	r0, r0
 800061a:	eb41 0101 	adc.w	r1, r1, r1
 800061e:	3c01      	subs	r4, #1
 8000620:	bf28      	it	cs
 8000622:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000626:	d2e9      	bcs.n	80005fc <__adddf3+0x10c>
 8000628:	f091 0f00 	teq	r1, #0
 800062c:	bf04      	itt	eq
 800062e:	4601      	moveq	r1, r0
 8000630:	2000      	moveq	r0, #0
 8000632:	fab1 f381 	clz	r3, r1
 8000636:	bf08      	it	eq
 8000638:	3320      	addeq	r3, #32
 800063a:	f1a3 030b 	sub.w	r3, r3, #11
 800063e:	f1b3 0220 	subs.w	r2, r3, #32
 8000642:	da0c      	bge.n	800065e <__adddf3+0x16e>
 8000644:	320c      	adds	r2, #12
 8000646:	dd08      	ble.n	800065a <__adddf3+0x16a>
 8000648:	f102 0c14 	add.w	ip, r2, #20
 800064c:	f1c2 020c 	rsb	r2, r2, #12
 8000650:	fa01 f00c 	lsl.w	r0, r1, ip
 8000654:	fa21 f102 	lsr.w	r1, r1, r2
 8000658:	e00c      	b.n	8000674 <__adddf3+0x184>
 800065a:	f102 0214 	add.w	r2, r2, #20
 800065e:	bfd8      	it	le
 8000660:	f1c2 0c20 	rsble	ip, r2, #32
 8000664:	fa01 f102 	lsl.w	r1, r1, r2
 8000668:	fa20 fc0c 	lsr.w	ip, r0, ip
 800066c:	bfdc      	itt	le
 800066e:	ea41 010c 	orrle.w	r1, r1, ip
 8000672:	4090      	lslle	r0, r2
 8000674:	1ae4      	subs	r4, r4, r3
 8000676:	bfa2      	ittt	ge
 8000678:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800067c:	4329      	orrge	r1, r5
 800067e:	bd30      	popge	{r4, r5, pc}
 8000680:	ea6f 0404 	mvn.w	r4, r4
 8000684:	3c1f      	subs	r4, #31
 8000686:	da1c      	bge.n	80006c2 <__adddf3+0x1d2>
 8000688:	340c      	adds	r4, #12
 800068a:	dc0e      	bgt.n	80006aa <__adddf3+0x1ba>
 800068c:	f104 0414 	add.w	r4, r4, #20
 8000690:	f1c4 0220 	rsb	r2, r4, #32
 8000694:	fa20 f004 	lsr.w	r0, r0, r4
 8000698:	fa01 f302 	lsl.w	r3, r1, r2
 800069c:	ea40 0003 	orr.w	r0, r0, r3
 80006a0:	fa21 f304 	lsr.w	r3, r1, r4
 80006a4:	ea45 0103 	orr.w	r1, r5, r3
 80006a8:	bd30      	pop	{r4, r5, pc}
 80006aa:	f1c4 040c 	rsb	r4, r4, #12
 80006ae:	f1c4 0220 	rsb	r2, r4, #32
 80006b2:	fa20 f002 	lsr.w	r0, r0, r2
 80006b6:	fa01 f304 	lsl.w	r3, r1, r4
 80006ba:	ea40 0003 	orr.w	r0, r0, r3
 80006be:	4629      	mov	r1, r5
 80006c0:	bd30      	pop	{r4, r5, pc}
 80006c2:	fa21 f004 	lsr.w	r0, r1, r4
 80006c6:	4629      	mov	r1, r5
 80006c8:	bd30      	pop	{r4, r5, pc}
 80006ca:	f094 0f00 	teq	r4, #0
 80006ce:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80006d2:	bf06      	itte	eq
 80006d4:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80006d8:	3401      	addeq	r4, #1
 80006da:	3d01      	subne	r5, #1
 80006dc:	e74e      	b.n	800057c <__adddf3+0x8c>
 80006de:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80006e2:	bf18      	it	ne
 80006e4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80006e8:	d029      	beq.n	800073e <__adddf3+0x24e>
 80006ea:	ea94 0f05 	teq	r4, r5
 80006ee:	bf08      	it	eq
 80006f0:	ea90 0f02 	teqeq	r0, r2
 80006f4:	d005      	beq.n	8000702 <__adddf3+0x212>
 80006f6:	ea54 0c00 	orrs.w	ip, r4, r0
 80006fa:	bf04      	itt	eq
 80006fc:	4619      	moveq	r1, r3
 80006fe:	4610      	moveq	r0, r2
 8000700:	bd30      	pop	{r4, r5, pc}
 8000702:	ea91 0f03 	teq	r1, r3
 8000706:	bf1e      	ittt	ne
 8000708:	2100      	movne	r1, #0
 800070a:	2000      	movne	r0, #0
 800070c:	bd30      	popne	{r4, r5, pc}
 800070e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000712:	d105      	bne.n	8000720 <__adddf3+0x230>
 8000714:	0040      	lsls	r0, r0, #1
 8000716:	4149      	adcs	r1, r1
 8000718:	bf28      	it	cs
 800071a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800071e:	bd30      	pop	{r4, r5, pc}
 8000720:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000724:	bf3c      	itt	cc
 8000726:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800072a:	bd30      	popcc	{r4, r5, pc}
 800072c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000730:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000734:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000738:	f04f 0000 	mov.w	r0, #0
 800073c:	bd30      	pop	{r4, r5, pc}
 800073e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000742:	bf1a      	itte	ne
 8000744:	4619      	movne	r1, r3
 8000746:	4610      	movne	r0, r2
 8000748:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 800074c:	bf1c      	itt	ne
 800074e:	460b      	movne	r3, r1
 8000750:	4602      	movne	r2, r0
 8000752:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000756:	bf06      	itte	eq
 8000758:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 800075c:	ea91 0f03 	teqeq	r1, r3
 8000760:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000764:	bd30      	pop	{r4, r5, pc}
 8000766:	bf00      	nop

08000768 <__aeabi_ui2d>:
 8000768:	f090 0f00 	teq	r0, #0
 800076c:	bf04      	itt	eq
 800076e:	2100      	moveq	r1, #0
 8000770:	4770      	bxeq	lr
 8000772:	b530      	push	{r4, r5, lr}
 8000774:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000778:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800077c:	f04f 0500 	mov.w	r5, #0
 8000780:	f04f 0100 	mov.w	r1, #0
 8000784:	e750      	b.n	8000628 <__adddf3+0x138>
 8000786:	bf00      	nop

08000788 <__aeabi_i2d>:
 8000788:	f090 0f00 	teq	r0, #0
 800078c:	bf04      	itt	eq
 800078e:	2100      	moveq	r1, #0
 8000790:	4770      	bxeq	lr
 8000792:	b530      	push	{r4, r5, lr}
 8000794:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000798:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800079c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80007a0:	bf48      	it	mi
 80007a2:	4240      	negmi	r0, r0
 80007a4:	f04f 0100 	mov.w	r1, #0
 80007a8:	e73e      	b.n	8000628 <__adddf3+0x138>
 80007aa:	bf00      	nop

080007ac <__aeabi_f2d>:
 80007ac:	0042      	lsls	r2, r0, #1
 80007ae:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80007b2:	ea4f 0131 	mov.w	r1, r1, rrx
 80007b6:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80007ba:	bf1f      	itttt	ne
 80007bc:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80007c0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80007c4:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80007c8:	4770      	bxne	lr
 80007ca:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80007ce:	bf08      	it	eq
 80007d0:	4770      	bxeq	lr
 80007d2:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80007d6:	bf04      	itt	eq
 80007d8:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80007dc:	4770      	bxeq	lr
 80007de:	b530      	push	{r4, r5, lr}
 80007e0:	f44f 7460 	mov.w	r4, #896	; 0x380
 80007e4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80007e8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80007ec:	e71c      	b.n	8000628 <__adddf3+0x138>
 80007ee:	bf00      	nop

080007f0 <__aeabi_ul2d>:
 80007f0:	ea50 0201 	orrs.w	r2, r0, r1
 80007f4:	bf08      	it	eq
 80007f6:	4770      	bxeq	lr
 80007f8:	b530      	push	{r4, r5, lr}
 80007fa:	f04f 0500 	mov.w	r5, #0
 80007fe:	e00a      	b.n	8000816 <__aeabi_l2d+0x16>

08000800 <__aeabi_l2d>:
 8000800:	ea50 0201 	orrs.w	r2, r0, r1
 8000804:	bf08      	it	eq
 8000806:	4770      	bxeq	lr
 8000808:	b530      	push	{r4, r5, lr}
 800080a:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800080e:	d502      	bpl.n	8000816 <__aeabi_l2d+0x16>
 8000810:	4240      	negs	r0, r0
 8000812:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000816:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800081a:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800081e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000822:	f43f aed8 	beq.w	80005d6 <__adddf3+0xe6>
 8000826:	f04f 0203 	mov.w	r2, #3
 800082a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800082e:	bf18      	it	ne
 8000830:	3203      	addne	r2, #3
 8000832:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000836:	bf18      	it	ne
 8000838:	3203      	addne	r2, #3
 800083a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800083e:	f1c2 0320 	rsb	r3, r2, #32
 8000842:	fa00 fc03 	lsl.w	ip, r0, r3
 8000846:	fa20 f002 	lsr.w	r0, r0, r2
 800084a:	fa01 fe03 	lsl.w	lr, r1, r3
 800084e:	ea40 000e 	orr.w	r0, r0, lr
 8000852:	fa21 f102 	lsr.w	r1, r1, r2
 8000856:	4414      	add	r4, r2
 8000858:	e6bd      	b.n	80005d6 <__adddf3+0xe6>
 800085a:	bf00      	nop

0800085c <__aeabi_d2iz>:
 800085c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000860:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000864:	d215      	bcs.n	8000892 <__aeabi_d2iz+0x36>
 8000866:	d511      	bpl.n	800088c <__aeabi_d2iz+0x30>
 8000868:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 800086c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000870:	d912      	bls.n	8000898 <__aeabi_d2iz+0x3c>
 8000872:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000876:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 800087a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 800087e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000882:	fa23 f002 	lsr.w	r0, r3, r2
 8000886:	bf18      	it	ne
 8000888:	4240      	negne	r0, r0
 800088a:	4770      	bx	lr
 800088c:	f04f 0000 	mov.w	r0, #0
 8000890:	4770      	bx	lr
 8000892:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000896:	d105      	bne.n	80008a4 <__aeabi_d2iz+0x48>
 8000898:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 800089c:	bf08      	it	eq
 800089e:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 80008a2:	4770      	bx	lr
 80008a4:	f04f 0000 	mov.w	r0, #0
 80008a8:	4770      	bx	lr
 80008aa:	bf00      	nop

080008ac <__aeabi_uldivmod>:
 80008ac:	b953      	cbnz	r3, 80008c4 <__aeabi_uldivmod+0x18>
 80008ae:	b94a      	cbnz	r2, 80008c4 <__aeabi_uldivmod+0x18>
 80008b0:	2900      	cmp	r1, #0
 80008b2:	bf08      	it	eq
 80008b4:	2800      	cmpeq	r0, #0
 80008b6:	bf1c      	itt	ne
 80008b8:	f04f 31ff 	movne.w	r1, #4294967295
 80008bc:	f04f 30ff 	movne.w	r0, #4294967295
 80008c0:	f000 b970 	b.w	8000ba4 <__aeabi_idiv0>
 80008c4:	f1ad 0c08 	sub.w	ip, sp, #8
 80008c8:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80008cc:	f000 f806 	bl	80008dc <__udivmoddi4>
 80008d0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80008d4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80008d8:	b004      	add	sp, #16
 80008da:	4770      	bx	lr

080008dc <__udivmoddi4>:
 80008dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80008e0:	9e08      	ldr	r6, [sp, #32]
 80008e2:	460d      	mov	r5, r1
 80008e4:	4604      	mov	r4, r0
 80008e6:	460f      	mov	r7, r1
 80008e8:	2b00      	cmp	r3, #0
 80008ea:	d14a      	bne.n	8000982 <__udivmoddi4+0xa6>
 80008ec:	428a      	cmp	r2, r1
 80008ee:	4694      	mov	ip, r2
 80008f0:	d965      	bls.n	80009be <__udivmoddi4+0xe2>
 80008f2:	fab2 f382 	clz	r3, r2
 80008f6:	b143      	cbz	r3, 800090a <__udivmoddi4+0x2e>
 80008f8:	fa02 fc03 	lsl.w	ip, r2, r3
 80008fc:	f1c3 0220 	rsb	r2, r3, #32
 8000900:	409f      	lsls	r7, r3
 8000902:	fa20 f202 	lsr.w	r2, r0, r2
 8000906:	4317      	orrs	r7, r2
 8000908:	409c      	lsls	r4, r3
 800090a:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 800090e:	fa1f f58c 	uxth.w	r5, ip
 8000912:	fbb7 f1fe 	udiv	r1, r7, lr
 8000916:	0c22      	lsrs	r2, r4, #16
 8000918:	fb0e 7711 	mls	r7, lr, r1, r7
 800091c:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000920:	fb01 f005 	mul.w	r0, r1, r5
 8000924:	4290      	cmp	r0, r2
 8000926:	d90a      	bls.n	800093e <__udivmoddi4+0x62>
 8000928:	eb1c 0202 	adds.w	r2, ip, r2
 800092c:	f101 37ff 	add.w	r7, r1, #4294967295
 8000930:	f080 811c 	bcs.w	8000b6c <__udivmoddi4+0x290>
 8000934:	4290      	cmp	r0, r2
 8000936:	f240 8119 	bls.w	8000b6c <__udivmoddi4+0x290>
 800093a:	3902      	subs	r1, #2
 800093c:	4462      	add	r2, ip
 800093e:	1a12      	subs	r2, r2, r0
 8000940:	b2a4      	uxth	r4, r4
 8000942:	fbb2 f0fe 	udiv	r0, r2, lr
 8000946:	fb0e 2210 	mls	r2, lr, r0, r2
 800094a:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 800094e:	fb00 f505 	mul.w	r5, r0, r5
 8000952:	42a5      	cmp	r5, r4
 8000954:	d90a      	bls.n	800096c <__udivmoddi4+0x90>
 8000956:	eb1c 0404 	adds.w	r4, ip, r4
 800095a:	f100 32ff 	add.w	r2, r0, #4294967295
 800095e:	f080 8107 	bcs.w	8000b70 <__udivmoddi4+0x294>
 8000962:	42a5      	cmp	r5, r4
 8000964:	f240 8104 	bls.w	8000b70 <__udivmoddi4+0x294>
 8000968:	4464      	add	r4, ip
 800096a:	3802      	subs	r0, #2
 800096c:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000970:	1b64      	subs	r4, r4, r5
 8000972:	2100      	movs	r1, #0
 8000974:	b11e      	cbz	r6, 800097e <__udivmoddi4+0xa2>
 8000976:	40dc      	lsrs	r4, r3
 8000978:	2300      	movs	r3, #0
 800097a:	e9c6 4300 	strd	r4, r3, [r6]
 800097e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000982:	428b      	cmp	r3, r1
 8000984:	d908      	bls.n	8000998 <__udivmoddi4+0xbc>
 8000986:	2e00      	cmp	r6, #0
 8000988:	f000 80ed 	beq.w	8000b66 <__udivmoddi4+0x28a>
 800098c:	2100      	movs	r1, #0
 800098e:	e9c6 0500 	strd	r0, r5, [r6]
 8000992:	4608      	mov	r0, r1
 8000994:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000998:	fab3 f183 	clz	r1, r3
 800099c:	2900      	cmp	r1, #0
 800099e:	d149      	bne.n	8000a34 <__udivmoddi4+0x158>
 80009a0:	42ab      	cmp	r3, r5
 80009a2:	d302      	bcc.n	80009aa <__udivmoddi4+0xce>
 80009a4:	4282      	cmp	r2, r0
 80009a6:	f200 80f8 	bhi.w	8000b9a <__udivmoddi4+0x2be>
 80009aa:	1a84      	subs	r4, r0, r2
 80009ac:	eb65 0203 	sbc.w	r2, r5, r3
 80009b0:	2001      	movs	r0, #1
 80009b2:	4617      	mov	r7, r2
 80009b4:	2e00      	cmp	r6, #0
 80009b6:	d0e2      	beq.n	800097e <__udivmoddi4+0xa2>
 80009b8:	e9c6 4700 	strd	r4, r7, [r6]
 80009bc:	e7df      	b.n	800097e <__udivmoddi4+0xa2>
 80009be:	b902      	cbnz	r2, 80009c2 <__udivmoddi4+0xe6>
 80009c0:	deff      	udf	#255	; 0xff
 80009c2:	fab2 f382 	clz	r3, r2
 80009c6:	2b00      	cmp	r3, #0
 80009c8:	f040 8090 	bne.w	8000aec <__udivmoddi4+0x210>
 80009cc:	1a8a      	subs	r2, r1, r2
 80009ce:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80009d2:	fa1f fe8c 	uxth.w	lr, ip
 80009d6:	2101      	movs	r1, #1
 80009d8:	fbb2 f5f7 	udiv	r5, r2, r7
 80009dc:	fb07 2015 	mls	r0, r7, r5, r2
 80009e0:	0c22      	lsrs	r2, r4, #16
 80009e2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80009e6:	fb0e f005 	mul.w	r0, lr, r5
 80009ea:	4290      	cmp	r0, r2
 80009ec:	d908      	bls.n	8000a00 <__udivmoddi4+0x124>
 80009ee:	eb1c 0202 	adds.w	r2, ip, r2
 80009f2:	f105 38ff 	add.w	r8, r5, #4294967295
 80009f6:	d202      	bcs.n	80009fe <__udivmoddi4+0x122>
 80009f8:	4290      	cmp	r0, r2
 80009fa:	f200 80cb 	bhi.w	8000b94 <__udivmoddi4+0x2b8>
 80009fe:	4645      	mov	r5, r8
 8000a00:	1a12      	subs	r2, r2, r0
 8000a02:	b2a4      	uxth	r4, r4
 8000a04:	fbb2 f0f7 	udiv	r0, r2, r7
 8000a08:	fb07 2210 	mls	r2, r7, r0, r2
 8000a0c:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000a10:	fb0e fe00 	mul.w	lr, lr, r0
 8000a14:	45a6      	cmp	lr, r4
 8000a16:	d908      	bls.n	8000a2a <__udivmoddi4+0x14e>
 8000a18:	eb1c 0404 	adds.w	r4, ip, r4
 8000a1c:	f100 32ff 	add.w	r2, r0, #4294967295
 8000a20:	d202      	bcs.n	8000a28 <__udivmoddi4+0x14c>
 8000a22:	45a6      	cmp	lr, r4
 8000a24:	f200 80bb 	bhi.w	8000b9e <__udivmoddi4+0x2c2>
 8000a28:	4610      	mov	r0, r2
 8000a2a:	eba4 040e 	sub.w	r4, r4, lr
 8000a2e:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000a32:	e79f      	b.n	8000974 <__udivmoddi4+0x98>
 8000a34:	f1c1 0720 	rsb	r7, r1, #32
 8000a38:	408b      	lsls	r3, r1
 8000a3a:	fa22 fc07 	lsr.w	ip, r2, r7
 8000a3e:	ea4c 0c03 	orr.w	ip, ip, r3
 8000a42:	fa05 f401 	lsl.w	r4, r5, r1
 8000a46:	fa20 f307 	lsr.w	r3, r0, r7
 8000a4a:	40fd      	lsrs	r5, r7
 8000a4c:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000a50:	4323      	orrs	r3, r4
 8000a52:	fbb5 f8f9 	udiv	r8, r5, r9
 8000a56:	fa1f fe8c 	uxth.w	lr, ip
 8000a5a:	fb09 5518 	mls	r5, r9, r8, r5
 8000a5e:	0c1c      	lsrs	r4, r3, #16
 8000a60:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000a64:	fb08 f50e 	mul.w	r5, r8, lr
 8000a68:	42a5      	cmp	r5, r4
 8000a6a:	fa02 f201 	lsl.w	r2, r2, r1
 8000a6e:	fa00 f001 	lsl.w	r0, r0, r1
 8000a72:	d90b      	bls.n	8000a8c <__udivmoddi4+0x1b0>
 8000a74:	eb1c 0404 	adds.w	r4, ip, r4
 8000a78:	f108 3aff 	add.w	sl, r8, #4294967295
 8000a7c:	f080 8088 	bcs.w	8000b90 <__udivmoddi4+0x2b4>
 8000a80:	42a5      	cmp	r5, r4
 8000a82:	f240 8085 	bls.w	8000b90 <__udivmoddi4+0x2b4>
 8000a86:	f1a8 0802 	sub.w	r8, r8, #2
 8000a8a:	4464      	add	r4, ip
 8000a8c:	1b64      	subs	r4, r4, r5
 8000a8e:	b29d      	uxth	r5, r3
 8000a90:	fbb4 f3f9 	udiv	r3, r4, r9
 8000a94:	fb09 4413 	mls	r4, r9, r3, r4
 8000a98:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000a9c:	fb03 fe0e 	mul.w	lr, r3, lr
 8000aa0:	45a6      	cmp	lr, r4
 8000aa2:	d908      	bls.n	8000ab6 <__udivmoddi4+0x1da>
 8000aa4:	eb1c 0404 	adds.w	r4, ip, r4
 8000aa8:	f103 35ff 	add.w	r5, r3, #4294967295
 8000aac:	d26c      	bcs.n	8000b88 <__udivmoddi4+0x2ac>
 8000aae:	45a6      	cmp	lr, r4
 8000ab0:	d96a      	bls.n	8000b88 <__udivmoddi4+0x2ac>
 8000ab2:	3b02      	subs	r3, #2
 8000ab4:	4464      	add	r4, ip
 8000ab6:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000aba:	fba3 9502 	umull	r9, r5, r3, r2
 8000abe:	eba4 040e 	sub.w	r4, r4, lr
 8000ac2:	42ac      	cmp	r4, r5
 8000ac4:	46c8      	mov	r8, r9
 8000ac6:	46ae      	mov	lr, r5
 8000ac8:	d356      	bcc.n	8000b78 <__udivmoddi4+0x29c>
 8000aca:	d053      	beq.n	8000b74 <__udivmoddi4+0x298>
 8000acc:	b156      	cbz	r6, 8000ae4 <__udivmoddi4+0x208>
 8000ace:	ebb0 0208 	subs.w	r2, r0, r8
 8000ad2:	eb64 040e 	sbc.w	r4, r4, lr
 8000ad6:	fa04 f707 	lsl.w	r7, r4, r7
 8000ada:	40ca      	lsrs	r2, r1
 8000adc:	40cc      	lsrs	r4, r1
 8000ade:	4317      	orrs	r7, r2
 8000ae0:	e9c6 7400 	strd	r7, r4, [r6]
 8000ae4:	4618      	mov	r0, r3
 8000ae6:	2100      	movs	r1, #0
 8000ae8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000aec:	f1c3 0120 	rsb	r1, r3, #32
 8000af0:	fa02 fc03 	lsl.w	ip, r2, r3
 8000af4:	fa20 f201 	lsr.w	r2, r0, r1
 8000af8:	fa25 f101 	lsr.w	r1, r5, r1
 8000afc:	409d      	lsls	r5, r3
 8000afe:	432a      	orrs	r2, r5
 8000b00:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000b04:	fa1f fe8c 	uxth.w	lr, ip
 8000b08:	fbb1 f0f7 	udiv	r0, r1, r7
 8000b0c:	fb07 1510 	mls	r5, r7, r0, r1
 8000b10:	0c11      	lsrs	r1, r2, #16
 8000b12:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000b16:	fb00 f50e 	mul.w	r5, r0, lr
 8000b1a:	428d      	cmp	r5, r1
 8000b1c:	fa04 f403 	lsl.w	r4, r4, r3
 8000b20:	d908      	bls.n	8000b34 <__udivmoddi4+0x258>
 8000b22:	eb1c 0101 	adds.w	r1, ip, r1
 8000b26:	f100 38ff 	add.w	r8, r0, #4294967295
 8000b2a:	d22f      	bcs.n	8000b8c <__udivmoddi4+0x2b0>
 8000b2c:	428d      	cmp	r5, r1
 8000b2e:	d92d      	bls.n	8000b8c <__udivmoddi4+0x2b0>
 8000b30:	3802      	subs	r0, #2
 8000b32:	4461      	add	r1, ip
 8000b34:	1b49      	subs	r1, r1, r5
 8000b36:	b292      	uxth	r2, r2
 8000b38:	fbb1 f5f7 	udiv	r5, r1, r7
 8000b3c:	fb07 1115 	mls	r1, r7, r5, r1
 8000b40:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000b44:	fb05 f10e 	mul.w	r1, r5, lr
 8000b48:	4291      	cmp	r1, r2
 8000b4a:	d908      	bls.n	8000b5e <__udivmoddi4+0x282>
 8000b4c:	eb1c 0202 	adds.w	r2, ip, r2
 8000b50:	f105 38ff 	add.w	r8, r5, #4294967295
 8000b54:	d216      	bcs.n	8000b84 <__udivmoddi4+0x2a8>
 8000b56:	4291      	cmp	r1, r2
 8000b58:	d914      	bls.n	8000b84 <__udivmoddi4+0x2a8>
 8000b5a:	3d02      	subs	r5, #2
 8000b5c:	4462      	add	r2, ip
 8000b5e:	1a52      	subs	r2, r2, r1
 8000b60:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000b64:	e738      	b.n	80009d8 <__udivmoddi4+0xfc>
 8000b66:	4631      	mov	r1, r6
 8000b68:	4630      	mov	r0, r6
 8000b6a:	e708      	b.n	800097e <__udivmoddi4+0xa2>
 8000b6c:	4639      	mov	r1, r7
 8000b6e:	e6e6      	b.n	800093e <__udivmoddi4+0x62>
 8000b70:	4610      	mov	r0, r2
 8000b72:	e6fb      	b.n	800096c <__udivmoddi4+0x90>
 8000b74:	4548      	cmp	r0, r9
 8000b76:	d2a9      	bcs.n	8000acc <__udivmoddi4+0x1f0>
 8000b78:	ebb9 0802 	subs.w	r8, r9, r2
 8000b7c:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000b80:	3b01      	subs	r3, #1
 8000b82:	e7a3      	b.n	8000acc <__udivmoddi4+0x1f0>
 8000b84:	4645      	mov	r5, r8
 8000b86:	e7ea      	b.n	8000b5e <__udivmoddi4+0x282>
 8000b88:	462b      	mov	r3, r5
 8000b8a:	e794      	b.n	8000ab6 <__udivmoddi4+0x1da>
 8000b8c:	4640      	mov	r0, r8
 8000b8e:	e7d1      	b.n	8000b34 <__udivmoddi4+0x258>
 8000b90:	46d0      	mov	r8, sl
 8000b92:	e77b      	b.n	8000a8c <__udivmoddi4+0x1b0>
 8000b94:	3d02      	subs	r5, #2
 8000b96:	4462      	add	r2, ip
 8000b98:	e732      	b.n	8000a00 <__udivmoddi4+0x124>
 8000b9a:	4608      	mov	r0, r1
 8000b9c:	e70a      	b.n	80009b4 <__udivmoddi4+0xd8>
 8000b9e:	4464      	add	r4, ip
 8000ba0:	3802      	subs	r0, #2
 8000ba2:	e742      	b.n	8000a2a <__udivmoddi4+0x14e>

08000ba4 <__aeabi_idiv0>:
 8000ba4:	4770      	bx	lr
 8000ba6:	bf00      	nop

08000ba8 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000ba8:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000be0 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000bac:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000bae:	e003      	b.n	8000bb8 <LoopCopyDataInit>

08000bb0 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000bb0:	4b0c      	ldr	r3, [pc, #48]	; (8000be4 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000bb2:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000bb4:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8000bb6:	3104      	adds	r1, #4

08000bb8 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8000bb8:	480b      	ldr	r0, [pc, #44]	; (8000be8 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8000bba:	4b0c      	ldr	r3, [pc, #48]	; (8000bec <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000bbc:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000bbe:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000bc0:	d3f6      	bcc.n	8000bb0 <CopyDataInit>
  ldr  r2, =_sbss
 8000bc2:	4a0b      	ldr	r2, [pc, #44]	; (8000bf0 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000bc4:	e002      	b.n	8000bcc <LoopFillZerobss>

08000bc6 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8000bc6:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8000bc8:	f842 3b04 	str.w	r3, [r2], #4

08000bcc <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000bcc:	4b09      	ldr	r3, [pc, #36]	; (8000bf4 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000bce:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000bd0:	d3f9      	bcc.n	8000bc6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000bd2:	f005 fd99 	bl	8006708 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000bd6:	f01c feab 	bl	801d930 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000bda:	f000 fec3 	bl	8001964 <main>
  bx  lr    
 8000bde:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000be0:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000be4:	0817a450 	.word	0x0817a450
  ldr  r0, =_sdata
 8000be8:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000bec:	2000015c 	.word	0x2000015c
  ldr  r2, =_sbss
 8000bf0:	2000015c 	.word	0x2000015c
  ldr  r3, = _ebss
 8000bf4:	20013990 	.word	0x20013990

08000bf8 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000bf8:	e7fe      	b.n	8000bf8 <ADC_IRQHandler>

08000bfa <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 8000bfa:	f000 bc8f 	b.w	800151c <touchgfx_init>

08000bfe <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 8000bfe:	f000 bd01 	b.w	8001604 <touchgfx_taskEntry>

08000c02 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8000c02:	4770      	bx	lr

08000c04 <_ZN20STM32TouchControllerD0Ev>:
 8000c04:	b510      	push	{r4, lr}
 8000c06:	2104      	movs	r1, #4
 8000c08:	4604      	mov	r4, r0
 8000c0a:	f01c fbb5 	bl	801d378 <_ZdlPvj>
 8000c0e:	4620      	mov	r0, r4
 8000c10:	bd10      	pop	{r4, pc}
	...

08000c14 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000c14:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8000c16:	4b0c      	ldr	r3, [pc, #48]	; (8000c48 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000c18:	4c0c      	ldr	r4, [pc, #48]	; (8000c4c <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8000c1a:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000c1c:	4b0c      	ldr	r3, [pc, #48]	; (8000c50 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000c1e:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8000c20:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000c22:	6863      	ldr	r3, [r4, #4]
 8000c24:	4798      	blx	r3
 8000c26:	f640 0311 	movw	r3, #2065	; 0x811
 8000c2a:	4298      	cmp	r0, r3
 8000c2c:	d10a      	bne.n	8000c44 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8000c2e:	4d09      	ldr	r5, [pc, #36]	; (8000c54 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000c30:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8000c32:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000c34:	2082      	movs	r0, #130	; 0x82
 8000c36:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000c38:	682b      	ldr	r3, [r5, #0]
 8000c3a:	2082      	movs	r0, #130	; 0x82
 8000c3c:	68db      	ldr	r3, [r3, #12]
 8000c3e:	4798      	blx	r3
 8000c40:	2000      	movs	r0, #0
    }

    return ret;
}
 8000c42:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000c44:	2001      	movs	r0, #1
 8000c46:	e7fc      	b.n	8000c42 <_Z11BSP_TS_Inittt+0x2e>
 8000c48:	20000178 	.word	0x20000178
 8000c4c:	2000004c 	.word	0x2000004c
 8000c50:	2000017a 	.word	0x2000017a
 8000c54:	2000017c 	.word	0x2000017c

08000c58 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000c58:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000c5c:	20f0      	movs	r0, #240	; 0xf0
 8000c5e:	f7ff bfd9 	b.w	8000c14 <_Z11BSP_TS_Inittt>
	...

08000c64 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000c64:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000c66:	4d33      	ldr	r5, [pc, #204]	; (8000d34 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 8000c68:	682b      	ldr	r3, [r5, #0]
{
 8000c6a:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000c6c:	691b      	ldr	r3, [r3, #16]
 8000c6e:	2082      	movs	r0, #130	; 0x82
 8000c70:	4798      	blx	r3
 8000c72:	b280      	uxth	r0, r0
 8000c74:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000c76:	2800      	cmp	r0, #0
 8000c78:	d04a      	beq.n	8000d10 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000c7a:	682b      	ldr	r3, [r5, #0]
 8000c7c:	f10d 0206 	add.w	r2, sp, #6
 8000c80:	695b      	ldr	r3, [r3, #20]
 8000c82:	a901      	add	r1, sp, #4
 8000c84:	2082      	movs	r0, #130	; 0x82
 8000c86:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 8000c88:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000c8c:	f640 6274 	movw	r2, #3700	; 0xe74
 8000c90:	4293      	cmp	r3, r2
 8000c92:	d93f      	bls.n	8000d14 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 8000c94:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 8000c98:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000c9c:	1ad2      	subs	r2, r2, r3
 8000c9e:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8000ca0:	2a0a      	cmp	r2, #10
 8000ca2:	d93d      	bls.n	8000d20 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 8000ca4:	230b      	movs	r3, #11
 8000ca6:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000caa:	4b23      	ldr	r3, [pc, #140]	; (8000d38 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 8000cac:	881b      	ldrh	r3, [r3, #0]
 8000cae:	429a      	cmp	r2, r3
 8000cb0:	d901      	bls.n	8000cb6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 8000cb2:	3b01      	subs	r3, #1
 8000cb4:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8000cb6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000cba:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8000cbe:	428b      	cmp	r3, r1
 8000cc0:	d830      	bhi.n	8000d24 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 8000cc2:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 8000cc6:	330e      	adds	r3, #14
 8000cc8:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 8000cca:	210f      	movs	r1, #15
 8000ccc:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 8000cd0:	491a      	ldr	r1, [pc, #104]	; (8000d3c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 8000cd2:	8809      	ldrh	r1, [r1, #0]
 8000cd4:	428b      	cmp	r3, r1
 8000cd6:	d901      	bls.n	8000cdc <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 8000cd8:	3901      	subs	r1, #1
 8000cda:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000cdc:	4e18      	ldr	r6, [pc, #96]	; (8000d40 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000cde:	4d19      	ldr	r5, [pc, #100]	; (8000d44 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000ce0:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000ce2:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000ce4:	4283      	cmp	r3, r0
 8000ce6:	b281      	uxth	r1, r0
 8000ce8:	bf8c      	ite	hi
 8000cea:	1a59      	subhi	r1, r3, r1
 8000cec:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000cee:	b2b8      	uxth	r0, r7
 8000cf0:	42ba      	cmp	r2, r7
 8000cf2:	bf8c      	ite	hi
 8000cf4:	1a10      	subhi	r0, r2, r0
 8000cf6:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000cf8:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000cfa:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 8000cfc:	4401      	add	r1, r0
 8000cfe:	2905      	cmp	r1, #5
        {
            _x = x;
 8000d00:	bfc8      	it	gt
 8000d02:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 8000d04:	6833      	ldr	r3, [r6, #0]
            _y = y;
 8000d06:	bfc8      	it	gt
 8000d08:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 8000d0a:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8000d0c:	682b      	ldr	r3, [r5, #0]
 8000d0e:	80a3      	strh	r3, [r4, #4]
    }
}
 8000d10:	b003      	add	sp, #12
 8000d12:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 8000d14:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 8000d16:	bf9c      	itt	ls
 8000d18:	23b4      	movls	r3, #180	; 0xb4
 8000d1a:	f8ad 3006 	strhls.w	r3, [sp, #6]
 8000d1e:	e7bb      	b.n	8000c98 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 8000d20:	2200      	movs	r2, #0
 8000d22:	e7c8      	b.n	8000cb6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 8000d24:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 8000d28:	3308      	adds	r3, #8
 8000d2a:	b29b      	uxth	r3, r3
        if (xr <= 0)
 8000d2c:	2b0e      	cmp	r3, #14
 8000d2e:	d8cc      	bhi.n	8000cca <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 8000d30:	2300      	movs	r3, #0
 8000d32:	e7d3      	b.n	8000cdc <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 8000d34:	2000017c 	.word	0x2000017c
 8000d38:	2000017a 	.word	0x2000017a
 8000d3c:	20000178 	.word	0x20000178
 8000d40:	20000180 	.word	0x20000180
 8000d44:	20000184 	.word	0x20000184

08000d48 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8000d48:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8000d4a:	4668      	mov	r0, sp
{
 8000d4c:	460d      	mov	r5, r1
 8000d4e:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000d50:	f7ff ff88 	bl	8000c64 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000d54:	f8bd 0000 	ldrh.w	r0, [sp]
 8000d58:	b130      	cbz	r0, 8000d68 <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 8000d5a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000d5e:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000d60:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000d64:	6023      	str	r3, [r4, #0]
        return true;
 8000d66:	2001      	movs	r0, #1
}
 8000d68:	b003      	add	sp, #12
 8000d6a:	bd30      	pop	{r4, r5, pc}

08000d6c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000d6c:	2803      	cmp	r0, #3
 8000d6e:	d821      	bhi.n	8000db4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x48>
 8000d70:	e8df f000 	tbb	[pc, r0]
 8000d74:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000d78:	4b0f      	ldr	r3, [pc, #60]	; (8000db8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000d7a:	681a      	ldr	r2, [r3, #0]
 8000d7c:	fab2 f282 	clz	r2, r2
 8000d80:	0952      	lsrs	r2, r2, #5
 8000d82:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000d84:	480d      	ldr	r0, [pc, #52]	; (8000dbc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 8000d86:	f005 bf57 	b.w	8006c38 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8000d8a:	4b0b      	ldr	r3, [pc, #44]	; (8000db8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000d8c:	685a      	ldr	r2, [r3, #4]
 8000d8e:	fab2 f282 	clz	r2, r2
 8000d92:	0952      	lsrs	r2, r2, #5
 8000d94:	2108      	movs	r1, #8
 8000d96:	e7f5      	b.n	8000d84 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8000d98:	4b07      	ldr	r3, [pc, #28]	; (8000db8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000d9a:	689a      	ldr	r2, [r3, #8]
 8000d9c:	fab2 f282 	clz	r2, r2
 8000da0:	0952      	lsrs	r2, r2, #5
 8000da2:	2110      	movs	r1, #16
 8000da4:	e7ee      	b.n	8000d84 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000da6:	4b04      	ldr	r3, [pc, #16]	; (8000db8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000da8:	68da      	ldr	r2, [r3, #12]
 8000daa:	fab2 f282 	clz	r2, r2
 8000dae:	0952      	lsrs	r2, r2, #5
 8000db0:	2120      	movs	r1, #32
 8000db2:	e7e7      	b.n	8000d84 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 8000db4:	4770      	bx	lr
 8000db6:	bf00      	nop
 8000db8:	20000188 	.word	0x20000188
 8000dbc:	40021000 	.word	0x40021000

08000dc0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8000dc0:	2803      	cmp	r0, #3
 8000dc2:	d821      	bhi.n	8000e08 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x48>
 8000dc4:	e8df f000 	tbb	[pc, r0]
 8000dc8:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8000dcc:	4b0f      	ldr	r3, [pc, #60]	; (8000e0c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 8000dce:	681a      	ldr	r2, [r3, #0]
 8000dd0:	3a00      	subs	r2, #0
 8000dd2:	bf18      	it	ne
 8000dd4:	2201      	movne	r2, #1
 8000dd6:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8000dd8:	480d      	ldr	r0, [pc, #52]	; (8000e10 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 8000dda:	f005 bf2d 	b.w	8006c38 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 8000dde:	4b0b      	ldr	r3, [pc, #44]	; (8000e0c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 8000de0:	685a      	ldr	r2, [r3, #4]
 8000de2:	3a00      	subs	r2, #0
 8000de4:	bf18      	it	ne
 8000de6:	2201      	movne	r2, #1
 8000de8:	2108      	movs	r1, #8
 8000dea:	e7f5      	b.n	8000dd8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8000dec:	4b07      	ldr	r3, [pc, #28]	; (8000e0c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 8000dee:	689a      	ldr	r2, [r3, #8]
 8000df0:	3a00      	subs	r2, #0
 8000df2:	bf18      	it	ne
 8000df4:	2201      	movne	r2, #1
 8000df6:	2110      	movs	r1, #16
 8000df8:	e7ee      	b.n	8000dd8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8000dfa:	4b04      	ldr	r3, [pc, #16]	; (8000e0c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 8000dfc:	68da      	ldr	r2, [r3, #12]
 8000dfe:	3a00      	subs	r2, #0
 8000e00:	bf18      	it	ne
 8000e02:	2201      	movne	r2, #1
 8000e04:	2120      	movs	r1, #32
 8000e06:	e7e7      	b.n	8000dd8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 8000e08:	4770      	bx	lr
 8000e0a:	bf00      	nop
 8000e0c:	20000188 	.word	0x20000188
 8000e10:	40021000 	.word	0x40021000

08000e14 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8000e14:	2803      	cmp	r0, #3
 8000e16:	d80d      	bhi.n	8000e34 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x20>
 8000e18:	e8df f000 	tbb	[pc, r0]
 8000e1c:	0a080602 	.word	0x0a080602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000e20:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000e22:	4805      	ldr	r0, [pc, #20]	; (8000e38 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>)
 8000e24:	f005 bf0d 	b.w	8006c42 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000e28:	2108      	movs	r1, #8
 8000e2a:	e7fa      	b.n	8000e22 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000e2c:	2110      	movs	r1, #16
 8000e2e:	e7f8      	b.n	8000e22 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000e30:	2120      	movs	r1, #32
 8000e32:	e7f6      	b.n	8000e22 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
#endif
        break;
    }
}
 8000e34:	4770      	bx	lr
 8000e36:	bf00      	nop
 8000e38:	40021000 	.word	0x40021000

08000e3c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000e3c:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000e3e:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 8000e42:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000e46:	4770      	bx	lr

08000e48 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000e48:	2000      	movs	r0, #0
 8000e4a:	4770      	bx	lr

08000e4c <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000e4c:	4b03      	ldr	r3, [pc, #12]	; (8000e5c <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8000e4e:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000e50:	3900      	subs	r1, #0
 8000e52:	bf18      	it	ne
 8000e54:	2101      	movne	r1, #1
 8000e56:	7019      	strb	r1, [r3, #0]
    }
 8000e58:	4770      	bx	lr
 8000e5a:	bf00      	nop
 8000e5c:	200135af 	.word	0x200135af

08000e60 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000e60:	2000      	movs	r0, #0
 8000e62:	4770      	bx	lr

08000e64 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000e64:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8000e66:	b10b      	cbz	r3, 8000e6c <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000e68:	4608      	mov	r0, r1
 8000e6a:	4718      	bx	r3
        }
    }
 8000e6c:	4770      	bx	lr

08000e6e <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000e6e:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8000e72:	4770      	bx	lr

08000e74 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000e74:	6840      	ldr	r0, [r0, #4]
 8000e76:	6803      	ldr	r3, [r0, #0]
 8000e78:	699b      	ldr	r3, [r3, #24]
 8000e7a:	4718      	bx	r3

08000e7c <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000e7c:	4770      	bx	lr

08000e7e <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8000e7e:	4770      	bx	lr

08000e80 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000e80:	4770      	bx	lr
	...

08000e84 <_ZN11TouchGFXHAL10initializeEv>:

LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");

void TouchGFXHAL::initialize()
{
 8000e84:	b570      	push	{r4, r5, r6, lr}
 8000e86:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8000e88:	f000 fc5c 	bl	8001744 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // existing frame buffers are re-used. just add animation storage
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationStorage);
 8000e8c:	6823      	ldr	r3, [r4, #0]
 8000e8e:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8000e92:	4b04      	ldr	r3, [pc, #16]	; (8000ea4 <_ZN11TouchGFXHAL10initializeEv+0x20>)
 8000e94:	e9d4 120f 	ldrd	r1, r2, [r4, #60]	; 0x3c
 8000e98:	4620      	mov	r0, r4
 8000e9a:	46ac      	mov	ip, r5
}
 8000e9c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationStorage);
 8000ea0:	4760      	bx	ip
 8000ea2:	bf00      	nop
 8000ea4:	d0000000 	.word	0xd0000000

08000ea8 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8000ea8:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000eaa:	6803      	ldr	r3, [r0, #0]
{
 8000eac:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8000eae:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8000eb2:	4798      	blx	r3
    enableInterrupts();
 8000eb4:	6823      	ldr	r3, [r4, #0]
 8000eb6:	4620      	mov	r0, r4
 8000eb8:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8000eba:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8000ebc:	f000 f8ec 	bl	8001098 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8000ec0:	6823      	ldr	r3, [r4, #0]
 8000ec2:	4620      	mov	r0, r4
 8000ec4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000ec6:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8000ec8:	2029      	movs	r0, #41	; 0x29
 8000eca:	f000 ffa7 	bl	8001e1c <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8000ece:	f000 f8e3 	bl	8001098 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8000ed2:	6823      	ldr	r3, [r4, #0]
 8000ed4:	4620      	mov	r0, r4
 8000ed6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000ed8:	4798      	blx	r3
    for (;;)
 8000eda:	e7f8      	b.n	8000ece <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08000edc <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8000edc:	b510      	push	{r4, lr}
 8000ede:	4604      	mov	r4, r0
        swapFrameBuffers();
 8000ee0:	f00a ffb4 	bl	800be4c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8000ee4:	6823      	ldr	r3, [r4, #0]
 8000ee6:	4620      	mov	r0, r4
 8000ee8:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8000eec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000ef0:	4718      	bx	r3

08000ef2 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8000ef2:	f000 bc19 	b.w	8001728 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08000ef6 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8000ef6:	f000 bc1d 	b.w	8001734 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08000efa <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8000efa:	f000 bc49 	b.w	8001790 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08000efe <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8000efe:	f000 bbef 	b.w	80016e0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08000f02 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8000f02:	f000 bc49 	b.w	8001798 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08000f06 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8000f06:	f000 bc51 	b.w	80017ac <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08000f0a <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000f0a:	f000 bbf3 	b.w	80016f4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000f0e <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8000f0e:	f00a ba11 	b.w	800b334 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08000f12 <_ZN11TouchGFXHALD0Ev>:
 8000f12:	b510      	push	{r4, lr}
 8000f14:	217c      	movs	r1, #124	; 0x7c
 8000f16:	4604      	mov	r4, r0
 8000f18:	f01c fa2e 	bl	801d378 <_ZdlPvj>
 8000f1c:	4620      	mov	r0, r4
 8000f1e:	bd10      	pop	{r4, pc}

08000f20 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 8000f20:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 8000f24:	b11b      	cbz	r3, 8000f2e <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8000f26:	6840      	ldr	r0, [r0, #4]
 8000f28:	6803      	ldr	r3, [r0, #0]
 8000f2a:	681b      	ldr	r3, [r3, #0]
 8000f2c:	4718      	bx	r3
    }
 8000f2e:	4618      	mov	r0, r3
 8000f30:	4770      	bx	lr
	...

08000f34 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8000f34:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8000f36:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8000f3a:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
            if (DISPLAY_ROTATION == rotate0)
 8000f3e:	4b0c      	ldr	r3, [pc, #48]	; (8000f70 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8000f40:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8000f42:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8000f44:	d009      	beq.n	8000f5a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8000f46:	b93a      	cbnz	r2, 8000f58 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000f48:	4a0a      	ldr	r2, [pc, #40]	; (8000f74 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000f4a:	490b      	ldr	r1, [pc, #44]	; (8000f78 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000f4c:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000f4e:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8000f50:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000f52:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8000f54:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8000f56:	701a      	strb	r2, [r3, #0]
    }
 8000f58:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000f5a:	2a00      	cmp	r2, #0
 8000f5c:	d0fc      	beq.n	8000f58 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000f5e:	4a05      	ldr	r2, [pc, #20]	; (8000f74 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000f60:	4905      	ldr	r1, [pc, #20]	; (8000f78 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000f62:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000f64:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8000f66:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000f68:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000f6a:	2200      	movs	r2, #0
 8000f6c:	e7f3      	b.n	8000f56 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8000f6e:	bf00      	nop
 8000f70:	200135a8 	.word	0x200135a8
 8000f74:	200135a4 	.word	0x200135a4
 8000f78:	200135a6 	.word	0x200135a6

08000f7c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000f7c:	b570      	push	{r4, r5, r6, lr}
 8000f7e:	460d      	mov	r5, r1
 8000f80:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8000f82:	b935      	cbnz	r5, 8000f92 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8000f84:	4b09      	ldr	r3, [pc, #36]	; (8000fac <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8000f86:	4a0a      	ldr	r2, [pc, #40]	; (8000fb0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000f88:	480a      	ldr	r0, [pc, #40]	; (8000fb4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000f8a:	f240 21d2 	movw	r1, #722	; 0x2d2
 8000f8e:	f01c fa21 	bl	801d3d4 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8000f92:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000f96:	4b08      	ldr	r3, [pc, #32]	; (8000fb8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000f98:	3a00      	subs	r2, #0
 8000f9a:	bf18      	it	ne
 8000f9c:	2201      	movne	r2, #1
 8000f9e:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000fa0:	6803      	ldr	r3, [r0, #0]
    }
 8000fa2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8000fa6:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000faa:	4718      	bx	r3
 8000fac:	0801e498 	.word	0x0801e498
 8000fb0:	0801e4d0 	.word	0x0801e4d0
 8000fb4:	0801e51e 	.word	0x0801e51e
 8000fb8:	200135ae 	.word	0x200135ae

08000fbc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8000fbc:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8000fbe:	4b09      	ldr	r3, [pc, #36]	; (8000fe4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8000fc0:	881b      	ldrh	r3, [r3, #0]
 8000fc2:	428b      	cmp	r3, r1
 8000fc4:	d803      	bhi.n	8000fce <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8000fc6:	4b08      	ldr	r3, [pc, #32]	; (8000fe8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8000fc8:	881b      	ldrh	r3, [r3, #0]
 8000fca:	4293      	cmp	r3, r2
 8000fcc:	d905      	bls.n	8000fda <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8000fce:	4b07      	ldr	r3, [pc, #28]	; (8000fec <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8000fd0:	4a07      	ldr	r2, [pc, #28]	; (8000ff0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8000fd2:	4808      	ldr	r0, [pc, #32]	; (8000ff4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8000fd4:	219e      	movs	r1, #158	; 0x9e
 8000fd6:	f01c f9fd 	bl	801d3d4 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8000fda:	4b07      	ldr	r3, [pc, #28]	; (8000ff8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8000fdc:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8000fde:	4b07      	ldr	r3, [pc, #28]	; (8000ffc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000fe0:	801a      	strh	r2, [r3, #0]
    }
 8000fe2:	bd08      	pop	{r3, pc}
 8000fe4:	200135a4 	.word	0x200135a4
 8000fe8:	200135a6 	.word	0x200135a6
 8000fec:	0801e563 	.word	0x0801e563
 8000ff0:	0801e5c6 	.word	0x0801e5c6
 8000ff4:	0801e51e 	.word	0x0801e51e
 8000ff8:	200135aa 	.word	0x200135aa
 8000ffc:	200135ac 	.word	0x200135ac

08001000 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001000:	2101      	movs	r1, #1
{
 8001002:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001004:	2200      	movs	r2, #0
 8001006:	4608      	mov	r0, r1
 8001008:	f007 fe27 	bl	8008c5a <osSemaphoreNew>
 800100c:	4b0a      	ldr	r3, [pc, #40]	; (8001038 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 800100e:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8001010:	b928      	cbnz	r0, 800101e <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8001012:	4b0a      	ldr	r3, [pc, #40]	; (800103c <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8001014:	4a0a      	ldr	r2, [pc, #40]	; (8001040 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8001016:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001018:	480a      	ldr	r0, [pc, #40]	; (8001044 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 800101a:	f01c f9db 	bl	801d3d4 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 800101e:	2200      	movs	r2, #0
 8001020:	2104      	movs	r1, #4
 8001022:	2001      	movs	r0, #1
 8001024:	f007 febf 	bl	8008da6 <osMessageQueueNew>
 8001028:	4b07      	ldr	r3, [pc, #28]	; (8001048 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 800102a:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 800102c:	b918      	cbnz	r0, 8001036 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 800102e:	4b07      	ldr	r3, [pc, #28]	; (800104c <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8001030:	4a03      	ldr	r2, [pc, #12]	; (8001040 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8001032:	212c      	movs	r1, #44	; 0x2c
 8001034:	e7f0      	b.n	8001018 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8001036:	bd08      	pop	{r3, pc}
 8001038:	2000019c 	.word	0x2000019c
 800103c:	0801e6e4 	.word	0x0801e6e4
 8001040:	0801e72d 	.word	0x0801e72d
 8001044:	0801e75c 	.word	0x0801e75c
 8001048:	20000198 	.word	0x20000198
 800104c:	0801e7af 	.word	0x0801e7af

08001050 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8001050:	4b02      	ldr	r3, [pc, #8]	; (800105c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8001052:	f04f 31ff 	mov.w	r1, #4294967295
 8001056:	6818      	ldr	r0, [r3, #0]
 8001058:	f007 be49 	b.w	8008cee <osSemaphoreAcquire>
 800105c:	2000019c 	.word	0x2000019c

08001060 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8001060:	4b01      	ldr	r3, [pc, #4]	; (8001068 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8001062:	6818      	ldr	r0, [r3, #0]
 8001064:	f007 be6e 	b.w	8008d44 <osSemaphoreRelease>
 8001068:	2000019c 	.word	0x2000019c

0800106c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 800106c:	4b02      	ldr	r3, [pc, #8]	; (8001078 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 800106e:	2100      	movs	r1, #0
 8001070:	6818      	ldr	r0, [r3, #0]
 8001072:	f007 be3c 	b.w	8008cee <osSemaphoreAcquire>
 8001076:	bf00      	nop
 8001078:	2000019c 	.word	0x2000019c

0800107c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 800107c:	f7ff bff0 	b.w	8001060 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08001080 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8001080:	4803      	ldr	r0, [pc, #12]	; (8001090 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8001082:	4904      	ldr	r1, [pc, #16]	; (8001094 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8001084:	6800      	ldr	r0, [r0, #0]
 8001086:	2300      	movs	r3, #0
 8001088:	461a      	mov	r2, r3
 800108a:	f007 bec7 	b.w	8008e1c <osMessageQueuePut>
 800108e:	bf00      	nop
 8001090:	20000198 	.word	0x20000198
 8001094:	20000004 	.word	0x20000004

08001098 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8001098:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 800109a:	4c08      	ldr	r4, [pc, #32]	; (80010bc <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 800109c:	2300      	movs	r3, #0
 800109e:	461a      	mov	r2, r3
 80010a0:	a901      	add	r1, sp, #4
 80010a2:	6820      	ldr	r0, [r4, #0]
 80010a4:	f007 feea 	bl	8008e7c <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 80010a8:	6820      	ldr	r0, [r4, #0]
 80010aa:	f04f 33ff 	mov.w	r3, #4294967295
 80010ae:	2200      	movs	r2, #0
 80010b0:	a901      	add	r1, sp, #4
 80010b2:	f007 fee3 	bl	8008e7c <osMessageQueueGet>
}
 80010b6:	b002      	add	sp, #8
 80010b8:	bd10      	pop	{r4, pc}
 80010ba:	bf00      	nop
 80010bc:	20000198 	.word	0x20000198

080010c0 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 80010c0:	6803      	ldr	r3, [r0, #0]
 80010c2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80010c4:	4718      	bx	r3

080010c6 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 80010c6:	2001      	movs	r0, #1
 80010c8:	4770      	bx	lr

080010ca <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 80010ca:	6803      	ldr	r3, [r0, #0]
 80010cc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80010ce:	4718      	bx	r3

080010d0 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 80010d0:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80010d2:	2300      	movs	r3, #0
 80010d4:	9301      	str	r3, [sp, #4]
 80010d6:	4b0d      	ldr	r3, [pc, #52]	; (800110c <_ZN8STM32DMA10initializeEv+0x3c>)
 80010d8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80010da:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80010de:	631a      	str	r2, [r3, #48]	; 0x30
 80010e0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80010e2:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 80010e6:	9201      	str	r2, [sp, #4]
 80010e8:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 80010ea:	691a      	ldr	r2, [r3, #16]
 80010ec:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80010f0:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 80010f2:	691a      	ldr	r2, [r3, #16]
 80010f4:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 80010f8:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 80010fa:	4b05      	ldr	r3, [pc, #20]	; (8001110 <_ZN8STM32DMA10initializeEv+0x40>)
 80010fc:	4a05      	ldr	r2, [pc, #20]	; (8001114 <_ZN8STM32DMA10initializeEv+0x44>)
 80010fe:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001100:	4b05      	ldr	r3, [pc, #20]	; (8001118 <_ZN8STM32DMA10initializeEv+0x48>)
 8001102:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001106:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8001108:	b002      	add	sp, #8
 800110a:	4770      	bx	lr
 800110c:	40023800 	.word	0x40023800
 8001110:	20002590 	.word	0x20002590
 8001114:	0800115d 	.word	0x0800115d
 8001118:	e000e100 	.word	0xe000e100

0800111c <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 800111c:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8001120:	4770      	bx	lr
	...

08001124 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8001124:	4b05      	ldr	r3, [pc, #20]	; (800113c <_ZN8STM32DMAD1Ev+0x18>)
 8001126:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001128:	4b05      	ldr	r3, [pc, #20]	; (8001140 <_ZN8STM32DMAD1Ev+0x1c>)
 800112a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800112e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8001132:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001136:	f3bf 8f6f 	isb	sy
}
 800113a:	4770      	bx	lr
 800113c:	0801e954 	.word	0x0801e954
 8001140:	e000e100 	.word	0xe000e100

08001144 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8001144:	b510      	push	{r4, lr}
 8001146:	4604      	mov	r4, r0
}
 8001148:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 800114c:	f7ff ffea 	bl	8001124 <_ZN8STM32DMAD1Ev>
 8001150:	4620      	mov	r0, r4
 8001152:	f01c f911 	bl	801d378 <_ZdlPvj>
 8001156:	4620      	mov	r0, r4
 8001158:	bd10      	pop	{r4, pc}
	...

0800115c <DMA2D_XferCpltCallback>:
        return instance;
 800115c:	4b02      	ldr	r3, [pc, #8]	; (8001168 <DMA2D_XferCpltCallback+0xc>)
 800115e:	681b      	ldr	r3, [r3, #0]
 8001160:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8001162:	6803      	ldr	r3, [r0, #0]
 8001164:	695b      	ldr	r3, [r3, #20]
 8001166:	4718      	bx	r3
 8001168:	200135b0 	.word	0x200135b0

0800116c <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 800116c:	b570      	push	{r4, r5, r6, lr}
 800116e:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8001170:	4625      	mov	r5, r4
 8001172:	4b0a      	ldr	r3, [pc, #40]	; (800119c <_ZN8STM32DMAC1Ev+0x30>)
 8001174:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8001176:	2600      	movs	r6, #0
 8001178:	6060      	str	r0, [r4, #4]
 800117a:	7226      	strb	r6, [r4, #8]
 800117c:	7266      	strb	r6, [r4, #9]
 800117e:	f845 3b20 	str.w	r3, [r5], #32
 8001182:	2260      	movs	r2, #96	; 0x60
 8001184:	4629      	mov	r1, r5
 8001186:	f00a ff9f 	bl	800c0c8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800118a:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 800118e:	60ee      	str	r6, [r5, #12]
 8001190:	3524      	adds	r5, #36	; 0x24
 8001192:	42ab      	cmp	r3, r5
 8001194:	d1fb      	bne.n	800118e <_ZN8STM32DMAC1Ev+0x22>
}
 8001196:	4620      	mov	r0, r4
 8001198:	bd70      	pop	{r4, r5, r6, pc}
 800119a:	bf00      	nop
 800119c:	0801e954 	.word	0x0801e954

080011a0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 80011a0:	b508      	push	{r3, lr}
    switch (format)
 80011a2:	290b      	cmp	r1, #11
 80011a4:	d80b      	bhi.n	80011be <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 80011a6:	e8df f001 	tbb	[pc, r1]
 80011aa:	0612      	.short	0x0612
 80011ac:	0a0a0a10 	.word	0x0a0a0a10
 80011b0:	0808080a 	.word	0x0808080a
 80011b4:	0808      	.short	0x0808
 80011b6:	2001      	movs	r0, #1
}
 80011b8:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 80011ba:	2005      	movs	r0, #5
        break;
 80011bc:	e7fc      	b.n	80011b8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 80011be:	4b05      	ldr	r3, [pc, #20]	; (80011d4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 80011c0:	4a05      	ldr	r2, [pc, #20]	; (80011d8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 80011c2:	4806      	ldr	r0, [pc, #24]	; (80011dc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 80011c4:	2166      	movs	r1, #102	; 0x66
 80011c6:	f01c f905 	bl	801d3d4 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 80011ca:	2000      	movs	r0, #0
 80011cc:	e7f4      	b.n	80011b8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 80011ce:	2002      	movs	r0, #2
    return dma2dColorMode;
 80011d0:	e7f2      	b.n	80011b8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 80011d2:	bf00      	nop
 80011d4:	0801e7f1 	.word	0x0801e7f1
 80011d8:	0801e80c 	.word	0x0801e80c
 80011dc:	0801e856 	.word	0x0801e856

080011e0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 80011e0:	b508      	push	{r3, lr}
    switch (format)
 80011e2:	290a      	cmp	r1, #10
 80011e4:	d809      	bhi.n	80011fa <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 80011e6:	e8df f001 	tbb	[pc, r1]
 80011ea:	0610      	.short	0x0610
 80011ec:	0808080e 	.word	0x0808080e
 80011f0:	06060608 	.word	0x06060608
 80011f4:	06          	.byte	0x06
 80011f5:	00          	.byte	0x00
 80011f6:	2001      	movs	r0, #1
}
 80011f8:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 80011fa:	4b05      	ldr	r3, [pc, #20]	; (8001210 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 80011fc:	4a05      	ldr	r2, [pc, #20]	; (8001214 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 80011fe:	4806      	ldr	r0, [pc, #24]	; (8001218 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8001200:	2187      	movs	r1, #135	; 0x87
 8001202:	f01c f8e7 	bl	801d3d4 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8001206:	2000      	movs	r0, #0
 8001208:	e7f6      	b.n	80011f8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 800120a:	2002      	movs	r0, #2
    return dma2dColorMode;
 800120c:	e7f4      	b.n	80011f8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 800120e:	bf00      	nop
 8001210:	0801e7f1 	.word	0x0801e7f1
 8001214:	0801e8a7 	.word	0x0801e8a7
 8001218:	0801e856 	.word	0x0801e856

0800121c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 800121c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001220:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8001224:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001226:	4641      	mov	r1, r8
{
 8001228:	4607      	mov	r7, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 800122a:	f7ff ffb9 	bl	80011a0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 800122e:	f894 901e 	ldrb.w	r9, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001232:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001234:	4649      	mov	r1, r9
 8001236:	4638      	mov	r0, r7
 8001238:	f7ff ffb2 	bl	80011a0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 800123c:	4649      	mov	r1, r9
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 800123e:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001240:	4638      	mov	r0, r7
 8001242:	f7ff ffcd 	bl	80011e0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001246:	8aa1      	ldrh	r1, [r4, #20]
 8001248:	8b62      	ldrh	r2, [r4, #26]
 800124a:	4b43      	ldr	r3, [pc, #268]	; (8001358 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 800124c:	1a52      	subs	r2, r2, r1
 800124e:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001250:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8001252:	8b22      	ldrh	r2, [r4, #24]
 8001254:	1a52      	subs	r2, r2, r1
 8001256:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001258:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 800125a:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800125c:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8001260:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001262:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8001264:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001266:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8001268:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 800126a:	6827      	ldr	r7, [r4, #0]
 800126c:	2f80      	cmp	r7, #128	; 0x80
 800126e:	d028      	beq.n	80012c2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa6>
 8001270:	7f22      	ldrb	r2, [r4, #28]
 8001272:	d80f      	bhi.n	8001294 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x78>
 8001274:	2f20      	cmp	r7, #32
 8001276:	d065      	beq.n	8001344 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8001278:	2f40      	cmp	r7, #64	; 0x40
 800127a:	d063      	beq.n	8001344 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 800127c:	2f04      	cmp	r7, #4
 800127e:	d01a      	beq.n	80012b6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001280:	4b35      	ldr	r3, [pc, #212]	; (8001358 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8001282:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8001286:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 800128a:	45c8      	cmp	r8, r9
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800128c:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 800128e:	d05f      	beq.n	8001350 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8001290:	4a32      	ldr	r2, [pc, #200]	; (800135c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8001292:	e044      	b.n	800131e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x102>
    switch (blitOp.operation)
 8001294:	f5b7 7f80 	cmp.w	r7, #256	; 0x100
 8001298:	d004      	beq.n	80012a4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x88>
 800129a:	f5b7 7f00 	cmp.w	r7, #512	; 0x200
 800129e:	d1ef      	bne.n	8001280 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x64>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80012a0:	492f      	ldr	r1, [pc, #188]	; (8001360 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 80012a2:	e000      	b.n	80012a6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8a>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80012a4:	492f      	ldr	r1, [pc, #188]	; (8001364 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80012a6:	ea41 6202 	orr.w	r2, r1, r2, lsl #24
 80012aa:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 80012ac:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 80012ae:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80012b0:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80012b2:	6158      	str	r0, [r3, #20]
 80012b4:	e032      	b.n	800131c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80012b6:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 80012ba:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80012be:	61da      	str	r2, [r3, #28]
 80012c0:	e7f6      	b.n	80012b0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 80012c2:	68a7      	ldr	r7, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 80012c4:	1d3a      	adds	r2, r7, #4
 80012c6:	62da      	str	r2, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80012c8:	7f21      	ldrb	r1, [r4, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 80012ca:	783a      	ldrb	r2, [r7, #0]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80012cc:	ea45 6501 	orr.w	r5, r5, r1, lsl #24
 80012d0:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
 80012d4:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80012d6:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80012d8:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 80012da:	b142      	cbz	r2, 80012ee <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd2>
 80012dc:	2a01      	cmp	r2, #1
 80012de:	d021      	beq.n	8001324 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x108>
                assert(0 && "Unsupported format");
 80012e0:	4b21      	ldr	r3, [pc, #132]	; (8001368 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 80012e2:	4a22      	ldr	r2, [pc, #136]	; (800136c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
 80012e4:	4822      	ldr	r0, [pc, #136]	; (8001370 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
 80012e6:	f240 1111 	movw	r1, #273	; 0x111
 80012ea:	f01c f873 	bl	801d3d4 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 80012ee:	69da      	ldr	r2, [r3, #28]
 80012f0:	8879      	ldrh	r1, [r7, #2]
 80012f2:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 80012f6:	3901      	subs	r1, #1
 80012f8:	f022 0210 	bic.w	r2, r2, #16
 80012fc:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8001300:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8001302:	2101      	movs	r1, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8001304:	4b14      	ldr	r3, [pc, #80]	; (8001358 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8001306:	69da      	ldr	r2, [r3, #28]
 8001308:	f042 0220 	orr.w	r2, r2, #32
 800130c:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 800130e:	69da      	ldr	r2, [r3, #28]
 8001310:	0692      	lsls	r2, r2, #26
 8001312:	d4fc      	bmi.n	800130e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf2>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8001314:	2210      	movs	r2, #16
 8001316:	609a      	str	r2, [r3, #8]
            if (blend)
 8001318:	2900      	cmp	r1, #0
 800131a:	d0b9      	beq.n	8001290 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x74>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 800131c:	4a15      	ldr	r2, [pc, #84]	; (8001374 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x158>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 800131e:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8001320:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001324:	69da      	ldr	r2, [r3, #28]
 8001326:	8878      	ldrh	r0, [r7, #2]
 8001328:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 800132c:	3801      	subs	r0, #1
 800132e:	f022 0210 	bic.w	r2, r2, #16
 8001332:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
                if (blitOp.alpha == 255)
 8001336:	39ff      	subs	r1, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001338:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 800133c:	bf18      	it	ne
 800133e:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001340:	61da      	str	r2, [r3, #28]
                break;
 8001342:	e7df      	b.n	8001304 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001344:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8001348:	4b03      	ldr	r3, [pc, #12]	; (8001358 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 800134a:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 800134e:	e7b6      	b.n	80012be <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8001350:	f240 2201 	movw	r2, #513	; 0x201
 8001354:	e7e3      	b.n	800131e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x102>
 8001356:	bf00      	nop
 8001358:	4002b000 	.word	0x4002b000
 800135c:	00010201 	.word	0x00010201
 8001360:	00020009 	.word	0x00020009
 8001364:	0002000a 	.word	0x0002000a
 8001368:	0801e8f2 	.word	0x0801e8f2
 800136c:	0801e90c 	.word	0x0801e90c
 8001370:	0801e856 	.word	0x0801e856
 8001374:	00020201 	.word	0x00020201

08001378 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8001378:	b538      	push	{r3, r4, r5, lr}
 800137a:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 800137c:	7f89      	ldrb	r1, [r1, #30]
 800137e:	f7ff ff2f 	bl	80011e0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001382:	8aa5      	ldrh	r5, [r4, #20]
 8001384:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001386:	4b16      	ldr	r3, [pc, #88]	; (80013e0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001388:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 800138a:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800138c:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 8001390:	645a      	str	r2, [r3, #68]	; 0x44

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001392:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001394:	63d9      	str	r1, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001396:	1b52      	subs	r2, r2, r5
 8001398:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 800139a:	6825      	ldr	r5, [r4, #0]
 800139c:	2d08      	cmp	r5, #8
 800139e:	d10e      	bne.n	80013be <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 80013a0:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 80013a2:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80013a4:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 80013a6:	7f20      	ldrb	r0, [r4, #28]
 80013a8:	4a0e      	ldr	r2, [pc, #56]	; (80013e4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 80013aa:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 80013ae:	61da      	str	r2, [r3, #28]
 80013b0:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 80013b2:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 80013b4:	4a0c      	ldr	r2, [pc, #48]	; (80013e8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80013b6:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80013b8:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 80013ba:	601a      	str	r2, [r3, #0]
    }
}
 80013bc:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 80013be:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 80013c0:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 80013c2:	611a      	str	r2, [r3, #16]
 80013c4:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 80013c6:	0a0a      	lsrs	r2, r1, #8
 80013c8:	0948      	lsrs	r0, r1, #5
 80013ca:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80013ce:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80013d2:	4302      	orrs	r2, r0
 80013d4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80013d8:	430a      	orrs	r2, r1
 80013da:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 80013dc:	4a03      	ldr	r2, [pc, #12]	; (80013ec <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 80013de:	e7ec      	b.n	80013ba <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 80013e0:	4002b000 	.word	0x4002b000
 80013e4:	00010009 	.word	0x00010009
 80013e8:	00020201 	.word	0x00020201
 80013ec:	00030201 	.word	0x00030201

080013f0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 80013f0:	2001      	movs	r0, #1
 80013f2:	4770      	bx	lr

080013f4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 80013f4:	2054      	movs	r0, #84	; 0x54
 80013f6:	4770      	bx	lr

080013f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 80013f8:	2354      	movs	r3, #84	; 0x54
 80013fa:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80013fe:	3008      	adds	r0, #8
 8001400:	4770      	bx	lr

08001402 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8001402:	2354      	movs	r3, #84	; 0x54
 8001404:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001408:	3008      	adds	r0, #8
 800140a:	4770      	bx	lr

0800140c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen4ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 800140c:	2001      	movs	r0, #1
 800140e:	4770      	bx	lr

08001410 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen4ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001410:	f241 303c 	movw	r0, #4924	; 0x133c
 8001414:	4770      	bx	lr

08001416 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen4ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001416:	f241 333c 	movw	r3, #4924	; 0x133c
 800141a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800141e:	3008      	adds	r0, #8
 8001420:	4770      	bx	lr

08001422 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen4ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001422:	f241 333c 	movw	r3, #4924	; 0x133c
 8001426:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800142a:	3008      	adds	r0, #8
 800142c:	4770      	bx	lr

0800142e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen6PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 800142e:	2001      	movs	r0, #1
 8001430:	4770      	bx	lr

08001432 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen6PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001432:	2010      	movs	r0, #16
 8001434:	4770      	bx	lr

08001436 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen6PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001436:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800143a:	3008      	adds	r0, #8
 800143c:	4770      	bx	lr

0800143e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen6PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800143e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001442:	3008      	adds	r0, #8
 8001444:	4770      	bx	lr

08001446 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 8001446:	4608      	mov	r0, r1
 8001448:	f001 bbe0 	b.w	8002c0c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

0800144c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 800144c:	b510      	push	{r4, lr}
 800144e:	4b03      	ldr	r3, [pc, #12]	; (800145c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8001450:	6003      	str	r3, [r0, #0]
 8001452:	4604      	mov	r4, r0
 8001454:	f009 fcbb 	bl	800adce <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001458:	4620      	mov	r0, r4
 800145a:	bd10      	pop	{r4, pc}
 800145c:	0801ea0c 	.word	0x0801ea0c

08001460 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8001460:	b510      	push	{r4, lr}
 8001462:	4604      	mov	r4, r0
 8001464:	f7ff fff2 	bl	800144c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8001468:	4620      	mov	r0, r4
 800146a:	215c      	movs	r1, #92	; 0x5c
 800146c:	f01b ff84 	bl	801d378 <_ZdlPvj>
 8001470:	4620      	mov	r0, r4
 8001472:	bd10      	pop	{r4, pc}

08001474 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen4ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001474:	b510      	push	{r4, lr}
 8001476:	4b03      	ldr	r3, [pc, #12]	; (8001484 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen4ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001478:	6003      	str	r3, [r0, #0]
 800147a:	4604      	mov	r4, r0
 800147c:	f009 fca7 	bl	800adce <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001480:	4620      	mov	r0, r4
 8001482:	bd10      	pop	{r4, pc}
 8001484:	0801e9d8 	.word	0x0801e9d8

08001488 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen4ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001488:	b510      	push	{r4, lr}
 800148a:	4604      	mov	r4, r0
 800148c:	f7ff fff2 	bl	8001474 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen4ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001490:	4620      	mov	r0, r4
 8001492:	f241 3144 	movw	r1, #4932	; 0x1344
 8001496:	f01b ff6f 	bl	801d378 <_ZdlPvj>
 800149a:	4620      	mov	r0, r4
 800149c:	bd10      	pop	{r4, pc}
	...

080014a0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen6PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80014a0:	b510      	push	{r4, lr}
 80014a2:	4b03      	ldr	r3, [pc, #12]	; (80014b0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen6PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80014a4:	6003      	str	r3, [r0, #0]
 80014a6:	4604      	mov	r4, r0
 80014a8:	f009 fc91 	bl	800adce <_ZN8touchgfx17AbstractPartitionD1Ev>
 80014ac:	4620      	mov	r0, r4
 80014ae:	bd10      	pop	{r4, pc}
 80014b0:	0801e9a4 	.word	0x0801e9a4

080014b4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen6PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80014b4:	b510      	push	{r4, lr}
 80014b6:	4604      	mov	r4, r0
 80014b8:	f7ff fff2 	bl	80014a0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen6PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80014bc:	4620      	mov	r0, r4
 80014be:	2118      	movs	r1, #24
 80014c0:	f01b ff5a 	bl	801d378 <_ZdlPvj>
 80014c4:	4620      	mov	r0, r4
 80014c6:	bd10      	pop	{r4, pc}

080014c8 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 80014c8:	b510      	push	{r4, lr}
 80014ca:	4b09      	ldr	r3, [pc, #36]	; (80014f0 <_ZN12FrontendHeapD1Ev+0x28>)
 80014cc:	6003      	str	r3, [r0, #0]
 80014ce:	4604      	mov	r4, r0
 80014d0:	f500 509b 	add.w	r0, r0, #4960	; 0x1360
 80014d4:	3010      	adds	r0, #16
 80014d6:	f7ff ffb9 	bl	800144c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 80014da:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 80014de:	f7ff ffc9 	bl	8001474 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen4ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80014e2:	f104 0014 	add.w	r0, r4, #20
 80014e6:	f7ff ffdb 	bl	80014a0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen6PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80014ea:	4620      	mov	r0, r4
 80014ec:	bd10      	pop	{r4, pc}
 80014ee:	bf00      	nop
 80014f0:	0801ea40 	.word	0x0801ea40

080014f4 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 80014f4:	b508      	push	{r3, lr}
 80014f6:	4802      	ldr	r0, [pc, #8]	; (8001500 <__tcf_0+0xc>)
 80014f8:	f7ff ffe6 	bl	80014c8 <_ZN12FrontendHeapD1Ev>
 80014fc:	bd08      	pop	{r3, pc}
 80014fe:	bf00      	nop
 8001500:	200001a4 	.word	0x200001a4

08001504 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8001504:	b510      	push	{r4, lr}
 8001506:	4604      	mov	r4, r0
 8001508:	f7ff ffde 	bl	80014c8 <_ZN12FrontendHeapD1Ev>
 800150c:	4620      	mov	r0, r4
 800150e:	f241 5130 	movw	r1, #5424	; 0x1530
 8001512:	f01b ff31 	bl	801d378 <_ZdlPvj>
 8001516:	4620      	mov	r0, r4
 8001518:	bd10      	pop	{r4, pc}
	...

0800151c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 800151c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8001520:	f000 ffea 	bl	80024f8 <_ZN14BitmapDatabase11getInstanceEv>
 8001524:	4605      	mov	r5, r0
 8001526:	f000 ffeb 	bl	8002500 <_ZN14BitmapDatabase15getInstanceSizeEv>
 800152a:	2400      	movs	r4, #0
 800152c:	4601      	mov	r1, r0
 800152e:	4623      	mov	r3, r4
 8001530:	4628      	mov	r0, r5
 8001532:	4622      	mov	r2, r4
 8001534:	9400      	str	r4, [sp, #0]
 8001536:	f010 f913 	bl	8011760 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 800153a:	4b26      	ldr	r3, [pc, #152]	; (80015d4 <touchgfx_init+0xb8>)
 800153c:	4a26      	ldr	r2, [pc, #152]	; (80015d8 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 800153e:	4d27      	ldr	r5, [pc, #156]	; (80015dc <touchgfx_init+0xc0>)
 8001540:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8001542:	4620      	mov	r0, r4
 8001544:	f003 fa8e 	bl	8004a64 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8001548:	4825      	ldr	r0, [pc, #148]	; (80015e0 <touchgfx_init+0xc4>)
 800154a:	f010 f871 	bl	8011630 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 800154e:	682b      	ldr	r3, [r5, #0]
 8001550:	f3bf 8f5b 	dmb	ish
 8001554:	07db      	lsls	r3, r3, #31
 8001556:	d436      	bmi.n	80015c6 <touchgfx_init+0xaa>
 8001558:	4628      	mov	r0, r5
 800155a:	f01b ff0f 	bl	801d37c <__cxa_guard_acquire>
 800155e:	b390      	cbz	r0, 80015c6 <touchgfx_init+0xaa>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8001560:	4c20      	ldr	r4, [pc, #128]	; (80015e4 <touchgfx_init+0xc8>)
          screenStorage(scr),
          transitionStorage(tra),
 8001562:	4f21      	ldr	r7, [pc, #132]	; (80015e8 <touchgfx_init+0xcc>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8001564:	4b21      	ldr	r3, [pc, #132]	; (80015ec <touchgfx_init+0xd0>)
 8001566:	6023      	str	r3, [r4, #0]
          frontendApplication(app)
 8001568:	f107 0668 	add.w	r6, r7, #104	; 0x68
        : presenterStorage(pres),
 800156c:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8001570:	f104 082c 	add.w	r8, r4, #44	; 0x2c
        : presenterStorage(pres),
 8001574:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8001576:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 800157a:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 800157c:	6126      	str	r6, [r4, #16]
 800157e:	f009 fc27 	bl	800add0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001582:	4b1b      	ldr	r3, [pc, #108]	; (80015f0 <touchgfx_init+0xd4>)
 8001584:	6163      	str	r3, [r4, #20]
 8001586:	4640      	mov	r0, r8
 8001588:	f009 fc22 	bl	800add0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800158c:	4b19      	ldr	r3, [pc, #100]	; (80015f4 <touchgfx_init+0xd8>)
 800158e:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001590:	4638      	mov	r0, r7
 8001592:	f009 fc1d 	bl	800add0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001596:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800159a:	4a17      	ldr	r2, [pc, #92]	; (80015f8 <touchgfx_init+0xdc>)
 800159c:	f8c3 2370 	str.w	r2, [r3, #880]	; 0x370
 80015a0:	f503 7073 	add.w	r0, r3, #972	; 0x3cc
 80015a4:	f003 fada 	bl	8004b5c <_ZN5ModelC1Ev>
 80015a8:	4622      	mov	r2, r4
 80015aa:	f107 015c 	add.w	r1, r7, #92	; 0x5c
 80015ae:	4630      	mov	r0, r6
 80015b0:	f003 faca 	bl	8004b48 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 80015b4:	4630      	mov	r0, r6
 80015b6:	f001 fb29 	bl	8002c0c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 80015ba:	4810      	ldr	r0, [pc, #64]	; (80015fc <touchgfx_init+0xe0>)
 80015bc:	f01b ff28 	bl	801d410 <atexit>
 80015c0:	4628      	mov	r0, r5
 80015c2:	f01b fee7 	bl	801d394 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 80015c6:	480e      	ldr	r0, [pc, #56]	; (8001600 <touchgfx_init+0xe4>)
}
 80015c8:	b002      	add	sp, #8
 80015ca:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 80015ce:	f7ff bc59 	b.w	8000e84 <_ZN11TouchGFXHAL10initializeEv>
 80015d2:	bf00      	nop
 80015d4:	2001360c 	.word	0x2001360c
 80015d8:	200024f4 	.word	0x200024f4
 80015dc:	200001a0 	.word	0x200001a0
 80015e0:	20000008 	.word	0x20000008
 80015e4:	200001a4 	.word	0x200001a4
 80015e8:	20001514 	.word	0x20001514
 80015ec:	0801ea40 	.word	0x0801ea40
 80015f0:	0801e9a4 	.word	0x0801e9a4
 80015f4:	0801e9d8 	.word	0x0801e9d8
 80015f8:	0801ea0c 	.word	0x0801ea0c
 80015fc:	080014f5 	.word	0x080014f5
 8001600:	20002478 	.word	0x20002478

08001604 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001604:	4801      	ldr	r0, [pc, #4]	; (800160c <touchgfx_taskEntry+0x8>)
 8001606:	f7ff bc4f 	b.w	8000ea8 <_ZN11TouchGFXHAL9taskEntryEv>
 800160a:	bf00      	nop
 800160c:	20002478 	.word	0x20002478

08001610 <_GLOBAL__sub_I_touchgfx_init>:
}
 8001610:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
 8001612:	4c23      	ldr	r4, [pc, #140]	; (80016a0 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static STM32DMA dma;
 8001614:	4e23      	ldr	r6, [pc, #140]	; (80016a4 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8001616:	4b24      	ldr	r3, [pc, #144]	; (80016a8 <_GLOBAL__sub_I_touchgfx_init+0x98>)
static LCD16bpp display;
 8001618:	4d24      	ldr	r5, [pc, #144]	; (80016ac <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 800161a:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 800161c:	4630      	mov	r0, r6
 800161e:	f7ff fda5 	bl	800116c <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8001622:	4628      	mov	r0, r5
 8001624:	f013 f9a6 	bl	8014974 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 8001628:	4b21      	ldr	r3, [pc, #132]	; (80016b0 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
        instance = this;
 800162a:	4822      	ldr	r0, [pc, #136]	; (80016b4 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
          touchController(touchCtrl),
 800162c:	60dc      	str	r4, [r3, #12]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800162e:	4c22      	ldr	r4, [pc, #136]	; (80016b8 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
        instance = this;
 8001630:	6003      	str	r3, [r0, #0]
          mcuInstrumentation(0),
 8001632:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001634:	20f0      	movs	r0, #240	; 0xf0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8001636:	f44f 7180 	mov.w	r1, #256	; 0x100
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800163a:	8020      	strh	r0, [r4, #0]
          auxiliaryLCD(0),
 800163c:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001640:	4c1e      	ldr	r4, [pc, #120]	; (80016bc <_GLOBAL__sub_I_touchgfx_init+0xac>)
          touchSampleRate(1),
 8001642:	491f      	ldr	r1, [pc, #124]	; (80016c0 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001644:	8020      	strh	r0, [r4, #0]
          vSyncCompensationEnabled(false),
 8001646:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800164a:	4c1e      	ldr	r4, [pc, #120]	; (80016c4 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 800164c:	861a      	strh	r2, [r3, #48]	; 0x30
          requestedOrientation(ORIENTATION_LANDSCAPE),
 800164e:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001652:	f44f 70a0 	mov.w	r0, #320	; 0x140
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8001656:	6759      	str	r1, [r3, #116]	; 0x74
          lastRenderMethod(HARDWARE)
 8001658:	2101      	movs	r1, #1
          buttonController(0),
 800165a:	e9c3 2204 	strd	r2, r2, [r3, #16]
 800165e:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001662:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8001666:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 800166a:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 800166e:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8001672:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 8001676:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
          lastY(0),
 800167a:	661a      	str	r2, [r3, #96]	; 0x60
          updateMCULoad(0),
 800167c:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
          cc_begin(0),
 8001680:	671a      	str	r2, [r3, #112]	; 0x70
          lcdRef(display),
 8001682:	e9c3 6501 	strd	r6, r5, [r3, #4]
          lastRenderMethod(HARDWARE)
 8001686:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800168a:	8020      	strh	r0, [r4, #0]
 800168c:	4c0e      	ldr	r4, [pc, #56]	; (80016c8 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 800168e:	f883 1034 	strb.w	r1, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001692:	8020      	strh	r0, [r4, #0]
        DISPLAY_ROTATION = rotate0;
 8001694:	480d      	ldr	r0, [pc, #52]	; (80016cc <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8001696:	7002      	strb	r2, [r0, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8001698:	4a0d      	ldr	r2, [pc, #52]	; (80016d0 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 800169a:	601a      	str	r2, [r3, #0]
}
 800169c:	bd70      	pop	{r4, r5, r6, pc}
 800169e:	bf00      	nop
 80016a0:	200016d4 	.word	0x200016d4
 80016a4:	200016d8 	.word	0x200016d8
 80016a8:	0801e488 	.word	0x0801e488
 80016ac:	200024f8 	.word	0x200024f8
 80016b0:	20002478 	.word	0x20002478
 80016b4:	200135b0 	.word	0x200135b0
 80016b8:	200135a4 	.word	0x200135a4
 80016bc:	200135aa 	.word	0x200135aa
 80016c0:	01000001 	.word	0x01000001
 80016c4:	200135a6 	.word	0x200135a6
 80016c8:	200135ac 	.word	0x200135ac
 80016cc:	200135a8 	.word	0x200135a8
 80016d0:	0801e614 	.word	0x0801e614

080016d4 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 80016d4:	4801      	ldr	r0, [pc, #4]	; (80016dc <_GLOBAL__sub_D_touchgfx_init+0x8>)
 80016d6:	f7ff bd25 	b.w	8001124 <_ZN8STM32DMAD1Ev>
 80016da:	bf00      	nop
 80016dc:	200016d8 	.word	0x200016d8

080016e0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80016e0:	4b03      	ldr	r3, [pc, #12]	; (80016f0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 80016e2:	2290      	movs	r2, #144	; 0x90
 80016e4:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 80016e8:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 80016ec:	4770      	bx	lr
 80016ee:	bf00      	nop
 80016f0:	e000e100 	.word	0xe000e100

080016f4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80016f4:	4a09      	ldr	r2, [pc, #36]	; (800171c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 80016f6:	490a      	ldr	r1, [pc, #40]	; (8001720 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 80016f8:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80016fa:	480a      	ldr	r0, [pc, #40]	; (8001724 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80016fc:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001700:	3b01      	subs	r3, #1
 8001702:	b29b      	uxth	r3, r3
 8001704:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001706:	6911      	ldr	r1, [r2, #16]
 8001708:	f3c1 010a 	ubfx	r1, r1, #0, #11
 800170c:	3901      	subs	r1, #1
 800170e:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8001710:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8001712:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001714:	f043 0301 	orr.w	r3, r3, #1
 8001718:	6353      	str	r3, [r2, #52]	; 0x34
}
 800171a:	4770      	bx	lr
 800171c:	40016800 	.word	0x40016800
 8001720:	20002574 	.word	0x20002574
 8001724:	20002572 	.word	0x20002572

08001728 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001728:	4b01      	ldr	r3, [pc, #4]	; (8001730 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 800172a:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 800172e:	4770      	bx	lr
 8001730:	40016800 	.word	0x40016800

08001734 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001734:	4b02      	ldr	r3, [pc, #8]	; (8001740 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001736:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001738:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800173c:	625a      	str	r2, [r3, #36]	; 0x24
}
 800173e:	4770      	bx	lr
 8001740:	40016800 	.word	0x40016800

08001744 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001744:	b570      	push	{r4, r5, r6, lr}
 8001746:	4604      	mov	r4, r0
    HAL::initialize();
 8001748:	f009 fe49 	bl	800b3de <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800174c:	6823      	ldr	r3, [r4, #0]
 800174e:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8001750:	f00d fb90 	bl	800ee74 <_ZN8touchgfx11Application11getInstanceEv>
 8001754:	4601      	mov	r1, r0
 8001756:	4620      	mov	r0, r4
 8001758:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800175a:	6823      	ldr	r3, [r4, #0]
 800175c:	4a05      	ldr	r2, [pc, #20]	; (8001774 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800175e:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8001762:	4620      	mov	r0, r4
 8001764:	46ac      	mov	ip, r5
 8001766:	2300      	movs	r3, #0
}
 8001768:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800176c:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8001770:	4760      	bx	ip
 8001772:	bf00      	nop
 8001774:	d004b000 	.word	0xd004b000

08001778 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8001778:	f009 be18 	b.w	800b3ac <_ZN8touchgfx3HAL10beginFrameEv>

0800177c <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    if (frameBufferUpdatedThisFrame)
 800177c:	f890 304b 	ldrb.w	r3, [r0, #75]	; 0x4b
 8001780:	b113      	cbz	r3, 8001788 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xc>
        refreshRequested = true;
 8001782:	4b02      	ldr	r3, [pc, #8]	; (800178c <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x10>)
 8001784:	2201      	movs	r2, #1
 8001786:	701a      	strb	r2, [r3, #0]
    HAL::endFrame();
 8001788:	f009 be1c 	b.w	800b3c4 <_ZN8touchgfx3HAL8endFrameEv>
 800178c:	20002570 	.word	0x20002570

08001790 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001790:	f009 bdd6 	b.w	800b340 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001794 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001794:	f009 bf2f 	b.w	800b5f6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08001798 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001798:	4b03      	ldr	r3, [pc, #12]	; (80017a8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 800179a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800179e:	609a      	str	r2, [r3, #8]
 80017a0:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80017a4:	609a      	str	r2, [r3, #8]
}
 80017a6:	4770      	bx	lr
 80017a8:	e000e100 	.word	0xe000e100

080017ac <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80017ac:	4b08      	ldr	r3, [pc, #32]	; (80017d0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 80017ae:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80017b2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80017b6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80017ba:	f3bf 8f6f 	isb	sy
 80017be:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80017c2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80017c6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80017ca:	f3bf 8f6f 	isb	sy
}
 80017ce:	4770      	bx	lr
 80017d0:	e000e100 	.word	0xe000e100

080017d4 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 80017d4:	b510      	push	{r4, lr}
        return instance;
 80017d6:	4c14      	ldr	r4, [pc, #80]	; (8001828 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 80017d8:	6823      	ldr	r3, [r4, #0]
 80017da:	b323      	cbz	r3, 8001826 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 80017dc:	4b13      	ldr	r3, [pc, #76]	; (800182c <HAL_LTDC_LineEventCallback+0x58>)
 80017de:	4a14      	ldr	r2, [pc, #80]	; (8001830 <HAL_LTDC_LineEventCallback+0x5c>)
 80017e0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80017e2:	8811      	ldrh	r1, [r2, #0]
 80017e4:	428b      	cmp	r3, r1
 80017e6:	d113      	bne.n	8001810 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 80017e8:	4b12      	ldr	r3, [pc, #72]	; (8001834 <HAL_LTDC_LineEventCallback+0x60>)
 80017ea:	8819      	ldrh	r1, [r3, #0]
 80017ec:	f006 f814 	bl	8007818 <HAL_LTDC_ProgramLineEvent>
 80017f0:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 80017f2:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 80017f6:	3301      	adds	r3, #1
 80017f8:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 80017fc:	f7ff fc40 	bl	8001080 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001800:	6820      	ldr	r0, [r4, #0]
 8001802:	f00a fb23 	bl	800be4c <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001806:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 800180a:	2000      	movs	r0, #0
 800180c:	f7ff baae 	b.w	8000d6c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001810:	f006 f802 	bl	8007818 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001814:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8001816:	6803      	ldr	r3, [r0, #0]
 8001818:	6a1b      	ldr	r3, [r3, #32]
 800181a:	4798      	blx	r3
    }
 800181c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001820:	2000      	movs	r0, #0
 8001822:	f7ff bacd 	b.w	8000dc0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001826:	bd10      	pop	{r4, pc}
 8001828:	200135b0 	.word	0x200135b0
 800182c:	40016800 	.word	0x40016800
 8001830:	20002574 	.word	0x20002574
 8001834:	20002572 	.word	0x20002572

08001838 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8001838:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;

  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800183a:	4b06      	ldr	r3, [pc, #24]	; (8001854 <SPI5_Write+0x1c>)
{
 800183c:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001840:	681b      	ldr	r3, [r3, #0]
 8001842:	4805      	ldr	r0, [pc, #20]	; (8001858 <SPI5_Write+0x20>)
 8001844:	2201      	movs	r2, #1
 8001846:	f10d 0106 	add.w	r1, sp, #6
 800184a:	f006 fd2d 	bl	80082a8 <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 800184e:	b003      	add	sp, #12
 8001850:	f85d fb04 	ldr.w	pc, [sp], #4
 8001854:	20000010 	.word	0x20000010
 8001858:	20002700 	.word	0x20002700

0800185c <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 800185c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
	if(HAL_GPIO_ReadPin(GPIOG,GPIO_PIN_3) == GPIO_PIN_RESET)
 800185e:	4e18      	ldr	r6, [pc, #96]	; (80018c0 <StartDefaultTask+0x64>)
	{
		uint32_t count = osMessageQueueGetCount(Queue1Handle);
 8001860:	4c18      	ldr	r4, [pc, #96]	; (80018c4 <StartDefaultTask+0x68>)
		{
			uint8_t x = 'L';
			osMessageQueuePut(Queue1Handle,&x,0,200);
		}
	}
	if(HAL_GPIO_ReadPin(GPIOA,GPIO_PIN_0)== GPIO_PIN_SET){
 8001862:	4f19      	ldr	r7, [pc, #100]	; (80018c8 <StartDefaultTask+0x6c>)
	if(HAL_GPIO_ReadPin(GPIOG,GPIO_PIN_3) == GPIO_PIN_RESET)
 8001864:	2108      	movs	r1, #8
 8001866:	4630      	mov	r0, r6
 8001868:	f005 f9e0 	bl	8006c2c <HAL_GPIO_ReadPin>
 800186c:	4605      	mov	r5, r0
 800186e:	b970      	cbnz	r0, 800188e <StartDefaultTask+0x32>
		uint32_t count = osMessageQueueGetCount(Queue1Handle);
 8001870:	6820      	ldr	r0, [r4, #0]
 8001872:	f007 fb32 	bl	8008eda <osMessageQueueGetCount>
		if(count < 2)
 8001876:	2801      	cmp	r0, #1
 8001878:	d809      	bhi.n	800188e <StartDefaultTask+0x32>
			uint8_t x = 'L';
 800187a:	234c      	movs	r3, #76	; 0x4c
 800187c:	f88d 3007 	strb.w	r3, [sp, #7]
			osMessageQueuePut(Queue1Handle,&x,0,200);
 8001880:	6820      	ldr	r0, [r4, #0]
 8001882:	23c8      	movs	r3, #200	; 0xc8
 8001884:	462a      	mov	r2, r5
 8001886:	f10d 0107 	add.w	r1, sp, #7
 800188a:	f007 fac7 	bl	8008e1c <osMessageQueuePut>
	if(HAL_GPIO_ReadPin(GPIOA,GPIO_PIN_0)== GPIO_PIN_SET){
 800188e:	2101      	movs	r1, #1
 8001890:	4638      	mov	r0, r7
 8001892:	f005 f9cb 	bl	8006c2c <HAL_GPIO_ReadPin>
 8001896:	2801      	cmp	r0, #1
 8001898:	d10e      	bne.n	80018b8 <StartDefaultTask+0x5c>
		uint32_t count = osMessageQueueGetCount(Queue1Handle);
 800189a:	6820      	ldr	r0, [r4, #0]
 800189c:	f007 fb1d 	bl	8008eda <osMessageQueueGetCount>
		if(count < 2)
 80018a0:	2801      	cmp	r0, #1
 80018a2:	d809      	bhi.n	80018b8 <StartDefaultTask+0x5c>
				{
					uint8_t x = 'R';
 80018a4:	2352      	movs	r3, #82	; 0x52
 80018a6:	f88d 3007 	strb.w	r3, [sp, #7]
					osMessageQueuePut(Queue1Handle,&x,0,200);
 80018aa:	6820      	ldr	r0, [r4, #0]
 80018ac:	23c8      	movs	r3, #200	; 0xc8
 80018ae:	2200      	movs	r2, #0
 80018b0:	f10d 0107 	add.w	r1, sp, #7
 80018b4:	f007 fab2 	bl	8008e1c <osMessageQueuePut>
				}
	}
	osDelay(10);
 80018b8:	200a      	movs	r0, #10
 80018ba:	f007 f9c2 	bl	8008c42 <osDelay>
	if(HAL_GPIO_ReadPin(GPIOG,GPIO_PIN_3) == GPIO_PIN_RESET)
 80018be:	e7d1      	b.n	8001864 <StartDefaultTask+0x8>
 80018c0:	40021800 	.word	0x40021800
 80018c4:	20002580 	.word	0x20002580
 80018c8:	40020000 	.word	0x40020000

080018cc <SystemClock_Config>:
{
 80018cc:	b530      	push	{r4, r5, lr}
 80018ce:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80018d0:	2210      	movs	r2, #16
 80018d2:	2100      	movs	r1, #0
 80018d4:	a80a      	add	r0, sp, #40	; 0x28
 80018d6:	f01b ff82 	bl	801d7de <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80018da:	2214      	movs	r2, #20
 80018dc:	2100      	movs	r1, #0
 80018de:	a803      	add	r0, sp, #12
 80018e0:	f01b ff7d 	bl	801d7de <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 80018e4:	2400      	movs	r4, #0
 80018e6:	4b1d      	ldr	r3, [pc, #116]	; (800195c <SystemClock_Config+0x90>)
 80018e8:	9401      	str	r4, [sp, #4]
 80018ea:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80018ec:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80018f0:	641a      	str	r2, [r3, #64]	; 0x40
 80018f2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80018f4:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80018f8:	9301      	str	r3, [sp, #4]
 80018fa:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80018fc:	4b18      	ldr	r3, [pc, #96]	; (8001960 <SystemClock_Config+0x94>)
 80018fe:	9402      	str	r4, [sp, #8]
 8001900:	681a      	ldr	r2, [r3, #0]
 8001902:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001906:	601a      	str	r2, [r3, #0]
 8001908:	681b      	ldr	r3, [r3, #0]
 800190a:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800190e:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001910:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001912:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001914:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001918:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800191c:	2502      	movs	r5, #2
 800191e:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8001922:	e9cd 530e 	strd	r5, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001926:	2108      	movs	r1, #8
 8001928:	f44f 73a8 	mov.w	r3, #336	; 0x150
 800192c:	e9cd 1310 	strd	r1, r3, [sp, #64]	; 0x40
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001930:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001932:	2304      	movs	r3, #4
 8001934:	9313      	str	r3, [sp, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001936:	9512      	str	r5, [sp, #72]	; 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001938:	f005 ff8c 	bl	8007854 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800193c:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800193e:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001942:	f44f 50a0 	mov.w	r0, #5120	; 0x1400
 8001946:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800194a:	e9cd 0306 	strd	r0, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800194e:	2105      	movs	r1, #5
 8001950:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001952:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001954:	f006 f958 	bl	8007c08 <HAL_RCC_ClockConfig>
}
 8001958:	b015      	add	sp, #84	; 0x54
 800195a:	bd30      	pop	{r4, r5, pc}
 800195c:	40023800 	.word	0x40023800
 8001960:	40007000 	.word	0x40007000

08001964 <main>:
{
 8001964:	b580      	push	{r7, lr}
 8001966:	b09a      	sub	sp, #104	; 0x68
  HAL_Init();
 8001968:	f004 fedc 	bl	8006724 <HAL_Init>
  SystemClock_Config();
 800196c:	f7ff ffae 	bl	80018cc <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001970:	2214      	movs	r2, #20
 8001972:	2100      	movs	r1, #0
 8001974:	a80d      	add	r0, sp, #52	; 0x34
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001976:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001978:	f01b ff31 	bl	801d7de <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800197c:	4bc4      	ldr	r3, [pc, #784]	; (8001c90 <main+0x32c>)
 800197e:	9400      	str	r4, [sp, #0]
 8001980:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001982:	48c4      	ldr	r0, [pc, #784]	; (8001c94 <main+0x330>)
  hi2c3.Instance = I2C3;
 8001984:	4dc4      	ldr	r5, [pc, #784]	; (8001c98 <main+0x334>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001986:	f042 0210 	orr.w	r2, r2, #16
 800198a:	631a      	str	r2, [r3, #48]	; 0x30
 800198c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800198e:	f002 0210 	and.w	r2, r2, #16
 8001992:	9200      	str	r2, [sp, #0]
 8001994:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001996:	9401      	str	r4, [sp, #4]
 8001998:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800199a:	f042 0220 	orr.w	r2, r2, #32
 800199e:	631a      	str	r2, [r3, #48]	; 0x30
 80019a0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019a2:	f002 0220 	and.w	r2, r2, #32
 80019a6:	9201      	str	r2, [sp, #4]
 80019a8:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80019aa:	9402      	str	r4, [sp, #8]
 80019ac:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019ae:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80019b2:	631a      	str	r2, [r3, #48]	; 0x30
 80019b4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019b6:	f002 0280 	and.w	r2, r2, #128	; 0x80
 80019ba:	9202      	str	r2, [sp, #8]
 80019bc:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80019be:	9403      	str	r4, [sp, #12]
 80019c0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019c2:	f042 0204 	orr.w	r2, r2, #4
 80019c6:	631a      	str	r2, [r3, #48]	; 0x30
 80019c8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019ca:	f002 0204 	and.w	r2, r2, #4
 80019ce:	9203      	str	r2, [sp, #12]
 80019d0:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80019d2:	9404      	str	r4, [sp, #16]
 80019d4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019d6:	f042 0201 	orr.w	r2, r2, #1
 80019da:	631a      	str	r2, [r3, #48]	; 0x30
 80019dc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019de:	f002 0201 	and.w	r2, r2, #1
 80019e2:	9204      	str	r2, [sp, #16]
 80019e4:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80019e6:	9405      	str	r4, [sp, #20]
 80019e8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019ea:	f042 0202 	orr.w	r2, r2, #2
 80019ee:	631a      	str	r2, [r3, #48]	; 0x30
 80019f0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019f2:	f002 0202 	and.w	r2, r2, #2
 80019f6:	9205      	str	r2, [sp, #20]
 80019f8:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80019fa:	9406      	str	r4, [sp, #24]
 80019fc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019fe:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001a02:	631a      	str	r2, [r3, #48]	; 0x30
 8001a04:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a06:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001a0a:	9206      	str	r2, [sp, #24]
 8001a0c:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001a0e:	9407      	str	r4, [sp, #28]
 8001a10:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a12:	f042 0208 	orr.w	r2, r2, #8
 8001a16:	631a      	str	r2, [r3, #48]	; 0x30
 8001a18:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a1a:	f003 0308 	and.w	r3, r3, #8
 8001a1e:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001a20:	4622      	mov	r2, r4
 8001a22:	213c      	movs	r1, #60	; 0x3c
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001a24:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001a26:	f005 f907 	bl	8006c38 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a2a:	489c      	ldr	r0, [pc, #624]	; (8001c9c <main+0x338>)
 8001a2c:	4622      	mov	r2, r4
 8001a2e:	2104      	movs	r1, #4
 8001a30:	f005 f902 	bl	8006c38 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001a34:	4622      	mov	r2, r4
 8001a36:	489a      	ldr	r0, [pc, #616]	; (8001ca0 <main+0x33c>)
 8001a38:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 8001a3c:	f005 f8fc 	bl	8006c38 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001a40:	2601      	movs	r6, #1
 8001a42:	233c      	movs	r3, #60	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001a44:	f04f 0803 	mov.w	r8, #3
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001a48:	4892      	ldr	r0, [pc, #584]	; (8001c94 <main+0x330>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001a4a:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001a4e:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001a50:	e9cd 360d 	strd	r3, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a54:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001a56:	f005 f803 	bl	8006a60 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOA,&GPIO_InitStruct);
 8001a5a:	4892      	ldr	r0, [pc, #584]	; (8001ca4 <main+0x340>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a5c:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOA,&GPIO_InitStruct);
 8001a5e:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001a60:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001a62:	f04f 0a04 	mov.w	sl, #4
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001a66:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOA,&GPIO_InitStruct);
 8001a6a:	f004 fff9 	bl	8006a60 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001a6e:	488b      	ldr	r0, [pc, #556]	; (8001c9c <main+0x338>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a70:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001a72:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001a74:	e9cd a60d 	strd	sl, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001a78:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001a7a:	f004 fff1 	bl	8006a60 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8001a7e:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001a82:	4887      	ldr	r0, [pc, #540]	; (8001ca0 <main+0x33c>)
 8001a84:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001a86:	e9cd 360d 	strd	r3, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001a8a:	e9cd 470f 	strd	r4, r7, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001a8e:	f004 ffe7 	bl	8006a60 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a92:	4884      	ldr	r0, [pc, #528]	; (8001ca4 <main+0x340>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a94:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a96:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001a98:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a9c:	f004 ffe0 	bl	8006a60 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001aa0:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_2 | GPIO_PIN_3;
 8001aa2:	230c      	movs	r3, #12
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001aa4:	4880      	ldr	r0, [pc, #512]	; (8001ca8 <main+0x344>)
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001aa6:	960f      	str	r6, [sp, #60]	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001aa8:	e9cd 340d 	strd	r3, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001aac:	f004 ffd8 	bl	8006a60 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001ab0:	487e      	ldr	r0, [pc, #504]	; (8001cac <main+0x348>)
 8001ab2:	4b7f      	ldr	r3, [pc, #508]	; (8001cb0 <main+0x34c>)
 8001ab4:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001ab6:	f004 fec7 	bl	8006848 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8001aba:	4a7e      	ldr	r2, [pc, #504]	; (8001cb4 <main+0x350>)
 8001abc:	4b7e      	ldr	r3, [pc, #504]	; (8001cb8 <main+0x354>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001abe:	622c      	str	r4, [r5, #32]
  hi2c3.Init.ClockSpeed = 100000;
 8001ac0:	e9c5 2300 	strd	r2, r3, [r5]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001ac4:	4628      	mov	r0, r5
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001ac6:	f44f 4380 	mov.w	r3, #16384	; 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001aca:	e9c5 3404 	strd	r3, r4, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001ace:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001ad2:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001ad6:	f005 faa7 	bl	8007028 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001ada:	2110      	movs	r1, #16
 8001adc:	4628      	mov	r0, r5
 8001ade:	f005 fce3 	bl	80074a8 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001ae2:	4621      	mov	r1, r4
 8001ae4:	4628      	mov	r0, r5
 8001ae6:	f005 fcfe 	bl	80074e6 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 8001aea:	4874      	ldr	r0, [pc, #464]	; (8001cbc <main+0x358>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001aec:	4974      	ldr	r1, [pc, #464]	; (8001cc0 <main+0x35c>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001aee:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001af0:	f44f 7382 	mov.w	r3, #260	; 0x104
 8001af4:	e9c0 1300 	strd	r1, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001af8:	f44f 7500 	mov.w	r5, #512	; 0x200
 8001afc:	2318      	movs	r3, #24
 8001afe:	e9c0 5306 	strd	r5, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001b02:	230a      	movs	r3, #10
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001b04:	4d6f      	ldr	r5, [pc, #444]	; (8001cc4 <main+0x360>)
  hspi5.Init.CRCPolynomial = 10;
 8001b06:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001b08:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001b0c:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001b10:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001b14:	f006 fb6c 	bl	80081f0 <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001b18:	4b6b      	ldr	r3, [pc, #428]	; (8001cc8 <main+0x364>)
  SdramTiming.LoadToActiveDelay = 2;
 8001b1a:	970d      	str	r7, [sp, #52]	; 0x34
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001b1c:	f04f 0c10 	mov.w	ip, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8001b20:	e9c5 3600 	strd	r3, r6, [r5]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001b24:	2340      	movs	r3, #64	; 0x40
 8001b26:	e9c5 c304 	strd	ip, r3, [r5, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001b2a:	f44f 73c0 	mov.w	r3, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001b2e:	e9c5 3406 	strd	r3, r4, [r5, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001b32:	f44f 6300 	mov.w	r3, #2048	; 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001b36:	e9c5 3408 	strd	r3, r4, [r5, #32]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001b3a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001b3e:	62ab      	str	r3, [r5, #40]	; 0x28
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001b40:	a90d      	add	r1, sp, #52	; 0x34
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001b42:	2307      	movs	r3, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001b44:	4628      	mov	r0, r5
  SdramTiming.SelfRefreshTime = 4;
 8001b46:	e9cd 3a0e 	strd	r3, sl, [sp, #56]	; 0x38
  SdramTiming.WriteRecoveryTime = 3;
 8001b4a:	e9cd 3810 	strd	r3, r8, [sp, #64]	; 0x40
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001b4e:	f04f 0908 	mov.w	r9, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001b52:	e9c5 4a02 	strd	r4, sl, [r5, #8]
  SdramTiming.RCDDelay = 2;
 8001b56:	e9cd 7712 	strd	r7, r7, [sp, #72]	; 0x48
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001b5a:	f006 fa47 	bl	8007fec <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001b5e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001b62:	a909      	add	r1, sp, #36	; 0x24
 8001b64:	4628      	mov	r0, r5
  Command->AutoRefreshNumber       = 1;
 8001b66:	e9cd 960a 	strd	r9, r6, [sp, #40]	; 0x28
 __IO uint32_t tmpmrd =0;
 8001b6a:	9408      	str	r4, [sp, #32]
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 8001b6c:	9609      	str	r6, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 8001b6e:	940c      	str	r4, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001b70:	f006 fa5c 	bl	800802c <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8001b74:	4630      	mov	r0, r6
 8001b76:	f004 fe01 	bl	800677c <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001b7a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001b7e:	a909      	add	r1, sp, #36	; 0x24
 8001b80:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001b82:	e9cd 7909 	strd	r7, r9, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 8001b86:	e9cd 640b 	strd	r6, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001b8a:	f006 fa4f 	bl	800802c <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001b8e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001b92:	a909      	add	r1, sp, #36	; 0x24
 8001b94:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001b96:	e9cd 8909 	strd	r8, r9, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 8001b9a:	e9cd a40b 	strd	sl, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001b9e:	f006 fa45 	bl	800802c <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8001ba2:	f44f 730c 	mov.w	r3, #560	; 0x230
 8001ba6:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8001ba8:	9b08      	ldr	r3, [sp, #32]
 8001baa:	930c      	str	r3, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001bac:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001bb0:	a909      	add	r1, sp, #36	; 0x24
 8001bb2:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001bb4:	e9cd a909 	strd	sl, r9, [sp, #36]	; 0x24
  Command->AutoRefreshNumber       = 1;
 8001bb8:	960b      	str	r6, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001bba:	f006 fa37 	bl	800802c <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8001bbe:	f240 516a 	movw	r1, #1386	; 0x56a
 8001bc2:	4628      	mov	r0, r5
 8001bc4:	f006 fa50 	bl	8008068 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001bc8:	2234      	movs	r2, #52	; 0x34
 8001bca:	4621      	mov	r1, r4
 8001bcc:	eb0d 0002 	add.w	r0, sp, r2
 8001bd0:	f01b fe05 	bl	801d7de <memset>
  hltdc.Instance = LTDC;
 8001bd4:	4d3d      	ldr	r5, [pc, #244]	; (8001ccc <main+0x368>)
 8001bd6:	4b3e      	ldr	r3, [pc, #248]	; (8001cd0 <main+0x36c>)
  hltdc.Init.Backcolor.Blue = 0;
 8001bd8:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8001bda:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.HorizontalSync = 9;
 8001bde:	2309      	movs	r3, #9
  hltdc.Init.VerticalSync = 1;
 8001be0:	e9c5 3605 	strd	r3, r6, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8001be4:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedActiveH = 323;
 8001be6:	f240 1e0d 	movw	lr, #269	; 0x10d
  hltdc.Init.AccumulatedVBP = 3;
 8001bea:	e9c5 3807 	strd	r3, r8, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8001bee:	f240 1343 	movw	r3, #323	; 0x143
 8001bf2:	e9c5 e309 	strd	lr, r3, [r5, #36]	; 0x24
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001bf6:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 8001bf8:	f240 1347 	movw	r3, #327	; 0x147
 8001bfc:	f240 1817 	movw	r8, #279	; 0x117
 8001c00:	e9c5 830b 	strd	r8, r3, [r5, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8001c04:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8001c08:	612c      	str	r4, [r5, #16]
  hltdc.Init.Backcolor.Red = 0;
 8001c0a:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001c0e:	f005 fd0b 	bl	8007628 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8001c12:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX1 = 240;
 8001c14:	22f0      	movs	r2, #240	; 0xf0
  pLayerCfg.Alpha0 = 0;
 8001c16:	e9cd 1412 	strd	r1, r4, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001c1a:	f44f 6a80 	mov.w	sl, #1024	; 0x400
 8001c1e:	2105      	movs	r1, #5
  pLayerCfg.WindowY1 = 320;
 8001c20:	f44f 73a0 	mov.w	r3, #320	; 0x140
  pLayerCfg.WindowY0 = 0;
 8001c24:	e9cd 240e 	strd	r2, r4, [sp, #56]	; 0x38
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001c28:	e9cd a114 	strd	sl, r1, [sp, #80]	; 0x50
  pLayerCfg.ImageWidth = 240;
 8001c2c:	e9cd 4216 	strd	r4, r2, [sp, #88]	; 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001c30:	a90d      	add	r1, sp, #52	; 0x34
 8001c32:	4622      	mov	r2, r4
 8001c34:	4628      	mov	r0, r5
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001c36:	e9cd 3710 	strd	r3, r7, [sp, #64]	; 0x40
  LcdDrv = &ili9341_drv;
 8001c3a:	4d26      	ldr	r5, [pc, #152]	; (8001cd4 <main+0x370>)
  pLayerCfg.ImageHeight = 320;
 8001c3c:	9318      	str	r3, [sp, #96]	; 0x60
  pLayerCfg.WindowX0 = 0;
 8001c3e:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.Backcolor.Blue = 0;
 8001c40:	f8ad 4064 	strh.w	r4, [sp, #100]	; 0x64
  pLayerCfg.Backcolor.Red = 0;
 8001c44:	f88d 4066 	strb.w	r4, [sp, #102]	; 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001c48:	f005 fdb9 	bl	80077be <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001c4c:	4b22      	ldr	r3, [pc, #136]	; (8001cd8 <main+0x374>)
 8001c4e:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 8001c50:	681b      	ldr	r3, [r3, #0]
 8001c52:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001c54:	682b      	ldr	r3, [r5, #0]
  hdma2d.Instance = DMA2D;
 8001c56:	4d21      	ldr	r5, [pc, #132]	; (8001cdc <main+0x378>)
  LcdDrv->DisplayOff();
 8001c58:	68db      	ldr	r3, [r3, #12]
 8001c5a:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 8001c5c:	4b20      	ldr	r3, [pc, #128]	; (8001ce0 <main+0x37c>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 8001c5e:	e9c5 470a 	strd	r4, r7, [r5, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001c62:	e9c5 440c 	strd	r4, r4, [r5, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001c66:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 8001c68:	e9c5 3400 	strd	r3, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 8001c6c:	e9c5 7402 	strd	r7, r4, [r5, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001c70:	f004 fdfa 	bl	8006868 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001c74:	4631      	mov	r1, r6
 8001c76:	4628      	mov	r0, r5
 8001c78:	f004 feae 	bl	80069d8 <HAL_DMA2D_ConfigLayer>
  MX_TouchGFX_Init();
 8001c7c:	f7fe ffbd 	bl	8000bfa <MX_TouchGFX_Init>
  osKernelInitialize();
 8001c80:	f006 ff6c 	bl	8008b5c <osKernelInitialize>
  Queue1Handle = osMessageQueueNew (8, sizeof(uint8_t), &Queue1_attributes);
 8001c84:	4a17      	ldr	r2, [pc, #92]	; (8001ce4 <main+0x380>)
 8001c86:	4631      	mov	r1, r6
 8001c88:	4648      	mov	r0, r9
 8001c8a:	f007 f88c 	bl	8008da6 <osMessageQueueNew>
 8001c8e:	e02b      	b.n	8001ce8 <main+0x384>
 8001c90:	40023800 	.word	0x40023800
 8001c94:	40021000 	.word	0x40021000
 8001c98:	200025d0 	.word	0x200025d0
 8001c9c:	40020800 	.word	0x40020800
 8001ca0:	40020c00 	.word	0x40020c00
 8001ca4:	40020000 	.word	0x40020000
 8001ca8:	40021800 	.word	0x40021800
 8001cac:	20002588 	.word	0x20002588
 8001cb0:	40023000 	.word	0x40023000
 8001cb4:	40005c00 	.word	0x40005c00
 8001cb8:	000186a0 	.word	0x000186a0
 8001cbc:	20002700 	.word	0x20002700
 8001cc0:	40015000 	.word	0x40015000
 8001cc4:	200026cc 	.word	0x200026cc
 8001cc8:	a0000140 	.word	0xa0000140
 8001ccc:	20002624 	.word	0x20002624
 8001cd0:	40016800 	.word	0x40016800
 8001cd4:	2000257c 	.word	0x2000257c
 8001cd8:	20000014 	.word	0x20000014
 8001cdc:	20002590 	.word	0x20002590
 8001ce0:	4002b000 	.word	0x4002b000
 8001ce4:	0801ea8c 	.word	0x0801ea8c
 8001ce8:	4b09      	ldr	r3, [pc, #36]	; (8001d10 <main+0x3ac>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001cea:	4a0a      	ldr	r2, [pc, #40]	; (8001d14 <main+0x3b0>)
  Queue1Handle = osMessageQueueNew (8, sizeof(uint8_t), &Queue1_attributes);
 8001cec:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001cee:	4621      	mov	r1, r4
 8001cf0:	4809      	ldr	r0, [pc, #36]	; (8001d18 <main+0x3b4>)
 8001cf2:	f006 ff5f 	bl	8008bb4 <osThreadNew>
 8001cf6:	4b09      	ldr	r3, [pc, #36]	; (8001d1c <main+0x3b8>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001cf8:	4a09      	ldr	r2, [pc, #36]	; (8001d20 <main+0x3bc>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001cfa:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001cfc:	4621      	mov	r1, r4
 8001cfe:	4809      	ldr	r0, [pc, #36]	; (8001d24 <main+0x3c0>)
 8001d00:	f006 ff58 	bl	8008bb4 <osThreadNew>
 8001d04:	4b08      	ldr	r3, [pc, #32]	; (8001d28 <main+0x3c4>)
 8001d06:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001d08:	f006 ff3a 	bl	8008b80 <osKernelStart>
  while (1)
 8001d0c:	e7fe      	b.n	8001d0c <main+0x3a8>
 8001d0e:	bf00      	nop
 8001d10:	20002580 	.word	0x20002580
 8001d14:	0801eaa4 	.word	0x0801eaa4
 8001d18:	0800185d 	.word	0x0800185d
 8001d1c:	20002584 	.word	0x20002584
 8001d20:	0801ea68 	.word	0x0801ea68
 8001d24:	08000bff 	.word	0x08000bff
 8001d28:	20002578 	.word	0x20002578

08001d2c <IOE_Init>:
 8001d2c:	4770      	bx	lr

08001d2e <IOE_ITConfig>:
 8001d2e:	4770      	bx	lr

08001d30 <IOE_Write>:
{
 8001d30:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001d32:	4b09      	ldr	r3, [pc, #36]	; (8001d58 <IOE_Write+0x28>)
 8001d34:	f88d 2017 	strb.w	r2, [sp, #23]
 8001d38:	681b      	ldr	r3, [r3, #0]
 8001d3a:	9302      	str	r3, [sp, #8]
 8001d3c:	f10d 0217 	add.w	r2, sp, #23
 8001d40:	2301      	movs	r3, #1
 8001d42:	9200      	str	r2, [sp, #0]
 8001d44:	9301      	str	r3, [sp, #4]
 8001d46:	460a      	mov	r2, r1
 8001d48:	4601      	mov	r1, r0
 8001d4a:	4804      	ldr	r0, [pc, #16]	; (8001d5c <IOE_Write+0x2c>)
 8001d4c:	f005 fa14 	bl	8007178 <HAL_I2C_Mem_Write>
}
 8001d50:	b007      	add	sp, #28
 8001d52:	f85d fb04 	ldr.w	pc, [sp], #4
 8001d56:	bf00      	nop
 8001d58:	2000000c 	.word	0x2000000c
 8001d5c:	200025d0 	.word	0x200025d0

08001d60 <IOE_Read>:
{
 8001d60:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 8001d62:	2300      	movs	r3, #0
 8001d64:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001d68:	4b08      	ldr	r3, [pc, #32]	; (8001d8c <IOE_Read+0x2c>)
 8001d6a:	681b      	ldr	r3, [r3, #0]
 8001d6c:	9302      	str	r3, [sp, #8]
{
 8001d6e:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001d70:	2301      	movs	r3, #1
 8001d72:	f10d 0117 	add.w	r1, sp, #23
 8001d76:	9100      	str	r1, [sp, #0]
 8001d78:	9301      	str	r3, [sp, #4]
 8001d7a:	4601      	mov	r1, r0
 8001d7c:	4804      	ldr	r0, [pc, #16]	; (8001d90 <IOE_Read+0x30>)
 8001d7e:	f005 fa8b 	bl	8007298 <HAL_I2C_Mem_Read>
}
 8001d82:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001d86:	b007      	add	sp, #28
 8001d88:	f85d fb04 	ldr.w	pc, [sp], #4
 8001d8c:	2000000c 	.word	0x2000000c
 8001d90:	200025d0 	.word	0x200025d0

08001d94 <IOE_ReadMultiple>:
{
 8001d94:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001d96:	4c08      	ldr	r4, [pc, #32]	; (8001db8 <IOE_ReadMultiple+0x24>)
 8001d98:	6824      	ldr	r4, [r4, #0]
 8001d9a:	9200      	str	r2, [sp, #0]
 8001d9c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8001da0:	460a      	mov	r2, r1
 8001da2:	2301      	movs	r3, #1
 8001da4:	4601      	mov	r1, r0
 8001da6:	4805      	ldr	r0, [pc, #20]	; (8001dbc <IOE_ReadMultiple+0x28>)
 8001da8:	f005 fa76 	bl	8007298 <HAL_I2C_Mem_Read>
}
 8001dac:	3800      	subs	r0, #0
 8001dae:	bf18      	it	ne
 8001db0:	2001      	movne	r0, #1
 8001db2:	b004      	add	sp, #16
 8001db4:	bd10      	pop	{r4, pc}
 8001db6:	bf00      	nop
 8001db8:	2000000c 	.word	0x2000000c
 8001dbc:	200025d0 	.word	0x200025d0

08001dc0 <IOE_Delay>:
 8001dc0:	f004 bcdc 	b.w	800677c <HAL_Delay>

08001dc4 <LCD_IO_Init>:
{
 8001dc4:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001dc6:	4806      	ldr	r0, [pc, #24]	; (8001de0 <LCD_IO_Init+0x1c>)
 8001dc8:	2200      	movs	r2, #0
 8001dca:	2104      	movs	r1, #4
 8001dcc:	f004 ff34 	bl	8006c38 <HAL_GPIO_WritePin>
}
 8001dd0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001dd4:	4802      	ldr	r0, [pc, #8]	; (8001de0 <LCD_IO_Init+0x1c>)
 8001dd6:	2201      	movs	r2, #1
 8001dd8:	2104      	movs	r1, #4
 8001dda:	f004 bf2d 	b.w	8006c38 <HAL_GPIO_WritePin>
 8001dde:	bf00      	nop
 8001de0:	40020800 	.word	0x40020800

08001de4 <LCD_IO_WriteData>:
{
 8001de4:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001de6:	4d0b      	ldr	r5, [pc, #44]	; (8001e14 <LCD_IO_WriteData+0x30>)
{
 8001de8:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001dea:	2201      	movs	r2, #1
 8001dec:	480a      	ldr	r0, [pc, #40]	; (8001e18 <LCD_IO_WriteData+0x34>)
 8001dee:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001df2:	f004 ff21 	bl	8006c38 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001df6:	2200      	movs	r2, #0
 8001df8:	2104      	movs	r1, #4
 8001dfa:	4628      	mov	r0, r5
 8001dfc:	f004 ff1c 	bl	8006c38 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001e00:	4620      	mov	r0, r4
 8001e02:	f7ff fd19 	bl	8001838 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001e06:	4628      	mov	r0, r5
 8001e08:	2201      	movs	r2, #1
}
 8001e0a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001e0e:	2104      	movs	r1, #4
 8001e10:	f004 bf12 	b.w	8006c38 <HAL_GPIO_WritePin>
 8001e14:	40020800 	.word	0x40020800
 8001e18:	40020c00 	.word	0x40020c00

08001e1c <LCD_IO_WriteReg>:
{
 8001e1c:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001e1e:	4d0b      	ldr	r5, [pc, #44]	; (8001e4c <LCD_IO_WriteReg+0x30>)
{
 8001e20:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001e22:	2200      	movs	r2, #0
 8001e24:	480a      	ldr	r0, [pc, #40]	; (8001e50 <LCD_IO_WriteReg+0x34>)
 8001e26:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001e2a:	f004 ff05 	bl	8006c38 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001e2e:	2200      	movs	r2, #0
 8001e30:	2104      	movs	r1, #4
 8001e32:	4628      	mov	r0, r5
 8001e34:	f004 ff00 	bl	8006c38 <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 8001e38:	4620      	mov	r0, r4
 8001e3a:	f7ff fcfd 	bl	8001838 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001e3e:	4628      	mov	r0, r5
 8001e40:	2201      	movs	r2, #1
}
 8001e42:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001e46:	2104      	movs	r1, #4
 8001e48:	f004 bef6 	b.w	8006c38 <HAL_GPIO_WritePin>
 8001e4c:	40020800 	.word	0x40020800
 8001e50:	40020c00 	.word	0x40020c00

08001e54 <LCD_IO_ReadData>:
{
 8001e54:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001e56:	4e14      	ldr	r6, [pc, #80]	; (8001ea8 <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001e58:	4f14      	ldr	r7, [pc, #80]	; (8001eac <LCD_IO_ReadData+0x58>)
{
 8001e5a:	4605      	mov	r5, r0
 8001e5c:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001e5e:	4630      	mov	r0, r6
 8001e60:	2200      	movs	r2, #0
 8001e62:	2104      	movs	r1, #4
 8001e64:	f004 fee8 	bl	8006c38 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001e68:	2200      	movs	r2, #0
 8001e6a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001e6e:	4638      	mov	r0, r7
 8001e70:	f004 fee2 	bl	8006c38 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001e74:	4628      	mov	r0, r5
 8001e76:	f7ff fcdf 	bl	8001838 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001e7a:	4b0d      	ldr	r3, [pc, #52]	; (8001eb0 <LCD_IO_ReadData+0x5c>)
 8001e7c:	480d      	ldr	r0, [pc, #52]	; (8001eb4 <LCD_IO_ReadData+0x60>)
 8001e7e:	681b      	ldr	r3, [r3, #0]
 8001e80:	4622      	mov	r2, r4
 8001e82:	a901      	add	r1, sp, #4
 8001e84:	f006 fbac 	bl	80085e0 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001e88:	4638      	mov	r0, r7
 8001e8a:	2201      	movs	r2, #1
 8001e8c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001e90:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001e92:	f004 fed1 	bl	8006c38 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001e96:	4630      	mov	r0, r6
 8001e98:	2201      	movs	r2, #1
 8001e9a:	2104      	movs	r1, #4
 8001e9c:	f004 fecc 	bl	8006c38 <HAL_GPIO_WritePin>
}
 8001ea0:	4620      	mov	r0, r4
 8001ea2:	b003      	add	sp, #12
 8001ea4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001ea6:	bf00      	nop
 8001ea8:	40020800 	.word	0x40020800
 8001eac:	40020c00 	.word	0x40020c00
 8001eb0:	20000010 	.word	0x20000010
 8001eb4:	20002700 	.word	0x20002700

08001eb8 <LCD_Delay>:
  HAL_Delay(Delay);
 8001eb8:	f004 bc60 	b.w	800677c <HAL_Delay>

08001ebc <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001ebc:	6802      	ldr	r2, [r0, #0]
 8001ebe:	4b03      	ldr	r3, [pc, #12]	; (8001ecc <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001ec0:	429a      	cmp	r2, r3
 8001ec2:	d101      	bne.n	8001ec8 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 8001ec4:	f004 bc48 	b.w	8006758 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001ec8:	4770      	bx	lr
 8001eca:	bf00      	nop
 8001ecc:	40001000 	.word	0x40001000

08001ed0 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001ed0:	4770      	bx	lr
	...

08001ed4 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001ed4:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001ed6:	4b0e      	ldr	r3, [pc, #56]	; (8001f10 <HAL_MspInit+0x3c>)
 8001ed8:	2200      	movs	r2, #0
 8001eda:	9200      	str	r2, [sp, #0]
 8001edc:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001ede:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001ee2:	6459      	str	r1, [r3, #68]	; 0x44
 8001ee4:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001ee6:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8001eea:	9100      	str	r1, [sp, #0]
 8001eec:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001eee:	9201      	str	r2, [sp, #4]
 8001ef0:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001ef2:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8001ef6:	6419      	str	r1, [r3, #64]	; 0x40
 8001ef8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001efa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001efe:	9301      	str	r3, [sp, #4]
 8001f00:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001f02:	210f      	movs	r1, #15
 8001f04:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001f08:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001f0a:	f004 bc5d 	b.w	80067c8 <HAL_NVIC_SetPriority>
 8001f0e:	bf00      	nop
 8001f10:	40023800 	.word	0x40023800

08001f14 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001f14:	6802      	ldr	r2, [r0, #0]
 8001f16:	4b09      	ldr	r3, [pc, #36]	; (8001f3c <HAL_CRC_MspInit+0x28>)
 8001f18:	429a      	cmp	r2, r3
{
 8001f1a:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001f1c:	d10b      	bne.n	8001f36 <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001f1e:	2300      	movs	r3, #0
 8001f20:	9301      	str	r3, [sp, #4]
 8001f22:	4b07      	ldr	r3, [pc, #28]	; (8001f40 <HAL_CRC_MspInit+0x2c>)
 8001f24:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f26:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001f2a:	631a      	str	r2, [r3, #48]	; 0x30
 8001f2c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001f2e:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001f32:	9301      	str	r3, [sp, #4]
 8001f34:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001f36:	b002      	add	sp, #8
 8001f38:	4770      	bx	lr
 8001f3a:	bf00      	nop
 8001f3c:	40023000 	.word	0x40023000
 8001f40:	40023800 	.word	0x40023800

08001f44 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001f44:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001f46:	4b0f      	ldr	r3, [pc, #60]	; (8001f84 <HAL_DMA2D_MspInit+0x40>)
 8001f48:	6802      	ldr	r2, [r0, #0]
 8001f4a:	429a      	cmp	r2, r3
 8001f4c:	d116      	bne.n	8001f7c <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001f4e:	2200      	movs	r2, #0
 8001f50:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001f54:	9201      	str	r2, [sp, #4]
 8001f56:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001f58:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001f5c:	6319      	str	r1, [r3, #48]	; 0x30
 8001f5e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001f60:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001f64:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001f66:	2105      	movs	r1, #5
 8001f68:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001f6a:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001f6c:	f004 fc2c 	bl	80067c8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001f70:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001f72:	b003      	add	sp, #12
 8001f74:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001f78:	f004 bc58 	b.w	800682c <HAL_NVIC_EnableIRQ>
}
 8001f7c:	b003      	add	sp, #12
 8001f7e:	f85d fb04 	ldr.w	pc, [sp], #4
 8001f82:	bf00      	nop
 8001f84:	4002b000 	.word	0x4002b000

08001f88 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001f88:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001f8c:	4604      	mov	r4, r0
 8001f8e:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001f90:	2214      	movs	r2, #20
 8001f92:	2100      	movs	r1, #0
 8001f94:	a803      	add	r0, sp, #12
 8001f96:	f01b fc22 	bl	801d7de <memset>
  if(hi2c->Instance==I2C3)
 8001f9a:	6822      	ldr	r2, [r4, #0]
 8001f9c:	4b24      	ldr	r3, [pc, #144]	; (8002030 <HAL_I2C_MspInit+0xa8>)
 8001f9e:	429a      	cmp	r2, r3
 8001fa0:	d143      	bne.n	800202a <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001fa2:	4c24      	ldr	r4, [pc, #144]	; (8002034 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fa4:	4824      	ldr	r0, [pc, #144]	; (8002038 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001fa6:	2500      	movs	r5, #0
 8001fa8:	9500      	str	r5, [sp, #0]
 8001faa:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001fac:	f043 0304 	orr.w	r3, r3, #4
 8001fb0:	6323      	str	r3, [r4, #48]	; 0x30
 8001fb2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001fb4:	f003 0304 	and.w	r3, r3, #4
 8001fb8:	9300      	str	r3, [sp, #0]
 8001fba:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001fbc:	9501      	str	r5, [sp, #4]
 8001fbe:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001fc0:	f043 0301 	orr.w	r3, r3, #1
 8001fc4:	6323      	str	r3, [r4, #48]	; 0x30
 8001fc6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001fc8:	f003 0301 	and.w	r3, r3, #1
 8001fcc:	9301      	str	r3, [sp, #4]
 8001fce:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001fd0:	f04f 0912 	mov.w	r9, #18
 8001fd4:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001fd8:	f04f 0801 	mov.w	r8, #1
 8001fdc:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001fde:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fe0:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001fe2:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001fe6:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001fea:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fec:	f004 fd38 	bl	8006a60 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001ff0:	f44f 7380 	mov.w	r3, #256	; 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ff4:	4811      	ldr	r0, [pc, #68]	; (800203c <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001ff6:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ff8:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001ffa:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ffe:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002002:	f004 fd2d 	bl	8006a60 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8002006:	9502      	str	r5, [sp, #8]
 8002008:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800200a:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800200e:	6423      	str	r3, [r4, #64]	; 0x40
 8002010:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8002012:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8002016:	9302      	str	r3, [sp, #8]
 8002018:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 800201a:	6a23      	ldr	r3, [r4, #32]
 800201c:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8002020:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8002022:	6a23      	ldr	r3, [r4, #32]
 8002024:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8002028:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 800202a:	b009      	add	sp, #36	; 0x24
 800202c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002030:	40005c00 	.word	0x40005c00
 8002034:	40023800 	.word	0x40023800
 8002038:	40020800 	.word	0x40020800
 800203c:	40020000 	.word	0x40020000

08002040 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8002040:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002042:	b099      	sub	sp, #100	; 0x64
 8002044:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002046:	2214      	movs	r2, #20
 8002048:	2100      	movs	r1, #0
 800204a:	a807      	add	r0, sp, #28
 800204c:	f01b fbc7 	bl	801d7de <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8002050:	2230      	movs	r2, #48	; 0x30
 8002052:	eb0d 0002 	add.w	r0, sp, r2
 8002056:	2100      	movs	r1, #0
 8002058:	f01b fbc1 	bl	801d7de <memset>
  if(hltdc->Instance==LTDC)
 800205c:	6822      	ldr	r2, [r4, #0]
 800205e:	4b5e      	ldr	r3, [pc, #376]	; (80021d8 <HAL_LTDC_MspInit+0x198>)
 8002060:	429a      	cmp	r2, r3
 8002062:	f040 80b7 	bne.w	80021d4 <HAL_LTDC_MspInit+0x194>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8002066:	2308      	movs	r3, #8
 8002068:	930c      	str	r3, [sp, #48]	; 0x30
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 800206a:	23c0      	movs	r3, #192	; 0xc0
 800206c:	9310      	str	r3, [sp, #64]	; 0x40
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 800206e:	2304      	movs	r3, #4
 8002070:	9312      	str	r3, [sp, #72]	; 0x48
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8002072:	a80c      	add	r0, sp, #48	; 0x30
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8002074:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8002078:	9315      	str	r3, [sp, #84]	; 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800207a:	f005 fe8d 	bl	8007d98 <HAL_RCCEx_PeriphCLKConfig>
 800207e:	b108      	cbz	r0, 8002084 <HAL_LTDC_MspInit+0x44>
    {
      Error_Handler();
 8002080:	f7ff ff26 	bl	8001ed0 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8002084:	4b55      	ldr	r3, [pc, #340]	; (80021dc <HAL_LTDC_MspInit+0x19c>)
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002086:	4856      	ldr	r0, [pc, #344]	; (80021e0 <HAL_LTDC_MspInit+0x1a0>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8002088:	2400      	movs	r4, #0
 800208a:	9400      	str	r4, [sp, #0]
 800208c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800208e:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8002092:	645a      	str	r2, [r3, #68]	; 0x44
 8002094:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002096:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 800209a:	9200      	str	r2, [sp, #0]
 800209c:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800209e:	9401      	str	r4, [sp, #4]
 80020a0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80020a2:	f042 0220 	orr.w	r2, r2, #32
 80020a6:	631a      	str	r2, [r3, #48]	; 0x30
 80020a8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80020aa:	f002 0220 	and.w	r2, r2, #32
 80020ae:	9201      	str	r2, [sp, #4]
 80020b0:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80020b2:	9402      	str	r4, [sp, #8]
 80020b4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80020b6:	f042 0201 	orr.w	r2, r2, #1
 80020ba:	631a      	str	r2, [r3, #48]	; 0x30
 80020bc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80020be:	f002 0201 	and.w	r2, r2, #1
 80020c2:	9202      	str	r2, [sp, #8]
 80020c4:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80020c6:	9403      	str	r4, [sp, #12]
 80020c8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80020ca:	f042 0202 	orr.w	r2, r2, #2
 80020ce:	631a      	str	r2, [r3, #48]	; 0x30
 80020d0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80020d2:	f002 0202 	and.w	r2, r2, #2
 80020d6:	9203      	str	r2, [sp, #12]
 80020d8:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 80020da:	9404      	str	r4, [sp, #16]
 80020dc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80020de:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80020e2:	631a      	str	r2, [r3, #48]	; 0x30
 80020e4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80020e6:	f002 0240 	and.w	r2, r2, #64	; 0x40
 80020ea:	9204      	str	r2, [sp, #16]
 80020ec:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80020ee:	9405      	str	r4, [sp, #20]
 80020f0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80020f2:	f042 0204 	orr.w	r2, r2, #4
 80020f6:	631a      	str	r2, [r3, #48]	; 0x30
 80020f8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80020fa:	f002 0204 	and.w	r2, r2, #4
 80020fe:	9205      	str	r2, [sp, #20]
 8002100:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002102:	9406      	str	r4, [sp, #24]
 8002104:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002106:	f042 0208 	orr.w	r2, r2, #8
 800210a:	631a      	str	r2, [r3, #48]	; 0x30
 800210c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800210e:	f003 0308 	and.w	r3, r3, #8
 8002112:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002114:	2502      	movs	r5, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002116:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002118:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800211a:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800211c:	f44f 6380 	mov.w	r3, #1024	; 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002120:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002122:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002126:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800212a:	f004 fc99 	bl	8006a60 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 800212e:	f641 0358 	movw	r3, #6232	; 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002132:	482c      	ldr	r0, [pc, #176]	; (80021e4 <HAL_LTDC_MspInit+0x1a4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002134:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002136:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002138:	e9cd 3507 	strd	r3, r5, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800213c:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800213e:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002142:	f004 fc8d 	bl	8006a60 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002146:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002148:	4827      	ldr	r0, [pc, #156]	; (80021e8 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800214a:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800214c:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800214e:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002152:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002156:	f004 fc83 	bl	8006a60 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 800215a:	f44f 6370 	mov.w	r3, #3840	; 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800215e:	4822      	ldr	r0, [pc, #136]	; (80021e8 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002160:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002162:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002164:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002168:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800216c:	f004 fc78 	bl	8006a60 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8002170:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002174:	481d      	ldr	r0, [pc, #116]	; (80021ec <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002176:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002178:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800217a:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800217e:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002182:	f004 fc6d 	bl	8006a60 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002186:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002188:	4819      	ldr	r0, [pc, #100]	; (80021f0 <HAL_LTDC_MspInit+0x1b0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800218a:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800218c:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800218e:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002192:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002196:	f004 fc63 	bl	8006a60 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 800219a:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800219c:	4815      	ldr	r0, [pc, #84]	; (80021f4 <HAL_LTDC_MspInit+0x1b4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800219e:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80021a0:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80021a2:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80021a6:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80021aa:	f004 fc59 	bl	8006a60 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80021ae:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80021b2:	480e      	ldr	r0, [pc, #56]	; (80021ec <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80021b4:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80021b6:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80021b8:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80021bc:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80021c0:	f004 fc4e 	bl	8006a60 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 80021c4:	2058      	movs	r0, #88	; 0x58
 80021c6:	4622      	mov	r2, r4
 80021c8:	2105      	movs	r1, #5
 80021ca:	f004 fafd 	bl	80067c8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 80021ce:	2058      	movs	r0, #88	; 0x58
 80021d0:	f004 fb2c 	bl	800682c <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 80021d4:	b019      	add	sp, #100	; 0x64
 80021d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80021d8:	40016800 	.word	0x40016800
 80021dc:	40023800 	.word	0x40023800
 80021e0:	40021400 	.word	0x40021400
 80021e4:	40020000 	.word	0x40020000
 80021e8:	40020400 	.word	0x40020400
 80021ec:	40021800 	.word	0x40021800
 80021f0:	40020800 	.word	0x40020800
 80021f4:	40020c00 	.word	0x40020c00

080021f8 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 80021f8:	b510      	push	{r4, lr}
 80021fa:	4604      	mov	r4, r0
 80021fc:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80021fe:	2214      	movs	r2, #20
 8002200:	2100      	movs	r1, #0
 8002202:	a803      	add	r0, sp, #12
 8002204:	f01b faeb 	bl	801d7de <memset>
  if(hspi->Instance==SPI5)
 8002208:	6822      	ldr	r2, [r4, #0]
 800220a:	4b14      	ldr	r3, [pc, #80]	; (800225c <HAL_SPI_MspInit+0x64>)
 800220c:	429a      	cmp	r2, r3
 800220e:	d123      	bne.n	8002258 <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8002210:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8002214:	2100      	movs	r1, #0
 8002216:	9101      	str	r1, [sp, #4]
 8002218:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800221a:	4811      	ldr	r0, [pc, #68]	; (8002260 <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 800221c:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8002220:	645a      	str	r2, [r3, #68]	; 0x44
 8002222:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002224:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 8002228:	9201      	str	r2, [sp, #4]
 800222a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800222c:	9102      	str	r1, [sp, #8]
 800222e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002230:	f042 0220 	orr.w	r2, r2, #32
 8002234:	631a      	str	r2, [r3, #48]	; 0x30
 8002236:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002238:	f003 0320 	and.w	r3, r3, #32
 800223c:	9302      	str	r3, [sp, #8]
 800223e:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002240:	f44f 7260 	mov.w	r2, #896	; 0x380
 8002244:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002246:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002248:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 800224c:	2305      	movs	r3, #5
 800224e:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002252:	a903      	add	r1, sp, #12
 8002254:	f004 fc04 	bl	8006a60 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8002258:	b008      	add	sp, #32
 800225a:	bd10      	pop	{r4, pc}
 800225c:	40015000 	.word	0x40015000
 8002260:	40021400 	.word	0x40021400

08002264 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002264:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002268:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 800226a:	2300      	movs	r3, #0
 800226c:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 800226e:	4b2b      	ldr	r3, [pc, #172]	; (800231c <HAL_SDRAM_MspInit+0xb8>)
 8002270:	681c      	ldr	r4, [r3, #0]
 8002272:	2c00      	cmp	r4, #0
 8002274:	d14f      	bne.n	8002316 <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 8002276:	f04f 0801 	mov.w	r8, #1
 800227a:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 800227e:	4b28      	ldr	r3, [pc, #160]	; (8002320 <HAL_SDRAM_MspInit+0xbc>)
 8002280:	9400      	str	r4, [sp, #0]
 8002282:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002284:	4827      	ldr	r0, [pc, #156]	; (8002324 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8002286:	ea42 0208 	orr.w	r2, r2, r8
 800228a:	639a      	str	r2, [r3, #56]	; 0x38
 800228c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800228e:	ea03 0308 	and.w	r3, r3, r8
 8002292:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002294:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002296:	2603      	movs	r6, #3
 8002298:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 800229a:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800229c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800229e:	f64f 033f 	movw	r3, #63551	; 0xf83f
 80022a2:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80022a6:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80022aa:	f004 fbd9 	bl	8006a60 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80022ae:	481e      	ldr	r0, [pc, #120]	; (8002328 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80022b0:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80022b2:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80022b4:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022b8:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80022bc:	f004 fbd0 	bl	8006a60 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 80022c0:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80022c4:	4819      	ldr	r0, [pc, #100]	; (800232c <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80022c6:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80022c8:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80022ca:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022ce:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80022d2:	f004 fbc5 	bl	8006a60 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 80022d6:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80022da:	4815      	ldr	r0, [pc, #84]	; (8002330 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80022dc:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80022de:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80022e0:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022e4:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80022e8:	f004 fbba 	bl	8006a60 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80022ec:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80022f0:	4810      	ldr	r0, [pc, #64]	; (8002334 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80022f2:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80022f4:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80022f6:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022fa:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80022fe:	f004 fbaf 	bl	8006a60 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002302:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002304:	480c      	ldr	r0, [pc, #48]	; (8002338 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002306:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002308:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800230a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800230e:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002312:	f004 fba5 	bl	8006a60 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8002316:	b006      	add	sp, #24
 8002318:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800231c:	20002758 	.word	0x20002758
 8002320:	40023800 	.word	0x40023800
 8002324:	40021400 	.word	0x40021400
 8002328:	40020800 	.word	0x40020800
 800232c:	40021800 	.word	0x40021800
 8002330:	40021000 	.word	0x40021000
 8002334:	40020c00 	.word	0x40020c00
 8002338:	40020400 	.word	0x40020400

0800233c <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 800233c:	b530      	push	{r4, r5, lr}
 800233e:	4601      	mov	r1, r0
 8002340:	b089      	sub	sp, #36	; 0x24
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
 8002342:	2200      	movs	r2, #0
 8002344:	2036      	movs	r0, #54	; 0x36
 8002346:	f004 fa3f 	bl	80067c8 <HAL_NVIC_SetPriority>

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 800234a:	2036      	movs	r0, #54	; 0x36
 800234c:	f004 fa6e 	bl	800682c <HAL_NVIC_EnableIRQ>

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002350:	2500      	movs	r5, #0
 8002352:	4b15      	ldr	r3, [pc, #84]	; (80023a8 <HAL_InitTick+0x6c>)
 8002354:	9502      	str	r5, [sp, #8]
 8002356:	6c1a      	ldr	r2, [r3, #64]	; 0x40
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8002358:	4c14      	ldr	r4, [pc, #80]	; (80023ac <HAL_InitTick+0x70>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 800235a:	f042 0210 	orr.w	r2, r2, #16
 800235e:	641a      	str	r2, [r3, #64]	; 0x40
 8002360:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002362:	f003 0310 	and.w	r3, r3, #16
 8002366:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002368:	a901      	add	r1, sp, #4
 800236a:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 800236c:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800236e:	f005 fcf5 	bl	8007d5c <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8002372:	f005 fce3 	bl	8007d3c <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 8002376:	4b0e      	ldr	r3, [pc, #56]	; (80023b0 <HAL_InitTick+0x74>)
 8002378:	6023      	str	r3, [r4, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 800237a:	f240 33e7 	movw	r3, #999	; 0x3e7
 800237e:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8002380:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8002382:	4b0c      	ldr	r3, [pc, #48]	; (80023b4 <HAL_InitTick+0x78>)
 8002384:	fbb0 f0f3 	udiv	r0, r0, r3
 8002388:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 800238a:	6060      	str	r0, [r4, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;

  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 800238c:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 800238e:	6125      	str	r5, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002390:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8002392:	f006 fb09 	bl	80089a8 <HAL_TIM_Base_Init>
 8002396:	b920      	cbnz	r0, 80023a2 <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 8002398:	4620      	mov	r0, r4
 800239a:	f006 f9bf 	bl	800871c <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 800239e:	b009      	add	sp, #36	; 0x24
 80023a0:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 80023a2:	2001      	movs	r0, #1
 80023a4:	e7fb      	b.n	800239e <HAL_InitTick+0x62>
 80023a6:	bf00      	nop
 80023a8:	40023800 	.word	0x40023800
 80023ac:	2000275c 	.word	0x2000275c
 80023b0:	40001000 	.word	0x40001000
 80023b4:	000f4240 	.word	0x000f4240

080023b8 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 80023b8:	4770      	bx	lr

080023ba <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80023ba:	e7fe      	b.n	80023ba <HardFault_Handler>

080023bc <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80023bc:	e7fe      	b.n	80023bc <MemManage_Handler>

080023be <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80023be:	e7fe      	b.n	80023be <BusFault_Handler>

080023c0 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80023c0:	e7fe      	b.n	80023c0 <UsageFault_Handler>

080023c2 <DebugMon_Handler>:
 80023c2:	4770      	bx	lr

080023c4 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 80023c4:	4801      	ldr	r0, [pc, #4]	; (80023cc <TIM6_DAC_IRQHandler+0x8>)
 80023c6:	f006 b9e7 	b.w	8008798 <HAL_TIM_IRQHandler>
 80023ca:	bf00      	nop
 80023cc:	2000275c 	.word	0x2000275c

080023d0 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 80023d0:	4801      	ldr	r0, [pc, #4]	; (80023d8 <LTDC_IRQHandler+0x8>)
 80023d2:	f005 b997 	b.w	8007704 <HAL_LTDC_IRQHandler>
 80023d6:	bf00      	nop
 80023d8:	20002624 	.word	0x20002624

080023dc <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 80023dc:	4801      	ldr	r0, [pc, #4]	; (80023e4 <DMA2D_IRQHandler+0x8>)
 80023de:	f004 ba71 	b.w	80068c4 <HAL_DMA2D_IRQHandler>
 80023e2:	bf00      	nop
 80023e4:	20002590 	.word	0x20002590

080023e8 <EXTI0_IRQHandler>:
  /* USER CODE END DMA2D_IRQn 1 */
}

/* USER CODE BEGIN 1 */
void EXTI0_IRQHandler(void)
{
 80023e8:	b513      	push	{r0, r1, r4, lr}
  /* USER CODE BEGIN EXTI0_IRQn 0 */
	uint32_t count = osMessageQueueGetCount(Queue1Handle);
 80023ea:	4c0b      	ldr	r4, [pc, #44]	; (8002418 <EXTI0_IRQHandler+0x30>)
 80023ec:	6820      	ldr	r0, [r4, #0]
 80023ee:	f006 fd74 	bl	8008eda <osMessageQueueGetCount>
	if (count < 2)
 80023f2:	2801      	cmp	r0, #1
 80023f4:	d809      	bhi.n	800240a <EXTI0_IRQHandler+0x22>
	{
		uint8_t x = 'A';
 80023f6:	2341      	movs	r3, #65	; 0x41
 80023f8:	f88d 3007 	strb.w	r3, [sp, #7]
		osMessageQueuePut(Queue1Handle, &x, 0, 200);
 80023fc:	6820      	ldr	r0, [r4, #0]
 80023fe:	23c8      	movs	r3, #200	; 0xc8
 8002400:	2200      	movs	r2, #0
 8002402:	f10d 0107 	add.w	r1, sp, #7
 8002406:	f006 fd09 	bl	8008e1c <osMessageQueuePut>
	}
  /* USER CODE END EXTI0_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_0);
 800240a:	2001      	movs	r0, #1
  /* USER CODE BEGIN EXTI0_IRQn 1 */
  /* USER CODE END EXTI0_IRQn 1 */
}
 800240c:	b002      	add	sp, #8
 800240e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_0);
 8002412:	f004 bc21 	b.w	8006c58 <HAL_GPIO_EXTI_IRQHandler>
 8002416:	bf00      	nop
 8002418:	20002580 	.word	0x20002580

0800241c <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 800241c:	2001      	movs	r0, #1
 800241e:	4770      	bx	lr

08002420 <_kill>:

int _kill(int pid, int sig)
{
 8002420:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002422:	f01b fa7f 	bl	801d924 <__errno>
 8002426:	2316      	movs	r3, #22
 8002428:	6003      	str	r3, [r0, #0]
	return -1;
}
 800242a:	f04f 30ff 	mov.w	r0, #4294967295
 800242e:	bd08      	pop	{r3, pc}

08002430 <_exit>:

void _exit (int status)
{
 8002430:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002432:	f01b fa77 	bl	801d924 <__errno>
 8002436:	2316      	movs	r3, #22
 8002438:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 800243a:	e7fe      	b.n	800243a <_exit+0xa>

0800243c <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800243c:	b570      	push	{r4, r5, r6, lr}
 800243e:	460d      	mov	r5, r1
 8002440:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002442:	460e      	mov	r6, r1
 8002444:	1b73      	subs	r3, r6, r5
 8002446:	429c      	cmp	r4, r3
 8002448:	dc01      	bgt.n	800244e <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 800244a:	4620      	mov	r0, r4
 800244c:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 800244e:	f3af 8000 	nop.w
 8002452:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002456:	e7f5      	b.n	8002444 <_read+0x8>

08002458 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002458:	b570      	push	{r4, r5, r6, lr}
 800245a:	460d      	mov	r5, r1
 800245c:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800245e:	460e      	mov	r6, r1
 8002460:	1b73      	subs	r3, r6, r5
 8002462:	429c      	cmp	r4, r3
 8002464:	dc01      	bgt.n	800246a <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8002466:	4620      	mov	r0, r4
 8002468:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 800246a:	f816 0b01 	ldrb.w	r0, [r6], #1
 800246e:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002472:	e7f5      	b.n	8002460 <_write+0x8>

08002474 <_close>:

int _close(int file)
{
	return -1;
}
 8002474:	f04f 30ff 	mov.w	r0, #4294967295
 8002478:	4770      	bx	lr

0800247a <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 800247a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800247e:	604b      	str	r3, [r1, #4]
	return 0;
}
 8002480:	2000      	movs	r0, #0
 8002482:	4770      	bx	lr

08002484 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8002484:	2001      	movs	r0, #1
 8002486:	4770      	bx	lr

08002488 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002488:	2000      	movs	r0, #0
 800248a:	4770      	bx	lr

0800248c <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 800248c:	4a0a      	ldr	r2, [pc, #40]	; (80024b8 <_sbrk+0x2c>)
 800248e:	6811      	ldr	r1, [r2, #0]
{
 8002490:	b508      	push	{r3, lr}
 8002492:	4603      	mov	r3, r0
	if (heap_end == 0)
 8002494:	b909      	cbnz	r1, 800249a <_sbrk+0xe>
		heap_end = &end;
 8002496:	4909      	ldr	r1, [pc, #36]	; (80024bc <_sbrk+0x30>)
 8002498:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 800249a:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 800249c:	4669      	mov	r1, sp
 800249e:	4403      	add	r3, r0
 80024a0:	428b      	cmp	r3, r1
 80024a2:	d906      	bls.n	80024b2 <_sbrk+0x26>
	{
		errno = ENOMEM;
 80024a4:	f01b fa3e 	bl	801d924 <__errno>
 80024a8:	230c      	movs	r3, #12
 80024aa:	6003      	str	r3, [r0, #0]
		//return (caddr_t) -1;
		return (void*) -1;
 80024ac:	f04f 30ff 	mov.w	r0, #4294967295

	heap_end += incr;

//	return (caddr_t) prev_heap_end;
	return (void*) prev_heap_end;
}
 80024b0:	bd08      	pop	{r3, pc}
	heap_end += incr;
 80024b2:	6013      	str	r3, [r2, #0]
	return (void*) prev_heap_end;
 80024b4:	e7fc      	b.n	80024b0 <_sbrk+0x24>
 80024b6:	bf00      	nop
 80024b8:	200027a4 	.word	0x200027a4
 80024bc:	20013990 	.word	0x20013990

080024c0 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // segoeuib_28_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80024c0:	4770      	bx	lr

080024c2 <_ZN23ApplicationFontProviderD0Ev>:
 80024c2:	b510      	push	{r4, lr}
 80024c4:	2104      	movs	r1, #4
 80024c6:	4604      	mov	r4, r0
 80024c8:	f01a ff56 	bl	801d378 <_ZdlPvj>
 80024cc:	4620      	mov	r0, r4
 80024ce:	bd10      	pop	{r4, pc}

080024d0 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 80024d0:	2901      	cmp	r1, #1
{
 80024d2:	b508      	push	{r3, lr}
    switch (typography)
 80024d4:	d006      	beq.n	80024e4 <_ZN23ApplicationFontProvider7getFontEt+0x14>
 80024d6:	2902      	cmp	r1, #2
 80024d8:	d008      	beq.n	80024ec <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 80024da:	b959      	cbnz	r1, 80024f4 <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 80024dc:	f002 fb0e 	bl	8004afc <_ZN17TypedTextDatabase8getFontsEv>
 80024e0:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 80024e2:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 80024e4:	f002 fb0a 	bl	8004afc <_ZN17TypedTextDatabase8getFontsEv>
 80024e8:	6840      	ldr	r0, [r0, #4]
 80024ea:	e7fa      	b.n	80024e2 <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 80024ec:	f002 fb06 	bl	8004afc <_ZN17TypedTextDatabase8getFontsEv>
 80024f0:	6880      	ldr	r0, [r0, #8]
 80024f2:	e7f6      	b.n	80024e2 <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 80024f4:	2000      	movs	r0, #0
 80024f6:	e7f4      	b.n	80024e2 <_ZN23ApplicationFontProvider7getFontEt+0x12>

080024f8 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 80024f8:	4800      	ldr	r0, [pc, #0]	; (80024fc <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 80024fa:	4770      	bx	lr
 80024fc:	0801eadc 	.word	0x0801eadc

08002500 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002500:	201f      	movs	r0, #31
 8002502:	4770      	bx	lr

08002504 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002504:	b513      	push	{r0, r1, r4, lr}
 8002506:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002508:	b151      	cbz	r1, 8002520 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800250a:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 800250c:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 800250e:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002512:	aa01      	add	r2, sp, #4
 8002514:	689c      	ldr	r4, [r3, #8]
 8002516:	f10d 0303 	add.w	r3, sp, #3
 800251a:	47a0      	blx	r4
        return glyph;
    }
 800251c:	b002      	add	sp, #8
 800251e:	bd10      	pop	{r4, pc}
            return 0;
 8002520:	4608      	mov	r0, r1
 8002522:	e7fb      	b.n	800251c <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002524 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002524:	8940      	ldrh	r0, [r0, #10]
 8002526:	4770      	bx	lr

08002528 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002528:	8980      	ldrh	r0, [r0, #12]
 800252a:	4770      	bx	lr

0800252c <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 800252c:	8880      	ldrh	r0, [r0, #4]
 800252e:	4770      	bx	lr

08002530 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 8002530:	7983      	ldrb	r3, [r0, #6]
 8002532:	8882      	ldrh	r2, [r0, #4]
 8002534:	1898      	adds	r0, r3, r2
    }
 8002536:	b280      	uxth	r0, r0
 8002538:	4770      	bx	lr

0800253a <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 800253a:	79c0      	ldrb	r0, [r0, #7]
    }
 800253c:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002540:	4770      	bx	lr

08002542 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002542:	79c0      	ldrb	r0, [r0, #7]
    }
 8002544:	09c0      	lsrs	r0, r0, #7
 8002546:	4770      	bx	lr

08002548 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002548:	4770      	bx	lr

0800254a <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 800254a:	b510      	push	{r4, lr}
    }
 800254c:	2108      	movs	r1, #8
    virtual ~TypedText()
 800254e:	4604      	mov	r4, r0
    }
 8002550:	f01a ff12 	bl	801d378 <_ZdlPvj>
 8002554:	4620      	mov	r0, r4
 8002556:	bd10      	pop	{r4, pc}

08002558 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8002558:	4770      	bx	lr

0800255a <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 800255a:	4770      	bx	lr

0800255c <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 800255c:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 8002560:	6808      	ldr	r0, [r1, #0]
 8002562:	6849      	ldr	r1, [r1, #4]
 8002564:	c303      	stmia	r3!, {r0, r1}
    }
 8002566:	4770      	bx	lr

08002568 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002568:	2000      	movs	r0, #0
 800256a:	4770      	bx	lr

0800256c <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 800256c:	8081      	strh	r1, [r0, #4]
    }
 800256e:	4770      	bx	lr

08002570 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002570:	80c1      	strh	r1, [r0, #6]
    }
 8002572:	4770      	bx	lr

08002574 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8002574:	8101      	strh	r1, [r0, #8]
    }
 8002576:	4770      	bx	lr

08002578 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002578:	8141      	strh	r1, [r0, #10]
    }
 800257a:	4770      	bx	lr

0800257c <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 800257c:	4770      	bx	lr

0800257e <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 800257e:	4770      	bx	lr

08002580 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8002580:	4770      	bx	lr

08002582 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8002582:	4770      	bx	lr

08002584 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8002584:	4770      	bx	lr

08002586 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8002586:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002588:	88c4      	ldrh	r4, [r0, #6]
 800258a:	6803      	ldr	r3, [r0, #0]
 800258c:	1b12      	subs	r2, r2, r4
 800258e:	8884      	ldrh	r4, [r0, #4]
 8002590:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002592:	1b09      	subs	r1, r1, r4
 8002594:	b212      	sxth	r2, r2
    }
 8002596:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 800259a:	b209      	sxth	r1, r1
 800259c:	4718      	bx	r3

0800259e <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800259e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80025a2:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 80025a4:	f04f 33ff 	mov.w	r3, #4294967295
 80025a8:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 80025aa:	6813      	ldr	r3, [r2, #0]
 80025ac:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 80025ae:	6010      	str	r0, [r2, #0]
    }
 80025b0:	4770      	bx	lr

080025b2 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80025b2:	4770      	bx	lr

080025b4 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80025b4:	4770      	bx	lr

080025b6 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80025b6:	6041      	str	r1, [r0, #4]
    }
 80025b8:	4770      	bx	lr

080025ba <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80025ba:	4770      	bx	lr

080025bc <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80025bc:	4b06      	ldr	r3, [pc, #24]	; (80025d8 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80025be:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 80025c2:	2300      	movs	r3, #0
 80025c4:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80025c8:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 80025cc:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 80025d0:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 80025d4:	4770      	bx	lr
 80025d6:	bf00      	nop
 80025d8:	08002cf9 	.word	0x08002cf9

080025dc <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80025dc:	2301      	movs	r3, #1
 80025de:	7203      	strb	r3, [r0, #8]
    }
 80025e0:	4770      	bx	lr

080025e2 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 80025e2:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80025e6:	b11a      	cbz	r2, 80025f0 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 80025e8:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 80025ec:	b102      	cbz	r2, 80025f0 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 80025ee:	6018      	str	r0, [r3, #0]
        }
    }
 80025f0:	4770      	bx	lr

080025f2 <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80025f2:	4770      	bx	lr

080025f4 <_ZN8touchgfx8CallbackINS_15CoverTransitionILNS_9DirectionE2EEERNS_8DrawableEvvED1Ev>:
 80025f4:	4770      	bx	lr

080025f6 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE13FullSolidRectD1Ev>:
            break;
        }
    }

private:
    class FullSolidRect : public Widget
 80025f6:	4770      	bx	lr

080025f8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16tickMoveDrawableERNS_8DrawableE>:
    /**
     * Moves the Drawable.
     *
     * @param [in] d The Drawable to move.
     */
    virtual void tickMoveDrawable(Drawable& d)
 80025f8:	4603      	mov	r3, r0
 80025fa:	b410      	push	{r4}
    {
        if (&d == snapshotPtr)
 80025fc:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80025fe:	428a      	cmp	r2, r1
    virtual void tickMoveDrawable(Drawable& d)
 8002600:	4608      	mov	r0, r1
        if (&d == snapshotPtr)
 8002602:	d008      	beq.n	8002616 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16tickMoveDrawableERNS_8DrawableE+0x1e>

        switch (templateDirection)
        {
        case EAST:
        case WEST:
            d.moveRelative(calculatedValue, 0);
 8002604:	680a      	ldr	r2, [r1, #0]
 8002606:	f9b3 1050 	ldrsh.w	r1, [r3, #80]	; 0x50
 800260a:	6d54      	ldr	r4, [r2, #84]	; 0x54
 800260c:	2200      	movs	r2, #0
 800260e:	4623      	mov	r3, r4
        case NORTH:
        case SOUTH:
            d.moveRelative(0, calculatedValue);
            break;
        }
    }
 8002610:	f85d 4b04 	ldr.w	r4, [sp], #4
            d.moveRelative(calculatedValue, 0);
 8002614:	4718      	bx	r3
    }
 8002616:	f85d 4b04 	ldr.w	r4, [sp], #4
 800261a:	4770      	bx	lr

0800261c <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE16tickMoveDrawableERNS_8DrawableE>:
            d.moveRelative(calculatedValue, 0);
 800261c:	680a      	ldr	r2, [r1, #0]
    virtual void tickMoveDrawable(Drawable& d)
 800261e:	b410      	push	{r4}
            d.moveRelative(calculatedValue, 0);
 8002620:	6d54      	ldr	r4, [r2, #84]	; 0x54
    virtual void tickMoveDrawable(Drawable& d)
 8002622:	460b      	mov	r3, r1
            d.moveRelative(calculatedValue, 0);
 8002624:	2200      	movs	r2, #0
 8002626:	f9b0 1020 	ldrsh.w	r1, [r0, #32]
 800262a:	4618      	mov	r0, r3
 800262c:	4623      	mov	r3, r4
    }
 800262e:	f85d 4b04 	ldr.w	r4, [sp], #4
            d.moveRelative(calculatedValue, 0);
 8002632:	4718      	bx	r3

08002634 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EED1Ev>:
class CoverTransition : public Transition
 8002634:	4770      	bx	lr

08002636 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED1Ev>:
class SlideTransition : public Transition
 8002636:	4770      	bx	lr

08002638 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8002638:	4770      	bx	lr

0800263a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800263a:	4770      	bx	lr

0800263c <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 800263c:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 800263e:	6840      	ldr	r0, [r0, #4]
 8002640:	6803      	ldr	r3, [r0, #0]
 8002642:	3124      	adds	r1, #36	; 0x24
 8002644:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8002646:	4718      	bx	r3

08002648 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 8002648:	b51f      	push	{r0, r1, r2, r3, r4, lr}
        : pobject(pObject), pmemfun(pmemfun_1)
 800264a:	4b0a      	ldr	r3, [pc, #40]	; (8002674 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE4initEv+0x2c>)
 800264c:	221c      	movs	r2, #28
 800264e:	e9cd 3000 	strd	r3, r0, [sp]
 8002652:	2301      	movs	r3, #1
 8002654:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002658:	4604      	mov	r4, r0
        screenContainer->forEachChild(&initCallback);
 800265a:	6840      	ldr	r0, [r0, #4]
 800265c:	6803      	ldr	r3, [r0, #0]
 800265e:	4669      	mov	r1, sp
 8002660:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8002662:	4798      	blx	r3
        screenContainer->add(solid);
 8002664:	6860      	ldr	r0, [r4, #4]
 8002666:	6803      	ldr	r3, [r0, #0]
 8002668:	f104 0124 	add.w	r1, r4, #36	; 0x24
 800266c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800266e:	4798      	blx	r3
    }
 8002670:	b004      	add	sp, #16
 8002672:	bd10      	pop	{r4, pc}
 8002674:	0801f7d8 	.word	0x0801f7d8

08002678 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE16initMoveDrawableERNS_8DrawableE>:
            d.moveRelative(HAL::DISPLAY_WIDTH, 0);
 8002678:	680b      	ldr	r3, [r1, #0]
    virtual void initMoveDrawable(Drawable& d)
 800267a:	4608      	mov	r0, r1
            d.moveRelative(HAL::DISPLAY_WIDTH, 0);
 800267c:	4902      	ldr	r1, [pc, #8]	; (8002688 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE16initMoveDrawableERNS_8DrawableE+0x10>)
 800267e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002680:	f9b1 1000 	ldrsh.w	r1, [r1]
 8002684:	2200      	movs	r2, #0
 8002686:	4718      	bx	r3
 8002688:	200135a4 	.word	0x200135a4

0800268c <_ZNK8touchgfx15CoverTransitionILNS_9DirectionE2EE13FullSolidRect4drawERKNS_4RectE>:
            return Rect(0, 0, getWidth(), getHeight());
        }

        virtual void draw(const Rect& area) const
        {
        }
 800268c:	4770      	bx	lr

0800268e <_ZNK8touchgfx15CoverTransitionILNS_9DirectionE2EE13FullSolidRect12getSolidRectEv>:
        virtual Rect getSolidRect() const
 800268e:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002690:	2200      	movs	r2, #0
        return rect.width;
 8002692:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8002696:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 800269a:	8002      	strh	r2, [r0, #0]
 800269c:	8042      	strh	r2, [r0, #2]
 800269e:	8084      	strh	r4, [r0, #4]
 80026a0:	80c1      	strh	r1, [r0, #6]
        }
 80026a2:	bd10      	pop	{r4, pc}

080026a4 <_ZN8touchgfx8CallbackINS_15CoverTransitionILNS_9DirectionE2EEERNS_8DrawableEvvE7executeES5_>:
    virtual void execute(T1 t1)
 80026a4:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80026a6:	68c2      	ldr	r2, [r0, #12]
 80026a8:	6844      	ldr	r4, [r0, #4]
 80026aa:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80026ac:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80026ae:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80026b2:	07d2      	lsls	r2, r2, #31
 80026b4:	bf48      	it	mi
 80026b6:	5962      	ldrmi	r2, [r4, r5]
 80026b8:	689b      	ldr	r3, [r3, #8]
    }
 80026ba:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80026bc:	bf48      	it	mi
 80026be:	58d3      	ldrmi	r3, [r2, r3]
 80026c0:	4718      	bx	r3

080026c2 <_ZNK8touchgfx8CallbackINS_15CoverTransitionILNS_9DirectionE2EEERNS_8DrawableEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80026c2:	6843      	ldr	r3, [r0, #4]
 80026c4:	b12b      	cbz	r3, 80026d2 <_ZNK8touchgfx8CallbackINS_15CoverTransitionILNS_9DirectionE2EEERNS_8DrawableEvvE7isValidEv+0x10>
 80026c6:	6883      	ldr	r3, [r0, #8]
 80026c8:	b92b      	cbnz	r3, 80026d6 <_ZNK8touchgfx8CallbackINS_15CoverTransitionILNS_9DirectionE2EEERNS_8DrawableEvvE7isValidEv+0x14>
 80026ca:	68c0      	ldr	r0, [r0, #12]
 80026cc:	f000 0001 	and.w	r0, r0, #1
 80026d0:	4770      	bx	lr
 80026d2:	4618      	mov	r0, r3
 80026d4:	4770      	bx	lr
 80026d6:	2001      	movs	r0, #1
    }
 80026d8:	4770      	bx	lr
	...

080026dc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16initMoveDrawableERNS_8DrawableE>:
            d.moveRelative(HAL::DISPLAY_WIDTH, 0);
 80026dc:	680b      	ldr	r3, [r1, #0]
    virtual void initMoveDrawable(Drawable& d)
 80026de:	4608      	mov	r0, r1
            d.moveRelative(HAL::DISPLAY_WIDTH, 0);
 80026e0:	4902      	ldr	r1, [pc, #8]	; (80026ec <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16initMoveDrawableERNS_8DrawableE+0x10>)
 80026e2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80026e4:	f9b1 1000 	ldrsh.w	r1, [r1]
 80026e8:	2200      	movs	r2, #0
 80026ea:	4718      	bx	r3
 80026ec:	200135a4 	.word	0x200135a4

080026f0 <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvE7executeES5_>:
    virtual void execute(T1 t1)
 80026f0:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80026f2:	68c2      	ldr	r2, [r0, #12]
 80026f4:	6844      	ldr	r4, [r0, #4]
 80026f6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80026f8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80026fa:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80026fe:	07d2      	lsls	r2, r2, #31
 8002700:	bf48      	it	mi
 8002702:	5962      	ldrmi	r2, [r4, r5]
 8002704:	689b      	ldr	r3, [r3, #8]
    }
 8002706:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002708:	bf48      	it	mi
 800270a:	58d3      	ldrmi	r3, [r2, r3]
 800270c:	4718      	bx	r3

0800270e <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800270e:	6843      	ldr	r3, [r0, #4]
 8002710:	b12b      	cbz	r3, 800271e <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvE7isValidEv+0x10>
 8002712:	6883      	ldr	r3, [r0, #8]
 8002714:	b92b      	cbnz	r3, 8002722 <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvE7isValidEv+0x14>
 8002716:	68c0      	ldr	r0, [r0, #12]
 8002718:	f000 0001 	and.w	r0, r0, #1
 800271c:	4770      	bx	lr
 800271e:	4618      	mov	r0, r3
 8002720:	4770      	bx	lr
 8002722:	2001      	movs	r0, #1
    }
 8002724:	4770      	bx	lr

08002726 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002726:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8002728:	68c2      	ldr	r2, [r0, #12]
 800272a:	6841      	ldr	r1, [r0, #4]
 800272c:	1054      	asrs	r4, r2, #1
    virtual void execute()
 800272e:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8002730:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002734:	07d2      	lsls	r2, r2, #31
 8002736:	bf48      	it	mi
 8002738:	590a      	ldrmi	r2, [r1, r4]
 800273a:	689b      	ldr	r3, [r3, #8]
    }
 800273c:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8002740:	bf48      	it	mi
 8002742:	58d3      	ldrmi	r3, [r2, r3]
 8002744:	4718      	bx	r3

08002746 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002746:	6843      	ldr	r3, [r0, #4]
 8002748:	b12b      	cbz	r3, 8002756 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 800274a:	6883      	ldr	r3, [r0, #8]
 800274c:	b92b      	cbnz	r3, 800275a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 800274e:	68c0      	ldr	r0, [r0, #12]
 8002750:	f000 0001 	and.w	r0, r0, #1
 8002754:	4770      	bx	lr
 8002756:	4618      	mov	r0, r3
 8002758:	4770      	bx	lr
 800275a:	2001      	movs	r0, #1
    }
 800275c:	4770      	bx	lr

0800275e <_ZN8touchgfx12NoTransitionD0Ev>:
 800275e:	b510      	push	{r4, lr}
 8002760:	210c      	movs	r1, #12
 8002762:	4604      	mov	r4, r0
 8002764:	f01a fe08 	bl	801d378 <_ZdlPvj>
 8002768:	4620      	mov	r0, r4
 800276a:	bd10      	pop	{r4, pc}

0800276c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800276c:	b510      	push	{r4, lr}
 800276e:	2110      	movs	r1, #16
 8002770:	4604      	mov	r4, r0
 8002772:	f01a fe01 	bl	801d378 <_ZdlPvj>
 8002776:	4620      	mov	r0, r4
 8002778:	bd10      	pop	{r4, pc}

0800277a <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 800277a:	b510      	push	{r4, lr}
 800277c:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8002780:	4604      	mov	r4, r0
 8002782:	f01a fdf9 	bl	801d378 <_ZdlPvj>
 8002786:	4620      	mov	r0, r4
 8002788:	bd10      	pop	{r4, pc}

0800278a <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE13FullSolidRectD0Ev>:
    class FullSolidRect : public Widget
 800278a:	b510      	push	{r4, lr}
 800278c:	2128      	movs	r1, #40	; 0x28
 800278e:	4604      	mov	r4, r0
 8002790:	f01a fdf2 	bl	801d378 <_ZdlPvj>
 8002794:	4620      	mov	r0, r4
 8002796:	bd10      	pop	{r4, pc}

08002798 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EED0Ev>:
class CoverTransition : public Transition
 8002798:	b510      	push	{r4, lr}
 800279a:	214c      	movs	r1, #76	; 0x4c
 800279c:	4604      	mov	r4, r0
 800279e:	f01a fdeb 	bl	801d378 <_ZdlPvj>
 80027a2:	4620      	mov	r0, r4
 80027a4:	bd10      	pop	{r4, pc}

080027a6 <_ZN8touchgfx8CallbackINS_15CoverTransitionILNS_9DirectionE2EEERNS_8DrawableEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80027a6:	b510      	push	{r4, lr}
 80027a8:	2110      	movs	r1, #16
 80027aa:	4604      	mov	r4, r0
 80027ac:	f01a fde4 	bl	801d378 <_ZdlPvj>
 80027b0:	4620      	mov	r0, r4
 80027b2:	bd10      	pop	{r4, pc}

080027b4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED0Ev>:
class SlideTransition : public Transition
 80027b4:	b510      	push	{r4, lr}
 80027b6:	2154      	movs	r1, #84	; 0x54
 80027b8:	4604      	mov	r4, r0
 80027ba:	f01a fddd 	bl	801d378 <_ZdlPvj>
 80027be:	4620      	mov	r0, r4
 80027c0:	bd10      	pop	{r4, pc}

080027c2 <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvED0Ev>:
 80027c2:	b510      	push	{r4, lr}
 80027c4:	2110      	movs	r1, #16
 80027c6:	4604      	mov	r4, r0
 80027c8:	f01a fdd6 	bl	801d378 <_ZdlPvj>
 80027cc:	4620      	mov	r0, r4
 80027ce:	bd10      	pop	{r4, pc}

080027d0 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80027d0:	b508      	push	{r3, lr}
        Application::getInstance()->invalidate();
 80027d2:	f00c fb4f 	bl	800ee74 <_ZN8touchgfx11Application11getInstanceEv>
    }
 80027d6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        Application::getInstance()->invalidate();
 80027da:	f00c bf2b 	b.w	800f634 <_ZN8touchgfx11Application10invalidateEv>

080027de <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 80027de:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80027e2:	b112      	cbz	r2, 80027ea <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 80027e4:	6803      	ldr	r3, [r0, #0]
 80027e6:	695b      	ldr	r3, [r3, #20]
 80027e8:	4718      	bx	r3
    }
 80027ea:	4770      	bx	lr

080027ec <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv>:
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 80027ec:	4b05      	ldr	r3, [pc, #20]	; (8002804 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x18>)
 80027ee:	781b      	ldrb	r3, [r3, #0]
    virtual void tearDown()
 80027f0:	4601      	mov	r1, r0
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 80027f2:	b12b      	cbz	r3, 8002800 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x14>
 80027f4:	6840      	ldr	r0, [r0, #4]
 80027f6:	b118      	cbz	r0, 8002800 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x14>
            screenContainer->remove(snapshot);
 80027f8:	6803      	ldr	r3, [r0, #0]
 80027fa:	310c      	adds	r1, #12
 80027fc:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80027fe:	4718      	bx	r3
    }
 8002800:	4770      	bx	lr
 8002802:	bf00      	nop
 8002804:	200135af 	.word	0x200135af

08002808 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv>:
        if (!HAL::USE_ANIMATION_STORAGE)
 8002808:	4b1f      	ldr	r3, [pc, #124]	; (8002888 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x80>)
 800280a:	781b      	ldrb	r3, [r3, #0]
    virtual void handleTickEvent()
 800280c:	b510      	push	{r4, lr}
 800280e:	4604      	mov	r4, r0
        if (!HAL::USE_ANIMATION_STORAGE)
 8002810:	b913      	cbnz	r3, 8002818 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x10>
            done = true;
 8002812:	2301      	movs	r3, #1
 8002814:	7203      	strb	r3, [r0, #8]
    }
 8002816:	bd10      	pop	{r4, pc}
        animationCounter++;
 8002818:	f890 004d 	ldrb.w	r0, [r0, #77]	; 0x4d
        if (animationCounter <= animationSteps)
 800281c:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
        animationCounter++;
 8002820:	3001      	adds	r0, #1
 8002822:	b2c0      	uxtb	r0, r0
        if (animationCounter <= animationSteps)
 8002824:	4298      	cmp	r0, r3
        animationCounter++;
 8002826:	f884 004d 	strb.w	r0, [r4, #77]	; 0x4d
        if (animationCounter <= animationSteps)
 800282a:	d824      	bhi.n	8002876 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x6e>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800282c:	f9b4 204e 	ldrsh.w	r2, [r4, #78]	; 0x4e
 8002830:	2100      	movs	r1, #0
 8002832:	f00d ff67 	bl	8010704 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
            if (calculatedValue % 2)
 8002836:	f010 0201 	ands.w	r2, r0, #1
 800283a:	b283      	uxth	r3, r0
 800283c:	d021      	beq.n	8002882 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x7a>
                calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800283e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002842:	2800      	cmp	r0, #0
 8002844:	bfd8      	it	le
 8002846:	460a      	movle	r2, r1
 8002848:	4413      	add	r3, r2
 800284a:	f8a4 3050 	strh.w	r3, [r4, #80]	; 0x50
            calculatedValue -= snapshot.getX();
 800284e:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 8002852:	8a23      	ldrh	r3, [r4, #16]
 8002854:	1ac9      	subs	r1, r1, r3
 8002856:	b209      	sxth	r1, r1
 8002858:	f8a4 1050 	strh.w	r1, [r4, #80]	; 0x50
            snapshot.moveRelative(calculatedValue, 0);
 800285c:	f104 000c 	add.w	r0, r4, #12
 8002860:	2200      	movs	r2, #0
 8002862:	f00d fb5b 	bl	800ff1c <_ZN8touchgfx8Drawable12moveRelativeEss>
        screenContainer->forEachChild(&handleTickCallback);
 8002866:	6860      	ldr	r0, [r4, #4]
 8002868:	6803      	ldr	r3, [r0, #0]
 800286a:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 800286e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
    }
 8002870:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        screenContainer->forEachChild(&handleTickCallback);
 8002874:	4718      	bx	r3
            done = true;
 8002876:	2301      	movs	r3, #1
 8002878:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 800287a:	2300      	movs	r3, #0
 800287c:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
            return;
 8002880:	e7c9      	b.n	8002816 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0xe>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002882:	f8a4 0050 	strh.w	r0, [r4, #80]	; 0x50
 8002886:	e7e2      	b.n	800284e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x46>
 8002888:	200135af 	.word	0x200135af

0800288c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800288c:	b510      	push	{r4, lr}
 800288e:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002890:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8002894:	b158      	cbz	r0, 80028ae <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8002896:	6803      	ldr	r3, [r0, #0]
 8002898:	68db      	ldr	r3, [r3, #12]
 800289a:	4798      	blx	r3
 800289c:	b138      	cbz	r0, 80028ae <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 800289e:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 80028a2:	6803      	ldr	r3, [r0, #0]
 80028a4:	689b      	ldr	r3, [r3, #8]
 80028a6:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80028a8:	2300      	movs	r3, #0
 80028aa:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 80028ae:	bd10      	pop	{r4, pc}

080028b0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 80028b0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
        if (HAL::USE_ANIMATION_STORAGE)
 80028b2:	4b0c      	ldr	r3, [pc, #48]	; (80028e4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x34>)
 80028b4:	781b      	ldrb	r3, [r3, #0]
    virtual void init()
 80028b6:	4604      	mov	r4, r0
        if (HAL::USE_ANIMATION_STORAGE)
 80028b8:	b18b      	cbz	r3, 80028de <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x2e>
        : pobject(pObject), pmemfun(pmemfun_1)
 80028ba:	4b0b      	ldr	r3, [pc, #44]	; (80028e8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x38>)
 80028bc:	221c      	movs	r2, #28
 80028be:	e9cd 3000 	strd	r3, r0, [sp]
 80028c2:	2301      	movs	r3, #1
 80028c4:	e9cd 2302 	strd	r2, r3, [sp, #8]
            screenContainer->forEachChild(&initCallback);
 80028c8:	6840      	ldr	r0, [r0, #4]
 80028ca:	6803      	ldr	r3, [r0, #0]
 80028cc:	4669      	mov	r1, sp
 80028ce:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80028d0:	4798      	blx	r3
            screenContainer->add(snapshot);
 80028d2:	6860      	ldr	r0, [r4, #4]
 80028d4:	6803      	ldr	r3, [r0, #0]
 80028d6:	f104 010c 	add.w	r1, r4, #12
 80028da:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80028dc:	4798      	blx	r3
    }
 80028de:	b004      	add	sp, #16
 80028e0:	bd10      	pop	{r4, pc}
 80028e2:	bf00      	nop
 80028e4:	200135af 	.word	0x200135af
 80028e8:	0801f794 	.word	0x0801f794

080028ec <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80028ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80028f0:	461d      	mov	r5, r3
        setX(x);
 80028f2:	6803      	ldr	r3, [r0, #0]
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80028f4:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
        setX(x);
 80028f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80028fa:	4604      	mov	r4, r0
 80028fc:	4616      	mov	r6, r2
        setX(x);
 80028fe:	4798      	blx	r3
        setY(y);
 8002900:	6823      	ldr	r3, [r4, #0]
 8002902:	4631      	mov	r1, r6
 8002904:	4620      	mov	r0, r4
 8002906:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002908:	4798      	blx	r3
        setWidth(width);
 800290a:	6823      	ldr	r3, [r4, #0]
 800290c:	4629      	mov	r1, r5
 800290e:	4620      	mov	r0, r4
 8002910:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002912:	4798      	blx	r3
        setHeight(height);
 8002914:	6823      	ldr	r3, [r4, #0]
 8002916:	4639      	mov	r1, r7
 8002918:	4620      	mov	r0, r4
 800291a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 800291c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setHeight(height);
 8002920:	4718      	bx	r3
	...

08002924 <_ZN23FrontendApplicationBase40gotoScreen4ScreenCoverTransitionEastImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen4ScreenCoverTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoScreen4ScreenCoverTransitionEastImpl()
{
 8002924:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen4View, Screen4Presenter, touchgfx::CoverTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002928:	e9d0 ba54 	ldrd	fp, sl, [r0, #336]	; 0x150
{
 800292c:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800292e:	f8db 0008 	ldr.w	r0, [fp, #8]
 8002932:	6803      	ldr	r3, [r0, #0]
 8002934:	6a1b      	ldr	r3, [r3, #32]
 8002936:	4798      	blx	r3
 8002938:	f241 333b 	movw	r3, #4923	; 0x133b
 800293c:	4298      	cmp	r0, r3
 800293e:	d805      	bhi.n	800294c <_ZN23FrontendApplicationBase40gotoScreen4ScreenCoverTransitionEastImplEv+0x28>
 8002940:	4b58      	ldr	r3, [pc, #352]	; (8002aa4 <_ZN23FrontendApplicationBase40gotoScreen4ScreenCoverTransitionEastImplEv+0x180>)
 8002942:	4a59      	ldr	r2, [pc, #356]	; (8002aa8 <_ZN23FrontendApplicationBase40gotoScreen4ScreenCoverTransitionEastImplEv+0x184>)
 8002944:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002946:	4859      	ldr	r0, [pc, #356]	; (8002aac <_ZN23FrontendApplicationBase40gotoScreen4ScreenCoverTransitionEastImplEv+0x188>)
 8002948:	f01a fd44 	bl	801d3d4 <__assert_func>
 800294c:	f8db 0004 	ldr.w	r0, [fp, #4]
 8002950:	6803      	ldr	r3, [r0, #0]
 8002952:	6a1b      	ldr	r3, [r3, #32]
 8002954:	4798      	blx	r3
 8002956:	280f      	cmp	r0, #15
 8002958:	d803      	bhi.n	8002962 <_ZN23FrontendApplicationBase40gotoScreen4ScreenCoverTransitionEastImplEv+0x3e>
 800295a:	4b55      	ldr	r3, [pc, #340]	; (8002ab0 <_ZN23FrontendApplicationBase40gotoScreen4ScreenCoverTransitionEastImplEv+0x18c>)
 800295c:	4a52      	ldr	r2, [pc, #328]	; (8002aa8 <_ZN23FrontendApplicationBase40gotoScreen4ScreenCoverTransitionEastImplEv+0x184>)
 800295e:	21a4      	movs	r1, #164	; 0xa4
 8002960:	e7f1      	b.n	8002946 <_ZN23FrontendApplicationBase40gotoScreen4ScreenCoverTransitionEastImplEv+0x22>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002962:	f8db 000c 	ldr.w	r0, [fp, #12]
 8002966:	6803      	ldr	r3, [r0, #0]
 8002968:	6a1b      	ldr	r3, [r3, #32]
 800296a:	4798      	blx	r3
 800296c:	284b      	cmp	r0, #75	; 0x4b
 800296e:	d803      	bhi.n	8002978 <_ZN23FrontendApplicationBase40gotoScreen4ScreenCoverTransitionEastImplEv+0x54>
 8002970:	4b50      	ldr	r3, [pc, #320]	; (8002ab4 <_ZN23FrontendApplicationBase40gotoScreen4ScreenCoverTransitionEastImplEv+0x190>)
 8002972:	4a4d      	ldr	r2, [pc, #308]	; (8002aa8 <_ZN23FrontendApplicationBase40gotoScreen4ScreenCoverTransitionEastImplEv+0x184>)
 8002974:	21a5      	movs	r1, #165	; 0xa5
 8002976:	e7e6      	b.n	8002946 <_ZN23FrontendApplicationBase40gotoScreen4ScreenCoverTransitionEastImplEv+0x22>
    if (*currentTrans)
 8002978:	f8df 9150 	ldr.w	r9, [pc, #336]	; 8002acc <_ZN23FrontendApplicationBase40gotoScreen4ScreenCoverTransitionEastImplEv+0x1a8>
    Application::getInstance()->clearAllTimerWidgets();
 800297c:	f00c fa7a 	bl	800ee74 <_ZN8touchgfx11Application11getInstanceEv>
 8002980:	f00c faba 	bl	800eef8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002984:	f8d9 0000 	ldr.w	r0, [r9]
 8002988:	b110      	cbz	r0, 8002990 <_ZN23FrontendApplicationBase40gotoScreen4ScreenCoverTransitionEastImplEv+0x6c>
        (*currentTrans)->tearDown();
 800298a:	6803      	ldr	r3, [r0, #0]
 800298c:	68db      	ldr	r3, [r3, #12]
 800298e:	4798      	blx	r3
    if (*currentTrans)
 8002990:	f8d9 0000 	ldr.w	r0, [r9]
 8002994:	b110      	cbz	r0, 800299c <_ZN23FrontendApplicationBase40gotoScreen4ScreenCoverTransitionEastImplEv+0x78>
        (*currentTrans)->~Transition();
 8002996:	6803      	ldr	r3, [r0, #0]
 8002998:	681b      	ldr	r3, [r3, #0]
 800299a:	4798      	blx	r3
    if (*currentScreen)
 800299c:	f8df 8130 	ldr.w	r8, [pc, #304]	; 8002ad0 <_ZN23FrontendApplicationBase40gotoScreen4ScreenCoverTransitionEastImplEv+0x1ac>
 80029a0:	f8d8 0000 	ldr.w	r0, [r8]
 80029a4:	b110      	cbz	r0, 80029ac <_ZN23FrontendApplicationBase40gotoScreen4ScreenCoverTransitionEastImplEv+0x88>
        (*currentScreen)->tearDownScreen();
 80029a6:	6803      	ldr	r3, [r0, #0]
 80029a8:	695b      	ldr	r3, [r3, #20]
 80029aa:	4798      	blx	r3
    if (*currentPresenter)
 80029ac:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80029b0:	b110      	cbz	r0, 80029b8 <_ZN23FrontendApplicationBase40gotoScreen4ScreenCoverTransitionEastImplEv+0x94>
        (*currentPresenter)->deactivate();
 80029b2:	6803      	ldr	r3, [r0, #0]
 80029b4:	685b      	ldr	r3, [r3, #4]
 80029b6:	4798      	blx	r3
    if (*currentScreen)
 80029b8:	f8d8 0000 	ldr.w	r0, [r8]
 80029bc:	b110      	cbz	r0, 80029c4 <_ZN23FrontendApplicationBase40gotoScreen4ScreenCoverTransitionEastImplEv+0xa0>
        (*currentScreen)->~Screen();
 80029be:	6803      	ldr	r3, [r0, #0]
 80029c0:	681b      	ldr	r3, [r3, #0]
 80029c2:	4798      	blx	r3
    if (*currentPresenter)
 80029c4:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80029c8:	b110      	cbz	r0, 80029d0 <_ZN23FrontendApplicationBase40gotoScreen4ScreenCoverTransitionEastImplEv+0xac>
        (*currentPresenter)->~Presenter();
 80029ca:	6803      	ldr	r3, [r0, #0]
 80029cc:	689b      	ldr	r3, [r3, #8]
 80029ce:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80029d0:	f8db 000c 	ldr.w	r0, [fp, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80029d4:	6803      	ldr	r3, [r0, #0]
 80029d6:	2100      	movs	r1, #0
 80029d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80029da:	4798      	blx	r3
          solid()
 80029dc:	4b36      	ldr	r3, [pc, #216]	; (8002ab8 <_ZN23FrontendApplicationBase40gotoScreen4ScreenCoverTransitionEastImplEv+0x194>)
 80029de:	6003      	str	r3, [r0, #0]
 80029e0:	4b36      	ldr	r3, [pc, #216]	; (8002abc <_ZN23FrontendApplicationBase40gotoScreen4ScreenCoverTransitionEastImplEv+0x198>)
 80029e2:	2220      	movs	r2, #32
 80029e4:	e9c0 3003 	strd	r3, r0, [r0, #12]
 80029e8:	2301      	movs	r3, #1
 80029ea:	e9c0 2305 	strd	r2, r3, [r0, #20]
          animationSteps(transitionSteps),
 80029ee:	2314      	movs	r3, #20
 80029f0:	8383      	strh	r3, [r0, #28]
          solid()
 80029f2:	f44f 7380 	mov.w	r3, #256	; 0x100
 80029f6:	6483      	str	r3, [r0, #72]	; 0x48
    class FullSolidRect : public Widget
 80029f8:	4b31      	ldr	r3, [pc, #196]	; (8002ac0 <_ZN23FrontendApplicationBase40gotoScreen4ScreenCoverTransitionEastImplEv+0x19c>)
 80029fa:	6243      	str	r3, [r0, #36]	; 0x24
            targetValue = -HAL::DISPLAY_WIDTH;
 80029fc:	4b31      	ldr	r3, [pc, #196]	; (8002ac4 <_ZN23FrontendApplicationBase40gotoScreen4ScreenCoverTransitionEastImplEv+0x1a0>)
 80029fe:	881b      	ldrh	r3, [r3, #0]
 8002a00:	425a      	negs	r2, r3
 8002a02:	83c2      	strh	r2, [r0, #30]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8002a04:	4a30      	ldr	r2, [pc, #192]	; (8002ac8 <_ZN23FrontendApplicationBase40gotoScreen4ScreenCoverTransitionEastImplEv+0x1a4>)
        : screenContainer(0), done(false)
 8002a06:	2500      	movs	r5, #0
 8002a08:	f9b2 2000 	ldrsh.w	r2, [r2]
 8002a0c:	6045      	str	r5, [r0, #4]
 8002a0e:	7205      	strb	r5, [r0, #8]
          calculatedValue(0),
 8002a10:	6205      	str	r5, [r0, #32]
          solid()
 8002a12:	e9c0 550a 	strd	r5, r5, [r0, #40]	; 0x28
 8002a16:	e9c0 550c 	strd	r5, r5, [r0, #48]	; 0x30
 8002a1a:	e9c0 550e 	strd	r5, r5, [r0, #56]	; 0x38
 8002a1e:	e9c0 5510 	strd	r5, r5, [r0, #64]	; 0x40
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8002a22:	4629      	mov	r1, r5
 8002a24:	4604      	mov	r4, r0
 8002a26:	9200      	str	r2, [sp, #0]
 8002a28:	b21b      	sxth	r3, r3
 8002a2a:	462a      	mov	r2, r5
 8002a2c:	3024      	adds	r0, #36	; 0x24
 8002a2e:	f7ff ff5d 	bl	80028ec <_ZN8touchgfx8Drawable11setPositionEssss>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002a32:	f8db 0008 	ldr.w	r0, [fp, #8]
 8002a36:	6803      	ldr	r3, [r0, #0]
 8002a38:	4629      	mov	r1, r5
 8002a3a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002a3c:	4798      	blx	r3
 8002a3e:	4606      	mov	r6, r0
 8002a40:	f002 f974 	bl	8004d2c <_ZN11Screen4ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002a44:	f8db 0004 	ldr.w	r0, [fp, #4]
 8002a48:	6803      	ldr	r3, [r0, #0]
 8002a4a:	4629      	mov	r1, r5
 8002a4c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002a4e:	4798      	blx	r3
 8002a50:	4631      	mov	r1, r6
 8002a52:	4605      	mov	r5, r0
 8002a54:	f002 f908 	bl	8004c68 <_ZN16Screen4PresenterC1ER11Screen4View>
    *currentTrans = newTransition;
 8002a58:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002a5c:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8002a60:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002a64:	b1e5      	cbz	r5, 8002aa0 <_ZN23FrontendApplicationBase40gotoScreen4ScreenCoverTransitionEastImplEv+0x17c>
 8002a66:	1d2b      	adds	r3, r5, #4
public:
    Model();
    long modelTickCount = 0;
    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002a68:	f8ca 3008 	str.w	r3, [sl, #8]
    newScreen->setupScreen();
 8002a6c:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8002a6e:	f8c5 a008 	str.w	sl, [r5, #8]
 8002a72:	4630      	mov	r0, r6
 8002a74:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8002a76:	63f5      	str	r5, [r6, #60]	; 0x3c
 8002a78:	4798      	blx	r3
    newPresenter->activate();
 8002a7a:	682b      	ldr	r3, [r5, #0]
 8002a7c:	4628      	mov	r0, r5
 8002a7e:	681b      	ldr	r3, [r3, #0]
 8002a80:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002a82:	4621      	mov	r1, r4
 8002a84:	4630      	mov	r0, r6
 8002a86:	f00d fe37 	bl	80106f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002a8a:	6823      	ldr	r3, [r4, #0]
 8002a8c:	4620      	mov	r0, r4
 8002a8e:	691b      	ldr	r3, [r3, #16]
 8002a90:	4798      	blx	r3
    newTransition->invalidate();
 8002a92:	6823      	ldr	r3, [r4, #0]
 8002a94:	695b      	ldr	r3, [r3, #20]
 8002a96:	4620      	mov	r0, r4
}
 8002a98:	b003      	add	sp, #12
 8002a9a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002a9e:	4718      	bx	r3
    model->bind(newPresenter);
 8002aa0:	462b      	mov	r3, r5
 8002aa2:	e7e1      	b.n	8002a68 <_ZN23FrontendApplicationBase40gotoScreen4ScreenCoverTransitionEastImplEv+0x144>
 8002aa4:	0801ed58 	.word	0x0801ed58
 8002aa8:	0801ede6 	.word	0x0801ede6
 8002aac:	0801eefd 	.word	0x0801eefd
 8002ab0:	0801ef44 	.word	0x0801ef44
 8002ab4:	0801efe7 	.word	0x0801efe7
 8002ab8:	0801f858 	.word	0x0801f858
 8002abc:	0801f7d8 	.word	0x0801f7d8
 8002ac0:	0801f7f0 	.word	0x0801f7f0
 8002ac4:	200135a4 	.word	0x200135a4
 8002ac8:	200135a6 	.word	0x200135a6
 8002acc:	200135f0 	.word	0x200135f0
 8002ad0:	200135ec 	.word	0x200135ec

08002ad4 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002ad4:	4b04      	ldr	r3, [pc, #16]	; (8002ae8 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8002ad6:	681b      	ldr	r3, [r3, #0]
 8002ad8:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8002adc:	b10a      	cbz	r2, 8002ae2 <_ZN8touchgfx3HAL3lcdEv+0xe>
 8002ade:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002ae0:	b900      	cbnz	r0, 8002ae4 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 8002ae2:	6898      	ldr	r0, [r3, #8]
    }
 8002ae4:	4770      	bx	lr
 8002ae6:	bf00      	nop
 8002ae8:	200135b0 	.word	0x200135b0

08002aec <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8002aec:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002aee:	4604      	mov	r4, r0
        animationCounter++;
 8002af0:	7f40      	ldrb	r0, [r0, #29]
        if (animationCounter <= animationSteps)
 8002af2:	7f23      	ldrb	r3, [r4, #28]
        animationCounter++;
 8002af4:	3001      	adds	r0, #1
 8002af6:	b2c0      	uxtb	r0, r0
        if (animationCounter <= animationSteps)
 8002af8:	4298      	cmp	r0, r3
    virtual void handleTickEvent()
 8002afa:	b089      	sub	sp, #36	; 0x24
        animationCounter++;
 8002afc:	7760      	strb	r0, [r4, #29]
        if (animationCounter <= animationSteps)
 8002afe:	d848      	bhi.n	8002b92 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0xa6>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002b00:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8002b04:	2100      	movs	r1, #0
 8002b06:	f00d fdfd 	bl	8010704 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
            if (calculatedValue % 2)
 8002b0a:	f010 0201 	ands.w	r2, r0, #1
 8002b0e:	b283      	uxth	r3, r0
 8002b10:	d045      	beq.n	8002b9e <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0xb2>
                calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8002b12:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002b16:	2800      	cmp	r0, #0
 8002b18:	bfd8      	it	le
 8002b1a:	460a      	movle	r2, r1
 8002b1c:	4413      	add	r3, r2
 8002b1e:	8423      	strh	r3, [r4, #32]
        calculatedValue -= movedToPos;
 8002b20:	f9b4 2020 	ldrsh.w	r2, [r4, #32]
 8002b24:	8c63      	ldrh	r3, [r4, #34]	; 0x22
        movedToPos += calculatedValue;
 8002b26:	8462      	strh	r2, [r4, #34]	; 0x22
        calculatedValue -= movedToPos;
 8002b28:	1ad3      	subs	r3, r2, r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8002b2a:	7f62      	ldrb	r2, [r4, #29]
        calculatedValue -= movedToPos;
 8002b2c:	b29b      	uxth	r3, r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8002b2e:	2a01      	cmp	r2, #1
        calculatedValue -= movedToPos;
 8002b30:	8423      	strh	r3, [r4, #32]
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8002b32:	d125      	bne.n	8002b80 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>
 8002b34:	4a1b      	ldr	r2, [pc, #108]	; (8002ba4 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0xb8>)
 8002b36:	7812      	ldrb	r2, [r2, #0]
 8002b38:	b312      	cbz	r2, 8002b80 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>
                rect.width = HAL::DISPLAY_WIDTH + calculatedValue;
 8002b3a:	4f1b      	ldr	r7, [pc, #108]	; (8002ba8 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbc>)
                rect.height = HAL::DISPLAY_HEIGHT;
 8002b3c:	4e1b      	ldr	r6, [pc, #108]	; (8002bac <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc0>)
                rect.width = HAL::DISPLAY_WIDTH + calculatedValue;
 8002b3e:	883a      	ldrh	r2, [r7, #0]
 8002b40:	4413      	add	r3, r2
 8002b42:	f8ad 3014 	strh.w	r3, [sp, #20]
                rect.height = HAL::DISPLAY_HEIGHT;
 8002b46:	8833      	ldrh	r3, [r6, #0]
 8002b48:	f8ad 3016 	strh.w	r3, [sp, #22]
        return instance;
 8002b4c:	4b18      	ldr	r3, [pc, #96]	; (8002bb0 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc4>)
        : x(0), y(0), width(0), height(0)
 8002b4e:	2500      	movs	r5, #0
 8002b50:	6818      	ldr	r0, [r3, #0]
 8002b52:	9504      	str	r5, [sp, #16]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 8002b54:	6803      	ldr	r3, [r0, #0]
 8002b56:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b58:	4798      	blx	r3
            source.width = HAL::DISPLAY_WIDTH;
 8002b5a:	883b      	ldrh	r3, [r7, #0]
 8002b5c:	f8ad 301c 	strh.w	r3, [sp, #28]
            source.height = HAL::DISPLAY_HEIGHT;
 8002b60:	8833      	ldrh	r3, [r6, #0]
 8002b62:	9506      	str	r5, [sp, #24]
 8002b64:	f8ad 301e 	strh.w	r3, [sp, #30]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 8002b68:	9003      	str	r0, [sp, #12]
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
 8002b6a:	f7ff ffb3 	bl	8002ad4 <_ZN8touchgfx3HAL3lcdEv>
 8002b6e:	22ff      	movs	r2, #255	; 0xff
 8002b70:	6803      	ldr	r3, [r0, #0]
 8002b72:	9200      	str	r2, [sp, #0]
 8002b74:	9501      	str	r5, [sp, #4]
 8002b76:	68dd      	ldr	r5, [r3, #12]
 8002b78:	9903      	ldr	r1, [sp, #12]
 8002b7a:	ab04      	add	r3, sp, #16
 8002b7c:	aa06      	add	r2, sp, #24
 8002b7e:	47a8      	blx	r5
        screenContainer->forEachChild(&handleTickCallback);
 8002b80:	6860      	ldr	r0, [r4, #4]
 8002b82:	6803      	ldr	r3, [r0, #0]
 8002b84:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8002b86:	f104 010c 	add.w	r1, r4, #12
    }
 8002b8a:	b009      	add	sp, #36	; 0x24
 8002b8c:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
        screenContainer->forEachChild(&handleTickCallback);
 8002b90:	4718      	bx	r3
            done = true;
 8002b92:	2301      	movs	r3, #1
 8002b94:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8002b96:	2300      	movs	r3, #0
 8002b98:	7763      	strb	r3, [r4, #29]
    }
 8002b9a:	b009      	add	sp, #36	; 0x24
 8002b9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002b9e:	8420      	strh	r0, [r4, #32]
 8002ba0:	e7be      	b.n	8002b20 <_ZN8touchgfx15CoverTransitionILNS_9DirectionE2EE15handleTickEventEv+0x34>
 8002ba2:	bf00      	nop
 8002ba4:	200135ae 	.word	0x200135ae
 8002ba8:	200135a4 	.word	0x200135a4
 8002bac:	200135a6 	.word	0x200135a6
 8002bb0:	200135b0 	.word	0x200135b0

08002bb4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002bb4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002bb6:	4604      	mov	r4, r0
 8002bb8:	4617      	mov	r7, r2
 8002bba:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8002bbc:	f00c f9b6 	bl	800ef2c <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002bc0:	4b0e      	ldr	r3, [pc, #56]	; (8002bfc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>)
 8002bc2:	601c      	str	r4, [r3, #0]
      model(m)
 8002bc4:	4b0e      	ldr	r3, [pc, #56]	; (8002c00 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x4c>)
 8002bc6:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8002bc8:	4b0e      	ldr	r3, [pc, #56]	; (8002c04 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
        : currentPresenter(0),
 8002bca:	2500      	movs	r5, #0
 8002bcc:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
 8002bd0:	4b0d      	ldr	r3, [pc, #52]	; (8002c08 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8002bd2:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 8002bd6:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8002bd8:	6803      	ldr	r3, [r0, #0]
 8002bda:	2101      	movs	r1, #1
 8002bdc:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8002bde:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
      model(m)
 8002be2:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8002be6:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8002be8:	4628      	mov	r0, r5
 8002bea:	f001 ff3b 	bl	8004a64 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002bee:	f7ff ff71 	bl	8002ad4 <_ZN8touchgfx3HAL3lcdEv>
 8002bf2:	f013 fca6 	bl	8016542 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8002bf6:	4620      	mov	r0, r4
 8002bf8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002bfa:	bf00      	nop
 8002bfc:	200135fc 	.word	0x200135fc
 8002c00:	0801f724 	.word	0x0801f724
 8002c04:	0801f70c 	.word	0x0801f70c
 8002c08:	200135b0 	.word	0x200135b0

08002c0c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002c0c:	4b06      	ldr	r3, [pc, #24]	; (8002c28 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 8002c0e:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002c12:	2300      	movs	r3, #0
 8002c14:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8002c18:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002c1c:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002c20:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002c24:	4770      	bx	lr
 8002c26:	bf00      	nop
 8002c28:	08002cf9 	.word	0x08002cf9

08002c2c <_ZN23FrontendApplicationBase36gotoScreen1ScreenSlideTransitionEastEv>:
 8002c2c:	4b06      	ldr	r3, [pc, #24]	; (8002c48 <_ZN23FrontendApplicationBase36gotoScreen1ScreenSlideTransitionEastEv+0x1c>)
 8002c2e:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002c32:	2300      	movs	r3, #0
 8002c34:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8002c38:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002c3c:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002c40:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002c44:	4770      	bx	lr
 8002c46:	bf00      	nop
 8002c48:	080033c1 	.word	0x080033c1

08002c4c <_ZN23FrontendApplicationBase36gotoScreen3ScreenSlideTransitionEastEv>:
 8002c4c:	4b06      	ldr	r3, [pc, #24]	; (8002c68 <_ZN23FrontendApplicationBase36gotoScreen3ScreenSlideTransitionEastEv+0x1c>)
 8002c4e:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002c52:	2300      	movs	r3, #0
 8002c54:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8002c58:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002c5c:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002c60:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002c64:	4770      	bx	lr
 8002c66:	bf00      	nop
 8002c68:	08003285 	.word	0x08003285

08002c6c <_ZN23FrontendApplicationBase36gotoScreen4ScreenCoverTransitionEastEv>:
 8002c6c:	4b06      	ldr	r3, [pc, #24]	; (8002c88 <_ZN23FrontendApplicationBase36gotoScreen4ScreenCoverTransitionEastEv+0x1c>)
 8002c6e:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002c72:	2300      	movs	r3, #0
 8002c74:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8002c78:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002c7c:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002c80:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002c84:	4770      	bx	lr
 8002c86:	bf00      	nop
 8002c88:	08002925 	.word	0x08002925

08002c8c <_ZN23FrontendApplicationBase36gotoScreen4ScreenSlideTransitionEastEv>:
 8002c8c:	4b06      	ldr	r3, [pc, #24]	; (8002ca8 <_ZN23FrontendApplicationBase36gotoScreen4ScreenSlideTransitionEastEv+0x1c>)
 8002c8e:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002c92:	2300      	movs	r3, #0
 8002c94:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c

void FrontendApplicationBase::gotoScreen4ScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen4ScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002c98:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002c9c:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002ca0:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002ca4:	4770      	bx	lr
 8002ca6:	bf00      	nop
 8002ca8:	08003145 	.word	0x08003145

08002cac <_ZN23FrontendApplicationBase36gotoScreen5ScreenSlideTransitionEastEv>:
 8002cac:	4b06      	ldr	r3, [pc, #24]	; (8002cc8 <_ZN23FrontendApplicationBase36gotoScreen5ScreenSlideTransitionEastEv+0x1c>)
 8002cae:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002cb2:	2300      	movs	r3, #0
 8002cb4:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen5

void FrontendApplicationBase::gotoScreen5ScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen5ScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002cb8:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002cbc:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002cc0:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002cc4:	4770      	bx	lr
 8002cc6:	bf00      	nop
 8002cc8:	08003005 	.word	0x08003005

08002ccc <_ZN23FrontendApplicationBase36gotoScreen6ScreenSlideTransitionEastEv>:
 8002ccc:	4b06      	ldr	r3, [pc, #24]	; (8002ce8 <_ZN23FrontendApplicationBase36gotoScreen6ScreenSlideTransitionEastEv+0x1c>)
 8002cce:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002cd2:	2300      	movs	r3, #0
 8002cd4:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen6

void FrontendApplicationBase::gotoScreen6ScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen6ScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002cd8:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002cdc:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002ce0:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002ce4:	4770      	bx	lr
 8002ce6:	bf00      	nop
 8002ce8:	08002ec9 	.word	0x08002ec9

08002cec <_ZN8touchgfx17AbstractPartition2atI11Screen1ViewEERT_t>:
 8002cec:	6803      	ldr	r3, [r0, #0]
 8002cee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002cf0:	4718      	bx	r3

08002cf2 <_ZN8touchgfx17AbstractPartition2atI16Screen1PresenterEERT_t>:
 8002cf2:	6803      	ldr	r3, [r0, #0]
 8002cf4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002cf6:	4718      	bx	r3

08002cf8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
{
 8002cf8:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002cfc:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 8002d00:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002d02:	68a8      	ldr	r0, [r5, #8]
 8002d04:	6803      	ldr	r3, [r0, #0]
 8002d06:	6a1b      	ldr	r3, [r3, #32]
 8002d08:	4798      	blx	r3
 8002d0a:	f5b0 7f86 	cmp.w	r0, #268	; 0x10c
 8002d0e:	d205      	bcs.n	8002d1c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>
 8002d10:	4b44      	ldr	r3, [pc, #272]	; (8002e24 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12c>)
 8002d12:	4a45      	ldr	r2, [pc, #276]	; (8002e28 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 8002d14:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002d16:	4845      	ldr	r0, [pc, #276]	; (8002e2c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002d18:	f01a fb5c 	bl	801d3d4 <__assert_func>
 8002d1c:	6868      	ldr	r0, [r5, #4]
 8002d1e:	6803      	ldr	r3, [r0, #0]
 8002d20:	6a1b      	ldr	r3, [r3, #32]
 8002d22:	4798      	blx	r3
 8002d24:	280f      	cmp	r0, #15
 8002d26:	d803      	bhi.n	8002d30 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x38>
 8002d28:	4b41      	ldr	r3, [pc, #260]	; (8002e30 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 8002d2a:	4a3f      	ldr	r2, [pc, #252]	; (8002e28 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 8002d2c:	21a4      	movs	r1, #164	; 0xa4
 8002d2e:	e7f2      	b.n	8002d16 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002d30:	68e8      	ldr	r0, [r5, #12]
 8002d32:	6803      	ldr	r3, [r0, #0]
 8002d34:	6a1b      	ldr	r3, [r3, #32]
 8002d36:	4798      	blx	r3
 8002d38:	280b      	cmp	r0, #11
 8002d3a:	d803      	bhi.n	8002d44 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4c>
 8002d3c:	4b3d      	ldr	r3, [pc, #244]	; (8002e34 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 8002d3e:	4a3a      	ldr	r2, [pc, #232]	; (8002e28 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 8002d40:	21a5      	movs	r1, #165	; 0xa5
 8002d42:	e7e8      	b.n	8002d16 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 8002d44:	f8df 90f4 	ldr.w	r9, [pc, #244]	; 8002e3c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>
    Application::getInstance()->clearAllTimerWidgets();
 8002d48:	f00c f894 	bl	800ee74 <_ZN8touchgfx11Application11getInstanceEv>
 8002d4c:	f00c f8d4 	bl	800eef8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002d50:	f8d9 0000 	ldr.w	r0, [r9]
 8002d54:	b110      	cbz	r0, 8002d5c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 8002d56:	6803      	ldr	r3, [r0, #0]
 8002d58:	68db      	ldr	r3, [r3, #12]
 8002d5a:	4798      	blx	r3
    if (*currentTrans)
 8002d5c:	f8d9 0000 	ldr.w	r0, [r9]
 8002d60:	b110      	cbz	r0, 8002d68 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8002d62:	6803      	ldr	r3, [r0, #0]
 8002d64:	681b      	ldr	r3, [r3, #0]
 8002d66:	4798      	blx	r3
    if (*currentScreen)
 8002d68:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 8002e40 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
 8002d6c:	f8d8 0000 	ldr.w	r0, [r8]
 8002d70:	b110      	cbz	r0, 8002d78 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8002d72:	6803      	ldr	r3, [r0, #0]
 8002d74:	695b      	ldr	r3, [r3, #20]
 8002d76:	4798      	blx	r3
    if (*currentPresenter)
 8002d78:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002d7c:	b110      	cbz	r0, 8002d84 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8002d7e:	6803      	ldr	r3, [r0, #0]
 8002d80:	685b      	ldr	r3, [r3, #4]
 8002d82:	4798      	blx	r3
    if (*currentScreen)
 8002d84:	f8d8 0000 	ldr.w	r0, [r8]
 8002d88:	b110      	cbz	r0, 8002d90 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 8002d8a:	6803      	ldr	r3, [r0, #0]
 8002d8c:	681b      	ldr	r3, [r3, #0]
 8002d8e:	4798      	blx	r3
    if (*currentPresenter)
 8002d90:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002d94:	b110      	cbz	r0, 8002d9c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8002d96:	6803      	ldr	r3, [r0, #0]
 8002d98:	689b      	ldr	r3, [r3, #8]
 8002d9a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002d9c:	68e8      	ldr	r0, [r5, #12]
 8002d9e:	6803      	ldr	r3, [r0, #0]
 8002da0:	2100      	movs	r1, #0
 8002da2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002da4:	4798      	blx	r3
 8002da6:	f04f 0b00 	mov.w	fp, #0
 8002daa:	4b23      	ldr	r3, [pc, #140]	; (8002e38 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 8002dac:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002dae:	4659      	mov	r1, fp
 8002db0:	4604      	mov	r4, r0
 8002db2:	f8c0 b004 	str.w	fp, [r0, #4]
 8002db6:	f880 b008 	strb.w	fp, [r0, #8]
 8002dba:	68a8      	ldr	r0, [r5, #8]
 8002dbc:	f7ff ff96 	bl	8002cec <_ZN8touchgfx17AbstractPartition2atI11Screen1ViewEERT_t>
 8002dc0:	4606      	mov	r6, r0
 8002dc2:	f001 ff03 	bl	8004bcc <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002dc6:	6868      	ldr	r0, [r5, #4]
 8002dc8:	4659      	mov	r1, fp
 8002dca:	f7ff ff92 	bl	8002cf2 <_ZN8touchgfx17AbstractPartition2atI16Screen1PresenterEERT_t>
 8002dce:	4631      	mov	r1, r6
 8002dd0:	4605      	mov	r5, r0
 8002dd2:	f001 fedb 	bl	8004b8c <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 8002dd6:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002dda:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8002dde:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002de2:	b1e5      	cbz	r5, 8002e1e <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x126>
 8002de4:	1d2b      	adds	r3, r5, #4
 8002de6:	f8ca 3008 	str.w	r3, [sl, #8]
    newScreen->setupScreen();
 8002dea:	6833      	ldr	r3, [r6, #0]
 8002dec:	f8c5 a008 	str.w	sl, [r5, #8]
 8002df0:	4630      	mov	r0, r6
 8002df2:	68db      	ldr	r3, [r3, #12]
 8002df4:	63f5      	str	r5, [r6, #60]	; 0x3c
 8002df6:	4798      	blx	r3
    newPresenter->activate();
 8002df8:	682b      	ldr	r3, [r5, #0]
 8002dfa:	4628      	mov	r0, r5
 8002dfc:	681b      	ldr	r3, [r3, #0]
 8002dfe:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002e00:	4621      	mov	r1, r4
 8002e02:	4630      	mov	r0, r6
 8002e04:	f00d fc78 	bl	80106f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002e08:	6823      	ldr	r3, [r4, #0]
 8002e0a:	4620      	mov	r0, r4
 8002e0c:	691b      	ldr	r3, [r3, #16]
 8002e0e:	4798      	blx	r3
    newTransition->invalidate();
 8002e10:	6823      	ldr	r3, [r4, #0]
 8002e12:	695b      	ldr	r3, [r3, #20]
 8002e14:	4620      	mov	r0, r4
}
 8002e16:	b001      	add	sp, #4
 8002e18:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002e1c:	4718      	bx	r3
    model->bind(newPresenter);
 8002e1e:	462b      	mov	r3, r5
 8002e20:	e7e1      	b.n	8002de6 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xee>
 8002e22:	bf00      	nop
 8002e24:	0801ed58 	.word	0x0801ed58
 8002e28:	0801f08a 	.word	0x0801f08a
 8002e2c:	0801eefd 	.word	0x0801eefd
 8002e30:	0801ef44 	.word	0x0801ef44
 8002e34:	0801efe7 	.word	0x0801efe7
 8002e38:	0801f770 	.word	0x0801f770
 8002e3c:	200135f0 	.word	0x200135f0
 8002e40:	200135ec 	.word	0x200135ec

08002e44 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>:
 8002e44:	6803      	ldr	r3, [r0, #0]
 8002e46:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002e48:	4718      	bx	r3
	...

08002e4c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>:
    SlideTransition(const uint8_t transitionSteps = 20)
 8002e4c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
          calculatedValue(0)
 8002e4e:	4605      	mov	r5, r0
 8002e50:	2600      	movs	r6, #0
 8002e52:	4b18      	ldr	r3, [pc, #96]	; (8002eb4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x68>)
 8002e54:	6046      	str	r6, [r0, #4]
 8002e56:	7206      	strb	r6, [r0, #8]
 8002e58:	f845 3b0c 	str.w	r3, [r5], #12
    SlideTransition(const uint8_t transitionSteps = 20)
 8002e5c:	4604      	mov	r4, r0
          snapshot(),
 8002e5e:	4628      	mov	r0, r5
    SlideTransition(const uint8_t transitionSteps = 20)
 8002e60:	460f      	mov	r7, r1
          snapshot(),
 8002e62:	f009 f9cd 	bl	800c200 <_ZN8touchgfx14SnapshotWidgetC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002e66:	4b14      	ldr	r3, [pc, #80]	; (8002eb8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x6c>)
          snapshotPtr(&snapshot),
 8002e68:	63a5      	str	r5, [r4, #56]	; 0x38
 8002e6a:	e9c4 340f 	strd	r3, r4, [r4, #60]	; 0x3c
 8002e6e:	2220      	movs	r2, #32
 8002e70:	2301      	movs	r3, #1
 8002e72:	e9c4 2311 	strd	r2, r3, [r4, #68]	; 0x44
        if (HAL::USE_ANIMATION_STORAGE)
 8002e76:	4b11      	ldr	r3, [pc, #68]	; (8002ebc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x70>)
          animationSteps(transitionSteps),
 8002e78:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
        if (HAL::USE_ANIMATION_STORAGE)
 8002e7c:	781b      	ldrb	r3, [r3, #0]
          animationCounter(0),
 8002e7e:	f884 604d 	strb.w	r6, [r4, #77]	; 0x4d
          calculatedValue(0)
 8002e82:	f8a4 6050 	strh.w	r6, [r4, #80]	; 0x50
        if (HAL::USE_ANIMATION_STORAGE)
 8002e86:	b193      	cbz	r3, 8002eae <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x62>
            snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8002e88:	4b0d      	ldr	r3, [pc, #52]	; (8002ec0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x74>)
 8002e8a:	4f0e      	ldr	r7, [pc, #56]	; (8002ec4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x78>)
 8002e8c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8002e90:	9300      	str	r3, [sp, #0]
 8002e92:	f9b7 3000 	ldrsh.w	r3, [r7]
 8002e96:	4632      	mov	r2, r6
 8002e98:	4631      	mov	r1, r6
 8002e9a:	4628      	mov	r0, r5
 8002e9c:	f7ff fd26 	bl	80028ec <_ZN8touchgfx8Drawable11setPositionEssss>
            snapshot.makeSnapshot();
 8002ea0:	4628      	mov	r0, r5
 8002ea2:	f009 f928 	bl	800c0f6 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
                targetValue = -HAL::DISPLAY_WIDTH;
 8002ea6:	883b      	ldrh	r3, [r7, #0]
 8002ea8:	425b      	negs	r3, r3
 8002eaa:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
    }
 8002eae:	4620      	mov	r0, r4
 8002eb0:	b003      	add	sp, #12
 8002eb2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002eb4:	0801f7ac 	.word	0x0801f7ac
 8002eb8:	0801f794 	.word	0x0801f794
 8002ebc:	200135af 	.word	0x200135af
 8002ec0:	200135a6 	.word	0x200135a6
 8002ec4:	200135a4 	.word	0x200135a4

08002ec8 <_ZN23FrontendApplicationBase40gotoScreen6ScreenSlideTransitionEastImplEv>:

void FrontendApplicationBase::gotoScreen6ScreenSlideTransitionEastImpl()
{
 8002ec8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Screen6View, Screen6Presenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002ecc:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 8002ed0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002ed2:	68a0      	ldr	r0, [r4, #8]
 8002ed4:	6803      	ldr	r3, [r0, #0]
 8002ed6:	6a1b      	ldr	r3, [r3, #32]
 8002ed8:	4798      	blx	r3
 8002eda:	f5b0 7f92 	cmp.w	r0, #292	; 0x124
 8002ede:	d205      	bcs.n	8002eec <_ZN23FrontendApplicationBase40gotoScreen6ScreenSlideTransitionEastImplEv+0x24>
 8002ee0:	4b41      	ldr	r3, [pc, #260]	; (8002fe8 <_ZN23FrontendApplicationBase40gotoScreen6ScreenSlideTransitionEastImplEv+0x120>)
 8002ee2:	4a42      	ldr	r2, [pc, #264]	; (8002fec <_ZN23FrontendApplicationBase40gotoScreen6ScreenSlideTransitionEastImplEv+0x124>)
 8002ee4:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002ee6:	4842      	ldr	r0, [pc, #264]	; (8002ff0 <_ZN23FrontendApplicationBase40gotoScreen6ScreenSlideTransitionEastImplEv+0x128>)
 8002ee8:	f01a fa74 	bl	801d3d4 <__assert_func>
 8002eec:	6860      	ldr	r0, [r4, #4]
 8002eee:	6803      	ldr	r3, [r0, #0]
 8002ef0:	6a1b      	ldr	r3, [r3, #32]
 8002ef2:	4798      	blx	r3
 8002ef4:	280f      	cmp	r0, #15
 8002ef6:	d803      	bhi.n	8002f00 <_ZN23FrontendApplicationBase40gotoScreen6ScreenSlideTransitionEastImplEv+0x38>
 8002ef8:	4b3e      	ldr	r3, [pc, #248]	; (8002ff4 <_ZN23FrontendApplicationBase40gotoScreen6ScreenSlideTransitionEastImplEv+0x12c>)
 8002efa:	4a3c      	ldr	r2, [pc, #240]	; (8002fec <_ZN23FrontendApplicationBase40gotoScreen6ScreenSlideTransitionEastImplEv+0x124>)
 8002efc:	21a4      	movs	r1, #164	; 0xa4
 8002efe:	e7f2      	b.n	8002ee6 <_ZN23FrontendApplicationBase40gotoScreen6ScreenSlideTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002f00:	68e0      	ldr	r0, [r4, #12]
 8002f02:	6803      	ldr	r3, [r0, #0]
 8002f04:	6a1b      	ldr	r3, [r3, #32]
 8002f06:	4798      	blx	r3
 8002f08:	2853      	cmp	r0, #83	; 0x53
 8002f0a:	d803      	bhi.n	8002f14 <_ZN23FrontendApplicationBase40gotoScreen6ScreenSlideTransitionEastImplEv+0x4c>
 8002f0c:	4b3a      	ldr	r3, [pc, #232]	; (8002ff8 <_ZN23FrontendApplicationBase40gotoScreen6ScreenSlideTransitionEastImplEv+0x130>)
 8002f0e:	4a37      	ldr	r2, [pc, #220]	; (8002fec <_ZN23FrontendApplicationBase40gotoScreen6ScreenSlideTransitionEastImplEv+0x124>)
 8002f10:	21a5      	movs	r1, #165	; 0xa5
 8002f12:	e7e8      	b.n	8002ee6 <_ZN23FrontendApplicationBase40gotoScreen6ScreenSlideTransitionEastImplEv+0x1e>
    if (*currentTrans)
 8002f14:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8002ffc <_ZN23FrontendApplicationBase40gotoScreen6ScreenSlideTransitionEastImplEv+0x134>
    Application::getInstance()->clearAllTimerWidgets();
 8002f18:	f00b ffac 	bl	800ee74 <_ZN8touchgfx11Application11getInstanceEv>
 8002f1c:	f00b ffec 	bl	800eef8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002f20:	f8d9 0000 	ldr.w	r0, [r9]
 8002f24:	b110      	cbz	r0, 8002f2c <_ZN23FrontendApplicationBase40gotoScreen6ScreenSlideTransitionEastImplEv+0x64>
        (*currentTrans)->tearDown();
 8002f26:	6803      	ldr	r3, [r0, #0]
 8002f28:	68db      	ldr	r3, [r3, #12]
 8002f2a:	4798      	blx	r3
    if (*currentTrans)
 8002f2c:	f8d9 0000 	ldr.w	r0, [r9]
 8002f30:	b110      	cbz	r0, 8002f38 <_ZN23FrontendApplicationBase40gotoScreen6ScreenSlideTransitionEastImplEv+0x70>
        (*currentTrans)->~Transition();
 8002f32:	6803      	ldr	r3, [r0, #0]
 8002f34:	681b      	ldr	r3, [r3, #0]
 8002f36:	4798      	blx	r3
    if (*currentScreen)
 8002f38:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8003000 <_ZN23FrontendApplicationBase40gotoScreen6ScreenSlideTransitionEastImplEv+0x138>
 8002f3c:	f8d8 0000 	ldr.w	r0, [r8]
 8002f40:	b110      	cbz	r0, 8002f48 <_ZN23FrontendApplicationBase40gotoScreen6ScreenSlideTransitionEastImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8002f42:	6803      	ldr	r3, [r0, #0]
 8002f44:	695b      	ldr	r3, [r3, #20]
 8002f46:	4798      	blx	r3
    if (*currentPresenter)
 8002f48:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002f4c:	b110      	cbz	r0, 8002f54 <_ZN23FrontendApplicationBase40gotoScreen6ScreenSlideTransitionEastImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8002f4e:	6803      	ldr	r3, [r0, #0]
 8002f50:	685b      	ldr	r3, [r3, #4]
 8002f52:	4798      	blx	r3
    if (*currentScreen)
 8002f54:	f8d8 0000 	ldr.w	r0, [r8]
 8002f58:	b110      	cbz	r0, 8002f60 <_ZN23FrontendApplicationBase40gotoScreen6ScreenSlideTransitionEastImplEv+0x98>
        (*currentScreen)->~Screen();
 8002f5a:	6803      	ldr	r3, [r0, #0]
 8002f5c:	681b      	ldr	r3, [r3, #0]
 8002f5e:	4798      	blx	r3
    if (*currentPresenter)
 8002f60:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002f64:	b110      	cbz	r0, 8002f6c <_ZN23FrontendApplicationBase40gotoScreen6ScreenSlideTransitionEastImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8002f66:	6803      	ldr	r3, [r0, #0]
 8002f68:	689b      	ldr	r3, [r3, #8]
 8002f6a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002f6c:	68e0      	ldr	r0, [r4, #12]
 8002f6e:	2100      	movs	r1, #0
 8002f70:	f7ff ff68 	bl	8002e44 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 8002f74:	2114      	movs	r1, #20
 8002f76:	4605      	mov	r5, r0
 8002f78:	f7ff ff68 	bl	8002e4c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002f7c:	68a0      	ldr	r0, [r4, #8]
 8002f7e:	6803      	ldr	r3, [r0, #0]
 8002f80:	2100      	movs	r1, #0
 8002f82:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002f84:	4798      	blx	r3
 8002f86:	4606      	mov	r6, r0
 8002f88:	f003 f914 	bl	80061b4 <_ZN11Screen6ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002f8c:	6860      	ldr	r0, [r4, #4]
 8002f8e:	6803      	ldr	r3, [r0, #0]
 8002f90:	2100      	movs	r1, #0
 8002f92:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002f94:	4798      	blx	r3
 8002f96:	4631      	mov	r1, r6
 8002f98:	4604      	mov	r4, r0
 8002f9a:	f003 f8f1 	bl	8006180 <_ZN16Screen6PresenterC1ER11Screen6View>
    *currentTrans = newTransition;
 8002f9e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8002fa2:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8002fa6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002faa:	b1dc      	cbz	r4, 8002fe4 <_ZN23FrontendApplicationBase40gotoScreen6ScreenSlideTransitionEastImplEv+0x11c>
 8002fac:	1d23      	adds	r3, r4, #4
 8002fae:	f8ca 3008 	str.w	r3, [sl, #8]
    newScreen->setupScreen();
 8002fb2:	6833      	ldr	r3, [r6, #0]
 8002fb4:	f8c4 a008 	str.w	sl, [r4, #8]
 8002fb8:	4630      	mov	r0, r6
 8002fba:	68db      	ldr	r3, [r3, #12]
 8002fbc:	63f4      	str	r4, [r6, #60]	; 0x3c
 8002fbe:	4798      	blx	r3
    newPresenter->activate();
 8002fc0:	6823      	ldr	r3, [r4, #0]
 8002fc2:	4620      	mov	r0, r4
 8002fc4:	681b      	ldr	r3, [r3, #0]
 8002fc6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002fc8:	4629      	mov	r1, r5
 8002fca:	4630      	mov	r0, r6
 8002fcc:	f00d fb94 	bl	80106f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002fd0:	682b      	ldr	r3, [r5, #0]
 8002fd2:	4628      	mov	r0, r5
 8002fd4:	691b      	ldr	r3, [r3, #16]
 8002fd6:	4798      	blx	r3
    newTransition->invalidate();
 8002fd8:	682b      	ldr	r3, [r5, #0]
 8002fda:	4628      	mov	r0, r5
 8002fdc:	695b      	ldr	r3, [r3, #20]
}
 8002fde:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002fe2:	4718      	bx	r3
    model->bind(newPresenter);
 8002fe4:	4623      	mov	r3, r4
 8002fe6:	e7e2      	b.n	8002fae <_ZN23FrontendApplicationBase40gotoScreen6ScreenSlideTransitionEastImplEv+0xe6>
 8002fe8:	0801ed58 	.word	0x0801ed58
 8002fec:	0801f18e 	.word	0x0801f18e
 8002ff0:	0801eefd 	.word	0x0801eefd
 8002ff4:	0801ef44 	.word	0x0801ef44
 8002ff8:	0801efe7 	.word	0x0801efe7
 8002ffc:	200135f0 	.word	0x200135f0
 8003000:	200135ec 	.word	0x200135ec

08003004 <_ZN23FrontendApplicationBase40gotoScreen5ScreenSlideTransitionEastImplEv>:
{
 8003004:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Screen5View, Screen5Presenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003008:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 800300c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800300e:	68a0      	ldr	r0, [r4, #8]
 8003010:	6803      	ldr	r3, [r0, #0]
 8003012:	6a1b      	ldr	r3, [r3, #32]
 8003014:	4798      	blx	r3
 8003016:	f640 3333 	movw	r3, #2867	; 0xb33
 800301a:	4298      	cmp	r0, r3
 800301c:	d805      	bhi.n	800302a <_ZN23FrontendApplicationBase40gotoScreen5ScreenSlideTransitionEastImplEv+0x26>
 800301e:	4b42      	ldr	r3, [pc, #264]	; (8003128 <_ZN23FrontendApplicationBase40gotoScreen5ScreenSlideTransitionEastImplEv+0x124>)
 8003020:	4a42      	ldr	r2, [pc, #264]	; (800312c <_ZN23FrontendApplicationBase40gotoScreen5ScreenSlideTransitionEastImplEv+0x128>)
 8003022:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003024:	4842      	ldr	r0, [pc, #264]	; (8003130 <_ZN23FrontendApplicationBase40gotoScreen5ScreenSlideTransitionEastImplEv+0x12c>)
 8003026:	f01a f9d5 	bl	801d3d4 <__assert_func>
 800302a:	6860      	ldr	r0, [r4, #4]
 800302c:	6803      	ldr	r3, [r0, #0]
 800302e:	6a1b      	ldr	r3, [r3, #32]
 8003030:	4798      	blx	r3
 8003032:	280f      	cmp	r0, #15
 8003034:	d803      	bhi.n	800303e <_ZN23FrontendApplicationBase40gotoScreen5ScreenSlideTransitionEastImplEv+0x3a>
 8003036:	4b3f      	ldr	r3, [pc, #252]	; (8003134 <_ZN23FrontendApplicationBase40gotoScreen5ScreenSlideTransitionEastImplEv+0x130>)
 8003038:	4a3c      	ldr	r2, [pc, #240]	; (800312c <_ZN23FrontendApplicationBase40gotoScreen5ScreenSlideTransitionEastImplEv+0x128>)
 800303a:	21a4      	movs	r1, #164	; 0xa4
 800303c:	e7f2      	b.n	8003024 <_ZN23FrontendApplicationBase40gotoScreen5ScreenSlideTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800303e:	68e0      	ldr	r0, [r4, #12]
 8003040:	6803      	ldr	r3, [r0, #0]
 8003042:	6a1b      	ldr	r3, [r3, #32]
 8003044:	4798      	blx	r3
 8003046:	2853      	cmp	r0, #83	; 0x53
 8003048:	d803      	bhi.n	8003052 <_ZN23FrontendApplicationBase40gotoScreen5ScreenSlideTransitionEastImplEv+0x4e>
 800304a:	4b3b      	ldr	r3, [pc, #236]	; (8003138 <_ZN23FrontendApplicationBase40gotoScreen5ScreenSlideTransitionEastImplEv+0x134>)
 800304c:	4a37      	ldr	r2, [pc, #220]	; (800312c <_ZN23FrontendApplicationBase40gotoScreen5ScreenSlideTransitionEastImplEv+0x128>)
 800304e:	21a5      	movs	r1, #165	; 0xa5
 8003050:	e7e8      	b.n	8003024 <_ZN23FrontendApplicationBase40gotoScreen5ScreenSlideTransitionEastImplEv+0x20>
    if (*currentTrans)
 8003052:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 800313c <_ZN23FrontendApplicationBase40gotoScreen5ScreenSlideTransitionEastImplEv+0x138>
    Application::getInstance()->clearAllTimerWidgets();
 8003056:	f00b ff0d 	bl	800ee74 <_ZN8touchgfx11Application11getInstanceEv>
 800305a:	f00b ff4d 	bl	800eef8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800305e:	f8d9 0000 	ldr.w	r0, [r9]
 8003062:	b110      	cbz	r0, 800306a <_ZN23FrontendApplicationBase40gotoScreen5ScreenSlideTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8003064:	6803      	ldr	r3, [r0, #0]
 8003066:	68db      	ldr	r3, [r3, #12]
 8003068:	4798      	blx	r3
    if (*currentTrans)
 800306a:	f8d9 0000 	ldr.w	r0, [r9]
 800306e:	b110      	cbz	r0, 8003076 <_ZN23FrontendApplicationBase40gotoScreen5ScreenSlideTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8003070:	6803      	ldr	r3, [r0, #0]
 8003072:	681b      	ldr	r3, [r3, #0]
 8003074:	4798      	blx	r3
    if (*currentScreen)
 8003076:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003140 <_ZN23FrontendApplicationBase40gotoScreen5ScreenSlideTransitionEastImplEv+0x13c>
 800307a:	f8d8 0000 	ldr.w	r0, [r8]
 800307e:	b110      	cbz	r0, 8003086 <_ZN23FrontendApplicationBase40gotoScreen5ScreenSlideTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003080:	6803      	ldr	r3, [r0, #0]
 8003082:	695b      	ldr	r3, [r3, #20]
 8003084:	4798      	blx	r3
    if (*currentPresenter)
 8003086:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 800308a:	b110      	cbz	r0, 8003092 <_ZN23FrontendApplicationBase40gotoScreen5ScreenSlideTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 800308c:	6803      	ldr	r3, [r0, #0]
 800308e:	685b      	ldr	r3, [r3, #4]
 8003090:	4798      	blx	r3
    if (*currentScreen)
 8003092:	f8d8 0000 	ldr.w	r0, [r8]
 8003096:	b110      	cbz	r0, 800309e <_ZN23FrontendApplicationBase40gotoScreen5ScreenSlideTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003098:	6803      	ldr	r3, [r0, #0]
 800309a:	681b      	ldr	r3, [r3, #0]
 800309c:	4798      	blx	r3
    if (*currentPresenter)
 800309e:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80030a2:	b110      	cbz	r0, 80030aa <_ZN23FrontendApplicationBase40gotoScreen5ScreenSlideTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80030a4:	6803      	ldr	r3, [r0, #0]
 80030a6:	689b      	ldr	r3, [r3, #8]
 80030a8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80030aa:	68e0      	ldr	r0, [r4, #12]
 80030ac:	2100      	movs	r1, #0
 80030ae:	f7ff fec9 	bl	8002e44 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 80030b2:	2114      	movs	r1, #20
 80030b4:	4605      	mov	r5, r0
 80030b6:	f7ff fec9 	bl	8002e4c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80030ba:	68a0      	ldr	r0, [r4, #8]
 80030bc:	6803      	ldr	r3, [r0, #0]
 80030be:	2100      	movs	r1, #0
 80030c0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80030c2:	4798      	blx	r3
 80030c4:	4606      	mov	r6, r0
 80030c6:	f002 fccd 	bl	8005a64 <_ZN11Screen5ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80030ca:	6860      	ldr	r0, [r4, #4]
 80030cc:	6803      	ldr	r3, [r0, #0]
 80030ce:	2100      	movs	r1, #0
 80030d0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80030d2:	4798      	blx	r3
 80030d4:	4631      	mov	r1, r6
 80030d6:	4604      	mov	r4, r0
 80030d8:	f002 fc80 	bl	80059dc <_ZN16Screen5PresenterC1ER11Screen5View>
    *currentTrans = newTransition;
 80030dc:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80030e0:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 80030e4:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80030e8:	b1dc      	cbz	r4, 8003122 <_ZN23FrontendApplicationBase40gotoScreen5ScreenSlideTransitionEastImplEv+0x11e>
 80030ea:	1d23      	adds	r3, r4, #4
 80030ec:	f8ca 3008 	str.w	r3, [sl, #8]
    newScreen->setupScreen();
 80030f0:	6833      	ldr	r3, [r6, #0]
 80030f2:	f8c4 a008 	str.w	sl, [r4, #8]
 80030f6:	4630      	mov	r0, r6
 80030f8:	68db      	ldr	r3, [r3, #12]
 80030fa:	63f4      	str	r4, [r6, #60]	; 0x3c
 80030fc:	4798      	blx	r3
    newPresenter->activate();
 80030fe:	6823      	ldr	r3, [r4, #0]
 8003100:	4620      	mov	r0, r4
 8003102:	681b      	ldr	r3, [r3, #0]
 8003104:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003106:	4629      	mov	r1, r5
 8003108:	4630      	mov	r0, r6
 800310a:	f00d faf5 	bl	80106f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800310e:	682b      	ldr	r3, [r5, #0]
 8003110:	4628      	mov	r0, r5
 8003112:	691b      	ldr	r3, [r3, #16]
 8003114:	4798      	blx	r3
    newTransition->invalidate();
 8003116:	682b      	ldr	r3, [r5, #0]
 8003118:	4628      	mov	r0, r5
 800311a:	695b      	ldr	r3, [r3, #20]
}
 800311c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003120:	4718      	bx	r3
    model->bind(newPresenter);
 8003122:	4623      	mov	r3, r4
 8003124:	e7e2      	b.n	80030ec <_ZN23FrontendApplicationBase40gotoScreen5ScreenSlideTransitionEastImplEv+0xe8>
 8003126:	bf00      	nop
 8003128:	0801ed58 	.word	0x0801ed58
 800312c:	0801f2a5 	.word	0x0801f2a5
 8003130:	0801eefd 	.word	0x0801eefd
 8003134:	0801ef44 	.word	0x0801ef44
 8003138:	0801efe7 	.word	0x0801efe7
 800313c:	200135f0 	.word	0x200135f0
 8003140:	200135ec 	.word	0x200135ec

08003144 <_ZN23FrontendApplicationBase40gotoScreen4ScreenSlideTransitionEastImplEv>:
{
 8003144:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Screen4View, Screen4Presenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003148:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 800314c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800314e:	68a0      	ldr	r0, [r4, #8]
 8003150:	6803      	ldr	r3, [r0, #0]
 8003152:	6a1b      	ldr	r3, [r3, #32]
 8003154:	4798      	blx	r3
 8003156:	f241 333b 	movw	r3, #4923	; 0x133b
 800315a:	4298      	cmp	r0, r3
 800315c:	d805      	bhi.n	800316a <_ZN23FrontendApplicationBase40gotoScreen4ScreenSlideTransitionEastImplEv+0x26>
 800315e:	4b42      	ldr	r3, [pc, #264]	; (8003268 <_ZN23FrontendApplicationBase40gotoScreen4ScreenSlideTransitionEastImplEv+0x124>)
 8003160:	4a42      	ldr	r2, [pc, #264]	; (800326c <_ZN23FrontendApplicationBase40gotoScreen4ScreenSlideTransitionEastImplEv+0x128>)
 8003162:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003164:	4842      	ldr	r0, [pc, #264]	; (8003270 <_ZN23FrontendApplicationBase40gotoScreen4ScreenSlideTransitionEastImplEv+0x12c>)
 8003166:	f01a f935 	bl	801d3d4 <__assert_func>
 800316a:	6860      	ldr	r0, [r4, #4]
 800316c:	6803      	ldr	r3, [r0, #0]
 800316e:	6a1b      	ldr	r3, [r3, #32]
 8003170:	4798      	blx	r3
 8003172:	280f      	cmp	r0, #15
 8003174:	d803      	bhi.n	800317e <_ZN23FrontendApplicationBase40gotoScreen4ScreenSlideTransitionEastImplEv+0x3a>
 8003176:	4b3f      	ldr	r3, [pc, #252]	; (8003274 <_ZN23FrontendApplicationBase40gotoScreen4ScreenSlideTransitionEastImplEv+0x130>)
 8003178:	4a3c      	ldr	r2, [pc, #240]	; (800326c <_ZN23FrontendApplicationBase40gotoScreen4ScreenSlideTransitionEastImplEv+0x128>)
 800317a:	21a4      	movs	r1, #164	; 0xa4
 800317c:	e7f2      	b.n	8003164 <_ZN23FrontendApplicationBase40gotoScreen4ScreenSlideTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800317e:	68e0      	ldr	r0, [r4, #12]
 8003180:	6803      	ldr	r3, [r0, #0]
 8003182:	6a1b      	ldr	r3, [r3, #32]
 8003184:	4798      	blx	r3
 8003186:	2853      	cmp	r0, #83	; 0x53
 8003188:	d803      	bhi.n	8003192 <_ZN23FrontendApplicationBase40gotoScreen4ScreenSlideTransitionEastImplEv+0x4e>
 800318a:	4b3b      	ldr	r3, [pc, #236]	; (8003278 <_ZN23FrontendApplicationBase40gotoScreen4ScreenSlideTransitionEastImplEv+0x134>)
 800318c:	4a37      	ldr	r2, [pc, #220]	; (800326c <_ZN23FrontendApplicationBase40gotoScreen4ScreenSlideTransitionEastImplEv+0x128>)
 800318e:	21a5      	movs	r1, #165	; 0xa5
 8003190:	e7e8      	b.n	8003164 <_ZN23FrontendApplicationBase40gotoScreen4ScreenSlideTransitionEastImplEv+0x20>
    if (*currentTrans)
 8003192:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 800327c <_ZN23FrontendApplicationBase40gotoScreen4ScreenSlideTransitionEastImplEv+0x138>
    Application::getInstance()->clearAllTimerWidgets();
 8003196:	f00b fe6d 	bl	800ee74 <_ZN8touchgfx11Application11getInstanceEv>
 800319a:	f00b fead 	bl	800eef8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800319e:	f8d9 0000 	ldr.w	r0, [r9]
 80031a2:	b110      	cbz	r0, 80031aa <_ZN23FrontendApplicationBase40gotoScreen4ScreenSlideTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 80031a4:	6803      	ldr	r3, [r0, #0]
 80031a6:	68db      	ldr	r3, [r3, #12]
 80031a8:	4798      	blx	r3
    if (*currentTrans)
 80031aa:	f8d9 0000 	ldr.w	r0, [r9]
 80031ae:	b110      	cbz	r0, 80031b6 <_ZN23FrontendApplicationBase40gotoScreen4ScreenSlideTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 80031b0:	6803      	ldr	r3, [r0, #0]
 80031b2:	681b      	ldr	r3, [r3, #0]
 80031b4:	4798      	blx	r3
    if (*currentScreen)
 80031b6:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003280 <_ZN23FrontendApplicationBase40gotoScreen4ScreenSlideTransitionEastImplEv+0x13c>
 80031ba:	f8d8 0000 	ldr.w	r0, [r8]
 80031be:	b110      	cbz	r0, 80031c6 <_ZN23FrontendApplicationBase40gotoScreen4ScreenSlideTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80031c0:	6803      	ldr	r3, [r0, #0]
 80031c2:	695b      	ldr	r3, [r3, #20]
 80031c4:	4798      	blx	r3
    if (*currentPresenter)
 80031c6:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80031ca:	b110      	cbz	r0, 80031d2 <_ZN23FrontendApplicationBase40gotoScreen4ScreenSlideTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80031cc:	6803      	ldr	r3, [r0, #0]
 80031ce:	685b      	ldr	r3, [r3, #4]
 80031d0:	4798      	blx	r3
    if (*currentScreen)
 80031d2:	f8d8 0000 	ldr.w	r0, [r8]
 80031d6:	b110      	cbz	r0, 80031de <_ZN23FrontendApplicationBase40gotoScreen4ScreenSlideTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 80031d8:	6803      	ldr	r3, [r0, #0]
 80031da:	681b      	ldr	r3, [r3, #0]
 80031dc:	4798      	blx	r3
    if (*currentPresenter)
 80031de:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80031e2:	b110      	cbz	r0, 80031ea <_ZN23FrontendApplicationBase40gotoScreen4ScreenSlideTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80031e4:	6803      	ldr	r3, [r0, #0]
 80031e6:	689b      	ldr	r3, [r3, #8]
 80031e8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80031ea:	68e0      	ldr	r0, [r4, #12]
 80031ec:	2100      	movs	r1, #0
 80031ee:	f7ff fe29 	bl	8002e44 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 80031f2:	2114      	movs	r1, #20
 80031f4:	4605      	mov	r5, r0
 80031f6:	f7ff fe29 	bl	8002e4c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80031fa:	68a0      	ldr	r0, [r4, #8]
 80031fc:	6803      	ldr	r3, [r0, #0]
 80031fe:	2100      	movs	r1, #0
 8003200:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003202:	4798      	blx	r3
 8003204:	4606      	mov	r6, r0
 8003206:	f001 fd91 	bl	8004d2c <_ZN11Screen4ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800320a:	6860      	ldr	r0, [r4, #4]
 800320c:	6803      	ldr	r3, [r0, #0]
 800320e:	2100      	movs	r1, #0
 8003210:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003212:	4798      	blx	r3
 8003214:	4631      	mov	r1, r6
 8003216:	4604      	mov	r4, r0
 8003218:	f001 fd26 	bl	8004c68 <_ZN16Screen4PresenterC1ER11Screen4View>
    *currentTrans = newTransition;
 800321c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003220:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8003224:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003228:	b1dc      	cbz	r4, 8003262 <_ZN23FrontendApplicationBase40gotoScreen4ScreenSlideTransitionEastImplEv+0x11e>
 800322a:	1d23      	adds	r3, r4, #4
 800322c:	f8ca 3008 	str.w	r3, [sl, #8]
    newScreen->setupScreen();
 8003230:	6833      	ldr	r3, [r6, #0]
 8003232:	f8c4 a008 	str.w	sl, [r4, #8]
 8003236:	4630      	mov	r0, r6
 8003238:	68db      	ldr	r3, [r3, #12]
 800323a:	63f4      	str	r4, [r6, #60]	; 0x3c
 800323c:	4798      	blx	r3
    newPresenter->activate();
 800323e:	6823      	ldr	r3, [r4, #0]
 8003240:	4620      	mov	r0, r4
 8003242:	681b      	ldr	r3, [r3, #0]
 8003244:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003246:	4629      	mov	r1, r5
 8003248:	4630      	mov	r0, r6
 800324a:	f00d fa55 	bl	80106f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800324e:	682b      	ldr	r3, [r5, #0]
 8003250:	4628      	mov	r0, r5
 8003252:	691b      	ldr	r3, [r3, #16]
 8003254:	4798      	blx	r3
    newTransition->invalidate();
 8003256:	682b      	ldr	r3, [r5, #0]
 8003258:	4628      	mov	r0, r5
 800325a:	695b      	ldr	r3, [r3, #20]
}
 800325c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003260:	4718      	bx	r3
    model->bind(newPresenter);
 8003262:	4623      	mov	r3, r4
 8003264:	e7e2      	b.n	800322c <_ZN23FrontendApplicationBase40gotoScreen4ScreenSlideTransitionEastImplEv+0xe8>
 8003266:	bf00      	nop
 8003268:	0801ed58 	.word	0x0801ed58
 800326c:	0801f3bc 	.word	0x0801f3bc
 8003270:	0801eefd 	.word	0x0801eefd
 8003274:	0801ef44 	.word	0x0801ef44
 8003278:	0801efe7 	.word	0x0801efe7
 800327c:	200135f0 	.word	0x200135f0
 8003280:	200135ec 	.word	0x200135ec

08003284 <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv>:
{
 8003284:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Screen3View, Screen3Presenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003288:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 800328c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800328e:	68a0      	ldr	r0, [r4, #8]
 8003290:	6803      	ldr	r3, [r0, #0]
 8003292:	6a1b      	ldr	r3, [r3, #32]
 8003294:	4798      	blx	r3
 8003296:	28db      	cmp	r0, #219	; 0xdb
 8003298:	d805      	bhi.n	80032a6 <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x22>
 800329a:	4b42      	ldr	r3, [pc, #264]	; (80033a4 <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x120>)
 800329c:	4a42      	ldr	r2, [pc, #264]	; (80033a8 <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x124>)
 800329e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80032a0:	4842      	ldr	r0, [pc, #264]	; (80033ac <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x128>)
 80032a2:	f01a f897 	bl	801d3d4 <__assert_func>
 80032a6:	6860      	ldr	r0, [r4, #4]
 80032a8:	6803      	ldr	r3, [r0, #0]
 80032aa:	6a1b      	ldr	r3, [r3, #32]
 80032ac:	4798      	blx	r3
 80032ae:	280f      	cmp	r0, #15
 80032b0:	d803      	bhi.n	80032ba <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x36>
 80032b2:	4b3f      	ldr	r3, [pc, #252]	; (80033b0 <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x12c>)
 80032b4:	4a3c      	ldr	r2, [pc, #240]	; (80033a8 <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x124>)
 80032b6:	21a4      	movs	r1, #164	; 0xa4
 80032b8:	e7f2      	b.n	80032a0 <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80032ba:	68e0      	ldr	r0, [r4, #12]
 80032bc:	6803      	ldr	r3, [r0, #0]
 80032be:	6a1b      	ldr	r3, [r3, #32]
 80032c0:	4798      	blx	r3
 80032c2:	2853      	cmp	r0, #83	; 0x53
 80032c4:	d803      	bhi.n	80032ce <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x4a>
 80032c6:	4b3b      	ldr	r3, [pc, #236]	; (80033b4 <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x130>)
 80032c8:	4a37      	ldr	r2, [pc, #220]	; (80033a8 <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x124>)
 80032ca:	21a5      	movs	r1, #165	; 0xa5
 80032cc:	e7e8      	b.n	80032a0 <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x1c>
    if (*currentTrans)
 80032ce:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 80033b8 <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x134>
    Application::getInstance()->clearAllTimerWidgets();
 80032d2:	f00b fdcf 	bl	800ee74 <_ZN8touchgfx11Application11getInstanceEv>
 80032d6:	f00b fe0f 	bl	800eef8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80032da:	f8d9 0000 	ldr.w	r0, [r9]
 80032de:	b110      	cbz	r0, 80032e6 <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x62>
        (*currentTrans)->tearDown();
 80032e0:	6803      	ldr	r3, [r0, #0]
 80032e2:	68db      	ldr	r3, [r3, #12]
 80032e4:	4798      	blx	r3
    if (*currentTrans)
 80032e6:	f8d9 0000 	ldr.w	r0, [r9]
 80032ea:	b110      	cbz	r0, 80032f2 <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x6e>
        (*currentTrans)->~Transition();
 80032ec:	6803      	ldr	r3, [r0, #0]
 80032ee:	681b      	ldr	r3, [r3, #0]
 80032f0:	4798      	blx	r3
    if (*currentScreen)
 80032f2:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80033bc <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x138>
 80032f6:	f8d8 0000 	ldr.w	r0, [r8]
 80032fa:	b110      	cbz	r0, 8003302 <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x7e>
        (*currentScreen)->tearDownScreen();
 80032fc:	6803      	ldr	r3, [r0, #0]
 80032fe:	695b      	ldr	r3, [r3, #20]
 8003300:	4798      	blx	r3
    if (*currentPresenter)
 8003302:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8003306:	b110      	cbz	r0, 800330e <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x8a>
        (*currentPresenter)->deactivate();
 8003308:	6803      	ldr	r3, [r0, #0]
 800330a:	685b      	ldr	r3, [r3, #4]
 800330c:	4798      	blx	r3
    if (*currentScreen)
 800330e:	f8d8 0000 	ldr.w	r0, [r8]
 8003312:	b110      	cbz	r0, 800331a <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x96>
        (*currentScreen)->~Screen();
 8003314:	6803      	ldr	r3, [r0, #0]
 8003316:	681b      	ldr	r3, [r3, #0]
 8003318:	4798      	blx	r3
    if (*currentPresenter)
 800331a:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 800331e:	b110      	cbz	r0, 8003326 <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0xa2>
        (*currentPresenter)->~Presenter();
 8003320:	6803      	ldr	r3, [r0, #0]
 8003322:	689b      	ldr	r3, [r3, #8]
 8003324:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003326:	68e0      	ldr	r0, [r4, #12]
 8003328:	2100      	movs	r1, #0
 800332a:	f7ff fd8b 	bl	8002e44 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 800332e:	2114      	movs	r1, #20
 8003330:	4605      	mov	r5, r0
 8003332:	f7ff fd8b 	bl	8002e4c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003336:	68a0      	ldr	r0, [r4, #8]
 8003338:	6803      	ldr	r3, [r0, #0]
 800333a:	2100      	movs	r1, #0
 800333c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800333e:	4798      	blx	r3
 8003340:	4606      	mov	r6, r0
 8003342:	f001 fc79 	bl	8004c38 <_ZN11Screen3ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003346:	6860      	ldr	r0, [r4, #4]
 8003348:	6803      	ldr	r3, [r0, #0]
 800334a:	2100      	movs	r1, #0
 800334c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800334e:	4798      	blx	r3
 8003350:	4631      	mov	r1, r6
 8003352:	4604      	mov	r4, r0
 8003354:	f001 fc56 	bl	8004c04 <_ZN16Screen3PresenterC1ER11Screen3View>
    *currentTrans = newTransition;
 8003358:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800335c:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8003360:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003364:	b1dc      	cbz	r4, 800339e <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0x11a>
 8003366:	1d23      	adds	r3, r4, #4
 8003368:	f8ca 3008 	str.w	r3, [sl, #8]
    newScreen->setupScreen();
 800336c:	6833      	ldr	r3, [r6, #0]
 800336e:	f8c4 a008 	str.w	sl, [r4, #8]
 8003372:	4630      	mov	r0, r6
 8003374:	68db      	ldr	r3, [r3, #12]
 8003376:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003378:	4798      	blx	r3
    newPresenter->activate();
 800337a:	6823      	ldr	r3, [r4, #0]
 800337c:	4620      	mov	r0, r4
 800337e:	681b      	ldr	r3, [r3, #0]
 8003380:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003382:	4629      	mov	r1, r5
 8003384:	4630      	mov	r0, r6
 8003386:	f00d f9b7 	bl	80106f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800338a:	682b      	ldr	r3, [r5, #0]
 800338c:	4628      	mov	r0, r5
 800338e:	691b      	ldr	r3, [r3, #16]
 8003390:	4798      	blx	r3
    newTransition->invalidate();
 8003392:	682b      	ldr	r3, [r5, #0]
 8003394:	4628      	mov	r0, r5
 8003396:	695b      	ldr	r3, [r3, #20]
}
 8003398:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800339c:	4718      	bx	r3
    model->bind(newPresenter);
 800339e:	4623      	mov	r3, r4
 80033a0:	e7e2      	b.n	8003368 <_ZN23FrontendApplicationBase40gotoScreen3ScreenSlideTransitionEastImplEv+0xe4>
 80033a2:	bf00      	nop
 80033a4:	0801ed58 	.word	0x0801ed58
 80033a8:	0801f4d3 	.word	0x0801f4d3
 80033ac:	0801eefd 	.word	0x0801eefd
 80033b0:	0801ef44 	.word	0x0801ef44
 80033b4:	0801efe7 	.word	0x0801efe7
 80033b8:	200135f0 	.word	0x200135f0
 80033bc:	200135ec 	.word	0x200135ec

080033c0 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv>:
{
 80033c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80033c4:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 80033c8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80033ca:	68a0      	ldr	r0, [r4, #8]
 80033cc:	6803      	ldr	r3, [r0, #0]
 80033ce:	6a1b      	ldr	r3, [r3, #32]
 80033d0:	4798      	blx	r3
 80033d2:	f5b0 7f86 	cmp.w	r0, #268	; 0x10c
 80033d6:	d205      	bcs.n	80033e4 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x24>
 80033d8:	4b40      	ldr	r3, [pc, #256]	; (80034dc <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x11c>)
 80033da:	4a41      	ldr	r2, [pc, #260]	; (80034e0 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x120>)
 80033dc:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80033de:	4841      	ldr	r0, [pc, #260]	; (80034e4 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x124>)
 80033e0:	f019 fff8 	bl	801d3d4 <__assert_func>
 80033e4:	6860      	ldr	r0, [r4, #4]
 80033e6:	6803      	ldr	r3, [r0, #0]
 80033e8:	6a1b      	ldr	r3, [r3, #32]
 80033ea:	4798      	blx	r3
 80033ec:	280f      	cmp	r0, #15
 80033ee:	d803      	bhi.n	80033f8 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x38>
 80033f0:	4b3d      	ldr	r3, [pc, #244]	; (80034e8 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x128>)
 80033f2:	4a3b      	ldr	r2, [pc, #236]	; (80034e0 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x120>)
 80033f4:	21a4      	movs	r1, #164	; 0xa4
 80033f6:	e7f2      	b.n	80033de <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80033f8:	68e0      	ldr	r0, [r4, #12]
 80033fa:	6803      	ldr	r3, [r0, #0]
 80033fc:	6a1b      	ldr	r3, [r3, #32]
 80033fe:	4798      	blx	r3
 8003400:	2853      	cmp	r0, #83	; 0x53
 8003402:	d803      	bhi.n	800340c <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x4c>
 8003404:	4b39      	ldr	r3, [pc, #228]	; (80034ec <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x12c>)
 8003406:	4a36      	ldr	r2, [pc, #216]	; (80034e0 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x120>)
 8003408:	21a5      	movs	r1, #165	; 0xa5
 800340a:	e7e8      	b.n	80033de <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x1e>
    if (*currentTrans)
 800340c:	f8df 90e0 	ldr.w	r9, [pc, #224]	; 80034f0 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x130>
    Application::getInstance()->clearAllTimerWidgets();
 8003410:	f00b fd30 	bl	800ee74 <_ZN8touchgfx11Application11getInstanceEv>
 8003414:	f00b fd70 	bl	800eef8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8003418:	f8d9 0000 	ldr.w	r0, [r9]
 800341c:	b110      	cbz	r0, 8003424 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x64>
        (*currentTrans)->tearDown();
 800341e:	6803      	ldr	r3, [r0, #0]
 8003420:	68db      	ldr	r3, [r3, #12]
 8003422:	4798      	blx	r3
    if (*currentTrans)
 8003424:	f8d9 0000 	ldr.w	r0, [r9]
 8003428:	b110      	cbz	r0, 8003430 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x70>
        (*currentTrans)->~Transition();
 800342a:	6803      	ldr	r3, [r0, #0]
 800342c:	681b      	ldr	r3, [r3, #0]
 800342e:	4798      	blx	r3
    if (*currentScreen)
 8003430:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 80034f4 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x134>
 8003434:	f8d8 0000 	ldr.w	r0, [r8]
 8003438:	b110      	cbz	r0, 8003440 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 800343a:	6803      	ldr	r3, [r0, #0]
 800343c:	695b      	ldr	r3, [r3, #20]
 800343e:	4798      	blx	r3
    if (*currentPresenter)
 8003440:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8003444:	b110      	cbz	r0, 800344c <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8003446:	6803      	ldr	r3, [r0, #0]
 8003448:	685b      	ldr	r3, [r3, #4]
 800344a:	4798      	blx	r3
    if (*currentScreen)
 800344c:	f8d8 0000 	ldr.w	r0, [r8]
 8003450:	b110      	cbz	r0, 8003458 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x98>
        (*currentScreen)->~Screen();
 8003452:	6803      	ldr	r3, [r0, #0]
 8003454:	681b      	ldr	r3, [r3, #0]
 8003456:	4798      	blx	r3
    if (*currentPresenter)
 8003458:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 800345c:	b110      	cbz	r0, 8003464 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 800345e:	6803      	ldr	r3, [r0, #0]
 8003460:	689b      	ldr	r3, [r3, #8]
 8003462:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003464:	68e0      	ldr	r0, [r4, #12]
 8003466:	2100      	movs	r1, #0
 8003468:	f7ff fcec 	bl	8002e44 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 800346c:	2114      	movs	r1, #20
 800346e:	4605      	mov	r5, r0
 8003470:	f7ff fcec 	bl	8002e4c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003474:	2100      	movs	r1, #0
 8003476:	68a0      	ldr	r0, [r4, #8]
 8003478:	f7ff fc38 	bl	8002cec <_ZN8touchgfx17AbstractPartition2atI11Screen1ViewEERT_t>
 800347c:	4606      	mov	r6, r0
 800347e:	f001 fba5 	bl	8004bcc <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003482:	6860      	ldr	r0, [r4, #4]
 8003484:	2100      	movs	r1, #0
 8003486:	f7ff fc34 	bl	8002cf2 <_ZN8touchgfx17AbstractPartition2atI16Screen1PresenterEERT_t>
 800348a:	4631      	mov	r1, r6
 800348c:	4604      	mov	r4, r0
 800348e:	f001 fb7d 	bl	8004b8c <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 8003492:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003496:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 800349a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800349e:	b1dc      	cbz	r4, 80034d8 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0x118>
 80034a0:	1d23      	adds	r3, r4, #4
 80034a2:	f8ca 3008 	str.w	r3, [sl, #8]
    newScreen->setupScreen();
 80034a6:	6833      	ldr	r3, [r6, #0]
 80034a8:	f8c4 a008 	str.w	sl, [r4, #8]
 80034ac:	4630      	mov	r0, r6
 80034ae:	68db      	ldr	r3, [r3, #12]
 80034b0:	63f4      	str	r4, [r6, #60]	; 0x3c
 80034b2:	4798      	blx	r3
    newPresenter->activate();
 80034b4:	6823      	ldr	r3, [r4, #0]
 80034b6:	4620      	mov	r0, r4
 80034b8:	681b      	ldr	r3, [r3, #0]
 80034ba:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80034bc:	4629      	mov	r1, r5
 80034be:	4630      	mov	r0, r6
 80034c0:	f00d f91a 	bl	80106f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80034c4:	682b      	ldr	r3, [r5, #0]
 80034c6:	4628      	mov	r0, r5
 80034c8:	691b      	ldr	r3, [r3, #16]
 80034ca:	4798      	blx	r3
    newTransition->invalidate();
 80034cc:	682b      	ldr	r3, [r5, #0]
 80034ce:	4628      	mov	r0, r5
 80034d0:	695b      	ldr	r3, [r3, #20]
}
 80034d2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80034d6:	4718      	bx	r3
    model->bind(newPresenter);
 80034d8:	4623      	mov	r3, r4
 80034da:	e7e2      	b.n	80034a2 <_ZN23FrontendApplicationBase40gotoScreen1ScreenSlideTransitionEastImplEv+0xe2>
 80034dc:	0801ed58 	.word	0x0801ed58
 80034e0:	0801f5ea 	.word	0x0801f5ea
 80034e4:	0801eefd 	.word	0x0801eefd
 80034e8:	0801ef44 	.word	0x0801ef44
 80034ec:	0801efe7 	.word	0x0801efe7
 80034f0:	200135f0 	.word	0x200135f0
 80034f4:	200135ec 	.word	0x200135ec

080034f8 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 80034f8:	6a00      	ldr	r0, [r0, #32]
 80034fa:	4770      	bx	lr

080034fc <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 80034fc:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80034fe:	4770      	bx	lr

08003500 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8003500:	4770      	bx	lr

08003502 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8003502:	888b      	ldrh	r3, [r1, #4]
 8003504:	6980      	ldr	r0, [r0, #24]
 8003506:	680a      	ldr	r2, [r1, #0]
 8003508:	0adb      	lsrs	r3, r3, #11
 800350a:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 800350e:	4410      	add	r0, r2
 8003510:	4770      	bx	lr

08003512 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8003512:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8003514:	b1c2      	cbz	r2, 8003548 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8003516:	7b13      	ldrb	r3, [r2, #12]
 8003518:	b1b3      	cbz	r3, 8003548 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800351a:	7b54      	ldrb	r4, [r2, #13]
 800351c:	7ad2      	ldrb	r2, [r2, #11]
 800351e:	0224      	lsls	r4, r4, #8
 8003520:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8003524:	4314      	orrs	r4, r2
 8003526:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8003528:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800352a:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 800352e:	8813      	ldrh	r3, [r2, #0]
 8003530:	428b      	cmp	r3, r1
 8003532:	d102      	bne.n	800353a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8003534:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8003538:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 800353a:	d805      	bhi.n	8003548 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800353c:	3801      	subs	r0, #1
 800353e:	b280      	uxth	r0, r0
 8003540:	3204      	adds	r2, #4
 8003542:	2800      	cmp	r0, #0
 8003544:	d1f3      	bne.n	800352e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8003546:	e7f7      	b.n	8003538 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8003548:	2000      	movs	r0, #0
 800354a:	e7f5      	b.n	8003538 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

0800354c <_ZN8touchgfx13GeneratedFontD0Ev>:
 800354c:	b510      	push	{r4, lr}
 800354e:	2128      	movs	r1, #40	; 0x28
 8003550:	4604      	mov	r4, r0
 8003552:	f019 ff11 	bl	801d378 <_ZdlPvj>
 8003556:	4620      	mov	r0, r4
 8003558:	bd10      	pop	{r4, pc}
	...

0800355c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 800355c:	b530      	push	{r4, r5, lr}
 800355e:	b089      	sub	sp, #36	; 0x24
 8003560:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8003562:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 8003566:	9506      	str	r5, [sp, #24]
 8003568:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800356c:	9505      	str	r5, [sp, #20]
 800356e:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8003572:	9504      	str	r5, [sp, #16]
 8003574:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8003578:	9503      	str	r5, [sp, #12]
 800357a:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 800357e:	9502      	str	r5, [sp, #8]
 8003580:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8003584:	9501      	str	r5, [sp, #4]
 8003586:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 800358a:	9500      	str	r5, [sp, #0]
 800358c:	f00c fcf2 	bl	800ff74 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 8003590:	4b06      	ldr	r3, [pc, #24]	; (80035ac <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
 8003592:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8003594:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8003596:	61a3      	str	r3, [r4, #24]
      kerningData(kerningList),
 8003598:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800359a:	61e3      	str	r3, [r4, #28]
      gsubTable(gsubData),
 800359c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800359e:	6223      	str	r3, [r4, #32]
      arabicTable(formsTable)
 80035a0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80035a2:	6263      	str	r3, [r4, #36]	; 0x24
}
 80035a4:	4620      	mov	r0, r4
 80035a6:	b009      	add	sp, #36	; 0x24
 80035a8:	bd30      	pop	{r4, r5, pc}
 80035aa:	bf00      	nop
 80035ac:	0801f884 	.word	0x0801f884

080035b0 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80035b0:	4770      	bx	lr

080035b2 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80035b2:	4770      	bx	lr

080035b4 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80035b4:	4770      	bx	lr

080035b6 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80035b6:	4770      	bx	lr

080035b8 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 80035b8:	4770      	bx	lr

080035ba <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 80035ba:	4770      	bx	lr

080035bc <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 80035bc:	4770      	bx	lr

080035be <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80035be:	4770      	bx	lr

080035c0 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80035c0:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80035c2:	68c2      	ldr	r2, [r0, #12]
 80035c4:	6844      	ldr	r4, [r0, #4]
 80035c6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80035c8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80035ca:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80035ce:	07d2      	lsls	r2, r2, #31
 80035d0:	bf48      	it	mi
 80035d2:	5962      	ldrmi	r2, [r4, r5]
 80035d4:	689b      	ldr	r3, [r3, #8]
    }
 80035d6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80035d8:	bf48      	it	mi
 80035da:	58d3      	ldrmi	r3, [r2, r3]
 80035dc:	4718      	bx	r3

080035de <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80035de:	6843      	ldr	r3, [r0, #4]
 80035e0:	b12b      	cbz	r3, 80035ee <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80035e2:	6883      	ldr	r3, [r0, #8]
 80035e4:	b92b      	cbnz	r3, 80035f2 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80035e6:	68c0      	ldr	r0, [r0, #12]
 80035e8:	f000 0001 	and.w	r0, r0, #1
 80035ec:	4770      	bx	lr
 80035ee:	4618      	mov	r0, r3
 80035f0:	4770      	bx	lr
 80035f2:	2001      	movs	r0, #1
    }
 80035f4:	4770      	bx	lr

080035f6 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80035f6:	b510      	push	{r4, lr}
 80035f8:	2110      	movs	r1, #16
 80035fa:	4604      	mov	r4, r0
 80035fc:	f019 febc 	bl	801d378 <_ZdlPvj>
 8003600:	4620      	mov	r0, r4
 8003602:	bd10      	pop	{r4, pc}

08003604 <_ZN15Screen1ViewBaseD0Ev>:
 8003604:	b510      	push	{r4, lr}
 8003606:	f44f 7184 	mov.w	r1, #264	; 0x108
 800360a:	4604      	mov	r4, r0
 800360c:	f019 feb4 	bl	801d378 <_ZdlPvj>
 8003610:	4620      	mov	r0, r4
 8003612:	bd10      	pop	{r4, pc}

08003614 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button1)
 8003614:	3098      	adds	r0, #152	; 0x98
 8003616:	4288      	cmp	r0, r1
{
 8003618:	b508      	push	{r3, lr}
    if (&src == &button1)
 800361a:	d105      	bne.n	8003628 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800361c:	f00b fc2a 	bl	800ee74 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction2
        //When button1 clicked change screen to Screen4
        //Go to Screen4 with screen transition towards East
        application().gotoScreen4ScreenCoverTransitionEast();
    }
}
 8003620:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen4ScreenCoverTransitionEast();
 8003624:	f7ff bb22 	b.w	8002c6c <_ZN23FrontendApplicationBase36gotoScreen4ScreenCoverTransitionEastEv>
}
 8003628:	bd08      	pop	{r3, pc}

0800362a <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 800362a:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 800362c:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 800362e:	4604      	mov	r4, r0
        setX(x);
 8003630:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8003632:	4615      	mov	r5, r2
        setX(x);
 8003634:	4798      	blx	r3
        setY(y);
 8003636:	6823      	ldr	r3, [r4, #0]
 8003638:	4629      	mov	r1, r5
 800363a:	4620      	mov	r0, r4
 800363c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 800363e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8003642:	4718      	bx	r3

08003644 <_ZN8touchgfx6WidgetC1Ev>:
 8003644:	2200      	movs	r2, #0
 8003646:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800364a:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 800364e:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8003652:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 8003656:	f44f 7280 	mov.w	r2, #256	; 0x100
 800365a:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 800365c:	4a01      	ldr	r2, [pc, #4]	; (8003664 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 800365e:	6002      	str	r2, [r0, #0]
 8003660:	4770      	bx	lr
 8003662:	bf00      	nop
 8003664:	0801f8dc 	.word	0x0801f8dc

08003668 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 8003668:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800366c:	4604      	mov	r4, r0
 800366e:	b087      	sub	sp, #28
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
 8003670:	4627      	mov	r7, r4
        : presenter(0)
 8003672:	2500      	movs	r5, #0
 8003674:	f00c fe94 	bl	80103a0 <_ZN8touchgfx6ScreenC1Ev>
 8003678:	4b54      	ldr	r3, [pc, #336]	; (80037cc <_ZN15Screen1ViewBaseC1Ev+0x164>)
 800367a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800367c:	f847 3b40 	str.w	r3, [r7], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8003680:	2226      	movs	r2, #38	; 0x26
 8003682:	4629      	mov	r1, r5
 8003684:	4638      	mov	r0, r7
 8003686:	f01a f8aa 	bl	801d7de <memset>
 800368a:	4638      	mov	r0, r7
 800368c:	f7ff ffda 	bl	8003644 <_ZN8touchgfx6WidgetC1Ev>
 8003690:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 8003694:	4b4e      	ldr	r3, [pc, #312]	; (80037d0 <_ZN15Screen1ViewBaseC1Ev+0x168>)
 8003696:	6423      	str	r3, [r4, #64]	; 0x40
 8003698:	f04f 0bff 	mov.w	fp, #255	; 0xff
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 800369c:	f64f 7aff 	movw	sl, #65535	; 0xffff
 80036a0:	f104 0898 	add.w	r8, r4, #152	; 0x98
 80036a4:	a905      	add	r1, sp, #20
 80036a6:	f884 b066 	strb.w	fp, [r4, #102]	; 0x66
        : color(col)
 80036aa:	66a5      	str	r5, [r4, #104]	; 0x68
 80036ac:	4648      	mov	r0, r9
 80036ae:	f8ad a014 	strh.w	sl, [sp, #20]
 80036b2:	f008 fee1 	bl	800c478 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
        : Widget(), action(), pressed(false)
 80036b6:	4629      	mov	r1, r5
 80036b8:	2226      	movs	r2, #38	; 0x26
 80036ba:	4640      	mov	r0, r8
 80036bc:	f01a f88f 	bl	801d7de <memset>
 80036c0:	4640      	mov	r0, r8
 80036c2:	f7ff ffbf 	bl	8003644 <_ZN8touchgfx6WidgetC1Ev>
        touchable = touch;
 80036c6:	2301      	movs	r3, #1
 80036c8:	f104 06cc 	add.w	r6, r4, #204	; 0xcc
 80036cc:	f884 30bc 	strb.w	r3, [r4, #188]	; 0xbc
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 80036d0:	4b40      	ldr	r3, [pc, #256]	; (80037d4 <_ZN15Screen1ViewBaseC1Ev+0x16c>)
 80036d2:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 80036d6:	2226      	movs	r2, #38	; 0x26
 80036d8:	4629      	mov	r1, r5
 80036da:	f8a4 a0c6 	strh.w	sl, [r4, #198]	; 0xc6
 80036de:	f8a4 a0c8 	strh.w	sl, [r4, #200]	; 0xc8
 80036e2:	f884 a0ca 	strb.w	sl, [r4, #202]	; 0xca
 80036e6:	f8c4 50c0 	str.w	r5, [r4, #192]	; 0xc0
 80036ea:	f884 50c4 	strb.w	r5, [r4, #196]	; 0xc4
 80036ee:	4630      	mov	r0, r6
 80036f0:	f8ad a014 	strh.w	sl, [sp, #20]
 80036f4:	f01a f873 	bl	801d7de <memset>
 80036f8:	4630      	mov	r0, r6
 80036fa:	f7ff ffa3 	bl	8003644 <_ZN8touchgfx6WidgetC1Ev>
 80036fe:	4b36      	ldr	r3, [pc, #216]	; (80037d8 <_ZN15Screen1ViewBaseC1Ev+0x170>)
 8003700:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
 8003704:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8003708:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
    {
        Image::setBitmap(bmp);
 800370c:	a905      	add	r1, sp, #20
 800370e:	4630      	mov	r0, r6
        : Widget(), bitmap(bmp), alpha(255)
 8003710:	f884 b0f4 	strb.w	fp, [r4, #244]	; 0xf4
        Image::setBitmap(bmp);
 8003714:	f009 fe2e 	bl	800d374 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003718:	4b30      	ldr	r3, [pc, #192]	; (80037dc <_ZN15Screen1ViewBaseC1Ev+0x174>)
 800371a:	e9c4 343e 	strd	r3, r4, [r4, #248]	; 0xf8
 800371e:	4b30      	ldr	r3, [pc, #192]	; (80037e0 <_ZN15Screen1ViewBaseC1Ev+0x178>)
    __background.setPosition(0, 0, 240, 320);
 8003720:	f44f 7aa0 	mov.w	sl, #320	; 0x140
 8003724:	462a      	mov	r2, r5
 8003726:	e9c4 3540 	strd	r3, r5, [r4, #256]	; 0x100
 800372a:	4629      	mov	r1, r5
 800372c:	4638      	mov	r0, r7
 800372e:	f8cd a000 	str.w	sl, [sp]
 8003732:	23f0      	movs	r3, #240	; 0xf0
 8003734:	f7ff f8da 	bl	80028ec <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8003738:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800373c:	66a3      	str	r3, [r4, #104]	; 0x68
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_ID));
 800373e:	a905      	add	r1, sp, #20
 8003740:	4648      	mov	r0, r9
 8003742:	f8ad 5014 	strh.w	r5, [sp, #20]
 8003746:	f009 fe15 	bl	800d374 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1.setPosition(0, 0, 240, 320);
 800374a:	23f0      	movs	r3, #240	; 0xf0
 800374c:	462a      	mov	r2, r5
 800374e:	4629      	mov	r1, r5
 8003750:	4648      	mov	r0, r9
 8003752:	f8cd a000 	str.w	sl, [sp]
 8003756:	f7ff f8c9 	bl	80028ec <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800375a:	4629      	mov	r1, r5
 800375c:	4648      	mov	r0, r9
 800375e:	f008 fe51 	bl	800c404 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    button1.setXY(69, 258);
 8003762:	4640      	mov	r0, r8
 8003764:	f44f 7281 	mov.w	r2, #258	; 0x102
 8003768:	2145      	movs	r1, #69	; 0x45
 800376a:	f7ff ff5e 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
 800376e:	2317      	movs	r3, #23
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_PLAYBUTTON_ID), touchgfx::Bitmap(BITMAP_PLAYBUTTON_ID));
 8003770:	aa05      	add	r2, sp, #20
 8003772:	a904      	add	r1, sp, #16
 8003774:	4640      	mov	r0, r8
 8003776:	f8ad 3010 	strh.w	r3, [sp, #16]
 800377a:	f8ad 3014 	strh.w	r3, [sp, #20]
 800377e:	f009 fc97 	bl	800d0b0 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    button1.setAction(buttonCallback);
 8003782:	f104 03f8 	add.w	r3, r4, #248	; 0xf8
    image1.setXY(20, 81);
 8003786:	2251      	movs	r2, #81	; 0x51
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8003788:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800378c:	4630      	mov	r0, r6
 800378e:	2114      	movs	r1, #20
 8003790:	f7ff ff4b 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
 8003794:	2315      	movs	r3, #21
    image1.setBitmap(touchgfx::Bitmap(BITMAP_LOGO_ID));
 8003796:	a905      	add	r1, sp, #20
 8003798:	4630      	mov	r0, r6
 800379a:	f8ad 3014 	strh.w	r3, [sp, #20]
 800379e:	f009 fde9 	bl	800d374 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80037a2:	1d20      	adds	r0, r4, #4
 80037a4:	4639      	mov	r1, r7
 80037a6:	9003      	str	r0, [sp, #12]
 80037a8:	f007 fb24 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80037ac:	9803      	ldr	r0, [sp, #12]
 80037ae:	4649      	mov	r1, r9
 80037b0:	f007 fb20 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80037b4:	9803      	ldr	r0, [sp, #12]
 80037b6:	4641      	mov	r1, r8
 80037b8:	f007 fb1c 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80037bc:	9803      	ldr	r0, [sp, #12]
 80037be:	4631      	mov	r1, r6
 80037c0:	f007 fb18 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80037c4:	4620      	mov	r0, r4
 80037c6:	b007      	add	sp, #28
 80037c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80037cc:	0801f95c 	.word	0x0801f95c
 80037d0:	08020694 	.word	0x08020694
 80037d4:	080206fc 	.word	0x080206fc
 80037d8:	080207d8 	.word	0x080207d8
 80037dc:	0801f944 	.word	0x0801f944
 80037e0:	08003615 	.word	0x08003615

080037e4 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 80037e4:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80037e6:	4770      	bx	lr

080037e8 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 80037e8:	b510      	push	{r4, lr}
 80037ea:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 80037ec:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80037ee:	b150      	cbz	r0, 8003806 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 80037f0:	6803      	ldr	r3, [r0, #0]
 80037f2:	68db      	ldr	r3, [r3, #12]
 80037f4:	4798      	blx	r3
 80037f6:	b130      	cbz	r0, 8003806 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 80037f8:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80037fa:	6803      	ldr	r3, [r0, #0]
 80037fc:	4621      	mov	r1, r4
 80037fe:	689b      	ldr	r3, [r3, #8]
        }
    }
 8003800:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 8003804:	4718      	bx	r3
    }
 8003806:	bd10      	pop	{r4, pc}

08003808 <_ZN8touchgfx8DrawableC1Ev>:
          visible(true)
 8003808:	4a07      	ldr	r2, [pc, #28]	; (8003828 <_ZN8touchgfx8DrawableC1Ev+0x20>)
 800380a:	6002      	str	r2, [r0, #0]
        : x(0), y(0), width(0), height(0)
 800380c:	2200      	movs	r2, #0
 800380e:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8003812:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8003816:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 800381a:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 800381e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003822:	8482      	strh	r2, [r0, #36]	; 0x24
    }
 8003824:	4770      	bx	lr
 8003826:	bf00      	nop
 8003828:	08020890 	.word	0x08020890

0800382c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
    Image(const Bitmap& bmp = Bitmap())
 800382c:	b538      	push	{r3, r4, r5, lr}
        : Widget(), bitmap(bmp), alpha(255)
 800382e:	2226      	movs	r2, #38	; 0x26
    Image(const Bitmap& bmp = Bitmap())
 8003830:	4604      	mov	r4, r0
 8003832:	460d      	mov	r5, r1
        : Widget(), bitmap(bmp), alpha(255)
 8003834:	2100      	movs	r1, #0
 8003836:	f019 ffd2 	bl	801d7de <memset>
 800383a:	4620      	mov	r0, r4
 800383c:	f7ff ffe4 	bl	8003808 <_ZN8touchgfx8DrawableC1Ev>
 8003840:	4b06      	ldr	r3, [pc, #24]	; (800385c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 8003842:	6023      	str	r3, [r4, #0]
 8003844:	882b      	ldrh	r3, [r5, #0]
 8003846:	84e3      	strh	r3, [r4, #38]	; 0x26
 8003848:	23ff      	movs	r3, #255	; 0xff
        Image::setBitmap(bmp);
 800384a:	4620      	mov	r0, r4
        : Widget(), bitmap(bmp), alpha(255)
 800384c:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        Image::setBitmap(bmp);
 8003850:	4629      	mov	r1, r5
 8003852:	f009 fd8f 	bl	800d374 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 8003856:	4620      	mov	r0, r4
 8003858:	bd38      	pop	{r3, r4, r5, pc}
 800385a:	bf00      	nop
 800385c:	080207d8 	.word	0x080207d8

08003860 <_ZN15Screen3ViewBaseD1Ev>:

class Screen3ViewBase : public touchgfx::View<Screen3Presenter>
{
public:
    Screen3ViewBase();
    virtual ~Screen3ViewBase() {}
 8003860:	4770      	bx	lr

08003862 <_ZN15Screen3ViewBase11setupScreenEv>:
}

void Screen3ViewBase::setupScreen()
{

}
 8003862:	4770      	bx	lr

08003864 <_ZN8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003864:	4770      	bx	lr

08003866 <_ZN8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003866:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003868:	68c2      	ldr	r2, [r0, #12]
 800386a:	6844      	ldr	r4, [r0, #4]
 800386c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800386e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003870:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003874:	07d2      	lsls	r2, r2, #31
 8003876:	bf48      	it	mi
 8003878:	5962      	ldrmi	r2, [r4, r5]
 800387a:	689b      	ldr	r3, [r3, #8]
    }
 800387c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800387e:	bf48      	it	mi
 8003880:	58d3      	ldrmi	r3, [r2, r3]
 8003882:	4718      	bx	r3

08003884 <_ZNK8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8003884:	6843      	ldr	r3, [r0, #4]
 8003886:	b12b      	cbz	r3, 8003894 <_ZNK8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8003888:	6883      	ldr	r3, [r0, #8]
 800388a:	b92b      	cbnz	r3, 8003898 <_ZNK8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800388c:	68c0      	ldr	r0, [r0, #12]
 800388e:	f000 0001 	and.w	r0, r0, #1
 8003892:	4770      	bx	lr
 8003894:	4618      	mov	r0, r3
 8003896:	4770      	bx	lr
 8003898:	2001      	movs	r0, #1
    }
 800389a:	4770      	bx	lr

0800389c <_ZN8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800389c:	b510      	push	{r4, lr}
 800389e:	2110      	movs	r1, #16
 80038a0:	4604      	mov	r4, r0
 80038a2:	f019 fd69 	bl	801d378 <_ZdlPvj>
 80038a6:	4620      	mov	r0, r4
 80038a8:	bd10      	pop	{r4, pc}

080038aa <_ZN15Screen3ViewBaseD0Ev>:
 80038aa:	b510      	push	{r4, lr}
 80038ac:	21dc      	movs	r1, #220	; 0xdc
 80038ae:	4604      	mov	r4, r0
 80038b0:	f019 fd62 	bl	801d378 <_ZdlPvj>
 80038b4:	4620      	mov	r0, r4
 80038b6:	bd10      	pop	{r4, pc}

080038b8 <_ZN15Screen3ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Screen3ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonPlayAgain)
 80038b8:	3098      	adds	r0, #152	; 0x98
 80038ba:	4288      	cmp	r0, r1
{
 80038bc:	b508      	push	{r3, lr}
    if (&src == &buttonPlayAgain)
 80038be:	d105      	bne.n	80038cc <_ZN15Screen3ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80038c0:	f00b fad8 	bl	800ee74 <_ZN8touchgfx11Application11getInstanceEv>
        //InterPlayAgain
        //When buttonPlayAgain clicked change screen to Screen4
        //Go to Screen4 with screen transition towards East
        application().gotoScreen4ScreenSlideTransitionEast();
    }
}
 80038c4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen4ScreenSlideTransitionEast();
 80038c8:	f7ff b9e0 	b.w	8002c8c <_ZN23FrontendApplicationBase36gotoScreen4ScreenSlideTransitionEastEv>
}
 80038cc:	bd08      	pop	{r3, pc}
	...

080038d0 <_ZN15Screen3ViewBaseC1Ev>:
Screen3ViewBase::Screen3ViewBase() :
 80038d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80038d4:	4604      	mov	r4, r0
 80038d6:	b087      	sub	sp, #28
    buttonCallback(this, &Screen3ViewBase::buttonCallbackHandler)
 80038d8:	4627      	mov	r7, r4
 80038da:	2500      	movs	r5, #0
 80038dc:	f00c fd60 	bl	80103a0 <_ZN8touchgfx6ScreenC1Ev>
 80038e0:	4b41      	ldr	r3, [pc, #260]	; (80039e8 <_ZN15Screen3ViewBaseC1Ev+0x118>)
 80038e2:	63e5      	str	r5, [r4, #60]	; 0x3c
 80038e4:	f847 3b40 	str.w	r3, [r7], #64
        : Widget(), alpha(255), color(0)
 80038e8:	4b40      	ldr	r3, [pc, #256]	; (80039ec <_ZN15Screen3ViewBaseC1Ev+0x11c>)
          cachedAbsX(0),
 80038ea:	6625      	str	r5, [r4, #96]	; 0x60
 80038ec:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 80038f0:	f44f 7380 	mov.w	r3, #256	; 0x100
 80038f4:	f104 066c 	add.w	r6, r4, #108	; 0x6c
 80038f8:	f8a4 3064 	strh.w	r3, [r4, #100]	; 0x64
 80038fc:	23ff      	movs	r3, #255	; 0xff
 80038fe:	f64f 78ff 	movw	r8, #65535	; 0xffff
 8003902:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8003906:	a905      	add	r1, sp, #20
 8003908:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 800390c:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 8003910:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
        : color(col)
 8003914:	66a5      	str	r5, [r4, #104]	; 0x68
 8003916:	4630      	mov	r0, r6
 8003918:	f8ad 8014 	strh.w	r8, [sp, #20]
 800391c:	f008 fdac 	bl	800c478 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
        touchable = touch;
 8003920:	f240 1301 	movw	r3, #257	; 0x101
 8003924:	f8a4 30bc 	strh.w	r3, [r4, #188]	; 0xbc
 8003928:	4b31      	ldr	r3, [pc, #196]	; (80039f0 <_ZN15Screen3ViewBaseC1Ev+0x120>)
 800392a:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
        : pobject(pObject), pmemfun(pmemfun_1)
 800392e:	4b31      	ldr	r3, [pc, #196]	; (80039f4 <_ZN15Screen3ViewBaseC1Ev+0x124>)
        : Widget(), action(), pressed(false)
 8003930:	f8c4 50c0 	str.w	r5, [r4, #192]	; 0xc0
 8003934:	e9c4 3433 	strd	r3, r4, [r4, #204]	; 0xcc
 8003938:	4b2f      	ldr	r3, [pc, #188]	; (80039f8 <_ZN15Screen3ViewBaseC1Ev+0x128>)
 800393a:	f884 50c4 	strb.w	r5, [r4, #196]	; 0xc4
 800393e:	e9c4 3535 	strd	r3, r5, [r4, #212]	; 0xd4
    __background.setPosition(0, 0, 240, 320);
 8003942:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8003946:	462a      	mov	r2, r5
 8003948:	9300      	str	r3, [sp, #0]
 800394a:	4629      	mov	r1, r5
 800394c:	4638      	mov	r0, r7
        : x(0), y(0), width(0), height(0)
 800394e:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 8003952:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
          nextSibling(0),
 8003956:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
          cachedAbsX(0),
 800395a:	e9c4 552d 	strd	r5, r5, [r4, #180]	; 0xb4
 800395e:	f8a4 80c6 	strh.w	r8, [r4, #198]	; 0xc6
 8003962:	f8a4 80c8 	strh.w	r8, [r4, #200]	; 0xc8
 8003966:	f884 80ca 	strb.w	r8, [r4, #202]	; 0xca
 800396a:	23f0      	movs	r3, #240	; 0xf0
 800396c:	f7fe ffbe 	bl	80028ec <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003970:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003974:	66a3      	str	r3, [r4, #104]	; 0x68
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_GAME_OVER_PNG10_ID));
 8003976:	a905      	add	r1, sp, #20
 8003978:	230d      	movs	r3, #13
 800397a:	4630      	mov	r0, r6
 800397c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8003980:	f009 fcf8 	bl	800d374 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1.setPosition(16, 83, 209, 98);
 8003984:	2362      	movs	r3, #98	; 0x62
 8003986:	9300      	str	r3, [sp, #0]
 8003988:	2253      	movs	r2, #83	; 0x53
 800398a:	23d1      	movs	r3, #209	; 0xd1
 800398c:	4630      	mov	r0, r6
 800398e:	2110      	movs	r1, #16
 8003990:	f7fe ffac 	bl	80028ec <_ZN8touchgfx8Drawable11setPositionEssss>
    buttonCallback(this, &Screen3ViewBase::buttonCallbackHandler)
 8003994:	f104 0998 	add.w	r9, r4, #152	; 0x98
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003998:	4629      	mov	r1, r5
 800399a:	4630      	mov	r0, r6
 800399c:	f008 fd32 	bl	800c404 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    buttonPlayAgain.setXY(60, 220);
 80039a0:	4648      	mov	r0, r9
 80039a2:	22dc      	movs	r2, #220	; 0xdc
 80039a4:	213c      	movs	r1, #60	; 0x3c
 80039a6:	f7ff fe40 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
    buttonPlayAgain.setBitmaps(touchgfx::Bitmap(BITMAP_TRY_AGAIN_ID), touchgfx::Bitmap(BITMAP_TRY_AGAIN_ID));
 80039aa:	aa05      	add	r2, sp, #20
 80039ac:	231b      	movs	r3, #27
 80039ae:	a904      	add	r1, sp, #16
 80039b0:	4648      	mov	r0, r9
 80039b2:	f8ad 3010 	strh.w	r3, [sp, #16]
 80039b6:	f8ad 3014 	strh.w	r3, [sp, #20]
 80039ba:	f009 fb79 	bl	800d0b0 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    buttonPlayAgain.setAction(buttonCallback);
 80039be:	f104 03cc 	add.w	r3, r4, #204	; 0xcc
        action = &callback;
 80039c2:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80039c6:	1d20      	adds	r0, r4, #4
 80039c8:	4639      	mov	r1, r7
 80039ca:	9003      	str	r0, [sp, #12]
 80039cc:	f007 fa12 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80039d0:	9803      	ldr	r0, [sp, #12]
 80039d2:	4631      	mov	r1, r6
 80039d4:	f007 fa0e 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80039d8:	9803      	ldr	r0, [sp, #12]
 80039da:	4649      	mov	r1, r9
 80039dc:	f007 fa0a 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80039e0:	4620      	mov	r0, r4
 80039e2:	b007      	add	sp, #28
 80039e4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80039e8:	0801f9a8 	.word	0x0801f9a8
 80039ec:	08020694 	.word	0x08020694
 80039f0:	080206fc 	.word	0x080206fc
 80039f4:	0801f990 	.word	0x0801f990
 80039f8:	080038b9 	.word	0x080038b9

080039fc <_ZN15Screen4ViewBaseD1Ev>:

class Screen4ViewBase : public touchgfx::View<Screen4Presenter>
{
public:
    Screen4ViewBase();
    virtual ~Screen4ViewBase() {}
 80039fc:	4770      	bx	lr

080039fe <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEE20handlePressedUpdatedEv>:
        return pressed;
 80039fe:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 8003a02:	b14b      	cbz	r3, 8003a18 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEE20handlePressedUpdatedEv+0x1a>
 8003a04:	f100 0274 	add.w	r2, r0, #116	; 0x74
 8003a08:	6812      	ldr	r2, [r2, #0]
 8003a0a:	6642      	str	r2, [r0, #100]	; 0x64
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8003a0c:	b13b      	cbz	r3, 8003a1e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEE20handlePressedUpdatedEv+0x20>
 8003a0e:	f100 037c 	add.w	r3, r0, #124	; 0x7c
 8003a12:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
 8003a14:	6683      	str	r3, [r0, #104]	; 0x68
        T::handlePressedUpdated();
    }
 8003a16:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 8003a18:	f100 0270 	add.w	r2, r0, #112	; 0x70
 8003a1c:	e7f4      	b.n	8003a08 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEE20handlePressedUpdatedEv+0xa>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8003a1e:	f100 0378 	add.w	r3, r0, #120	; 0x78
 8003a22:	e7f6      	b.n	8003a12 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEE20handlePressedUpdatedEv+0x14>

08003a24 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEED1Ev>:
class BoxWithBorderButtonStyle : public T
 8003a24:	4770      	bx	lr

08003a26 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEE18handleAlphaUpdatedEv>:
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8003a26:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 8003a2a:	f880 3062 	strb.w	r3, [r0, #98]	; 0x62
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8003a2e:	4770      	bx	lr

08003a30 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 8003a30:	b510      	push	{r4, lr}
 8003a32:	2180      	movs	r1, #128	; 0x80
 8003a34:	4604      	mov	r4, r0
 8003a36:	f019 fc9f 	bl	801d378 <_ZdlPvj>
 8003a3a:	4620      	mov	r0, r4
 8003a3c:	bd10      	pop	{r4, pc}

08003a3e <_ZN15Screen4ViewBaseD0Ev>:
 8003a3e:	b510      	push	{r4, lr}
 8003a40:	f44f 6184 	mov.w	r1, #1056	; 0x420
 8003a44:	4604      	mov	r4, r0
 8003a46:	f019 fc97 	bl	801d378 <_ZdlPvj>
 8003a4a:	4620      	mov	r0, r4
 8003a4c:	bd10      	pop	{r4, pc}

08003a4e <_ZN15Screen4ViewBase11setupScreenEv>:
    add(leftButton);
    add(rightButton);
}

void Screen4ViewBase::setupScreen()
{
 8003a4e:	b508      	push	{r3, lr}
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003a50:	f00b fa10 	bl	800ee74 <_ZN8touchgfx11Application11getInstanceEv>

    //endgame
    //When screen transition begins change screen to Screen3
    //Go to Screen3 with screen transition towards East
    application().gotoScreen3ScreenSlideTransitionEast();
 8003a54:	f7ff f8fa 	bl	8002c4c <_ZN23FrontendApplicationBase36gotoScreen3ScreenSlideTransitionEastEv>
 8003a58:	f00b fa0c 	bl	800ee74 <_ZN8touchgfx11Application11getInstanceEv>
    //boss
    //When screen transition begins change screen to Screen5
    //Go to Screen5 with screen transition towards East
    application().gotoScreen5ScreenSlideTransitionEast();

}
 8003a5c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    application().gotoScreen5ScreenSlideTransitionEast();
 8003a60:	f7ff b924 	b.w	8002cac <_ZN23FrontendApplicationBase36gotoScreen5ScreenSlideTransitionEastEv>

08003a64 <_ZN8touchgfx19RepeatButtonTrigger15handleTickEventEv>:

    void handleTickEvent()
    {
        AbstractButtonContainer::handleTickEvent();

        if (!pressed)
 8003a64:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
    void handleTickEvent()
 8003a68:	b510      	push	{r4, lr}
 8003a6a:	4604      	mov	r4, r0
        if (!pressed)
 8003a6c:	b16b      	cbz	r3, 8003a8a <_ZN8touchgfx19RepeatButtonTrigger15handleTickEventEv+0x26>
        {
            return;
        }
        if (ticks == ticksBeforeContinuous)
 8003a6e:	f9b0 3038 	ldrsh.w	r3, [r0, #56]	; 0x38
 8003a72:	f9b0 203a 	ldrsh.w	r2, [r0, #58]	; 0x3a
 8003a76:	429a      	cmp	r2, r3
 8003a78:	d108      	bne.n	8003a8c <_ZN8touchgfx19RepeatButtonTrigger15handleTickEventEv+0x28>
        {
            executeAction();
 8003a7a:	6803      	ldr	r3, [r0, #0]
 8003a7c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8003a80:	4798      	blx	r3

            ticks = 0;
 8003a82:	2300      	movs	r3, #0
 8003a84:	8723      	strh	r3, [r4, #56]	; 0x38
            ticksBeforeContinuous = ticksInterval;
 8003a86:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8003a88:	8763      	strh	r3, [r4, #58]	; 0x3a
        }
        else
        {
            ticks++;
        }
    }
 8003a8a:	bd10      	pop	{r4, pc}
            ticks++;
 8003a8c:	3301      	adds	r3, #1
 8003a8e:	8703      	strh	r3, [r0, #56]	; 0x38
 8003a90:	e7fb      	b.n	8003a8a <_ZN8touchgfx19RepeatButtonTrigger15handleTickEventEv+0x26>

08003a92 <_ZN8touchgfx19RepeatButtonTrigger16handleClickEventERKNS_10ClickEventE>:
    void handleClickEvent(const ClickEvent& event)
 8003a92:	b538      	push	{r3, r4, r5, lr}
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 8003a94:	790b      	ldrb	r3, [r1, #4]
 8003a96:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
 8003a9a:	4604      	mov	r4, r0
 8003a9c:	460d      	mov	r5, r1
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8003a9e:	b983      	cbnz	r3, 8003ac2 <_ZN8touchgfx19RepeatButtonTrigger16handleClickEventERKNS_10ClickEventE+0x30>
 8003aa0:	b182      	cbz	r2, 8003ac4 <_ZN8touchgfx19RepeatButtonTrigger16handleClickEventERKNS_10ClickEventE+0x32>
            executeAction();
 8003aa2:	6823      	ldr	r3, [r4, #0]
 8003aa4:	4620      	mov	r0, r4
 8003aa6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8003aaa:	4798      	blx	r3
            ticks = 0;
 8003aac:	2300      	movs	r3, #0
 8003aae:	8723      	strh	r3, [r4, #56]	; 0x38
            ticksBeforeContinuous = ticksDelay;
 8003ab0:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8003ab2:	8763      	strh	r3, [r4, #58]	; 0x3a
            Application::getInstance()->registerTimerWidget(this);
 8003ab4:	f00b f9de 	bl	800ee74 <_ZN8touchgfx11Application11getInstanceEv>
 8003ab8:	4621      	mov	r1, r4
    }
 8003aba:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            Application::getInstance()->registerTimerWidget(this);
 8003abe:	f00b b9df 	b.w	800ee80 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8003ac2:	b182      	cbz	r2, 8003ae6 <_ZN8touchgfx19RepeatButtonTrigger16handleClickEventERKNS_10ClickEventE+0x54>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 8003ac4:	fab3 f383 	clz	r3, r3
 8003ac8:	095b      	lsrs	r3, r3, #5
 8003aca:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        handlePressedUpdated();
 8003ace:	6823      	ldr	r3, [r4, #0]
 8003ad0:	4620      	mov	r0, r4
 8003ad2:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8003ad6:	4798      	blx	r3
            invalidate();
 8003ad8:	6823      	ldr	r3, [r4, #0]
 8003ada:	4620      	mov	r0, r4
 8003adc:	695b      	ldr	r3, [r3, #20]
 8003ade:	4798      	blx	r3
        if (event.getType() == ClickEvent::PRESSED)
 8003ae0:	792b      	ldrb	r3, [r5, #4]
 8003ae2:	2b00      	cmp	r3, #0
 8003ae4:	d0dd      	beq.n	8003aa2 <_ZN8touchgfx19RepeatButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            Application::getInstance()->unregisterTimerWidget(this);
 8003ae6:	f00b f9c5 	bl	800ee74 <_ZN8touchgfx11Application11getInstanceEv>
 8003aea:	4621      	mov	r1, r4
    }
 8003aec:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            Application::getInstance()->unregisterTimerWidget(this);
 8003af0:	f00b b9ec 	b.w	800eecc <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>

08003af4 <_ZN8touchgfx3BoxC1Ev>:
    Box()
 8003af4:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 8003af6:	2226      	movs	r2, #38	; 0x26
    Box()
 8003af8:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 8003afa:	2100      	movs	r1, #0
 8003afc:	f019 fe6f 	bl	801d7de <memset>
 8003b00:	4620      	mov	r0, r4
 8003b02:	f7ff fe81 	bl	8003808 <_ZN8touchgfx8DrawableC1Ev>
 8003b06:	4b04      	ldr	r3, [pc, #16]	; (8003b18 <_ZN8touchgfx3BoxC1Ev+0x24>)
 8003b08:	6023      	str	r3, [r4, #0]
 8003b0a:	23ff      	movs	r3, #255	; 0xff
 8003b0c:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
        : color(col)
 8003b10:	2300      	movs	r3, #0
 8003b12:	62a3      	str	r3, [r4, #40]	; 0x28
    }
 8003b14:	4620      	mov	r0, r4
 8003b16:	bd10      	pop	{r4, pc}
 8003b18:	08020694 	.word	0x08020694

08003b1c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEC1Ev>:
    BoxWithBorderButtonStyle()
 8003b1c:	b570      	push	{r4, r5, r6, lr}
 8003b1e:	4604      	mov	r4, r0
          firstChild(0)
 8003b20:	f7ff fe72 	bl	8003808 <_ZN8touchgfx8DrawableC1Ev>
        : pressed(false), alpha(255), action(0)
 8003b24:	f44f 437f 	mov.w	r3, #65280	; 0xff00
 8003b28:	85a3      	strh	r3, [r4, #44]	; 0x2c
        touchable = touch;
 8003b2a:	2301      	movs	r3, #1
 8003b2c:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
        : AbstractButtonContainer(), ticksDelay(30), ticksInterval(15), ticks(0), ticksBeforeContinuous(0)
 8003b30:	4b10      	ldr	r3, [pc, #64]	; (8003b74 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEC1Ev+0x58>)
 8003b32:	2500      	movs	r5, #0
        : T(), up(), down()
 8003b34:	4626      	mov	r6, r4
 8003b36:	e9c4 350d 	strd	r3, r5, [r4, #52]	; 0x34
 8003b3a:	4b0f      	ldr	r3, [pc, #60]	; (8003b78 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEC1Ev+0x5c>)
 8003b3c:	62a5      	str	r5, [r4, #40]	; 0x28
 8003b3e:	6325      	str	r5, [r4, #48]	; 0x30
 8003b40:	f846 3b3c 	str.w	r3, [r6], #60
        : Box(), borderColor(0), borderSize(0)
 8003b44:	4630      	mov	r0, r6
 8003b46:	f7ff ffd5 	bl	8003af4 <_ZN8touchgfx3BoxC1Ev>
 8003b4a:	4b0c      	ldr	r3, [pc, #48]	; (8003b7c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEC1Ev+0x60>)
 8003b4c:	63e3      	str	r3, [r4, #60]	; 0x3c
        borderBox.setXY(0, 0);
 8003b4e:	462a      	mov	r2, r5
 8003b50:	4629      	mov	r1, r5
 8003b52:	4630      	mov	r0, r6
        : color(0)
 8003b54:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 8003b58:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
        : color(col)
 8003b5c:	66a5      	str	r5, [r4, #104]	; 0x68
 8003b5e:	f8a4 506c 	strh.w	r5, [r4, #108]	; 0x6c
 8003b62:	f7ff fd62 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 8003b66:	4620      	mov	r0, r4
 8003b68:	4631      	mov	r1, r6
 8003b6a:	f007 f943 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8003b6e:	4620      	mov	r0, r4
 8003b70:	bd70      	pop	{r4, r5, r6, pc}
 8003b72:	bf00      	nop
 8003b74:	000f001e 	.word	0x000f001e
 8003b78:	0801f9dc 	.word	0x0801f9dc
 8003b7c:	08020770 	.word	0x08020770

08003b80 <_ZN15Screen4ViewBaseC1Ev>:
Screen4ViewBase::Screen4ViewBase()
 8003b80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003b84:	ed2d 8b0e 	vpush	{d8-d14}
 8003b88:	4604      	mov	r4, r0
 8003b8a:	b085      	sub	sp, #20
 8003b8c:	f00c fc08 	bl	80103a0 <_ZN8touchgfx6ScreenC1Ev>
 8003b90:	4622      	mov	r2, r4
 8003b92:	2500      	movs	r5, #0
 8003b94:	4beb      	ldr	r3, [pc, #940]	; (8003f44 <_ZN15Screen4ViewBaseC1Ev+0x3c4>)
 8003b96:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003b98:	f842 3b40 	str.w	r3, [r2], #64
 8003b9c:	4610      	mov	r0, r2
 8003b9e:	ee08 2a10 	vmov	s16, r2
 8003ba2:	f7ff ffa7 	bl	8003af4 <_ZN8touchgfx3BoxC1Ev>
 8003ba6:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 8003baa:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8003bae:	a903      	add	r1, sp, #12
 8003bb0:	4618      	mov	r0, r3
 8003bb2:	ee08 3a90 	vmov	s17, r3
 8003bb6:	f8ad 700c 	strh.w	r7, [sp, #12]
 8003bba:	f008 fc5d 	bl	800c478 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003bbe:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8003bc2:	a903      	add	r1, sp, #12
 8003bc4:	4618      	mov	r0, r3
 8003bc6:	ee09 3a10 	vmov	s18, r3
 8003bca:	f8ad 700c 	strh.w	r7, [sp, #12]
 8003bce:	f008 fc53 	bl	800c478 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003bd2:	f104 03c4 	add.w	r3, r4, #196	; 0xc4
 8003bd6:	a903      	add	r1, sp, #12
 8003bd8:	4618      	mov	r0, r3
 8003bda:	ee0a 3a90 	vmov	s21, r3
 8003bde:	f8ad 700c 	strh.w	r7, [sp, #12]
 8003be2:	f7ff fe23 	bl	800382c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003be6:	f104 03f0 	add.w	r3, r4, #240	; 0xf0
 8003bea:	a903      	add	r1, sp, #12
 8003bec:	4618      	mov	r0, r3
 8003bee:	ee0b 3a10 	vmov	s22, r3
 8003bf2:	f8ad 700c 	strh.w	r7, [sp, #12]
 8003bf6:	f7ff fe19 	bl	800382c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003bfa:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8003bfe:	a903      	add	r1, sp, #12
 8003c00:	4618      	mov	r0, r3
 8003c02:	ee09 3a90 	vmov	s19, r3
 8003c06:	f8ad 700c 	strh.w	r7, [sp, #12]
 8003c0a:	f008 fc35 	bl	800c478 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003c0e:	f504 73a4 	add.w	r3, r4, #328	; 0x148
 8003c12:	a903      	add	r1, sp, #12
 8003c14:	4618      	mov	r0, r3
 8003c16:	ee0a 3a10 	vmov	s20, r3
 8003c1a:	f8ad 700c 	strh.w	r7, [sp, #12]
 8003c1e:	f008 fc2b 	bl	800c478 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003c22:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 8003c26:	f504 7bd0 	add.w	fp, r4, #416	; 0x1a0
 8003c2a:	a903      	add	r1, sp, #12
 8003c2c:	4618      	mov	r0, r3
 8003c2e:	ee0b 3a90 	vmov	s23, r3
 8003c32:	f8ad 700c 	strh.w	r7, [sp, #12]
 8003c36:	f7ff fdf9 	bl	800382c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
          endId(BITMAP_INVALID),
          updateTicksInterval(updateInterval),
          ticksSinceUpdate(0),
          reverse(false),
          loopAnimation(false),
          running(false)
 8003c3a:	a903      	add	r1, sp, #12
 8003c3c:	4658      	mov	r0, fp
          updateTicksInterval(updateInterval),
 8003c3e:	2601      	movs	r6, #1
 8003c40:	f04f 38ff 	mov.w	r8, #4294967295
          running(false)
 8003c44:	f8df 9304 	ldr.w	r9, [pc, #772]	; 8003f4c <_ZN15Screen4ViewBaseC1Ev+0x3cc>
 8003c48:	f8ad 700c 	strh.w	r7, [sp, #12]
 8003c4c:	f7ff fdee 	bl	800382c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003c50:	f504 73ee 	add.w	r3, r4, #476	; 0x1dc
          updateTicksInterval(updateInterval),
 8003c54:	e9c4 8674 	strd	r8, r6, [r4, #464]	; 0x1d0
          running(false)
 8003c58:	f8c4 91a0 	str.w	r9, [r4, #416]	; 0x1a0
        : animationDoneAction(0),
 8003c5c:	f8c4 51cc 	str.w	r5, [r4, #460]	; 0x1cc
          running(false)
 8003c60:	f884 51d8 	strb.w	r5, [r4, #472]	; 0x1d8
 8003c64:	a903      	add	r1, sp, #12
 8003c66:	4618      	mov	r0, r3
 8003c68:	ee0c 3a10 	vmov	s24, r3
 8003c6c:	f8ad 800c 	strh.w	r8, [sp, #12]
 8003c70:	f7ff fddc 	bl	800382c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003c74:	f504 7302 	add.w	r3, r4, #520	; 0x208
 8003c78:	a903      	add	r1, sp, #12
 8003c7a:	4618      	mov	r0, r3
 8003c7c:	ee0c 3a90 	vmov	s25, r3
 8003c80:	f8ad 700c 	strh.w	r7, [sp, #12]
 8003c84:	f7ff fdd2 	bl	800382c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003c88:	f504 730d 	add.w	r3, r4, #564	; 0x234
 8003c8c:	a903      	add	r1, sp, #12
 8003c8e:	4618      	mov	r0, r3
 8003c90:	ee0d 3a10 	vmov	s26, r3
 8003c94:	f8ad 700c 	strh.w	r7, [sp, #12]
 8003c98:	f7ff fdc8 	bl	800382c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003c9c:	f504 7318 	add.w	r3, r4, #608	; 0x260
 8003ca0:	a903      	add	r1, sp, #12
 8003ca2:	4618      	mov	r0, r3
 8003ca4:	ee0d 3a90 	vmov	s27, r3
 8003ca8:	f8ad 700c 	strh.w	r7, [sp, #12]
 8003cac:	f7ff fdbe 	bl	800382c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003cb0:	f504 7323 	add.w	r3, r4, #652	; 0x28c
 8003cb4:	a903      	add	r1, sp, #12
 8003cb6:	4618      	mov	r0, r3
 8003cb8:	ee0e 3a10 	vmov	s28, r3
 8003cbc:	f8ad 700c 	strh.w	r7, [sp, #12]
 8003cc0:	f7ff fdb4 	bl	800382c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003cc4:	f504 732e 	add.w	r3, r4, #696	; 0x2b8
 8003cc8:	f504 7a39 	add.w	sl, r4, #740	; 0x2e4
 8003ccc:	4618      	mov	r0, r3
 8003cce:	a903      	add	r1, sp, #12
 8003cd0:	ee0e 3a90 	vmov	s29, r3
 8003cd4:	f8ad 700c 	strh.w	r7, [sp, #12]
 8003cd8:	f7ff fda8 	bl	800382c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003cdc:	a903      	add	r1, sp, #12
 8003cde:	4650      	mov	r0, sl
 8003ce0:	f8ad 700c 	strh.w	r7, [sp, #12]
 8003ce4:	f7ff fda2 	bl	800382c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003ce8:	f8c4 92e4 	str.w	r9, [r4, #740]	; 0x2e4
 8003cec:	f504 7948 	add.w	r9, r4, #800	; 0x320
          startId(BITMAP_INVALID),
 8003cf0:	e9c4 58c4 	strd	r5, r8, [r4, #784]	; 0x310
          updateTicksInterval(updateInterval),
 8003cf4:	f8c4 6318 	str.w	r6, [r4, #792]	; 0x318
 8003cf8:	f504 7868 	add.w	r8, r4, #928	; 0x3a0
          running(false)
 8003cfc:	f884 531c 	strb.w	r5, [r4, #796]	; 0x31c
 8003d00:	4648      	mov	r0, r9
    __background.setPosition(0, 0, 240, 320);
 8003d02:	f44f 77a0 	mov.w	r7, #320	; 0x140
Screen4ViewBase::Screen4ViewBase()
 8003d06:	f7ff ff09 	bl	8003b1c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEC1Ev>
 8003d0a:	4640      	mov	r0, r8
 8003d0c:	f7ff ff06 	bl	8003b1c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEC1Ev>
    __background.setPosition(0, 0, 240, 320);
 8003d10:	462a      	mov	r2, r5
 8003d12:	ee18 0a10 	vmov	r0, s16
 8003d16:	4629      	mov	r1, r5
 8003d18:	9700      	str	r7, [sp, #0]
 8003d1a:	23f0      	movs	r3, #240	; 0xf0
 8003d1c:	f7fe fde6 	bl	80028ec <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003d20:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
    background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_ID));
 8003d24:	ee18 0a90 	vmov	r0, s17
 8003d28:	66a3      	str	r3, [r4, #104]	; 0x68
 8003d2a:	a903      	add	r1, sp, #12
 8003d2c:	f8ad 500c 	strh.w	r5, [sp, #12]
 8003d30:	f009 fb20 	bl	800d374 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    background.setPosition(1, 0, 240, 320);
 8003d34:	462a      	mov	r2, r5
 8003d36:	ee18 0a90 	vmov	r0, s17
 8003d3a:	23f0      	movs	r3, #240	; 0xf0
 8003d3c:	4631      	mov	r1, r6
 8003d3e:	9700      	str	r7, [sp, #0]
 8003d40:	f7fe fdd4 	bl	80028ec <_ZN8touchgfx8Drawable11setPositionEssss>
    background.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003d44:	ee18 0a90 	vmov	r0, s17
 8003d48:	4629      	mov	r1, r5
 8003d4a:	f008 fb5b 	bl	800c404 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
     *
     * @note The user code must call invalidate() in order to update the display.
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8003d4e:	2363      	movs	r3, #99	; 0x63
    playerShip.setBitmap(touchgfx::Bitmap(BITMAP_SHIP_ID));
 8003d50:	ee19 0a10 	vmov	r0, s18
 8003d54:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 8003d58:	a903      	add	r1, sp, #12
 8003d5a:	2319      	movs	r3, #25
 8003d5c:	f8ad 300c 	strh.w	r3, [sp, #12]
 8003d60:	f009 fb08 	bl	800d374 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    playerShip.setPosition(105, 265, 31, 36);
 8003d64:	2324      	movs	r3, #36	; 0x24
 8003d66:	ee19 0a10 	vmov	r0, s18
 8003d6a:	9300      	str	r3, [sp, #0]
 8003d6c:	f240 1209 	movw	r2, #265	; 0x109
 8003d70:	231f      	movs	r3, #31
 8003d72:	2169      	movs	r1, #105	; 0x69
 8003d74:	f7fe fdba 	bl	80028ec <_ZN8touchgfx8Drawable11setPositionEssss>
    playerShip.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003d78:	ee19 0a10 	vmov	r0, s18
 8003d7c:	4629      	mov	r1, r5
 8003d7e:	f008 fb41 	bl	800c404 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    bullet.setXY(144, -23);
 8003d82:	ee1a 0a90 	vmov	r0, s21
 8003d86:	f06f 0216 	mvn.w	r2, #22
 8003d8a:	2190      	movs	r1, #144	; 0x90
 8003d8c:	f7ff fc4d 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
 8003d90:	f04f 0305 	mov.w	r3, #5
    bullet.setBitmap(touchgfx::Bitmap(BITMAP_BULLET_ID));
 8003d94:	ee1a 0a90 	vmov	r0, s21
 8003d98:	a903      	add	r1, sp, #12
 8003d9a:	f8ad 300c 	strh.w	r3, [sp, #12]
 8003d9e:	f009 fae9 	bl	800d374 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    enemy.setXY(61, -24);
 8003da2:	f06f 0217 	mvn.w	r2, #23
 8003da6:	ee1b 0a10 	vmov	r0, s22
 8003daa:	213d      	movs	r1, #61	; 0x3d
 8003dac:	f7ff fc3d 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
    enemy.setBitmap(touchgfx::Bitmap(BITMAP_ENEMY_ID));
 8003db0:	ee1b 0a10 	vmov	r0, s22
 8003db4:	2306      	movs	r3, #6
 8003db6:	a903      	add	r1, sp, #12
 8003db8:	f8ad 300c 	strh.w	r3, [sp, #12]
 8003dbc:	f009 fada 	bl	800d374 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_HP_ID));
 8003dc0:	ee19 0a90 	vmov	r0, s19
 8003dc4:	2312      	movs	r3, #18
 8003dc6:	a903      	add	r1, sp, #12
 8003dc8:	f8ad 300c 	strh.w	r3, [sp, #12]
 8003dcc:	f009 fad2 	bl	800d374 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1.setPosition(0, 4, 105, 23);
 8003dd0:	2317      	movs	r3, #23
 8003dd2:	2204      	movs	r2, #4
 8003dd4:	ee19 0a90 	vmov	r0, s19
 8003dd8:	9300      	str	r3, [sp, #0]
 8003dda:	4629      	mov	r1, r5
 8003ddc:	2369      	movs	r3, #105	; 0x69
 8003dde:	f7fe fd85 	bl	80028ec <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003de2:	ee19 0a90 	vmov	r0, s19
 8003de6:	4629      	mov	r1, r5
 8003de8:	f008 fb0c 	bl	800c404 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    hpplayer.setBitmap(touchgfx::Bitmap(BITMAP_HP_PLAYER_ID));
 8003dec:	ee1a 0a10 	vmov	r0, s20
 8003df0:	2313      	movs	r3, #19
 8003df2:	a903      	add	r1, sp, #12
 8003df4:	f8ad 300c 	strh.w	r3, [sp, #12]
 8003df8:	f009 fabc 	bl	800d374 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    hpplayer.setPosition(10, 11, 85, 9);
 8003dfc:	2309      	movs	r3, #9
 8003dfe:	ee1a 0a10 	vmov	r0, s20
 8003e02:	9300      	str	r3, [sp, #0]
 8003e04:	220b      	movs	r2, #11
 8003e06:	2355      	movs	r3, #85	; 0x55
 8003e08:	210a      	movs	r1, #10
 8003e0a:	f7fe fd6f 	bl	80028ec <_ZN8touchgfx8Drawable11setPositionEssss>
    hpplayer.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003e0e:	ee1a 0a10 	vmov	r0, s20
 8003e12:	4629      	mov	r1, r5
 8003e14:	f008 faf6 	bl	800c404 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    enemybullet.setXY(46, 320);
 8003e18:	463a      	mov	r2, r7
 8003e1a:	ee1b 0a90 	vmov	r0, s23
 8003e1e:	212e      	movs	r1, #46	; 0x2e
 8003e20:	f7ff fc03 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
 8003e24:	2308      	movs	r3, #8
    enemybullet.setBitmap(touchgfx::Bitmap(BITMAP_ENEMYBULLET_ID));
 8003e26:	ee1b 0a90 	vmov	r0, s23
 8003e2a:	a903      	add	r1, sp, #12
 8003e2c:	f8ad 300c 	strh.w	r3, [sp, #12]
 8003e30:	f009 faa0 	bl	800d374 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bosslazer.setXY(240, 113);
 8003e34:	4658      	mov	r0, fp
 8003e36:	2271      	movs	r2, #113	; 0x71
 8003e38:	21f0      	movs	r1, #240	; 0xf0
 8003e3a:	f7ff fbf6 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
    bosslazer.setBitmaps(BITMAP_GIPHY_0_ID, BITMAP_GIPHY_2_ID);
 8003e3e:	220f      	movs	r2, #15
 8003e40:	4658      	mov	r0, fp
 8003e42:	210e      	movs	r1, #14
 8003e44:	f008 fac5 	bl	800c3d2 <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>
    bosslazer.setUpdateTicksInterval(1);
 8003e48:	4631      	mov	r1, r6
 8003e4a:	4658      	mov	r0, fp
 8003e4c:	f008 fad4 	bl	800c3f8 <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>
    bosslazer.startAnimation(false, true, true);
 8003e50:	4633      	mov	r3, r6
 8003e52:	4632      	mov	r2, r6
 8003e54:	4629      	mov	r1, r5
 8003e56:	4658      	mov	r0, fp
 8003e58:	f008 fa17 	bl	800c28a <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>
    enemyblueO.setXY(17, -27);
 8003e5c:	ee1c 0a10 	vmov	r0, s24
 8003e60:	f06f 021a 	mvn.w	r2, #26
 8003e64:	2111      	movs	r1, #17
 8003e66:	f7ff fbe0 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
 8003e6a:	2307      	movs	r3, #7
    enemyblueO.setBitmap(touchgfx::Bitmap(BITMAP_ENEMYBLE_ID));
 8003e6c:	ee1c 0a10 	vmov	r0, s24
 8003e70:	a903      	add	r1, sp, #12
 8003e72:	f8ad 300c 	strh.w	r3, [sp, #12]
 8003e76:	f009 fa7d 	bl	800d374 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    enemyorangeO.setXY(366, 314);
 8003e7a:	ee1c 0a90 	vmov	r0, s25
 8003e7e:	f44f 729d 	mov.w	r2, #314	; 0x13a
 8003e82:	f44f 71b7 	mov.w	r1, #366	; 0x16e
 8003e86:	f7ff fbd0 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
 8003e8a:	f04f 0109 	mov.w	r1, #9
    enemyorangeO.setBitmap(touchgfx::Bitmap(BITMAP_ENEMYORANGE_ID));
 8003e8e:	ee1c 0a90 	vmov	r0, s25
 8003e92:	f8ad 100c 	strh.w	r1, [sp, #12]
 8003e96:	a903      	add	r1, sp, #12
 8003e98:	f009 fa6c 	bl	800d374 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    bluelazerO.setXY(113, 320);
 8003e9c:	463a      	mov	r2, r7
 8003e9e:	ee1d 0a10 	vmov	r0, s26
 8003ea2:	2171      	movs	r1, #113	; 0x71
 8003ea4:	f7ff fbc1 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
 8003ea8:	2303      	movs	r3, #3
    bluelazerO.setBitmap(touchgfx::Bitmap(BITMAP_BLUELAZER_ID));
 8003eaa:	ee1d 0a10 	vmov	r0, s26
 8003eae:	a903      	add	r1, sp, #12
 8003eb0:	f8ad 300c 	strh.w	r3, [sp, #12]
 8003eb4:	f009 fa5e 	bl	800d374 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    orangelazerO.setXY(189, 320);
 8003eb8:	463a      	mov	r2, r7
 8003eba:	ee1d 0a90 	vmov	r0, s27
 8003ebe:	21bd      	movs	r1, #189	; 0xbd
 8003ec0:	f7ff fbb3 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
 8003ec4:	2316      	movs	r3, #22
    orangelazerO.setBitmap(touchgfx::Bitmap(BITMAP_ORANGELZER_ID));
 8003ec6:	ee1d 0a90 	vmov	r0, s27
 8003eca:	a903      	add	r1, sp, #12
 8003ecc:	f8ad 300c 	strh.w	r3, [sp, #12]
 8003ed0:	f009 fa50 	bl	800d374 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    image1.setXY(176, -21);
 8003ed4:	ee1e 0a10 	vmov	r0, s28
 8003ed8:	f06f 0214 	mvn.w	r2, #20
 8003edc:	21b0      	movs	r1, #176	; 0xb0
 8003ede:	f7ff fba4 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
 8003ee2:	2310      	movs	r3, #16
    image1.setBitmap(touchgfx::Bitmap(BITMAP_HEAL_ID));
 8003ee4:	ee1e 0a10 	vmov	r0, s28
 8003ee8:	a903      	add	r1, sp, #12
 8003eea:	f8ad 300c 	strh.w	r3, [sp, #12]
 8003eee:	f009 fa41 	bl	800d374 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    x3.setXY(101, -21);
 8003ef2:	ee1e 0a90 	vmov	r0, s29
 8003ef6:	f06f 0214 	mvn.w	r2, #20
 8003efa:	2165      	movs	r1, #101	; 0x65
 8003efc:	f7ff fb95 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
 8003f00:	231e      	movs	r3, #30
    x3.setBitmap(touchgfx::Bitmap(BITMAP_X3_ID));
 8003f02:	ee1e 0a90 	vmov	r0, s29
 8003f06:	a903      	add	r1, sp, #12
 8003f08:	f8ad 300c 	strh.w	r3, [sp, #12]
 8003f0c:	f009 fa32 	bl	800d374 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    explore.setXY(241, 166);
 8003f10:	4650      	mov	r0, sl
 8003f12:	22a6      	movs	r2, #166	; 0xa6
 8003f14:	21f1      	movs	r1, #241	; 0xf1
 8003f16:	f7ff fb88 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
    explore.setBitmaps(BITMAP_EXPLORE1_ID, BITMAP_EXPLORE2_ID);
 8003f1a:	220c      	movs	r2, #12
 8003f1c:	4650      	mov	r0, sl
 8003f1e:	210b      	movs	r1, #11
 8003f20:	f008 fa57 	bl	800c3d2 <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>
    explore.setUpdateTicksInterval(1);
 8003f24:	4631      	mov	r1, r6
 8003f26:	4650      	mov	r0, sl
 8003f28:	f008 fa66 	bl	800c3f8 <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>
    explore.startAnimation(false, true, true);
 8003f2c:	4633      	mov	r3, r6
 8003f2e:	4632      	mov	r2, r6
 8003f30:	4629      	mov	r1, r5
 8003f32:	4650      	mov	r0, sl
 8003f34:	f008 f9a9 	bl	800c28a <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>
        ticksDelay = delay;
 8003f38:	4b03      	ldr	r3, [pc, #12]	; (8003f48 <_ZN15Screen4ViewBaseC1Ev+0x3c8>)
 8003f3a:	f8c4 3354 	str.w	r3, [r4, #852]	; 0x354
        borderBox.setPosition(x, y, width, height);
 8003f3e:	462a      	mov	r2, r5
 8003f40:	4629      	mov	r1, r5
 8003f42:	e005      	b.n	8003f50 <_ZN15Screen4ViewBaseC1Ev+0x3d0>
 8003f44:	0801fa78 	.word	0x0801fa78
 8003f48:	003c0001 	.word	0x003c0001
 8003f4c:	08020514 	.word	0x08020514
 8003f50:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 8003f54:	9700      	str	r7, [sp, #0]
 8003f56:	2378      	movs	r3, #120	; 0x78
 8003f58:	f7fe fcc8 	bl	80028ec <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 8003f5c:	f04f 0205 	mov.w	r2, #5
        down = colorPressed;
 8003f60:	4952      	ldr	r1, [pc, #328]	; (80040ac <_ZN15Screen4ViewBaseC1Ev+0x52c>)
        borderDown = borderColorPressed;
 8003f62:	4b53      	ldr	r3, [pc, #332]	; (80040b0 <_ZN15Screen4ViewBaseC1Ev+0x530>)
 8003f64:	f8a4 238c 	strh.w	r2, [r4, #908]	; 0x38c
 8003f68:	4852      	ldr	r0, [pc, #328]	; (80040b4 <_ZN15Screen4ViewBaseC1Ev+0x534>)
        down = colorPressed;
 8003f6a:	4a53      	ldr	r2, [pc, #332]	; (80040b8 <_ZN15Screen4ViewBaseC1Ev+0x538>)
        borderDown = borderColorPressed;
 8003f6c:	e9c4 03e6 	strd	r0, r3, [r4, #920]	; 0x398
        down = colorPressed;
 8003f70:	e9c4 21e4 	strd	r2, r1, [r4, #912]	; 0x390
        handlePressedUpdated();
 8003f74:	4648      	mov	r0, r9
 8003f76:	f7ff fd42 	bl	80039fe <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEE20handlePressedUpdatedEv>
    leftButton.setPosition(1, 0, 120, 320);
 8003f7a:	462a      	mov	r2, r5
 8003f7c:	4631      	mov	r1, r6
 8003f7e:	4648      	mov	r0, r9
 8003f80:	9700      	str	r7, [sp, #0]
 8003f82:	2378      	movs	r3, #120	; 0x78
 8003f84:	f7fe fcb2 	bl	80028ec <_ZN8touchgfx8Drawable11setPositionEssss>
        handleAlphaUpdated();
 8003f88:	f8d4 3320 	ldr.w	r3, [r4, #800]	; 0x320
        alpha = newAlpha;
 8003f8c:	f884 534d 	strb.w	r5, [r4, #845]	; 0x34d
        handleAlphaUpdated();
 8003f90:	4648      	mov	r0, r9
 8003f92:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8003f96:	4798      	blx	r3
 8003f98:	4b48      	ldr	r3, [pc, #288]	; (80040bc <_ZN15Screen4ViewBaseC1Ev+0x53c>)
 8003f9a:	f8c4 33d4 	str.w	r3, [r4, #980]	; 0x3d4
        borderBox.setPosition(x, y, width, height);
 8003f9e:	462a      	mov	r2, r5
 8003fa0:	4629      	mov	r1, r5
 8003fa2:	f504 7077 	add.w	r0, r4, #988	; 0x3dc
 8003fa6:	9700      	str	r7, [sp, #0]
 8003fa8:	2378      	movs	r3, #120	; 0x78
 8003faa:	f7fe fc9f 	bl	80028ec <_ZN8touchgfx8Drawable11setPositionEssss>
 8003fae:	f04f 0605 	mov.w	r6, #5
        up = colorReleased;
 8003fb2:	4a41      	ldr	r2, [pc, #260]	; (80040b8 <_ZN15Screen4ViewBaseC1Ev+0x538>)
        down = colorPressed;
 8003fb4:	493d      	ldr	r1, [pc, #244]	; (80040ac <_ZN15Screen4ViewBaseC1Ev+0x52c>)
        borderDown = borderColorPressed;
 8003fb6:	4b3e      	ldr	r3, [pc, #248]	; (80040b0 <_ZN15Screen4ViewBaseC1Ev+0x530>)
        borderUp = borderColorReleased;
 8003fb8:	483e      	ldr	r0, [pc, #248]	; (80040b4 <_ZN15Screen4ViewBaseC1Ev+0x534>)
        up = colorReleased;
 8003fba:	f8c4 2410 	str.w	r2, [r4, #1040]	; 0x410
        down = colorPressed;
 8003fbe:	f8c4 1414 	str.w	r1, [r4, #1044]	; 0x414
        borderUp = borderColorReleased;
 8003fc2:	f8c4 0418 	str.w	r0, [r4, #1048]	; 0x418
        borderDown = borderColorPressed;
 8003fc6:	f8c4 341c 	str.w	r3, [r4, #1052]	; 0x41c
        handlePressedUpdated();
 8003fca:	4640      	mov	r0, r8
 8003fcc:	f8a4 640c 	strh.w	r6, [r4, #1036]	; 0x40c
 8003fd0:	f7ff fd15 	bl	80039fe <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEE20handlePressedUpdatedEv>
    rightButton.setPosition(121, 0, 120, 320);
 8003fd4:	462a      	mov	r2, r5
 8003fd6:	2179      	movs	r1, #121	; 0x79
 8003fd8:	4640      	mov	r0, r8
 8003fda:	9700      	str	r7, [sp, #0]
 8003fdc:	2378      	movs	r3, #120	; 0x78
 8003fde:	f7fe fc85 	bl	80028ec <_ZN8touchgfx8Drawable11setPositionEssss>
 8003fe2:	f8d4 33a0 	ldr.w	r3, [r4, #928]	; 0x3a0
        alpha = newAlpha;
 8003fe6:	f884 53cd 	strb.w	r5, [r4, #973]	; 0x3cd
        handleAlphaUpdated();
 8003fea:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8003fee:	1d25      	adds	r5, r4, #4
 8003ff0:	4640      	mov	r0, r8
 8003ff2:	4798      	blx	r3
 8003ff4:	ee18 1a10 	vmov	r1, s16
 8003ff8:	4628      	mov	r0, r5
 8003ffa:	f006 fefb 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003ffe:	ee18 1a90 	vmov	r1, s17
 8004002:	4628      	mov	r0, r5
 8004004:	f006 fef6 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004008:	ee19 1a10 	vmov	r1, s18
 800400c:	4628      	mov	r0, r5
 800400e:	f006 fef1 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004012:	ee1a 1a90 	vmov	r1, s21
 8004016:	4628      	mov	r0, r5
 8004018:	f006 feec 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800401c:	ee1b 1a10 	vmov	r1, s22
 8004020:	4628      	mov	r0, r5
 8004022:	f006 fee7 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004026:	ee19 1a90 	vmov	r1, s19
 800402a:	4628      	mov	r0, r5
 800402c:	f006 fee2 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004030:	ee1a 1a10 	vmov	r1, s20
 8004034:	4628      	mov	r0, r5
 8004036:	f006 fedd 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800403a:	ee1b 1a90 	vmov	r1, s23
 800403e:	4628      	mov	r0, r5
 8004040:	f006 fed8 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004044:	4659      	mov	r1, fp
 8004046:	4628      	mov	r0, r5
 8004048:	f006 fed4 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800404c:	ee1c 1a10 	vmov	r1, s24
 8004050:	4628      	mov	r0, r5
 8004052:	f006 fecf 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004056:	ee1c 1a90 	vmov	r1, s25
 800405a:	4628      	mov	r0, r5
 800405c:	f006 feca 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004060:	ee1d 1a10 	vmov	r1, s26
 8004064:	4628      	mov	r0, r5
 8004066:	f006 fec5 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800406a:	ee1d 1a90 	vmov	r1, s27
 800406e:	4628      	mov	r0, r5
 8004070:	f006 fec0 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004074:	ee1e 1a10 	vmov	r1, s28
 8004078:	4628      	mov	r0, r5
 800407a:	f006 febb 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800407e:	ee1e 1a90 	vmov	r1, s29
 8004082:	4628      	mov	r0, r5
 8004084:	f006 feb6 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004088:	4651      	mov	r1, sl
 800408a:	4628      	mov	r0, r5
 800408c:	f006 feb2 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004090:	4649      	mov	r1, r9
 8004092:	4628      	mov	r0, r5
 8004094:	f006 feae 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004098:	4628      	mov	r0, r5
 800409a:	4641      	mov	r1, r8
 800409c:	f006 feaa 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80040a0:	4620      	mov	r0, r4
 80040a2:	b005      	add	sp, #20
 80040a4:	ecbd 8b0e 	vpop	{d8-d14}
 80040a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80040ac:	ff0099cc 	.word	0xff0099cc
 80040b0:	ff336699 	.word	0xff336699
 80040b4:	ff003366 	.word	0xff003366
 80040b8:	ff006699 	.word	0xff006699
 80040bc:	003c0001 	.word	0x003c0001

080040c0 <_ZN15Screen5ViewBaseD1Ev>:

class Screen5ViewBase : public touchgfx::View<Screen5Presenter>
{
public:
    Screen5ViewBase();
    virtual ~Screen5ViewBase() {}
 80040c0:	4770      	bx	lr

080040c2 <_ZN15Screen5ViewBaseD0Ev>:
 80040c2:	b510      	push	{r4, lr}
 80040c4:	f44f 7172 	mov.w	r1, #968	; 0x3c8
 80040c8:	4604      	mov	r4, r0
 80040ca:	f019 f955 	bl	801d378 <_ZdlPvj>
 80040ce:	4620      	mov	r0, r4
 80040d0:	bd10      	pop	{r4, pc}

080040d2 <_ZN15Screen5ViewBase11setupScreenEv>:
    add(leftButton);
    add(rightButton);
}

void Screen5ViewBase::setupScreen()
{
 80040d2:	b508      	push	{r3, lr}
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80040d4:	f00a fece 	bl	800ee74 <_ZN8touchgfx11Application11getInstanceEv>

    //endgame
    //When screen transition begins change screen to Screen3
    //Go to Screen3 with screen transition towards East
    application().gotoScreen3ScreenSlideTransitionEast();
 80040d8:	f7fe fdb8 	bl	8002c4c <_ZN23FrontendApplicationBase36gotoScreen3ScreenSlideTransitionEastEv>
 80040dc:	f00a feca 	bl	800ee74 <_ZN8touchgfx11Application11getInstanceEv>
    //wingame
    //When screen transition begins change screen to Screen6
    //Go to Screen6 with screen transition towards East
    application().gotoScreen6ScreenSlideTransitionEast();

}
 80040e0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    application().gotoScreen6ScreenSlideTransitionEast();
 80040e4:	f7fe bdf2 	b.w	8002ccc <_ZN23FrontendApplicationBase36gotoScreen6ScreenSlideTransitionEastEv>

080040e8 <_ZN15Screen5ViewBaseC1Ev>:
Screen5ViewBase::Screen5ViewBase()
 80040e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80040ec:	ed2d 8b0c 	vpush	{d8-d13}
 80040f0:	4604      	mov	r4, r0
 80040f2:	b085      	sub	sp, #20
 80040f4:	f00c f954 	bl	80103a0 <_ZN8touchgfx6ScreenC1Ev>
 80040f8:	4622      	mov	r2, r4
 80040fa:	2500      	movs	r5, #0
 80040fc:	4be9      	ldr	r3, [pc, #932]	; (80044a4 <_ZN15Screen5ViewBaseC1Ev+0x3bc>)
 80040fe:	63e5      	str	r5, [r4, #60]	; 0x3c
 8004100:	f842 3b40 	str.w	r3, [r2], #64
 8004104:	4610      	mov	r0, r2
 8004106:	ee08 2a10 	vmov	s16, r2
 800410a:	f7ff fcf3 	bl	8003af4 <_ZN8touchgfx3BoxC1Ev>
 800410e:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 8004112:	f64f 78ff 	movw	r8, #65535	; 0xffff
 8004116:	a903      	add	r1, sp, #12
 8004118:	4618      	mov	r0, r3
 800411a:	ee08 3a90 	vmov	s17, r3
 800411e:	f8ad 800c 	strh.w	r8, [sp, #12]
 8004122:	f008 f9a9 	bl	800c478 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8004126:	f104 0398 	add.w	r3, r4, #152	; 0x98
 800412a:	a903      	add	r1, sp, #12
 800412c:	4618      	mov	r0, r3
 800412e:	ee09 3a10 	vmov	s18, r3
 8004132:	f8ad 800c 	strh.w	r8, [sp, #12]
 8004136:	f008 f99f 	bl	800c478 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800413a:	f104 03c4 	add.w	r3, r4, #196	; 0xc4
 800413e:	a903      	add	r1, sp, #12
 8004140:	4618      	mov	r0, r3
 8004142:	ee0b 3a90 	vmov	s23, r3
 8004146:	f8ad 800c 	strh.w	r8, [sp, #12]
 800414a:	f7ff fb6f 	bl	800382c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800414e:	f104 03f0 	add.w	r3, r4, #240	; 0xf0
 8004152:	a903      	add	r1, sp, #12
 8004154:	4618      	mov	r0, r3
 8004156:	ee09 3a90 	vmov	s19, r3
 800415a:	f8ad 800c 	strh.w	r8, [sp, #12]
 800415e:	f008 f98b 	bl	800c478 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8004162:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8004166:	f504 7ba4 	add.w	fp, r4, #328	; 0x148
 800416a:	a903      	add	r1, sp, #12
 800416c:	4618      	mov	r0, r3
 800416e:	ee0a 3a10 	vmov	s20, r3
 8004172:	f8ad 800c 	strh.w	r8, [sp, #12]
 8004176:	f008 f97f 	bl	800c478 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800417a:	a903      	add	r1, sp, #12
 800417c:	4658      	mov	r0, fp
          updateTicksInterval(updateInterval),
 800417e:	2701      	movs	r7, #1
 8004180:	f04f 39ff 	mov.w	r9, #4294967295
          running(false)
 8004184:	f8df a334 	ldr.w	sl, [pc, #820]	; 80044bc <_ZN15Screen5ViewBaseC1Ev+0x3d4>
 8004188:	f8ad 800c 	strh.w	r8, [sp, #12]
 800418c:	f7ff fb4e 	bl	800382c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8004190:	f504 73c2 	add.w	r3, r4, #388	; 0x184
          updateTicksInterval(updateInterval),
 8004194:	e9c4 975e 	strd	r9, r7, [r4, #376]	; 0x178
          running(false)
 8004198:	f8c4 a148 	str.w	sl, [r4, #328]	; 0x148
        : animationDoneAction(0),
 800419c:	f8c4 5174 	str.w	r5, [r4, #372]	; 0x174
          running(false)
 80041a0:	f884 5180 	strb.w	r5, [r4, #384]	; 0x180
 80041a4:	a903      	add	r1, sp, #12
 80041a6:	4618      	mov	r0, r3
 80041a8:	ee0c 3a10 	vmov	s24, r3
 80041ac:	f8ad 900c 	strh.w	r9, [sp, #12]
 80041b0:	f7ff fb3c 	bl	800382c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80041b4:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 80041b8:	a903      	add	r1, sp, #12
 80041ba:	4618      	mov	r0, r3
 80041bc:	ee0c 3a90 	vmov	s25, r3
 80041c0:	f8ad 800c 	strh.w	r8, [sp, #12]
 80041c4:	f7ff fb32 	bl	800382c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80041c8:	f504 73ee 	add.w	r3, r4, #476	; 0x1dc
 80041cc:	a903      	add	r1, sp, #12
 80041ce:	4618      	mov	r0, r3
 80041d0:	ee0d 3a10 	vmov	s26, r3
 80041d4:	f8ad 800c 	strh.w	r8, [sp, #12]
 80041d8:	f7ff fb28 	bl	800382c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80041dc:	f504 7302 	add.w	r3, r4, #520	; 0x208
 80041e0:	f504 760d 	add.w	r6, r4, #564	; 0x234
 80041e4:	a903      	add	r1, sp, #12
 80041e6:	4618      	mov	r0, r3
 80041e8:	ee0a 3a90 	vmov	s21, r3
 80041ec:	f8ad 800c 	strh.w	r8, [sp, #12]
 80041f0:	f008 f942 	bl	800c478 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80041f4:	a903      	add	r1, sp, #12
 80041f6:	4630      	mov	r0, r6
 80041f8:	f8ad 800c 	strh.w	r8, [sp, #12]
 80041fc:	f7ff fb16 	bl	800382c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8004200:	f504 731c 	add.w	r3, r4, #624	; 0x270
 8004204:	4618      	mov	r0, r3
          startId(BITMAP_INVALID),
 8004206:	e9c4 5998 	strd	r5, r9, [r4, #608]	; 0x260
          running(false)
 800420a:	f8c4 a234 	str.w	sl, [r4, #564]	; 0x234
          updateTicksInterval(updateInterval),
 800420e:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8004212:	f504 7a27 	add.w	sl, r4, #668	; 0x29c
          running(false)
 8004216:	f884 526c 	strb.w	r5, [r4, #620]	; 0x26c
 800421a:	a903      	add	r1, sp, #12
 800421c:	ee0b 3a10 	vmov	s22, r3
 8004220:	f504 7932 	add.w	r9, r4, #712	; 0x2c8
 8004224:	f8ad 800c 	strh.w	r8, [sp, #12]
 8004228:	f008 f926 	bl	800c478 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800422c:	a903      	add	r1, sp, #12
 800422e:	4650      	mov	r0, sl
 8004230:	f8ad 800c 	strh.w	r8, [sp, #12]
 8004234:	f008 f920 	bl	800c478 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8004238:	f504 7852 	add.w	r8, r4, #840	; 0x348
 800423c:	4648      	mov	r0, r9
 800423e:	f7ff fc6d 	bl	8003b1c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEC1Ev>
 8004242:	4640      	mov	r0, r8
 8004244:	f7ff fc6a 	bl	8003b1c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEC1Ev>
    __background.setPosition(0, 0, 240, 320);
 8004248:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800424c:	462a      	mov	r2, r5
 800424e:	ee18 0a10 	vmov	r0, s16
 8004252:	9300      	str	r3, [sp, #0]
 8004254:	4629      	mov	r1, r5
 8004256:	23f0      	movs	r3, #240	; 0xf0
 8004258:	f7fe fb48 	bl	80028ec <_ZN8touchgfx8Drawable11setPositionEssss>
 800425c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
    background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_ID));
 8004260:	ee18 0a90 	vmov	r0, s17
 8004264:	66a3      	str	r3, [r4, #104]	; 0x68
 8004266:	a903      	add	r1, sp, #12
 8004268:	f8ad 500c 	strh.w	r5, [sp, #12]
 800426c:	f009 f882 	bl	800d374 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    background.setPosition(1, 0, 240, 320);
 8004270:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8004274:	462a      	mov	r2, r5
 8004276:	ee18 0a90 	vmov	r0, s17
 800427a:	9300      	str	r3, [sp, #0]
 800427c:	4639      	mov	r1, r7
 800427e:	23f0      	movs	r3, #240	; 0xf0
 8004280:	f7fe fb34 	bl	80028ec <_ZN8touchgfx8Drawable11setPositionEssss>
    background.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004284:	ee18 0a90 	vmov	r0, s17
 8004288:	4629      	mov	r1, r5
 800428a:	f008 f8bb 	bl	800c404 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800428e:	2363      	movs	r3, #99	; 0x63
    playerShip.setBitmap(touchgfx::Bitmap(BITMAP_SHIP_ID));
 8004290:	ee19 0a10 	vmov	r0, s18
 8004294:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 8004298:	a903      	add	r1, sp, #12
 800429a:	2319      	movs	r3, #25
 800429c:	f8ad 300c 	strh.w	r3, [sp, #12]
 80042a0:	f009 f868 	bl	800d374 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    playerShip.setPosition(105, 266, 31, 36);
 80042a4:	2324      	movs	r3, #36	; 0x24
 80042a6:	ee19 0a10 	vmov	r0, s18
 80042aa:	9300      	str	r3, [sp, #0]
 80042ac:	f44f 7285 	mov.w	r2, #266	; 0x10a
 80042b0:	231f      	movs	r3, #31
 80042b2:	2169      	movs	r1, #105	; 0x69
 80042b4:	f7fe fb1a 	bl	80028ec <_ZN8touchgfx8Drawable11setPositionEssss>
    playerShip.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80042b8:	ee19 0a10 	vmov	r0, s18
 80042bc:	4629      	mov	r1, r5
 80042be:	f008 f8a1 	bl	800c404 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    bullet.setXY(144, -23);
 80042c2:	f06f 0216 	mvn.w	r2, #22
 80042c6:	ee1b 0a90 	vmov	r0, s23
 80042ca:	2190      	movs	r1, #144	; 0x90
 80042cc:	f7ff f9ad 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
    bullet.setBitmap(touchgfx::Bitmap(BITMAP_BULLET_ID));
 80042d0:	ee1b 0a90 	vmov	r0, s23
 80042d4:	f04f 0305 	mov.w	r3, #5
 80042d8:	a903      	add	r1, sp, #12
 80042da:	f8ad 300c 	strh.w	r3, [sp, #12]
 80042de:	f009 f849 	bl	800d374 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_HP_ID));
 80042e2:	ee19 0a90 	vmov	r0, s19
 80042e6:	2312      	movs	r3, #18
 80042e8:	a903      	add	r1, sp, #12
 80042ea:	f8ad 300c 	strh.w	r3, [sp, #12]
 80042ee:	f009 f841 	bl	800d374 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1.setPosition(0, 4, 105, 23);
 80042f2:	2317      	movs	r3, #23
 80042f4:	2204      	movs	r2, #4
 80042f6:	ee19 0a90 	vmov	r0, s19
 80042fa:	9300      	str	r3, [sp, #0]
 80042fc:	4629      	mov	r1, r5
 80042fe:	2369      	movs	r3, #105	; 0x69
 8004300:	f7fe faf4 	bl	80028ec <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004304:	ee19 0a90 	vmov	r0, s19
 8004308:	4629      	mov	r1, r5
 800430a:	f008 f87b 	bl	800c404 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    hpplayer.setBitmap(touchgfx::Bitmap(BITMAP_HP_PLAYER_ID));
 800430e:	ee1a 0a10 	vmov	r0, s20
 8004312:	2313      	movs	r3, #19
 8004314:	a903      	add	r1, sp, #12
 8004316:	f8ad 300c 	strh.w	r3, [sp, #12]
 800431a:	f009 f82b 	bl	800d374 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    hpplayer.setPosition(10, 11, 85, 9);
 800431e:	2309      	movs	r3, #9
 8004320:	ee1a 0a10 	vmov	r0, s20
 8004324:	9300      	str	r3, [sp, #0]
 8004326:	220b      	movs	r2, #11
 8004328:	2355      	movs	r3, #85	; 0x55
 800432a:	210a      	movs	r1, #10
 800432c:	f7fe fade 	bl	80028ec <_ZN8touchgfx8Drawable11setPositionEssss>
    hpplayer.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004330:	ee1a 0a10 	vmov	r0, s20
 8004334:	4629      	mov	r1, r5
 8004336:	f008 f865 	bl	800c404 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    bossLazer.setXY(100, 320);
 800433a:	4658      	mov	r0, fp
 800433c:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8004340:	2164      	movs	r1, #100	; 0x64
 8004342:	f7ff f972 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
    bossLazer.setBitmaps(BITMAP_GIPHY_0_ID, BITMAP_GIPHY_2_ID);
 8004346:	220f      	movs	r2, #15
 8004348:	4658      	mov	r0, fp
 800434a:	210e      	movs	r1, #14
 800434c:	f008 f841 	bl	800c3d2 <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>
    bossLazer.setUpdateTicksInterval(1);
 8004350:	4639      	mov	r1, r7
 8004352:	4658      	mov	r0, fp
 8004354:	f008 f850 	bl	800c3f8 <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>
    bossLazer.startAnimation(false, true, true);
 8004358:	463b      	mov	r3, r7
 800435a:	463a      	mov	r2, r7
 800435c:	4629      	mov	r1, r5
 800435e:	4658      	mov	r0, fp
 8004360:	f007 ff93 	bl	800c28a <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>
    image1.setXY(176, -21);
 8004364:	ee1c 0a10 	vmov	r0, s24
 8004368:	f06f 0214 	mvn.w	r2, #20
 800436c:	21b0      	movs	r1, #176	; 0xb0
 800436e:	f7ff f95c 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
 8004372:	2310      	movs	r3, #16
    image1.setBitmap(touchgfx::Bitmap(BITMAP_HEAL_ID));
 8004374:	ee1c 0a10 	vmov	r0, s24
 8004378:	a903      	add	r1, sp, #12
 800437a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800437e:	f008 fff9 	bl	800d374 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    x3.setXY(101, -21);
 8004382:	ee1c 0a90 	vmov	r0, s25
 8004386:	f06f 0214 	mvn.w	r2, #20
 800438a:	2165      	movs	r1, #101	; 0x65
 800438c:	f7ff f94d 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
 8004390:	231e      	movs	r3, #30
    x3.setBitmap(touchgfx::Bitmap(BITMAP_X3_ID));
 8004392:	ee1c 0a90 	vmov	r0, s25
 8004396:	a903      	add	r1, sp, #12
 8004398:	f8ad 300c 	strh.w	r3, [sp, #12]
 800439c:	f008 ffea 	bl	800d374 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    boss.setXY(46, 35);
 80043a0:	2223      	movs	r2, #35	; 0x23
 80043a2:	ee1d 0a10 	vmov	r0, s26
 80043a6:	212e      	movs	r1, #46	; 0x2e
 80043a8:	f7ff f93f 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
    boss.setBitmap(touchgfx::Bitmap(BITMAP_BOSS_ID));
 80043ac:	ee1d 0a10 	vmov	r0, s26
 80043b0:	2304      	movs	r3, #4
 80043b2:	a903      	add	r1, sp, #12
 80043b4:	f8ad 300c 	strh.w	r3, [sp, #12]
 80043b8:	f008 ffdc 	bl	800d374 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    ultimate.setBitmap(touchgfx::Bitmap(BITMAP_UNTIMATE_ID));
 80043bc:	ee1a 0a90 	vmov	r0, s21
 80043c0:	231c      	movs	r3, #28
 80043c2:	a903      	add	r1, sp, #12
 80043c4:	f8ad 300c 	strh.w	r3, [sp, #12]
 80043c8:	f008 ffd4 	bl	800d374 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    ultimate.setPosition(-47, 105, 54, 113);
 80043cc:	2371      	movs	r3, #113	; 0x71
 80043ce:	ee1a 0a90 	vmov	r0, s21
 80043d2:	9300      	str	r3, [sp, #0]
 80043d4:	2269      	movs	r2, #105	; 0x69
 80043d6:	2336      	movs	r3, #54	; 0x36
 80043d8:	f06f 012e 	mvn.w	r1, #46	; 0x2e
 80043dc:	f7fe fa86 	bl	80028ec <_ZN8touchgfx8Drawable11setPositionEssss>
    ultimate.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80043e0:	ee1a 0a90 	vmov	r0, s21
 80043e4:	4629      	mov	r1, r5
 80043e6:	f008 f80d 	bl	800c404 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    explore.setXY(256, 108);
 80043ea:	4630      	mov	r0, r6
 80043ec:	226c      	movs	r2, #108	; 0x6c
 80043ee:	f44f 7180 	mov.w	r1, #256	; 0x100
 80043f2:	f7ff f91a 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
    explore.setBitmaps(BITMAP_EXPLORE1_ID, BITMAP_EXPLORE2_ID);
 80043f6:	220c      	movs	r2, #12
 80043f8:	4630      	mov	r0, r6
 80043fa:	210b      	movs	r1, #11
 80043fc:	f007 ffe9 	bl	800c3d2 <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>
    explore.setUpdateTicksInterval(1);
 8004400:	4639      	mov	r1, r7
 8004402:	4630      	mov	r0, r6
 8004404:	f007 fff8 	bl	800c3f8 <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>
    explore.startAnimation(false, true, true);
 8004408:	463a      	mov	r2, r7
 800440a:	463b      	mov	r3, r7
 800440c:	4629      	mov	r1, r5
 800440e:	4630      	mov	r0, r6
 8004410:	f007 ff3b 	bl	800c28a <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>
    scalableImage3.setBitmap(touchgfx::Bitmap(BITMAP_HEALBARBOSS_ID));
 8004414:	ee1b 0a10 	vmov	r0, s22
 8004418:	2311      	movs	r3, #17
 800441a:	a903      	add	r1, sp, #12
 800441c:	f8ad 300c 	strh.w	r3, [sp, #12]
 8004420:	f008 ffa8 	bl	800d374 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage3.setPosition(70, 240, 100, 5);
 8004424:	2305      	movs	r3, #5
 8004426:	22f0      	movs	r2, #240	; 0xf0
 8004428:	ee1b 0a10 	vmov	r0, s22
 800442c:	9300      	str	r3, [sp, #0]
 800442e:	2146      	movs	r1, #70	; 0x46
 8004430:	2364      	movs	r3, #100	; 0x64
 8004432:	f7fe fa5b 	bl	80028ec <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage3.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004436:	ee1b 0a10 	vmov	r0, s22
 800443a:	4629      	mov	r1, r5
 800443c:	f007 ffe2 	bl	800c404 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    hpboss.setBitmap(touchgfx::Bitmap(BITMAP_BLOOD_RED_BAR_0_ID));
 8004440:	a903      	add	r1, sp, #12
 8004442:	4650      	mov	r0, sl
 8004444:	f8ad 700c 	strh.w	r7, [sp, #12]
 8004448:	f008 ff94 	bl	800d374 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    hpboss.setPosition(70, 241, 100, 3);
 800444c:	2303      	movs	r3, #3
 800444e:	9300      	str	r3, [sp, #0]
 8004450:	22f1      	movs	r2, #241	; 0xf1
 8004452:	2364      	movs	r3, #100	; 0x64
 8004454:	4650      	mov	r0, sl
 8004456:	2146      	movs	r1, #70	; 0x46
 8004458:	f7fe fa48 	bl	80028ec <_ZN8touchgfx8Drawable11setPositionEssss>
    hpboss.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800445c:	4629      	mov	r1, r5
 800445e:	4650      	mov	r0, sl
 8004460:	f007 ffd0 	bl	800c404 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8004464:	4b10      	ldr	r3, [pc, #64]	; (80044a8 <_ZN15Screen5ViewBaseC1Ev+0x3c0>)
 8004466:	f8c4 32fc 	str.w	r3, [r4, #764]	; 0x2fc
        borderBox.setPosition(x, y, width, height);
 800446a:	f44f 72a0 	mov.w	r2, #320	; 0x140
 800446e:	9200      	str	r2, [sp, #0]
 8004470:	2378      	movs	r3, #120	; 0x78
 8004472:	462a      	mov	r2, r5
 8004474:	4629      	mov	r1, r5
 8004476:	f504 7041 	add.w	r0, r4, #772	; 0x304
 800447a:	f7fe fa37 	bl	80028ec <_ZN8touchgfx8Drawable11setPositionEssss>
 800447e:	f04f 0205 	mov.w	r2, #5
        down = colorPressed;
 8004482:	490a      	ldr	r1, [pc, #40]	; (80044ac <_ZN15Screen5ViewBaseC1Ev+0x3c4>)
        borderDown = borderColorPressed;
 8004484:	4f0a      	ldr	r7, [pc, #40]	; (80044b0 <_ZN15Screen5ViewBaseC1Ev+0x3c8>)
 8004486:	f8a4 2334 	strh.w	r2, [r4, #820]	; 0x334
 800448a:	480a      	ldr	r0, [pc, #40]	; (80044b4 <_ZN15Screen5ViewBaseC1Ev+0x3cc>)
        down = colorPressed;
 800448c:	4a0a      	ldr	r2, [pc, #40]	; (80044b8 <_ZN15Screen5ViewBaseC1Ev+0x3d0>)
        borderDown = borderColorPressed;
 800448e:	e9c4 07d0 	strd	r0, r7, [r4, #832]	; 0x340
        down = colorPressed;
 8004492:	e9c4 21ce 	strd	r2, r1, [r4, #824]	; 0x338
        handlePressedUpdated();
 8004496:	4648      	mov	r0, r9
 8004498:	f7ff fab1 	bl	80039fe <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEE20handlePressedUpdatedEv>
    leftButton.setPosition(0, 0, 120, 320);
 800449c:	f44f 7ca0 	mov.w	ip, #320	; 0x140
 80044a0:	e00e      	b.n	80044c0 <_ZN15Screen5ViewBaseC1Ev+0x3d8>
 80044a2:	bf00      	nop
 80044a4:	0801faac 	.word	0x0801faac
 80044a8:	003c0001 	.word	0x003c0001
 80044ac:	ff0099cc 	.word	0xff0099cc
 80044b0:	ff336699 	.word	0xff336699
 80044b4:	ff003366 	.word	0xff003366
 80044b8:	ff006699 	.word	0xff006699
 80044bc:	08020514 	.word	0x08020514
 80044c0:	f8cd c000 	str.w	ip, [sp]
 80044c4:	462a      	mov	r2, r5
 80044c6:	4629      	mov	r1, r5
 80044c8:	4648      	mov	r0, r9
 80044ca:	2378      	movs	r3, #120	; 0x78
 80044cc:	f7fe fa0e 	bl	80028ec <_ZN8touchgfx8Drawable11setPositionEssss>
 80044d0:	f8d4 32c8 	ldr.w	r3, [r4, #712]	; 0x2c8
        alpha = newAlpha;
 80044d4:	f884 52f5 	strb.w	r5, [r4, #757]	; 0x2f5
        handleAlphaUpdated();
 80044d8:	4648      	mov	r0, r9
 80044da:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80044de:	4798      	blx	r3
        borderBox.setPosition(x, y, width, height);
 80044e0:	f44f 7ca0 	mov.w	ip, #320	; 0x140
 80044e4:	4b3e      	ldr	r3, [pc, #248]	; (80045e0 <_ZN15Screen5ViewBaseC1Ev+0x4f8>)
 80044e6:	f8cd c000 	str.w	ip, [sp]
 80044ea:	f8c4 337c 	str.w	r3, [r4, #892]	; 0x37c
 80044ee:	462a      	mov	r2, r5
 80044f0:	4629      	mov	r1, r5
 80044f2:	f504 7061 	add.w	r0, r4, #900	; 0x384
 80044f6:	2378      	movs	r3, #120	; 0x78
 80044f8:	f7fe f9f8 	bl	80028ec <_ZN8touchgfx8Drawable11setPositionEssss>
        down = colorPressed;
 80044fc:	4a39      	ldr	r2, [pc, #228]	; (80045e4 <_ZN15Screen5ViewBaseC1Ev+0x4fc>)
 80044fe:	493a      	ldr	r1, [pc, #232]	; (80045e8 <_ZN15Screen5ViewBaseC1Ev+0x500>)
        borderUp = borderColorReleased;
 8004500:	483a      	ldr	r0, [pc, #232]	; (80045ec <_ZN15Screen5ViewBaseC1Ev+0x504>)
 8004502:	f04f 0305 	mov.w	r3, #5
        down = colorPressed;
 8004506:	e9c4 21ee 	strd	r2, r1, [r4, #952]	; 0x3b8
        borderDown = borderColorPressed;
 800450a:	e9c4 07f0 	strd	r0, r7, [r4, #960]	; 0x3c0
 800450e:	f8a4 33b4 	strh.w	r3, [r4, #948]	; 0x3b4
        handlePressedUpdated();
 8004512:	4640      	mov	r0, r8
 8004514:	f7ff fa73 	bl	80039fe <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEE20handlePressedUpdatedEv>
    rightButton.setPosition(120, 0, 120, 320);
 8004518:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800451c:	9300      	str	r3, [sp, #0]
 800451e:	2378      	movs	r3, #120	; 0x78
 8004520:	462a      	mov	r2, r5
 8004522:	4619      	mov	r1, r3
 8004524:	4640      	mov	r0, r8
 8004526:	f7fe f9e1 	bl	80028ec <_ZN8touchgfx8Drawable11setPositionEssss>
 800452a:	f8d4 3348 	ldr.w	r3, [r4, #840]	; 0x348
        alpha = newAlpha;
 800452e:	f884 5375 	strb.w	r5, [r4, #885]	; 0x375
        handleAlphaUpdated();
 8004532:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004536:	1d25      	adds	r5, r4, #4
 8004538:	4640      	mov	r0, r8
 800453a:	4798      	blx	r3
 800453c:	ee18 1a10 	vmov	r1, s16
 8004540:	4628      	mov	r0, r5
 8004542:	f006 fc57 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004546:	ee18 1a90 	vmov	r1, s17
 800454a:	4628      	mov	r0, r5
 800454c:	f006 fc52 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004550:	ee19 1a10 	vmov	r1, s18
 8004554:	4628      	mov	r0, r5
 8004556:	f006 fc4d 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800455a:	ee1b 1a90 	vmov	r1, s23
 800455e:	4628      	mov	r0, r5
 8004560:	f006 fc48 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004564:	ee19 1a90 	vmov	r1, s19
 8004568:	4628      	mov	r0, r5
 800456a:	f006 fc43 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800456e:	ee1a 1a10 	vmov	r1, s20
 8004572:	4628      	mov	r0, r5
 8004574:	f006 fc3e 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004578:	4659      	mov	r1, fp
 800457a:	4628      	mov	r0, r5
 800457c:	f006 fc3a 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004580:	ee1c 1a10 	vmov	r1, s24
 8004584:	4628      	mov	r0, r5
 8004586:	f006 fc35 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800458a:	ee1c 1a90 	vmov	r1, s25
 800458e:	4628      	mov	r0, r5
 8004590:	f006 fc30 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004594:	ee1d 1a10 	vmov	r1, s26
 8004598:	4628      	mov	r0, r5
 800459a:	f006 fc2b 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800459e:	ee1a 1a90 	vmov	r1, s21
 80045a2:	4628      	mov	r0, r5
 80045a4:	f006 fc26 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80045a8:	4631      	mov	r1, r6
 80045aa:	4628      	mov	r0, r5
 80045ac:	f006 fc22 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80045b0:	ee1b 1a10 	vmov	r1, s22
 80045b4:	4628      	mov	r0, r5
 80045b6:	f006 fc1d 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80045ba:	4651      	mov	r1, sl
 80045bc:	4628      	mov	r0, r5
 80045be:	f006 fc19 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80045c2:	4649      	mov	r1, r9
 80045c4:	4628      	mov	r0, r5
 80045c6:	f006 fc15 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80045ca:	4628      	mov	r0, r5
 80045cc:	4641      	mov	r1, r8
 80045ce:	f006 fc11 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80045d2:	4620      	mov	r0, r4
 80045d4:	b005      	add	sp, #20
 80045d6:	ecbd 8b0c 	vpop	{d8-d13}
 80045da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80045de:	bf00      	nop
 80045e0:	003c0001 	.word	0x003c0001
 80045e4:	ff006699 	.word	0xff006699
 80045e8:	ff0099cc 	.word	0xff0099cc
 80045ec:	ff003366 	.word	0xff003366

080045f0 <_ZN15Screen6ViewBaseD1Ev>:

class Screen6ViewBase : public touchgfx::View<Screen6Presenter>
{
public:
    Screen6ViewBase();
    virtual ~Screen6ViewBase() {}
 80045f0:	4770      	bx	lr

080045f2 <_ZN15Screen6ViewBase11setupScreenEv>:
}

void Screen6ViewBase::setupScreen()
{

}
 80045f2:	4770      	bx	lr

080045f4 <_ZN8touchgfx8CallbackI15Screen6ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80045f4:	4770      	bx	lr

080045f6 <_ZN8touchgfx8CallbackI15Screen6ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80045f6:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80045f8:	68c2      	ldr	r2, [r0, #12]
 80045fa:	6844      	ldr	r4, [r0, #4]
 80045fc:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80045fe:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8004600:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8004604:	07d2      	lsls	r2, r2, #31
 8004606:	bf48      	it	mi
 8004608:	5962      	ldrmi	r2, [r4, r5]
 800460a:	689b      	ldr	r3, [r3, #8]
    }
 800460c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800460e:	bf48      	it	mi
 8004610:	58d3      	ldrmi	r3, [r2, r3]
 8004612:	4718      	bx	r3

08004614 <_ZNK8touchgfx8CallbackI15Screen6ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8004614:	6843      	ldr	r3, [r0, #4]
 8004616:	b12b      	cbz	r3, 8004624 <_ZNK8touchgfx8CallbackI15Screen6ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8004618:	6883      	ldr	r3, [r0, #8]
 800461a:	b92b      	cbnz	r3, 8004628 <_ZNK8touchgfx8CallbackI15Screen6ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800461c:	68c0      	ldr	r0, [r0, #12]
 800461e:	f000 0001 	and.w	r0, r0, #1
 8004622:	4770      	bx	lr
 8004624:	4618      	mov	r0, r3
 8004626:	4770      	bx	lr
 8004628:	2001      	movs	r0, #1
    }
 800462a:	4770      	bx	lr

0800462c <_ZN8touchgfx8CallbackI15Screen6ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800462c:	b510      	push	{r4, lr}
 800462e:	2110      	movs	r1, #16
 8004630:	4604      	mov	r4, r0
 8004632:	f018 fea1 	bl	801d378 <_ZdlPvj>
 8004636:	4620      	mov	r0, r4
 8004638:	bd10      	pop	{r4, pc}

0800463a <_ZN15Screen6ViewBaseD0Ev>:
 800463a:	b510      	push	{r4, lr}
 800463c:	f44f 7192 	mov.w	r1, #292	; 0x124
 8004640:	4604      	mov	r4, r0
 8004642:	f018 fe99 	bl	801d378 <_ZdlPvj>
 8004646:	4620      	mov	r0, r4
 8004648:	bd10      	pop	{r4, pc}

0800464a <_ZN15Screen6ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Screen6ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button1)
 800464a:	306c      	adds	r0, #108	; 0x6c
 800464c:	4288      	cmp	r0, r1
{
 800464e:	b508      	push	{r3, lr}
    if (&src == &button1)
 8004650:	d105      	bne.n	800465e <_ZN15Screen6ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8004652:	f00a fc0f 	bl	800ee74 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When button1 clicked change screen to Screen1
        //Go to Screen1 with screen transition towards East
        application().gotoScreen1ScreenSlideTransitionEast();
    }
}
 8004656:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen1ScreenSlideTransitionEast();
 800465a:	f7fe bae7 	b.w	8002c2c <_ZN23FrontendApplicationBase36gotoScreen1ScreenSlideTransitionEastEv>
}
 800465e:	bd08      	pop	{r3, pc}

08004660 <_ZN15Screen6ViewBaseC1Ev>:
Screen6ViewBase::Screen6ViewBase() :
 8004660:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004664:	4604      	mov	r4, r0
 8004666:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Screen6ViewBase::buttonCallbackHandler)
 8004668:	4627      	mov	r7, r4
 800466a:	2500      	movs	r5, #0
 800466c:	f00b fe98 	bl	80103a0 <_ZN8touchgfx6ScreenC1Ev>
 8004670:	4b60      	ldr	r3, [pc, #384]	; (80047f4 <_ZN15Screen6ViewBaseC1Ev+0x194>)
 8004672:	63e5      	str	r5, [r4, #60]	; 0x3c
 8004674:	f847 3b40 	str.w	r3, [r7], #64
        : Widget(), alpha(255), color(0)
 8004678:	4629      	mov	r1, r5
 800467a:	2226      	movs	r2, #38	; 0x26
 800467c:	4638      	mov	r0, r7
 800467e:	f019 f8ae 	bl	801d7de <memset>
 8004682:	4638      	mov	r0, r7
 8004684:	f7fe ffde 	bl	8003644 <_ZN8touchgfx6WidgetC1Ev>
 8004688:	4b5b      	ldr	r3, [pc, #364]	; (80047f8 <_ZN15Screen6ViewBaseC1Ev+0x198>)
 800468a:	6423      	str	r3, [r4, #64]	; 0x40
 800468c:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 8004690:	23ff      	movs	r3, #255	; 0xff
 8004692:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
        : Widget(), action(), pressed(false)
 8004696:	2226      	movs	r2, #38	; 0x26
 8004698:	4629      	mov	r1, r5
 800469a:	66a5      	str	r5, [r4, #104]	; 0x68
 800469c:	4648      	mov	r0, r9
 800469e:	f019 f89e 	bl	801d7de <memset>
 80046a2:	4648      	mov	r0, r9
 80046a4:	f7fe ffce 	bl	8003644 <_ZN8touchgfx6WidgetC1Ev>
 80046a8:	2301      	movs	r3, #1
 80046aa:	f64f 7aff 	movw	sl, #65535	; 0xffff
 80046ae:	f104 08a0 	add.w	r8, r4, #160	; 0xa0
 80046b2:	f884 3090 	strb.w	r3, [r4, #144]	; 0x90
 80046b6:	4b51      	ldr	r3, [pc, #324]	; (80047fc <_ZN15Screen6ViewBaseC1Ev+0x19c>)
 80046b8:	66e3      	str	r3, [r4, #108]	; 0x6c
 80046ba:	f104 06cc 	add.w	r6, r4, #204	; 0xcc
 80046be:	f8a4 a09a 	strh.w	sl, [r4, #154]	; 0x9a
 80046c2:	f8a4 a09c 	strh.w	sl, [r4, #156]	; 0x9c
 80046c6:	f884 a09e 	strb.w	sl, [r4, #158]	; 0x9e
 80046ca:	a90a      	add	r1, sp, #40	; 0x28
 80046cc:	f8c4 5094 	str.w	r5, [r4, #148]	; 0x94
 80046d0:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 80046d4:	4640      	mov	r0, r8
 80046d6:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 80046da:	f007 fecd 	bl	800c478 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 */
class TextArea : public Widget
{
public:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80046de:	4629      	mov	r1, r5
 80046e0:	2226      	movs	r2, #38	; 0x26
 80046e2:	4630      	mov	r0, r6
 80046e4:	f019 f87b 	bl	801d7de <memset>
 80046e8:	4630      	mov	r0, r6
 80046ea:	f7fe ffab 	bl	8003644 <_ZN8touchgfx6WidgetC1Ev>
 80046ee:	4b44      	ldr	r3, [pc, #272]	; (8004800 <_ZN15Screen6ViewBaseC1Ev+0x1a0>)
 80046f0:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
 80046f4:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 80046f8:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80046fc:	f04f 33ff 	mov.w	r3, #4294967295
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
 8004700:	e9c4 3543 	strd	r3, r5, [r4, #268]	; 0x10c
        : pobject(pObject), pmemfun(pmemfun_1)
 8004704:	4b3f      	ldr	r3, [pc, #252]	; (8004804 <_ZN15Screen6ViewBaseC1Ev+0x1a4>)
        : typedTextId(id)
 8004706:	f8df b108 	ldr.w	fp, [pc, #264]	; 8004810 <_ZN15Screen6ViewBaseC1Ev+0x1b0>
 800470a:	f8a4 a0f8 	strh.w	sl, [r4, #248]	; 0xf8
 800470e:	e9c4 3445 	strd	r3, r4, [r4, #276]	; 0x114
 8004712:	4b3d      	ldr	r3, [pc, #244]	; (8004808 <_ZN15Screen6ViewBaseC1Ev+0x1a8>)
 8004714:	f8c4 b0f4 	str.w	fp, [r4, #244]	; 0xf4
 8004718:	e9c4 3547 	strd	r3, r5, [r4, #284]	; 0x11c
    __background.setPosition(0, 0, 240, 320);
 800471c:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8004720:	9300      	str	r3, [sp, #0]
 8004722:	462a      	mov	r2, r5
 8004724:	4629      	mov	r1, r5
 8004726:	4638      	mov	r0, r7
        : color(col)
 8004728:	f8c4 50fc 	str.w	r5, [r4, #252]	; 0xfc
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800472c:	f8a4 5104 	strh.w	r5, [r4, #260]	; 0x104
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8004730:	f8c4 5108 	str.w	r5, [r4, #264]	; 0x108
 8004734:	23f0      	movs	r3, #240	; 0xf0
 8004736:	f7fe f8d9 	bl	80028ec <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 800473a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800473e:	66a3      	str	r3, [r4, #104]	; 0x68
    button1.setXY(64, 274);
 8004740:	4648      	mov	r0, r9
 8004742:	f44f 7289 	mov.w	r2, #274	; 0x112
 8004746:	2140      	movs	r1, #64	; 0x40
 8004748:	f7fe ff6f 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
 800474c:	231b      	movs	r3, #27
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_TRY_AGAIN_ID), touchgfx::Bitmap(BITMAP_TRY_AGAIN_ID));
 800474e:	aa0a      	add	r2, sp, #40	; 0x28
 8004750:	a909      	add	r1, sp, #36	; 0x24
 8004752:	4648      	mov	r0, r9
 8004754:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8004758:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800475c:	f008 fca8 	bl	800d0b0 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    button1.setAction(buttonCallback);
 8004760:	f504 738a 	add.w	r3, r4, #276	; 0x114
        action = &callback;
 8004764:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_WINNER_ID));
 8004768:	a90a      	add	r1, sp, #40	; 0x28
 800476a:	231d      	movs	r3, #29
 800476c:	4640      	mov	r0, r8
 800476e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8004772:	f008 fdff 	bl	800d374 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1.setPosition(20, 12, 200, 186);
 8004776:	23ba      	movs	r3, #186	; 0xba
 8004778:	9300      	str	r3, [sp, #0]
 800477a:	220c      	movs	r2, #12
 800477c:	23c8      	movs	r3, #200	; 0xc8
 800477e:	4640      	mov	r0, r8
 8004780:	2114      	movs	r1, #20
 8004782:	f7fe f8b3 	bl	80028ec <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004786:	4629      	mov	r1, r5
 8004788:	4640      	mov	r0, r8
 800478a:	f007 fe3b 	bl	800c404 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    textArea1.setXY(67, 198);
 800478e:	22c6      	movs	r2, #198	; 0xc6
 8004790:	4630      	mov	r0, r6
 8004792:	2143      	movs	r1, #67	; 0x43
 8004794:	f7fe ff49 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8004798:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 800479c:	4b1b      	ldr	r3, [pc, #108]	; (800480c <_ZN15Screen6ViewBaseC1Ev+0x1ac>)
 800479e:	f8c4 30fc 	str.w	r3, [r4, #252]	; 0xfc
        boundingArea = calculateBoundingArea();
 80047a2:	4631      	mov	r1, r6
 80047a4:	4650      	mov	r0, sl
        linespace = space;
 80047a6:	f8a4 5100 	strh.w	r5, [r4, #256]	; 0x100
        boundingArea = calculateBoundingArea();
 80047aa:	f008 f993 	bl	800cad4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80047ae:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 80047b2:	f504 7384 	add.w	r3, r4, #264	; 0x108
 80047b6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JV1B));
 80047ba:	a90a      	add	r1, sp, #40	; 0x28
 80047bc:	4630      	mov	r0, r6
 80047be:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80047c2:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 80047c6:	f008 fc15 	bl	800cff4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80047ca:	1d20      	adds	r0, r4, #4
 80047cc:	4639      	mov	r1, r7
 80047ce:	9003      	str	r0, [sp, #12]
 80047d0:	f006 fb10 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80047d4:	9803      	ldr	r0, [sp, #12]
 80047d6:	4649      	mov	r1, r9
 80047d8:	f006 fb0c 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80047dc:	9803      	ldr	r0, [sp, #12]
 80047de:	4641      	mov	r1, r8
 80047e0:	f006 fb08 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80047e4:	9803      	ldr	r0, [sp, #12]
 80047e6:	4631      	mov	r1, r6
 80047e8:	f006 fb04 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80047ec:	4620      	mov	r0, r4
 80047ee:	b00d      	add	sp, #52	; 0x34
 80047f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80047f4:	0801faf8 	.word	0x0801faf8
 80047f8:	08020694 	.word	0x08020694
 80047fc:	080206fc 	.word	0x080206fc
 8004800:	08020604 	.word	0x08020604
 8004804:	0801fae0 	.word	0x0801fae0
 8004808:	0800464b 	.word	0x0800464b
 800480c:	ffc7c746 	.word	0xffc7c746
 8004810:	0801ed50 	.word	0x0801ed50

08004814 <__tcf_0>:

touchgfx::GeneratedFont& getFont_segoeuib_28_4bpp();

touchgfx::GeneratedFont& getFont_segoeuib_28_4bpp()
{
    static touchgfx::GeneratedFont segoeuib_28_4bpp(glyphs_segoeuib_28_4bpp, 7, 28, 0, 4, 1, 0, 1, unicodes_segoeuib_28_4bpp, kerning_segoeuib_28_4bpp, 63, 0, 0, &segoeuib_contextualFormsTable);
 8004814:	4770      	bx	lr
	...

08004818 <_Z24getFont_segoeuib_28_4bppv>:
{
 8004818:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont segoeuib_28_4bpp(glyphs_segoeuib_28_4bpp, 7, 28, 0, 4, 1, 0, 1, unicodes_segoeuib_28_4bpp, kerning_segoeuib_28_4bpp, 63, 0, 0, &segoeuib_contextualFormsTable);
 800481a:	4d16      	ldr	r5, [pc, #88]	; (8004874 <_Z24getFont_segoeuib_28_4bppv+0x5c>)
 800481c:	682c      	ldr	r4, [r5, #0]
 800481e:	f3bf 8f5b 	dmb	ish
 8004822:	f014 0401 	ands.w	r4, r4, #1
{
 8004826:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont segoeuib_28_4bpp(glyphs_segoeuib_28_4bpp, 7, 28, 0, 4, 1, 0, 1, unicodes_segoeuib_28_4bpp, kerning_segoeuib_28_4bpp, 63, 0, 0, &segoeuib_contextualFormsTable);
 8004828:	d120      	bne.n	800486c <_Z24getFont_segoeuib_28_4bppv+0x54>
 800482a:	4628      	mov	r0, r5
 800482c:	f018 fda6 	bl	801d37c <__cxa_guard_acquire>
 8004830:	b1e0      	cbz	r0, 800486c <_Z24getFont_segoeuib_28_4bppv+0x54>
 8004832:	4b11      	ldr	r3, [pc, #68]	; (8004878 <_Z24getFont_segoeuib_28_4bppv+0x60>)
 8004834:	4911      	ldr	r1, [pc, #68]	; (800487c <_Z24getFont_segoeuib_28_4bppv+0x64>)
 8004836:	4812      	ldr	r0, [pc, #72]	; (8004880 <_Z24getFont_segoeuib_28_4bppv+0x68>)
 8004838:	9408      	str	r4, [sp, #32]
 800483a:	e9cd 4309 	strd	r4, r3, [sp, #36]	; 0x24
 800483e:	233f      	movs	r3, #63	; 0x3f
 8004840:	9307      	str	r3, [sp, #28]
 8004842:	4b10      	ldr	r3, [pc, #64]	; (8004884 <_Z24getFont_segoeuib_28_4bppv+0x6c>)
 8004844:	9306      	str	r3, [sp, #24]
 8004846:	4b10      	ldr	r3, [pc, #64]	; (8004888 <_Z24getFont_segoeuib_28_4bppv+0x70>)
 8004848:	9305      	str	r3, [sp, #20]
 800484a:	2301      	movs	r3, #1
 800484c:	e9cd 4303 	strd	r4, r3, [sp, #12]
 8004850:	9302      	str	r3, [sp, #8]
 8004852:	2304      	movs	r3, #4
 8004854:	e9cd 4300 	strd	r4, r3, [sp]
 8004858:	2207      	movs	r2, #7
 800485a:	231c      	movs	r3, #28
 800485c:	f7fe fe7e 	bl	800355c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004860:	480a      	ldr	r0, [pc, #40]	; (800488c <_Z24getFont_segoeuib_28_4bppv+0x74>)
 8004862:	f018 fdd5 	bl	801d410 <atexit>
 8004866:	4628      	mov	r0, r5
 8004868:	f018 fd94 	bl	801d394 <__cxa_guard_release>
    return segoeuib_28_4bpp;
}
 800486c:	4804      	ldr	r0, [pc, #16]	; (8004880 <_Z24getFont_segoeuib_28_4bppv+0x68>)
 800486e:	b00d      	add	sp, #52	; 0x34
 8004870:	bd30      	pop	{r4, r5, pc}
 8004872:	bf00      	nop
 8004874:	200027a8 	.word	0x200027a8
 8004878:	0801ff5c 	.word	0x0801ff5c
 800487c:	08021094 	.word	0x08021094
 8004880:	200027ac 	.word	0x200027ac
 8004884:	08021118 	.word	0x08021118
 8004888:	08021124 	.word	0x08021124
 800488c:	08004815 	.word	0x08004815

08004890 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004890:	4770      	bx	lr
	...

08004894 <_Z23getFont_verdana_10_4bppv>:
{
 8004894:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004896:	4d15      	ldr	r5, [pc, #84]	; (80048ec <_Z23getFont_verdana_10_4bppv+0x58>)
 8004898:	682c      	ldr	r4, [r5, #0]
 800489a:	f3bf 8f5b 	dmb	ish
 800489e:	f014 0401 	ands.w	r4, r4, #1
{
 80048a2:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80048a4:	d11e      	bne.n	80048e4 <_Z23getFont_verdana_10_4bppv+0x50>
 80048a6:	4628      	mov	r0, r5
 80048a8:	f018 fd68 	bl	801d37c <__cxa_guard_acquire>
 80048ac:	b1d0      	cbz	r0, 80048e4 <_Z23getFont_verdana_10_4bppv+0x50>
 80048ae:	233f      	movs	r3, #63	; 0x3f
 80048b0:	9307      	str	r3, [sp, #28]
 80048b2:	4b0f      	ldr	r3, [pc, #60]	; (80048f0 <_Z23getFont_verdana_10_4bppv+0x5c>)
 80048b4:	9306      	str	r3, [sp, #24]
 80048b6:	4b0f      	ldr	r3, [pc, #60]	; (80048f4 <_Z23getFont_verdana_10_4bppv+0x60>)
 80048b8:	490f      	ldr	r1, [pc, #60]	; (80048f8 <_Z23getFont_verdana_10_4bppv+0x64>)
 80048ba:	4810      	ldr	r0, [pc, #64]	; (80048fc <_Z23getFont_verdana_10_4bppv+0x68>)
 80048bc:	9408      	str	r4, [sp, #32]
 80048be:	2201      	movs	r2, #1
 80048c0:	e9cd 4304 	strd	r4, r3, [sp, #16]
 80048c4:	2304      	movs	r3, #4
 80048c6:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80048ca:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 80048ce:	230a      	movs	r3, #10
 80048d0:	9403      	str	r4, [sp, #12]
 80048d2:	9400      	str	r4, [sp, #0]
 80048d4:	f7fe fe42 	bl	800355c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80048d8:	4809      	ldr	r0, [pc, #36]	; (8004900 <_Z23getFont_verdana_10_4bppv+0x6c>)
 80048da:	f018 fd99 	bl	801d410 <atexit>
 80048de:	4628      	mov	r0, r5
 80048e0:	f018 fd58 	bl	801d394 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 80048e4:	4805      	ldr	r0, [pc, #20]	; (80048fc <_Z23getFont_verdana_10_4bppv+0x68>)
 80048e6:	b00d      	add	sp, #52	; 0x34
 80048e8:	bd30      	pop	{r4, r5, pc}
 80048ea:	bf00      	nop
 80048ec:	200027d4 	.word	0x200027d4
 80048f0:	0802111c 	.word	0x0802111c
 80048f4:	08021128 	.word	0x08021128
 80048f8:	080210f8 	.word	0x080210f8
 80048fc:	200027d8 	.word	0x200027d8
 8004900:	08004891 	.word	0x08004891

08004904 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8004904:	4770      	bx	lr
	...

08004908 <_Z23getFont_verdana_20_4bppv>:
{
 8004908:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800490a:	4d15      	ldr	r5, [pc, #84]	; (8004960 <_Z23getFont_verdana_20_4bppv+0x58>)
 800490c:	682c      	ldr	r4, [r5, #0]
 800490e:	f3bf 8f5b 	dmb	ish
 8004912:	f014 0401 	ands.w	r4, r4, #1
{
 8004916:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8004918:	d11e      	bne.n	8004958 <_Z23getFont_verdana_20_4bppv+0x50>
 800491a:	4628      	mov	r0, r5
 800491c:	f018 fd2e 	bl	801d37c <__cxa_guard_acquire>
 8004920:	b1d0      	cbz	r0, 8004958 <_Z23getFont_verdana_20_4bppv+0x50>
 8004922:	233f      	movs	r3, #63	; 0x3f
 8004924:	9307      	str	r3, [sp, #28]
 8004926:	4b0f      	ldr	r3, [pc, #60]	; (8004964 <_Z23getFont_verdana_20_4bppv+0x5c>)
 8004928:	9306      	str	r3, [sp, #24]
 800492a:	4b0f      	ldr	r3, [pc, #60]	; (8004968 <_Z23getFont_verdana_20_4bppv+0x60>)
 800492c:	490f      	ldr	r1, [pc, #60]	; (800496c <_Z23getFont_verdana_20_4bppv+0x64>)
 800492e:	4810      	ldr	r0, [pc, #64]	; (8004970 <_Z23getFont_verdana_20_4bppv+0x68>)
 8004930:	9408      	str	r4, [sp, #32]
 8004932:	2201      	movs	r2, #1
 8004934:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8004938:	2304      	movs	r3, #4
 800493a:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800493e:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8004942:	2314      	movs	r3, #20
 8004944:	9403      	str	r4, [sp, #12]
 8004946:	9400      	str	r4, [sp, #0]
 8004948:	f7fe fe08 	bl	800355c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800494c:	4809      	ldr	r0, [pc, #36]	; (8004974 <_Z23getFont_verdana_20_4bppv+0x6c>)
 800494e:	f018 fd5f 	bl	801d410 <atexit>
 8004952:	4628      	mov	r0, r5
 8004954:	f018 fd1e 	bl	801d394 <__cxa_guard_release>
    return verdana_20_4bpp;
}
 8004958:	4805      	ldr	r0, [pc, #20]	; (8004970 <_Z23getFont_verdana_20_4bppv+0x68>)
 800495a:	b00d      	add	sp, #52	; 0x34
 800495c:	bd30      	pop	{r4, r5, pc}
 800495e:	bf00      	nop
 8004960:	20002800 	.word	0x20002800
 8004964:	08021120 	.word	0x08021120
 8004968:	0802112c 	.word	0x0802112c
 800496c:	08021108 	.word	0x08021108
 8004970:	20002804 	.word	0x20002804
 8004974:	08004905 	.word	0x08004905

08004978 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8004978:	2000      	movs	r0, #0
 800497a:	4770      	bx	lr

0800497c <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 800497c:	2000      	movs	r0, #0
 800497e:	4770      	bx	lr

08004980 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8004980:	b40e      	push	{r1, r2, r3}
 8004982:	b503      	push	{r0, r1, lr}
 8004984:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8004986:	2100      	movs	r1, #0
{
 8004988:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 800498c:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800498e:	f00b f923 	bl	800fbd8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8004992:	b002      	add	sp, #8
 8004994:	f85d eb04 	ldr.w	lr, [sp], #4
 8004998:	b003      	add	sp, #12
 800499a:	4770      	bx	lr

0800499c <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800499c:	b40c      	push	{r2, r3}
 800499e:	b507      	push	{r0, r1, r2, lr}
 80049a0:	ab04      	add	r3, sp, #16
 80049a2:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 80049a6:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 80049a8:	f00b f916 	bl	800fbd8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80049ac:	b003      	add	sp, #12
 80049ae:	f85d eb04 	ldr.w	lr, [sp], #4
 80049b2:	b002      	add	sp, #8
 80049b4:	4770      	bx	lr
	...

080049b8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 80049b8:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 80049ba:	b510      	push	{r4, lr}
 80049bc:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 80049be:	b373      	cbz	r3, 8004a1e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 80049c0:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 80049c2:	b92b      	cbnz	r3, 80049d0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 80049c4:	4b18      	ldr	r3, [pc, #96]	; (8004a28 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 80049c6:	4a19      	ldr	r2, [pc, #100]	; (8004a2c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 80049c8:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 80049ca:	4819      	ldr	r0, [pc, #100]	; (8004a30 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 80049cc:	f018 fd02 	bl	801d3d4 <__assert_func>
            return buffer[pos];
 80049d0:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80049d2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80049d6:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 80049d8:	b30b      	cbz	r3, 8004a1e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 80049da:	f00c fbee 	bl	80111ba <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 80049de:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80049e0:	2b01      	cmp	r3, #1
 80049e2:	d803      	bhi.n	80049ec <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 80049e4:	4b13      	ldr	r3, [pc, #76]	; (8004a34 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 80049e6:	4a14      	ldr	r2, [pc, #80]	; (8004a38 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 80049e8:	21c5      	movs	r1, #197	; 0xc5
 80049ea:	e7ee      	b.n	80049ca <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 80049ec:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80049ee:	1c53      	adds	r3, r2, #1
 80049f0:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 80049f2:	2b09      	cmp	r3, #9
 80049f4:	4619      	mov	r1, r3
 80049f6:	bf88      	it	hi
 80049f8:	f1a3 010a 	subhi.w	r1, r3, #10
 80049fc:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8004a00:	f640 103f 	movw	r0, #2367	; 0x93f
 8004a04:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8004a06:	4281      	cmp	r1, r0
 8004a08:	d109      	bne.n	8004a1e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8004a0a:	2b0a      	cmp	r3, #10
 8004a0c:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8004a10:	bf28      	it	cs
 8004a12:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8004a14:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8004a18:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8004a1a:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8004a1c:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8004a1e:	4620      	mov	r0, r4
}
 8004a20:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8004a24:	f00c bacc 	b.w	8010fc0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8004a28:	0801ff7c 	.word	0x0801ff7c
 8004a2c:	0801ff85 	.word	0x0801ff85
 8004a30:	08020030 	.word	0x08020030
 8004a34:	0802007a 	.word	0x0802007a
 8004a38:	08020088 	.word	0x08020088

08004a3c <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8004a3c:	f00c ba87 	b.w	8010f4e <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08004a40 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8004a40:	b510      	push	{r4, lr}
 8004a42:	b086      	sub	sp, #24
 8004a44:	ac02      	add	r4, sp, #8
 8004a46:	e884 0006 	stmia.w	r4, {r1, r2}
 8004a4a:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8004a4c:	ab0a      	add	r3, sp, #40	; 0x28
 8004a4e:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8004a50:	9301      	str	r3, [sp, #4]
 8004a52:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004a54:	9300      	str	r3, [sp, #0]
 8004a56:	4621      	mov	r1, r4
 8004a58:	9b08      	ldr	r3, [sp, #32]
 8004a5a:	f009 fd24 	bl	800e4a6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8004a5e:	b006      	add	sp, #24
 8004a60:	bd10      	pop	{r4, pc}
	...

08004a64 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8004a64:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8004a66:	bb18      	cbnz	r0, 8004ab0 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8004a68:	4b12      	ldr	r3, [pc, #72]	; (8004ab4 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8004a6a:	4813      	ldr	r0, [pc, #76]	; (8004ab8 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8004a6c:	681c      	ldr	r4, [r3, #0]
 8004a6e:	4913      	ldr	r1, [pc, #76]	; (8004abc <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8004a70:	b1b4      	cbz	r4, 8004aa0 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8004a72:	6822      	ldr	r2, [r4, #0]
 8004a74:	4422      	add	r2, r4
 8004a76:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8004a78:	6862      	ldr	r2, [r4, #4]
 8004a7a:	4422      	add	r2, r4
 8004a7c:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8004a7e:	68a2      	ldr	r2, [r4, #8]
 8004a80:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8004a82:	4b0f      	ldr	r3, [pc, #60]	; (8004ac0 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8004a84:	2200      	movs	r2, #0
 8004a86:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8004a88:	f000 f838 	bl	8004afc <_ZN17TypedTextDatabase8getFontsEv>
 8004a8c:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8004a8e:	f000 f833 	bl	8004af8 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8004a92:	4b0c      	ldr	r3, [pc, #48]	; (8004ac4 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8004a94:	601c      	str	r4, [r3, #0]
        fonts = f;
 8004a96:	4b0c      	ldr	r3, [pc, #48]	; (8004ac8 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8004a98:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8004a9a:	4b0c      	ldr	r3, [pc, #48]	; (8004acc <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8004a9c:	8018      	strh	r0, [r3, #0]
    }
}
 8004a9e:	e007      	b.n	8004ab0 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8004aa0:	4b0b      	ldr	r3, [pc, #44]	; (8004ad0 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8004aa2:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8004aa4:	4b0b      	ldr	r3, [pc, #44]	; (8004ad4 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8004aa6:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8004aa8:	4b0b      	ldr	r3, [pc, #44]	; (8004ad8 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8004aaa:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8004aac:	2c00      	cmp	r4, #0
 8004aae:	d1e8      	bne.n	8004a82 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8004ab0:	bd38      	pop	{r3, r4, r5, pc}
 8004ab2:	bf00      	nop
 8004ab4:	2000282c 	.word	0x2000282c
 8004ab8:	20002830 	.word	0x20002830
 8004abc:	20002834 	.word	0x20002834
 8004ac0:	20002838 	.word	0x20002838
 8004ac4:	20013600 	.word	0x20013600
 8004ac8:	20013608 	.word	0x20013608
 8004acc:	20013604 	.word	0x20013604
 8004ad0:	08021134 	.word	0x08021134
 8004ad4:	08021130 	.word	0x08021130
 8004ad8:	08021148 	.word	0x08021148

08004adc <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8004adc:	4b04      	ldr	r3, [pc, #16]	; (8004af0 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8004ade:	681b      	ldr	r3, [r3, #0]
 8004ae0:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8004ae4:	4b03      	ldr	r3, [pc, #12]	; (8004af4 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8004ae6:	681b      	ldr	r3, [r3, #0]
}
 8004ae8:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8004aec:	4770      	bx	lr
 8004aee:	bf00      	nop
 8004af0:	20002834 	.word	0x20002834
 8004af4:	20002830 	.word	0x20002830

08004af8 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8004af8:	2001      	movs	r0, #1
 8004afa:	4770      	bx	lr

08004afc <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8004afc:	4800      	ldr	r0, [pc, #0]	; (8004b00 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8004afe:	4770      	bx	lr
 8004b00:	2000283c 	.word	0x2000283c

08004b04 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8004b04:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 8004b06:	f7ff feff 	bl	8004908 <_Z23getFont_verdana_20_4bppv>
};
 8004b0a:	4c04      	ldr	r4, [pc, #16]	; (8004b1c <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8004b0c:	6020      	str	r0, [r4, #0]
    &(getFont_segoeuib_28_4bpp()),
 8004b0e:	f7ff fe83 	bl	8004818 <_Z24getFont_segoeuib_28_4bppv>
};
 8004b12:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 8004b14:	f7ff febe 	bl	8004894 <_Z23getFont_verdana_10_4bppv>
};
 8004b18:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 8004b1a:	bd10      	pop	{r4, pc}
 8004b1c:	2000283c 	.word	0x2000283c

08004b20 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8004b20:	4770      	bx	lr

08004b22 <_ZN19FrontendApplicationD0Ev>:
 8004b22:	b510      	push	{r4, lr}
 8004b24:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8004b28:	4604      	mov	r4, r0
 8004b2a:	f018 fc25 	bl	801d378 <_ZdlPvj>
 8004b2e:	4620      	mov	r0, r4
 8004b30:	bd10      	pop	{r4, pc}

08004b32 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8004b32:	b510      	push	{r4, lr}
 8004b34:	4604      	mov	r4, r0
    {
        model.tick();
 8004b36:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 8004b3a:	f000 f815 	bl	8004b68 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8004b3e:	4620      	mov	r0, r4
    }
 8004b40:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8004b44:	f00a b844 	b.w	800ebd0 <_ZN8touchgfx11Application15handleTickEventEv>

08004b48 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8004b48:	b510      	push	{r4, lr}
 8004b4a:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8004b4c:	f7fe f832 	bl	8002bb4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8004b50:	4b01      	ldr	r3, [pc, #4]	; (8004b58 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8004b52:	6023      	str	r3, [r4, #0]
{

}
 8004b54:	4620      	mov	r0, r4
 8004b56:	bd10      	pop	{r4, pc}
 8004b58:	08020164 	.word	0x08020164

08004b5c <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : ImageX(95), modelListener(0)
 8004b5c:	2200      	movs	r2, #0
 8004b5e:	215f      	movs	r1, #95	; 0x5f
 8004b60:	6002      	str	r2, [r0, #0]
 8004b62:	8081      	strh	r1, [r0, #4]
 8004b64:	6082      	str	r2, [r0, #8]
{
	modelTickCount = 0;
}
 8004b66:	4770      	bx	lr

08004b68 <_ZN5Model4tickEv>:

void Model::tick()
{
	modelTickCount++;
 8004b68:	6803      	ldr	r3, [r0, #0]
 8004b6a:	3301      	adds	r3, #1
 8004b6c:	6003      	str	r3, [r0, #0]
}
 8004b6e:	4770      	bx	lr

08004b70 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 8004b70:	4770      	bx	lr

08004b72 <_ZThn4_N16Screen1PresenterD1Ev>:
 8004b72:	3804      	subs	r0, #4
 8004b74:	4770      	bx	lr

08004b76 <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8004b76:	4770      	bx	lr

08004b78 <_ZN16Screen1PresenterD0Ev>:
 8004b78:	b510      	push	{r4, lr}
 8004b7a:	2110      	movs	r1, #16
 8004b7c:	4604      	mov	r4, r0
 8004b7e:	f018 fbfb 	bl	801d378 <_ZdlPvj>
 8004b82:	4620      	mov	r0, r4
 8004b84:	bd10      	pop	{r4, pc}

08004b86 <_ZThn4_N16Screen1PresenterD0Ev>:
 8004b86:	f1a0 0004 	sub.w	r0, r0, #4
 8004b8a:	e7f5      	b.n	8004b78 <_ZN16Screen1PresenterD0Ev>

08004b8c <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 8004b8c:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8004b8e:	2200      	movs	r2, #0
 8004b90:	6082      	str	r2, [r0, #8]
    : view(v)
 8004b92:	4a04      	ldr	r2, [pc, #16]	; (8004ba4 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 8004b94:	60c1      	str	r1, [r0, #12]
 8004b96:	f102 0408 	add.w	r4, r2, #8
 8004b9a:	3220      	adds	r2, #32
 8004b9c:	6004      	str	r4, [r0, #0]
 8004b9e:	6042      	str	r2, [r0, #4]
}
 8004ba0:	bd10      	pop	{r4, pc}
 8004ba2:	bf00      	nop
 8004ba4:	080201a8 	.word	0x080201a8

08004ba8 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8004ba8:	4770      	bx	lr

08004baa <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8004baa:	4770      	bx	lr

08004bac <_ZN11Screen1View15handleTickEventEv>:

void Screen1View::handleTickEvent()
{
	tickCounter += 1;
 8004bac:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
 8004bb0:	3301      	adds	r3, #1
 8004bb2:	f8c0 3108 	str.w	r3, [r0, #264]	; 0x108

}
 8004bb6:	4770      	bx	lr

08004bb8 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8004bb8:	f7fe bd00 	b.w	80035bc <_ZN15Screen1ViewBase11setupScreenEv>

08004bbc <_ZN11Screen1ViewD0Ev>:
 8004bbc:	b510      	push	{r4, lr}
 8004bbe:	f44f 7186 	mov.w	r1, #268	; 0x10c
 8004bc2:	4604      	mov	r4, r0
 8004bc4:	f018 fbd8 	bl	801d378 <_ZdlPvj>
 8004bc8:	4620      	mov	r0, r4
 8004bca:	bd10      	pop	{r4, pc}

08004bcc <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8004bcc:	b510      	push	{r4, lr}
 8004bce:	4604      	mov	r4, r0
 8004bd0:	f7fe fd4a 	bl	8003668 <_ZN15Screen1ViewBaseC1Ev>
 8004bd4:	4b03      	ldr	r3, [pc, #12]	; (8004be4 <_ZN11Screen1ViewC1Ev+0x18>)
 8004bd6:	6023      	str	r3, [r4, #0]
 8004bd8:	2300      	movs	r3, #0
 8004bda:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
}
 8004bde:	4620      	mov	r0, r4
 8004be0:	bd10      	pop	{r4, pc}
 8004be2:	bf00      	nop
 8004be4:	080201d8 	.word	0x080201d8

08004be8 <_ZN16Screen3PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen3Presenter() {};
 8004be8:	4770      	bx	lr

08004bea <_ZThn4_N16Screen3PresenterD1Ev>:
 8004bea:	3804      	subs	r0, #4
 8004bec:	4770      	bx	lr

08004bee <_ZN16Screen3Presenter10deactivateEv>:
}

void Screen3Presenter::activate()
{

}
 8004bee:	4770      	bx	lr

08004bf0 <_ZN16Screen3PresenterD0Ev>:
 8004bf0:	b510      	push	{r4, lr}
 8004bf2:	2110      	movs	r1, #16
 8004bf4:	4604      	mov	r4, r0
 8004bf6:	f018 fbbf 	bl	801d378 <_ZdlPvj>
 8004bfa:	4620      	mov	r0, r4
 8004bfc:	bd10      	pop	{r4, pc}

08004bfe <_ZThn4_N16Screen3PresenterD0Ev>:
 8004bfe:	f1a0 0004 	sub.w	r0, r0, #4
 8004c02:	e7f5      	b.n	8004bf0 <_ZN16Screen3PresenterD0Ev>

08004c04 <_ZN16Screen3PresenterC1ER11Screen3View>:
Screen3Presenter::Screen3Presenter(Screen3View& v)
 8004c04:	b510      	push	{r4, lr}
 8004c06:	2200      	movs	r2, #0
 8004c08:	6082      	str	r2, [r0, #8]
    : view(v)
 8004c0a:	4a04      	ldr	r2, [pc, #16]	; (8004c1c <_ZN16Screen3PresenterC1ER11Screen3View+0x18>)
 8004c0c:	60c1      	str	r1, [r0, #12]
 8004c0e:	f102 0408 	add.w	r4, r2, #8
 8004c12:	3220      	adds	r2, #32
 8004c14:	6004      	str	r4, [r0, #0]
 8004c16:	6042      	str	r2, [r0, #4]
}
 8004c18:	bd10      	pop	{r4, pc}
 8004c1a:	bf00      	nop
 8004c1c:	08020204 	.word	0x08020204

08004c20 <_ZN11Screen3ViewD1Ev>:

class Screen3View : public Screen3ViewBase
{
public:
    Screen3View();
    virtual ~Screen3View() {}
 8004c20:	4770      	bx	lr

08004c22 <_ZN11Screen3View14tearDownScreenEv>:
}

void Screen3View::tearDownScreen()
{
    Screen3ViewBase::tearDownScreen();
}
 8004c22:	4770      	bx	lr

08004c24 <_ZN11Screen3View11setupScreenEv>:
    Screen3ViewBase::setupScreen();
 8004c24:	f7fe be1d 	b.w	8003862 <_ZN15Screen3ViewBase11setupScreenEv>

08004c28 <_ZN11Screen3ViewD0Ev>:
 8004c28:	b510      	push	{r4, lr}
 8004c2a:	21dc      	movs	r1, #220	; 0xdc
 8004c2c:	4604      	mov	r4, r0
 8004c2e:	f018 fba3 	bl	801d378 <_ZdlPvj>
 8004c32:	4620      	mov	r0, r4
 8004c34:	bd10      	pop	{r4, pc}
	...

08004c38 <_ZN11Screen3ViewC1Ev>:
Screen3View::Screen3View()
 8004c38:	b510      	push	{r4, lr}
 8004c3a:	4604      	mov	r4, r0
 8004c3c:	f7fe fe48 	bl	80038d0 <_ZN15Screen3ViewBaseC1Ev>
 8004c40:	4b01      	ldr	r3, [pc, #4]	; (8004c48 <_ZN11Screen3ViewC1Ev+0x10>)
 8004c42:	6023      	str	r3, [r4, #0]
}
 8004c44:	4620      	mov	r0, r4
 8004c46:	bd10      	pop	{r4, pc}
 8004c48:	08020234 	.word	0x08020234

08004c4c <_ZN16Screen4PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen4Presenter() {};
 8004c4c:	4770      	bx	lr

08004c4e <_ZThn4_N16Screen4PresenterD1Ev>:
 8004c4e:	3804      	subs	r0, #4
 8004c50:	4770      	bx	lr

08004c52 <_ZN16Screen4Presenter10deactivateEv>:
}

void Screen4Presenter::activate()
{

}
 8004c52:	4770      	bx	lr

08004c54 <_ZN16Screen4PresenterD0Ev>:
 8004c54:	b510      	push	{r4, lr}
 8004c56:	2110      	movs	r1, #16
 8004c58:	4604      	mov	r4, r0
 8004c5a:	f018 fb8d 	bl	801d378 <_ZdlPvj>
 8004c5e:	4620      	mov	r0, r4
 8004c60:	bd10      	pop	{r4, pc}

08004c62 <_ZThn4_N16Screen4PresenterD0Ev>:
 8004c62:	f1a0 0004 	sub.w	r0, r0, #4
 8004c66:	e7f5      	b.n	8004c54 <_ZN16Screen4PresenterD0Ev>

08004c68 <_ZN16Screen4PresenterC1ER11Screen4View>:
Screen4Presenter::Screen4Presenter(Screen4View& v)
 8004c68:	b510      	push	{r4, lr}
 8004c6a:	2200      	movs	r2, #0
 8004c6c:	6082      	str	r2, [r0, #8]
    : view(v)
 8004c6e:	4a04      	ldr	r2, [pc, #16]	; (8004c80 <_ZN16Screen4PresenterC1ER11Screen4View+0x18>)
 8004c70:	60c1      	str	r1, [r0, #12]
 8004c72:	f102 0408 	add.w	r4, r2, #8
 8004c76:	3220      	adds	r2, #32
 8004c78:	6004      	str	r4, [r0, #0]
 8004c7a:	6042      	str	r2, [r0, #4]
}
 8004c7c:	bd10      	pop	{r4, pc}
 8004c7e:	bf00      	nop
 8004c80:	08020260 	.word	0x08020260

08004c84 <_ZN11Screen4ViewD1Ev>:
};
class Screen4View : public Screen4ViewBase
{
public:
    Screen4View();
    virtual ~Screen4View() {}
 8004c84:	4b21      	ldr	r3, [pc, #132]	; (8004d0c <_ZN11Screen4ViewD1Ev+0x88>)
 8004c86:	b570      	push	{r4, r5, r6, lr}
 8004c88:	4605      	mov	r5, r0
 8004c8a:	6003      	str	r3, [r0, #0]
 8004c8c:	f241 2468 	movw	r4, #4712	; 0x1268
 8004c90:	f241 06dc 	movw	r6, #4316	; 0x10dc
 8004c94:	592b      	ldr	r3, [r5, r4]
 8004c96:	1928      	adds	r0, r5, r4
 8004c98:	681b      	ldr	r3, [r3, #0]
 8004c9a:	3c2c      	subs	r4, #44	; 0x2c
 8004c9c:	4798      	blx	r3
 8004c9e:	42b4      	cmp	r4, r6
 8004ca0:	d1f8      	bne.n	8004c94 <_ZN11Screen4ViewD1Ev+0x10>
 8004ca2:	592b      	ldr	r3, [r5, r4]
 8004ca4:	1928      	adds	r0, r5, r4
 8004ca6:	681b      	ldr	r3, [r3, #0]
 8004ca8:	3c2c      	subs	r4, #44	; 0x2c
 8004caa:	4798      	blx	r3
 8004cac:	f5b4 6f75 	cmp.w	r4, #3920	; 0xf50
 8004cb0:	d1f7      	bne.n	8004ca2 <_ZN11Screen4ViewD1Ev+0x1e>
 8004cb2:	f640 56c4 	movw	r6, #3524	; 0xdc4
 8004cb6:	592b      	ldr	r3, [r5, r4]
 8004cb8:	1928      	adds	r0, r5, r4
 8004cba:	681b      	ldr	r3, [r3, #0]
 8004cbc:	3c2c      	subs	r4, #44	; 0x2c
 8004cbe:	4798      	blx	r3
 8004cc0:	42b4      	cmp	r4, r6
 8004cc2:	d1f8      	bne.n	8004cb6 <_ZN11Screen4ViewD1Ev+0x32>
 8004cc4:	f640 4638 	movw	r6, #3128	; 0xc38
 8004cc8:	592b      	ldr	r3, [r5, r4]
 8004cca:	1928      	adds	r0, r5, r4
 8004ccc:	681b      	ldr	r3, [r3, #0]
 8004cce:	3c2c      	subs	r4, #44	; 0x2c
 8004cd0:	4798      	blx	r3
 8004cd2:	42b4      	cmp	r4, r6
 8004cd4:	d1f8      	bne.n	8004cc8 <_ZN11Screen4ViewD1Ev+0x44>
 8004cd6:	f640 26ac 	movw	r6, #2732	; 0xaac
 8004cda:	592b      	ldr	r3, [r5, r4]
 8004cdc:	1928      	adds	r0, r5, r4
 8004cde:	681b      	ldr	r3, [r3, #0]
 8004ce0:	3c2c      	subs	r4, #44	; 0x2c
 8004ce2:	4798      	blx	r3
 8004ce4:	42b4      	cmp	r4, r6
 8004ce6:	d1f8      	bne.n	8004cda <_ZN11Screen4ViewD1Ev+0x56>
 8004ce8:	592b      	ldr	r3, [r5, r4]
 8004cea:	1928      	adds	r0, r5, r4
 8004cec:	681b      	ldr	r3, [r3, #0]
 8004cee:	3c2c      	subs	r4, #44	; 0x2c
 8004cf0:	4798      	blx	r3
 8004cf2:	f5b4 6f12 	cmp.w	r4, #2336	; 0x920
 8004cf6:	d1f7      	bne.n	8004ce8 <_ZN11Screen4ViewD1Ev+0x64>
 8004cf8:	592b      	ldr	r3, [r5, r4]
 8004cfa:	1928      	adds	r0, r5, r4
 8004cfc:	681b      	ldr	r3, [r3, #0]
 8004cfe:	3c2c      	subs	r4, #44	; 0x2c
 8004d00:	4798      	blx	r3
 8004d02:	f5b4 7f7e 	cmp.w	r4, #1016	; 0x3f8
 8004d06:	d1f7      	bne.n	8004cf8 <_ZN11Screen4ViewD1Ev+0x74>
 8004d08:	4628      	mov	r0, r5
 8004d0a:	bd70      	pop	{r4, r5, r6, pc}
 8004d0c:	08020290 	.word	0x08020290

08004d10 <_ZN11Screen4View14tearDownScreenEv>:

}

void Screen4View::tearDownScreen() {
	Screen4ViewBase::tearDownScreen();
}
 8004d10:	4770      	bx	lr

08004d12 <_ZN11Screen4ViewD0Ev>:
 8004d12:	b510      	push	{r4, lr}
 8004d14:	4604      	mov	r4, r0
 8004d16:	f7ff ffb5 	bl	8004c84 <_ZN11Screen4ViewD1Ev>
 8004d1a:	4620      	mov	r0, r4
 8004d1c:	f241 313c 	movw	r1, #4924	; 0x133c
 8004d20:	f018 fb2a 	bl	801d378 <_ZdlPvj>
 8004d24:	4620      	mov	r0, r4
 8004d26:	bd10      	pop	{r4, pc}

08004d28 <_ZN11Screen4View11setupScreenEv>:
	Screen4ViewBase::setupScreen();
 8004d28:	f7fe be91 	b.w	8003a4e <_ZN15Screen4ViewBase11setupScreenEv>

08004d2c <_ZN11Screen4ViewC1Ev>:
Screen4View::Screen4View() {
 8004d2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004d30:	4606      	mov	r6, r0
 8004d32:	b085      	sub	sp, #20
 8004d34:	f7fe ff24 	bl	8003b80 <_ZN15Screen4ViewBaseC1Ev>
 8004d38:	4ba6      	ldr	r3, [pc, #664]	; (8004fd4 <_ZN11Screen4ViewC1Ev+0x2a8>)
 8004d3a:	6033      	str	r3, [r6, #0]
 8004d3c:	f206 4724 	addw	r7, r6, #1060	; 0x424
 8004d40:	f606 144c 	addw	r4, r6, #2380	; 0x94c
 8004d44:	f64f 75ff 	movw	r5, #65535	; 0xffff
 8004d48:	4638      	mov	r0, r7
 8004d4a:	a903      	add	r1, sp, #12
 8004d4c:	372c      	adds	r7, #44	; 0x2c
 8004d4e:	f8ad 500c 	strh.w	r5, [sp, #12]
 8004d52:	f7fe fd6b 	bl	800382c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8004d56:	42a7      	cmp	r7, r4
 8004d58:	d1f6      	bne.n	8004d48 <_ZN11Screen4ViewC1Ev+0x1c>
 8004d5a:	f606 25d8 	addw	r5, r6, #2776	; 0xad8
 8004d5e:	463c      	mov	r4, r7
 8004d60:	f64f 78ff 	movw	r8, #65535	; 0xffff
 8004d64:	4620      	mov	r0, r4
 8004d66:	a903      	add	r1, sp, #12
 8004d68:	342c      	adds	r4, #44	; 0x2c
 8004d6a:	f8ad 800c 	strh.w	r8, [sp, #12]
 8004d6e:	f7fe fd5d 	bl	800382c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8004d72:	42ac      	cmp	r4, r5
 8004d74:	d1f6      	bne.n	8004d64 <_ZN11Screen4ViewC1Ev+0x38>
 8004d76:	f606 4564 	addw	r5, r6, #3172	; 0xc64
 8004d7a:	f64f 78ff 	movw	r8, #65535	; 0xffff
 8004d7e:	4620      	mov	r0, r4
 8004d80:	a903      	add	r1, sp, #12
 8004d82:	342c      	adds	r4, #44	; 0x2c
 8004d84:	f8ad 800c 	strh.w	r8, [sp, #12]
 8004d88:	f7fe fd50 	bl	800382c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8004d8c:	42ac      	cmp	r4, r5
 8004d8e:	d1f6      	bne.n	8004d7e <_ZN11Screen4ViewC1Ev+0x52>
 8004d90:	f506 685f 	add.w	r8, r6, #3568	; 0xdf0
 8004d94:	4625      	mov	r5, r4
 8004d96:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8004d9a:	4628      	mov	r0, r5
 8004d9c:	a903      	add	r1, sp, #12
 8004d9e:	352c      	adds	r5, #44	; 0x2c
 8004da0:	f8ad 900c 	strh.w	r9, [sp, #12]
 8004da4:	f7fe fd42 	bl	800382c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8004da8:	4545      	cmp	r5, r8
 8004daa:	d1f6      	bne.n	8004d9a <_ZN11Screen4ViewC1Ev+0x6e>
 8004dac:	f606 787c 	addw	r8, r6, #3964	; 0xf7c
 8004db0:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8004db4:	4628      	mov	r0, r5
 8004db6:	a903      	add	r1, sp, #12
 8004db8:	352c      	adds	r5, #44	; 0x2c
 8004dba:	f8ad 900c 	strh.w	r9, [sp, #12]
 8004dbe:	f7fe fd35 	bl	800382c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8004dc2:	4545      	cmp	r5, r8
 8004dc4:	d1f6      	bne.n	8004db4 <_ZN11Screen4ViewC1Ev+0x88>
 8004dc6:	f506 5888 	add.w	r8, r6, #4352	; 0x1100
 8004dca:	f108 0808 	add.w	r8, r8, #8
 8004dce:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8004dd2:	4628      	mov	r0, r5
 8004dd4:	a903      	add	r1, sp, #12
 8004dd6:	352c      	adds	r5, #44	; 0x2c
 8004dd8:	f8ad 900c 	strh.w	r9, [sp, #12]
 8004ddc:	f7fe fd26 	bl	800382c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8004de0:	4545      	cmp	r5, r8
 8004de2:	d1f6      	bne.n	8004dd2 <_ZN11Screen4ViewC1Ev+0xa6>
 8004de4:	f506 5894 	add.w	r8, r6, #4736	; 0x1280
 8004de8:	f108 0814 	add.w	r8, r8, #20
 8004dec:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8004df0:	4628      	mov	r0, r5
 8004df2:	a903      	add	r1, sp, #12
 8004df4:	352c      	adds	r5, #44	; 0x2c
 8004df6:	f8ad 900c 	strh.w	r9, [sp, #12]
 8004dfa:	f7fe fd17 	bl	800382c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8004dfe:	4545      	cmp	r5, r8
 8004e00:	d1f6      	bne.n	8004df0 <_ZN11Screen4ViewC1Ev+0xc4>
	tickCount2 = 0;
 8004e02:	f506 5580 	add.w	r5, r6, #4096	; 0x1000
 8004e06:	f04f 0800 	mov.w	r8, #0
	playerHP = 85;
 8004e0a:	2355      	movs	r3, #85	; 0x55
	hpplayer.setPosition(10, 11, 85, 9);
 8004e0c:	2209      	movs	r2, #9
	tickCount3 = 0;
 8004e0e:	e9c5 88a6 	strd	r8, r8, [r5, #664]	; 0x298
	tickCount5 = 0;
 8004e12:	e9c5 88a8 	strd	r8, r8, [r5, #672]	; 0x2a0
	tickCount7 = 0;
 8004e16:	e9c5 88aa 	strd	r8, r8, [r5, #680]	; 0x2a8
	countItem = 0;
 8004e1a:	e9c5 88ac 	strd	r8, r8, [r5, #688]	; 0x2b0
	isItem = 0;
 8004e1e:	e9c5 88ae 	strd	r8, r8, [r5, #696]	; 0x2b8
	start = 0;
 8004e22:	f8a5 82c0 	strh.w	r8, [r5, #704]	; 0x2c0
	playerHP = 85;
 8004e26:	f8c5 32c4 	str.w	r3, [r5, #708]	; 0x2c4
	hpplayer.setPosition(10, 11, 85, 9);
 8004e2a:	210a      	movs	r1, #10
 8004e2c:	9200      	str	r2, [sp, #0]
 8004e2e:	f506 70a4 	add.w	r0, r6, #328	; 0x148
 8004e32:	220b      	movs	r2, #11
 8004e34:	f506 5a96 	add.w	sl, r6, #4800	; 0x12c0
 8004e38:	f7fd fd58 	bl	80028ec <_ZN8touchgfx8Drawable11setPositionEssss>
	redenemys = 0;
 8004e3c:	f10a 0a06 	add.w	sl, sl, #6
 8004e40:	f8a5 833a 	strh.w	r8, [r5, #826]	; 0x33a
	tickCount = 0;
 8004e44:	f8c5 8294 	str.w	r8, [r5, #660]	; 0x294
 8004e48:	f240 4924 	movw	r9, #1060	; 0x424
 8004e4c:	f04f 0b05 	mov.w	fp, #5
		bullet_list[i].setXY(110, -100);
 8004e50:	eb06 0509 	add.w	r5, r6, r9
 8004e54:	f06f 0263 	mvn.w	r2, #99	; 0x63
 8004e58:	4628      	mov	r0, r5
 8004e5a:	216e      	movs	r1, #110	; 0x6e
 8004e5c:	f7fe fbe5 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
		bullet_list[i].setBitmap(touchgfx::Bitmap(BITMAP_BULLET_ID));
 8004e60:	f856 3009 	ldr.w	r3, [r6, r9]
 8004e64:	4628      	mov	r0, r5
 8004e66:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004e68:	f8ad b00c 	strh.w	fp, [sp, #12]
 8004e6c:	a903      	add	r1, sp, #12
 8004e6e:	f106 0804 	add.w	r8, r6, #4
 8004e72:	4798      	blx	r3
 8004e74:	4629      	mov	r1, r5
 8004e76:	4640      	mov	r0, r8
 8004e78:	f005 ffbc 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
	for (int16_t i = 0; i < 30; i++) {
 8004e7c:	f109 092c 	add.w	r9, r9, #44	; 0x2c
 8004e80:	f640 134c 	movw	r3, #2380	; 0x94c
		isMove[i] = 0;
 8004e84:	2500      	movs	r5, #0
	for (int16_t i = 0; i < 30; i++) {
 8004e86:	4599      	cmp	r9, r3
		isMove[i] = 0;
 8004e88:	f82a 5f02 	strh.w	r5, [sl, #2]!
	for (int16_t i = 0; i < 30; i++) {
 8004e8c:	d1e0      	bne.n	8004e50 <_ZN11Screen4ViewC1Ev+0x124>
 8004e8e:	f506 5998 	add.w	r9, r6, #4864	; 0x1300
 8004e92:	f109 0902 	add.w	r9, r9, #2
		isActive[i] = 1;
 8004e96:	f04f 0a01 	mov.w	sl, #1
 8004e9a:	f507 7bc6 	add.w	fp, r7, #396	; 0x18c
		bullet_enemy[i].setXY(89, 320);
 8004e9e:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8004ea2:	2159      	movs	r1, #89	; 0x59
 8004ea4:	4658      	mov	r0, fp
		isActive[i] = 1;
 8004ea6:	f829 af02 	strh.w	sl, [r9, #2]!
		bullet_enemy[i].setXY(89, 320);
 8004eaa:	f7fe fbbe 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
		bullet_enemy[i].setBitmap(touchgfx::Bitmap(BITMAP_ENEMYBULLET_ID));
 8004eae:	f8d7 318c 	ldr.w	r3, [r7, #396]	; 0x18c
 8004eb2:	2208      	movs	r2, #8
 8004eb4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004eb6:	f8ad 200c 	strh.w	r2, [sp, #12]
 8004eba:	a903      	add	r1, sp, #12
 8004ebc:	4658      	mov	r0, fp
 8004ebe:	4798      	blx	r3
 8004ec0:	4659      	mov	r1, fp
 8004ec2:	4640      	mov	r0, r8
 8004ec4:	f005 ff96 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
		if (i < 5) {
 8004ec8:	00e9      	lsls	r1, r5, #3
			enemy_list[i].setXY(55 * i, 25);
 8004eca:	1b49      	subs	r1, r1, r5
		if (i < 5) {
 8004ecc:	2d04      	cmp	r5, #4
			enemy_list[i].setXY(55 * i, 25);
 8004ece:	ebc5 01c1 	rsb	r1, r5, r1, lsl #3
			enemy_list[i].setXY(27 + 55 * (i - 5), 60);
 8004ed2:	bf8a      	itet	hi
 8004ed4:	39f8      	subhi	r1, #248	; 0xf8
			enemy_list[i].setXY(55 * i, 25);
 8004ed6:	2219      	movls	r2, #25
			enemy_list[i].setXY(27 + 55 * (i - 5), 60);
 8004ed8:	223c      	movhi	r2, #60	; 0x3c
 8004eda:	4638      	mov	r0, r7
 8004edc:	b209      	sxth	r1, r1
 8004ede:	f7fe fba4 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
		enemy_list[i].setBitmap(touchgfx::Bitmap(BITMAP_ENEMY_ID));
 8004ee2:	683b      	ldr	r3, [r7, #0]
 8004ee4:	2206      	movs	r2, #6
 8004ee6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004ee8:	f8ad 200c 	strh.w	r2, [sp, #12]
 8004eec:	4638      	mov	r0, r7
 8004eee:	a903      	add	r1, sp, #12
 8004ef0:	4798      	blx	r3
	for (int16_t i = 0; i < 9; i++) {
 8004ef2:	3501      	adds	r5, #1
 8004ef4:	4639      	mov	r1, r7
 8004ef6:	4640      	mov	r0, r8
 8004ef8:	f005 ff7c 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004efc:	2d09      	cmp	r5, #9
 8004efe:	f107 072c 	add.w	r7, r7, #44	; 0x2c
 8004f02:	d1ca      	bne.n	8004e9a <_ZN11Screen4ViewC1Ev+0x16e>
 8004f04:	f506 5598 	add.w	r5, r6, #4864	; 0x1300
 8004f08:	f506 5799 	add.w	r7, r6, #4896	; 0x1320
 8004f0c:	3514      	adds	r5, #20
 8004f0e:	3706      	adds	r7, #6
		isActiveBlue[i] = 1;
 8004f10:	2301      	movs	r3, #1
 8004f12:	f825 3f02 	strh.w	r3, [r5, #2]!
		enemyblue[i].setXY(320, -28);
 8004f16:	4620      	mov	r0, r4
		isActiveOrange[i] = 1;
 8004f18:	826b      	strh	r3, [r5, #18]
		enemyblue[i].setXY(320, -28);
 8004f1a:	f06f 021b 	mvn.w	r2, #27
 8004f1e:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8004f22:	f7fe fb82 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
		enemyblue[i].setBitmap(touchgfx::Bitmap(BITMAP_ENEMYBLE_ID));
 8004f26:	6822      	ldr	r2, [r4, #0]
 8004f28:	2107      	movs	r1, #7
 8004f2a:	f504 7bc6 	add.w	fp, r4, #396	; 0x18c
 8004f2e:	6e12      	ldr	r2, [r2, #96]	; 0x60
 8004f30:	f8ad 100c 	strh.w	r1, [sp, #12]
 8004f34:	4620      	mov	r0, r4
 8004f36:	a903      	add	r1, sp, #12
 8004f38:	4790      	blx	r2
		enemyorange[i].setXY(400, 300);
 8004f3a:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8004f3e:	f44f 71c8 	mov.w	r1, #400	; 0x190
 8004f42:	4658      	mov	r0, fp
 8004f44:	f7fe fb71 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
		enemyorange[i].setBitmap(touchgfx::Bitmap(BITMAP_ENEMYORANGE_ID));
 8004f48:	f8d4 218c 	ldr.w	r2, [r4, #396]	; 0x18c
 8004f4c:	2109      	movs	r1, #9
 8004f4e:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8004f52:	6e12      	ldr	r2, [r2, #96]	; 0x60
 8004f54:	f8ad 100c 	strh.w	r1, [sp, #12]
 8004f58:	4658      	mov	r0, fp
 8004f5a:	a903      	add	r1, sp, #12
 8004f5c:	4790      	blx	r2
		bluelazer[i].setXY(196, 320);
 8004f5e:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8004f62:	21c4      	movs	r1, #196	; 0xc4
 8004f64:	4650      	mov	r0, sl
 8004f66:	f7fe fb60 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
		bluelazer[i].setBitmap(touchgfx::Bitmap(BITMAP_BLUELAZER_ID));
 8004f6a:	f8d4 2318 	ldr.w	r2, [r4, #792]	; 0x318
 8004f6e:	2103      	movs	r1, #3
 8004f70:	f204 49a4 	addw	r9, r4, #1188	; 0x4a4
 8004f74:	6e12      	ldr	r2, [r2, #96]	; 0x60
 8004f76:	f8ad 100c 	strh.w	r1, [sp, #12]
 8004f7a:	4650      	mov	r0, sl
 8004f7c:	a903      	add	r1, sp, #12
 8004f7e:	4790      	blx	r2
		orangelazer[i].setXY(121, 320);
 8004f80:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8004f84:	2179      	movs	r1, #121	; 0x79
 8004f86:	4648      	mov	r0, r9
 8004f88:	f7fe fb4f 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
		orangelazer[i].setBitmap(touchgfx::Bitmap(BITMAP_ORANGELZER_ID));
 8004f8c:	f8d4 24a4 	ldr.w	r2, [r4, #1188]	; 0x4a4
 8004f90:	2116      	movs	r1, #22
 8004f92:	6e12      	ldr	r2, [r2, #96]	; 0x60
 8004f94:	f8ad 100c 	strh.w	r1, [sp, #12]
 8004f98:	4648      	mov	r0, r9
 8004f9a:	a903      	add	r1, sp, #12
 8004f9c:	4790      	blx	r2
 8004f9e:	4621      	mov	r1, r4
 8004fa0:	4640      	mov	r0, r8
 8004fa2:	f005 ff27 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004fa6:	4659      	mov	r1, fp
 8004fa8:	4640      	mov	r0, r8
 8004faa:	f005 ff23 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004fae:	4651      	mov	r1, sl
 8004fb0:	4640      	mov	r0, r8
 8004fb2:	f005 ff1f 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004fb6:	4649      	mov	r1, r9
 8004fb8:	4640      	mov	r0, r8
 8004fba:	f005 ff1b 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
	for (int16_t i = 0; i < 9; i++) {
 8004fbe:	42bd      	cmp	r5, r7
 8004fc0:	f104 042c 	add.w	r4, r4, #44	; 0x2c
 8004fc4:	f04f 0301 	mov.w	r3, #1
 8004fc8:	d1a3      	bne.n	8004f12 <_ZN11Screen4ViewC1Ev+0x1e6>
}
 8004fca:	4630      	mov	r0, r6
 8004fcc:	b005      	add	sp, #20
 8004fce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004fd2:	bf00      	nop
 8004fd4:	08020290 	.word	0x08020290

08004fd8 <_Z7controlRN8touchgfx5ImageENS_24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEES4_>:
	if(rightButton.getPressed()==1){
 8004fd8:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
void control(touchgfx::Image &player, touchgfx::BoxWithBorderButtonStyle< touchgfx::RepeatButtonTrigger >  rightButton, touchgfx::BoxWithBorderButtonStyle< touchgfx::RepeatButtonTrigger >  leftButton){
 8004fdc:	b570      	push	{r4, r5, r6, lr}
        return rect.x;
 8004fde:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8004fe2:	4605      	mov	r5, r0
 8004fe4:	4616      	mov	r6, r2
	if(rightButton.getPressed()==1){
 8004fe6:	b143      	cbz	r3, 8004ffa <_Z7controlRN8touchgfx5ImageENS_24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEES4_+0x22>
			x+=3;
 8004fe8:	3403      	adds	r4, #3
 8004fea:	b224      	sxth	r4, r4
			player.setX(x);
 8004fec:	6803      	ldr	r3, [r0, #0]
				x=0;
 8004fee:	2cf1      	cmp	r4, #241	; 0xf1
 8004ff0:	bfa8      	it	ge
 8004ff2:	2400      	movge	r4, #0
			player.setX(x);
 8004ff4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004ff6:	4621      	mov	r1, r4
 8004ff8:	4798      	blx	r3
		if(leftButton.getPressed()==1){
 8004ffa:	f896 302c 	ldrb.w	r3, [r6, #44]	; 0x2c
 8004ffe:	b153      	cbz	r3, 8005016 <_Z7controlRN8touchgfx5ImageENS_24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEES4_+0x3e>
			x-=3;
 8005000:	1ee1      	subs	r1, r4, #3
			player.setX(x);
 8005002:	682b      	ldr	r3, [r5, #0]
			x-=3;
 8005004:	b209      	sxth	r1, r1
				x=240;
 8005006:	2900      	cmp	r1, #0
			player.setX(x);
 8005008:	4628      	mov	r0, r5
 800500a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
}
 800500c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			player.setX(x);
 8005010:	bfb8      	it	lt
 8005012:	21f0      	movlt	r1, #240	; 0xf0
 8005014:	4718      	bx	r3
}
 8005016:	bd70      	pop	{r4, r5, r6, pc}

08005018 <_Z14checkCollisionRKN8touchgfx5ImageES2_>:
	if (x1 < (x2 + width2) && (x1 + width1) > x2 && y1 < (y2 + height2)
 8005018:	f9b1 2004 	ldrsh.w	r2, [r1, #4]
 800501c:	f9b1 3008 	ldrsh.w	r3, [r1, #8]
		const touchgfx::Image &image2) {
 8005020:	b510      	push	{r4, lr}
	if (x1 < (x2 + width2) && (x1 + width1) > x2 && y1 < (y2 + height2)
 8005022:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8005026:	4413      	add	r3, r2
 8005028:	429c      	cmp	r4, r3
 800502a:	da15      	bge.n	8005058 <_Z14checkCollisionRKN8touchgfx5ImageES2_+0x40>
 800502c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8005030:	4423      	add	r3, r4
 8005032:	429a      	cmp	r2, r3
 8005034:	da10      	bge.n	8005058 <_Z14checkCollisionRKN8touchgfx5ImageES2_+0x40>
 8005036:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800503a:	f9b1 200a 	ldrsh.w	r2, [r1, #10]
 800503e:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 8005042:	441a      	add	r2, r3
 8005044:	4294      	cmp	r4, r2
 8005046:	da07      	bge.n	8005058 <_Z14checkCollisionRKN8touchgfx5ImageES2_+0x40>
			&& (y1 + height1) > y2) {
 8005048:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800504c:	4422      	add	r2, r4
 800504e:	4293      	cmp	r3, r2
 8005050:	bfac      	ite	ge
 8005052:	2000      	movge	r0, #0
 8005054:	2001      	movlt	r0, #1
}
 8005056:	bd10      	pop	{r4, pc}
	return false;
 8005058:	2000      	movs	r0, #0
 800505a:	e7fc      	b.n	8005056 <_Z14checkCollisionRKN8touchgfx5ImageES2_+0x3e>

0800505c <_Z17moveEnemyRandomlyRN8touchgfx5ImageEss>:
	if (tickCount < 50) {
 800505c:	2a31      	cmp	r2, #49	; 0x31
		int16_t tickCount) {
 800505e:	b570      	push	{r4, r5, r6, lr}
		enemy.setX(enemy.getX() - stepSize);
 8005060:	6803      	ldr	r3, [r0, #0]
		int16_t tickCount) {
 8005062:	4604      	mov	r4, r0
		enemy.setX(enemy.getX() - stepSize);
 8005064:	b28d      	uxth	r5, r1
	if (tickCount < 50) {
 8005066:	dc10      	bgt.n	800508a <_Z17moveEnemyRandomlyRN8touchgfx5ImageEss+0x2e>
		enemy.setX(enemy.getX() - stepSize);
 8005068:	8881      	ldrh	r1, [r0, #4]
 800506a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800506c:	1b49      	subs	r1, r1, r5
		enemy.setY(enemy.getY() + stepSize);
 800506e:	b209      	sxth	r1, r1
 8005070:	4798      	blx	r3
	if (enemy.getX() >= 260) {
 8005072:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8005076:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800507a:	db1c      	blt.n	80050b6 <_Z17moveEnemyRandomlyRN8touchgfx5ImageEss+0x5a>
		enemy.setX(0);
 800507c:	6823      	ldr	r3, [r4, #0]
 800507e:	4620      	mov	r0, r4
 8005080:	6b1b      	ldr	r3, [r3, #48]	; 0x30
}
 8005082:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		enemy.setX(0);
 8005086:	2100      	movs	r1, #0
 8005088:	4718      	bx	r3
	} else if (tickCount < 70) {
 800508a:	2a45      	cmp	r2, #69	; 0x45
 800508c:	dc03      	bgt.n	8005096 <_Z17moveEnemyRandomlyRN8touchgfx5ImageEss+0x3a>
		enemy.setY(enemy.getY() + stepSize);
 800508e:	88c1      	ldrh	r1, [r0, #6]
 8005090:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005092:	4429      	add	r1, r5
 8005094:	e7eb      	b.n	800506e <_Z17moveEnemyRandomlyRN8touchgfx5ImageEss+0x12>
		enemy.setX(enemy.getX() - stepSize);
 8005096:	6b1e      	ldr	r6, [r3, #48]	; 0x30
		enemy.setX(enemy.getX() + stepSize);
 8005098:	8883      	ldrh	r3, [r0, #4]
	} else if (tickCount < 80) {
 800509a:	2a4f      	cmp	r2, #79	; 0x4f
		enemy.setX(enemy.getX() + stepSize);
 800509c:	442b      	add	r3, r5
 800509e:	b219      	sxth	r1, r3
	} else if (tickCount < 80) {
 80050a0:	dc07      	bgt.n	80050b2 <_Z17moveEnemyRandomlyRN8touchgfx5ImageEss+0x56>
		enemy.setX(enemy.getX() + stepSize);
 80050a2:	47b0      	blx	r6
		enemy.setY(enemy.getY() - stepSize);
 80050a4:	88e1      	ldrh	r1, [r4, #6]
 80050a6:	6823      	ldr	r3, [r4, #0]
 80050a8:	1b49      	subs	r1, r1, r5
 80050aa:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80050ac:	b209      	sxth	r1, r1
 80050ae:	4620      	mov	r0, r4
 80050b0:	e7de      	b.n	8005070 <_Z17moveEnemyRandomlyRN8touchgfx5ImageEss+0x14>
		enemy.setX(enemy.getX() + stepSize);
 80050b2:	47b0      	blx	r6
 80050b4:	e7dd      	b.n	8005072 <_Z17moveEnemyRandomlyRN8touchgfx5ImageEss+0x16>
}
 80050b6:	bd70      	pop	{r4, r5, r6, pc}

080050b8 <_Z12moveStraightRN8touchgfx5ImageEssssss>:
		int16_t x_A, int16_t y_A, int16_t x_B, int16_t y_B) {
 80050b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80050bc:	f9bd 5024 	ldrsh.w	r5, [sp, #36]	; 0x24
	int16_t vector_b = y_A - y_B;
 80050c0:	f8bd 7020 	ldrh.w	r7, [sp, #32]
		int16_t x_A, int16_t y_A, int16_t x_B, int16_t y_B) {
 80050c4:	f9bd 4028 	ldrsh.w	r4, [sp, #40]	; 0x28
	int16_t vector_a = x_A - x_B;
 80050c8:	b29b      	uxth	r3, r3
 80050ca:	1b5d      	subs	r5, r3, r5
		int16_t x_A, int16_t y_A, int16_t x_B, int16_t y_B) {
 80050cc:	4690      	mov	r8, r2
	enemy.setX(x_A - tickCount * vector_a / 50);
 80050ce:	fb15 f502 	smulbb	r5, r5, r2
 80050d2:	6802      	ldr	r2, [r0, #0]
		int16_t x_A, int16_t y_A, int16_t x_B, int16_t y_B) {
 80050d4:	4606      	mov	r6, r0
	enemy.setX(x_A - tickCount * vector_a / 50);
 80050d6:	f06f 0931 	mvn.w	r9, #49	; 0x31
 80050da:	fb95 f5f9 	sdiv	r5, r5, r9
 80050de:	442b      	add	r3, r5
 80050e0:	b219      	sxth	r1, r3
 80050e2:	6b12      	ldr	r2, [r2, #48]	; 0x30
 80050e4:	4790      	blx	r2
	int16_t vector_b = y_A - y_B;
 80050e6:	1b3c      	subs	r4, r7, r4
	enemy.setY(y_A - tickCount * vector_b / 50);
 80050e8:	6833      	ldr	r3, [r6, #0]
 80050ea:	fb14 f208 	smulbb	r2, r4, r8
 80050ee:	fb92 f4f9 	sdiv	r4, r2, r9
 80050f2:	1939      	adds	r1, r7, r4
 80050f4:	4630      	mov	r0, r6
 80050f6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
}
 80050f8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	enemy.setY(y_A - tickCount * vector_b / 50);
 80050fc:	b209      	sxth	r1, r1
 80050fe:	4718      	bx	r3

08005100 <_Z11enemyAttackRN8touchgfx5ImageES1_sss>:
		int16_t isMove, int16_t bullet_speed, int16_t x_axis) {
 8005100:	b510      	push	{r4, lr}
 8005102:	4604      	mov	r4, r0
	if (isMove == 1) {
 8005104:	2a01      	cmp	r2, #1
		int16_t isMove, int16_t bullet_speed, int16_t x_axis) {
 8005106:	4608      	mov	r0, r1
 8005108:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
        return rect.y;
 800510c:	f9b4 4006 	ldrsh.w	r4, [r4, #6]
	if (isMove == 1) {
 8005110:	d107      	bne.n	8005122 <_Z11enemyAttackRN8touchgfx5ImageES1_sss+0x22>
		bullet.setY(bullet.getY() + bullet_speed);
 8005112:	88c2      	ldrh	r2, [r0, #6]
 8005114:	4413      	add	r3, r2
 8005116:	6802      	ldr	r2, [r0, #0]
}
 8005118:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		bullet.setY(bullet.getY() + bullet_speed);
 800511c:	6b52      	ldr	r2, [r2, #52]	; 0x34
 800511e:	b219      	sxth	r1, r3
 8005120:	4710      	bx	r2
	if (isMove == 0) {
 8005122:	b932      	cbnz	r2, 8005132 <_Z11enemyAttackRN8touchgfx5ImageES1_sss+0x32>
		bullet.setXY(x + 3, y + 18);
 8005124:	f104 0212 	add.w	r2, r4, #18
 8005128:	3103      	adds	r1, #3
 800512a:	b212      	sxth	r2, r2
 800512c:	b209      	sxth	r1, r1
 800512e:	f7fe fa7c 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
}
 8005132:	bd10      	pop	{r4, pc}

08005134 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEC1ERKS2_>:
class BoxWithBorderButtonStyle : public T
 8005134:	4602      	mov	r2, r0
 8005136:	460b      	mov	r3, r1
 8005138:	b510      	push	{r4, lr}
class Drawable
 800513a:	1d04      	adds	r4, r0, #4
 800513c:	e9d1 0101 	ldrd	r0, r1, [r1, #4]
 8005140:	e884 0003 	stmia.w	r4, {r0, r1}
 8005144:	e9d3 0103 	ldrd	r0, r1, [r3, #12]
 8005148:	f102 040c 	add.w	r4, r2, #12
 800514c:	e884 0003 	stmia.w	r4, {r0, r1}
 8005150:	e9d3 0106 	ldrd	r0, r1, [r3, #24]
 8005154:	695c      	ldr	r4, [r3, #20]
 8005156:	61d1      	str	r1, [r2, #28]
 8005158:	6a19      	ldr	r1, [r3, #32]
 800515a:	6211      	str	r1, [r2, #32]
 800515c:	e9c2 4005 	strd	r4, r0, [r2, #20]
 8005160:	8c99      	ldrh	r1, [r3, #36]	; 0x24
 8005162:	8491      	strh	r1, [r2, #36]	; 0x24
class Container : public Drawable
 8005164:	6a99      	ldr	r1, [r3, #40]	; 0x28
 8005166:	6291      	str	r1, [r2, #40]	; 0x28
class AbstractButtonContainer : public Container
 8005168:	8d99      	ldrh	r1, [r3, #44]	; 0x2c
 800516a:	8591      	strh	r1, [r2, #44]	; 0x2c
 800516c:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800516e:	6311      	str	r1, [r2, #48]	; 0x30
class RepeatButtonTrigger : public AbstractButtonContainer
 8005170:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8005172:	6351      	str	r1, [r2, #52]	; 0x34
 8005174:	4614      	mov	r4, r2
 8005176:	6b99      	ldr	r1, [r3, #56]	; 0x38
 8005178:	6391      	str	r1, [r2, #56]	; 0x38
 800517a:	4918      	ldr	r1, [pc, #96]	; (80051dc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEC1ERKS2_+0xa8>)
 800517c:	f844 1b40 	str.w	r1, [r4], #64
 8005180:	e9d3 0110 	ldrd	r0, r1, [r3, #64]	; 0x40
 8005184:	e884 0003 	stmia.w	r4, {r0, r1}
 8005188:	e9d3 0112 	ldrd	r0, r1, [r3, #72]	; 0x48
 800518c:	f102 0448 	add.w	r4, r2, #72	; 0x48
 8005190:	e884 0003 	stmia.w	r4, {r0, r1}
 8005194:	e9d3 0115 	ldrd	r0, r1, [r3, #84]	; 0x54
 8005198:	6d1c      	ldr	r4, [r3, #80]	; 0x50
 800519a:	6591      	str	r1, [r2, #88]	; 0x58
 800519c:	e9c2 4014 	strd	r4, r0, [r2, #80]	; 0x50
 80051a0:	6dd9      	ldr	r1, [r3, #92]	; 0x5c
 80051a2:	65d1      	str	r1, [r2, #92]	; 0x5c
 80051a4:	f8b3 1060 	ldrh.w	r1, [r3, #96]	; 0x60
 80051a8:	f8a2 1060 	strh.w	r1, [r2, #96]	; 0x60
class Box : public Widget
 80051ac:	f893 1062 	ldrb.w	r1, [r3, #98]	; 0x62
 80051b0:	f882 1062 	strb.w	r1, [r2, #98]	; 0x62
 80051b4:	6e59      	ldr	r1, [r3, #100]	; 0x64
 80051b6:	6651      	str	r1, [r2, #100]	; 0x64
class BoxWithBorder : public Box
 80051b8:	4909      	ldr	r1, [pc, #36]	; (80051e0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEC1ERKS2_+0xac>)
 80051ba:	63d1      	str	r1, [r2, #60]	; 0x3c
 80051bc:	6e99      	ldr	r1, [r3, #104]	; 0x68
 80051be:	6691      	str	r1, [r2, #104]	; 0x68
 80051c0:	f8b3 106c 	ldrh.w	r1, [r3, #108]	; 0x6c
 80051c4:	f8a2 106c 	strh.w	r1, [r2, #108]	; 0x6c
 80051c8:	6f19      	ldr	r1, [r3, #112]	; 0x70
 80051ca:	6711      	str	r1, [r2, #112]	; 0x70
 80051cc:	6f59      	ldr	r1, [r3, #116]	; 0x74
 80051ce:	6751      	str	r1, [r2, #116]	; 0x74
 80051d0:	6f99      	ldr	r1, [r3, #120]	; 0x78
 80051d2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80051d4:	6791      	str	r1, [r2, #120]	; 0x78
 80051d6:	67d3      	str	r3, [r2, #124]	; 0x7c
 80051d8:	4610      	mov	r0, r2
 80051da:	bd10      	pop	{r4, pc}
 80051dc:	0801f9dc 	.word	0x0801f9dc
 80051e0:	08020770 	.word	0x08020770

080051e4 <_ZN11Screen4View15handleTickEventEv>:

void Screen4View::handleTickEvent() {
 80051e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	//set HP bar increase or decrease

	if (playerHP <= 0) {
 80051e8:	f500 5680 	add.w	r6, r0, #4096	; 0x1000
void Screen4View::handleTickEvent() {
 80051ec:	ed2d 8b02 	vpush	{d8}
	if (playerHP <= 0) {
 80051f0:	f8d6 32c4 	ldr.w	r3, [r6, #708]	; 0x2c4
 80051f4:	2b00      	cmp	r3, #0
void Screen4View::handleTickEvent() {
 80051f6:	b0d1      	sub	sp, #324	; 0x144
 80051f8:	4604      	mov	r4, r0
	if (playerHP <= 0) {
 80051fa:	dc03      	bgt.n	8005204 <_ZN11Screen4View15handleTickEventEv+0x20>
 80051fc:	f009 fe3a 	bl	800ee74 <_ZN8touchgfx11Application11getInstanceEv>
		application().gotoScreen3ScreenSlideTransitionEast();
 8005200:	f7fd fd24 	bl	8002c4c <_ZN23FrontendApplicationBase36gotoScreen3ScreenSlideTransitionEastEv>
	}

	Screen4ViewBase::handleTickEvent();
	int16_t x = playerShip.getX();
	int16_t y = playerShip.getY();
	tickCount++;
 8005204:	f8d6 5294 	ldr.w	r5, [r6, #660]	; 0x294
        return rect.x;
 8005208:	f9b4 309c 	ldrsh.w	r3, [r4, #156]	; 0x9c
 800520c:	930b      	str	r3, [sp, #44]	; 0x2c
 800520e:	3501      	adds	r5, #1
 8005210:	2264      	movs	r2, #100	; 0x64
 8005212:	fbb5 f3f2 	udiv	r3, r5, r2
 8005216:	fb02 5313 	mls	r3, r2, r3, r5
        return rect.y;
 800521a:	f9b4 709e 	ldrsh.w	r7, [r4, #158]	; 0x9e
 800521e:	f8c6 5294 	str.w	r5, [r6, #660]	; 0x294

	// Check Item X3 Bullet
	if (tickCount % 100 == 0) {
 8005222:	b943      	cbnz	r3, 8005236 <_ZN11Screen4View15handleTickEventEv+0x52>
		isDrop = 1;
 8005224:	2301      	movs	r3, #1
 8005226:	f8a6 32be 	strh.w	r3, [r6, #702]	; 0x2be
	}
	if (isDrop == 1) {
		x3.setY(x3.getY() + 5);
 800522a:	f8b4 32be 	ldrh.w	r3, [r4, #702]	; 0x2be
 800522e:	3305      	adds	r3, #5
        rect.y = y;
 8005230:	f8a4 32be 	strh.w	r3, [r4, #702]	; 0x2be
    }
 8005234:	e003      	b.n	800523e <_ZN11Screen4View15handleTickEventEv+0x5a>
	if (isDrop == 1) {
 8005236:	f8b6 32be 	ldrh.w	r3, [r6, #702]	; 0x2be
 800523a:	2b01      	cmp	r3, #1
 800523c:	d0f5      	beq.n	800522a <_ZN11Screen4View15handleTickEventEv+0x46>
	}
	if (x3.getY() > 320) {
 800523e:	f9b4 32be 	ldrsh.w	r3, [r4, #702]	; 0x2be
 8005242:	f5b3 7fa0 	cmp.w	r3, #320	; 0x140
		isDrop = 0;
 8005246:	bfc1      	itttt	gt
 8005248:	2300      	movgt	r3, #0
 800524a:	f8a6 32be 	strhgt.w	r3, [r6, #702]	; 0x2be
        rect.y = y;
 800524e:	f64f 73ec 	movwgt	r3, #65516	; 0xffec
 8005252:	f8a4 32be 	strhgt.w	r3, [r4, #702]	; 0x2be
		x3.setY(-20);
	}

	if (checkCollision(x3, playerShip)) {
 8005256:	f104 0398 	add.w	r3, r4, #152	; 0x98
 800525a:	4619      	mov	r1, r3
 800525c:	f504 702e 	add.w	r0, r4, #696	; 0x2b8
 8005260:	ee08 3a10 	vmov	s16, r3
 8005264:	f7ff fed8 	bl	8005018 <_Z14checkCollisionRKN8touchgfx5ImageES2_>
 8005268:	2800      	cmp	r0, #0
 800526a:	d077      	beq.n	800535c <_ZN11Screen4View15handleTickEventEv+0x178>
 800526c:	f64f 73ec 	movw	r3, #65516	; 0xffec
 8005270:	f8a4 32be 	strh.w	r3, [r4, #702]	; 0x2be
		isItem = 1;
 8005274:	2301      	movs	r3, #1
 8005276:	f8c6 32bc 	str.w	r3, [r6, #700]	; 0x2bc
		x3.setY(-20);
		isDrop = 0;
	}
	if (isItem == 1) {
		countItem += 1;
 800527a:	f8d6 32b4 	ldr.w	r3, [r6, #692]	; 0x2b4
		if (isMove[10 + tickCount / 10 % 10] == 0) {
 800527e:	f04f 080a 	mov.w	r8, #10
		countItem += 1;
 8005282:	3301      	adds	r3, #1
 8005284:	f8c6 32b4 	str.w	r3, [r6, #692]	; 0x2b4
		if (isMove[10 + tickCount / 10 % 10] == 0) {
 8005288:	fbb5 f5f8 	udiv	r5, r5, r8
 800528c:	fbb5 f3f8 	udiv	r3, r5, r8
 8005290:	fb08 5513 	mls	r5, r8, r3, r5
 8005294:	eb05 0008 	add.w	r0, r5, r8
 8005298:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 800529c:	f505 5580 	add.w	r5, r5, #4096	; 0x1000
 80052a0:	f8b5 32dc 	ldrh.w	r3, [r5, #732]	; 0x2dc
 80052a4:	bb3b      	cbnz	r3, 80052f6 <_ZN11Screen4View15handleTickEventEv+0x112>
			isMove[10 + tickCount / 10 % 10] = 1;
 80052a6:	2301      	movs	r3, #1
			isMove[20 + tickCount / 10 % 10] = 1;
			bullet_list[10 + tickCount / 10 % 10].setXY(x - 3, y - 15);
 80052a8:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
			isMove[10 + tickCount / 10 % 10] = 1;
 80052ac:	f8a5 32dc 	strh.w	r3, [r5, #732]	; 0x2dc
			isMove[20 + tickCount / 10 % 10] = 1;
 80052b0:	f8a5 32f0 	strh.w	r3, [r5, #752]	; 0x2f0
			bullet_list[10 + tickCount / 10 % 10].setXY(x - 3, y - 15);
 80052b4:	252c      	movs	r5, #44	; 0x2c
 80052b6:	4689      	mov	r9, r1
 80052b8:	f1a7 020f 	sub.w	r2, r7, #15
 80052bc:	3903      	subs	r1, #3
 80052be:	fb05 4000 	mla	r0, r5, r0, r4
 80052c2:	b212      	sxth	r2, r2
 80052c4:	b209      	sxth	r1, r1
 80052c6:	f200 4024 	addw	r0, r0, #1060	; 0x424
 80052ca:	9205      	str	r2, [sp, #20]
 80052cc:	f7fe f9ad 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
			bullet_list[20 + tickCount / 10 % 10].setXY(x + 18, y - 15);
 80052d0:	f8d6 3294 	ldr.w	r3, [r6, #660]	; 0x294
 80052d4:	fbb3 f3f8 	udiv	r3, r3, r8
 80052d8:	fbb3 f0f8 	udiv	r0, r3, r8
 80052dc:	fb08 3010 	mls	r0, r8, r0, r3
 80052e0:	3014      	adds	r0, #20
 80052e2:	f109 0112 	add.w	r1, r9, #18
 80052e6:	fb05 4000 	mla	r0, r5, r0, r4
 80052ea:	9a05      	ldr	r2, [sp, #20]
 80052ec:	b209      	sxth	r1, r1
 80052ee:	f200 4024 	addw	r0, r0, #1060	; 0x424
 80052f2:	f7fe f99a 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
 80052f6:	f504 5896 	add.w	r8, r4, #4800	; 0x12c0
 80052fa:	f204 55dc 	addw	r5, r4, #1500	; 0x5dc
 80052fe:	f108 081c 	add.w	r8, r8, #28
 8005302:	f604 194c 	addw	r9, r4, #2380	; 0x94c
		}
		for (int16_t i = 10; i < 30; i++) {
			bullet_list[i].setY(bullet_list[i].getY() - 5);
			if (bullet_list[i].getY() <= -23) {
				isMove[i] = 0;
 8005306:	f04f 0a00 	mov.w	sl, #0
			bullet_list[i].setY(bullet_list[i].getY() - 5);
 800530a:	88e9      	ldrh	r1, [r5, #6]
 800530c:	682b      	ldr	r3, [r5, #0]
 800530e:	3905      	subs	r1, #5
 8005310:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005312:	4628      	mov	r0, r5
 8005314:	b209      	sxth	r1, r1
 8005316:	4798      	blx	r3
			if (bullet_list[i].getY() <= -23) {
 8005318:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
		for (int16_t i = 10; i < 30; i++) {
 800531c:	352c      	adds	r5, #44	; 0x2c
			if (bullet_list[i].getY() <= -23) {
 800531e:	3316      	adds	r3, #22
				isMove[i] = 0;
 8005320:	bfb8      	it	lt
 8005322:	f8a8 a000 	strhlt.w	sl, [r8]
		for (int16_t i = 10; i < 30; i++) {
 8005326:	454d      	cmp	r5, r9
 8005328:	f108 0802 	add.w	r8, r8, #2
 800532c:	d1ed      	bne.n	800530a <_ZN11Screen4View15handleTickEventEv+0x126>
			}
		}
		if (countItem >= 100) {
 800532e:	f8d6 32b4 	ldr.w	r3, [r6, #692]	; 0x2b4
 8005332:	2b63      	cmp	r3, #99	; 0x63
 8005334:	d916      	bls.n	8005364 <_ZN11Screen4View15handleTickEventEv+0x180>
			isItem = 0;
 8005336:	2300      	movs	r3, #0
 8005338:	f8a6 32bc 	strh.w	r3, [r6, #700]	; 0x2bc
			countItem = 0;
 800533c:	f8c6 32b4 	str.w	r3, [r6, #692]	; 0x2b4
 8005340:	f240 55dc 	movw	r5, #1500	; 0x5dc
			for (int16_t i = 10; i < 30; i++) {
 8005344:	f640 184c 	movw	r8, #2380	; 0x94c
				bullet_list[i].setY(-50);
 8005348:	5963      	ldr	r3, [r4, r5]
 800534a:	1960      	adds	r0, r4, r5
 800534c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800534e:	f06f 0131 	mvn.w	r1, #49	; 0x31
			for (int16_t i = 10; i < 30; i++) {
 8005352:	352c      	adds	r5, #44	; 0x2c
				bullet_list[i].setY(-50);
 8005354:	4798      	blx	r3
			for (int16_t i = 10; i < 30; i++) {
 8005356:	4545      	cmp	r5, r8
 8005358:	d1f6      	bne.n	8005348 <_ZN11Screen4View15handleTickEventEv+0x164>
 800535a:	e003      	b.n	8005364 <_ZN11Screen4View15handleTickEventEv+0x180>
	if (isItem == 1) {
 800535c:	f8b6 32bc 	ldrh.w	r3, [r6, #700]	; 0x2bc
 8005360:	2b01      	cmp	r3, #1
 8005362:	d08a      	beq.n	800527a <_ZN11Screen4View15handleTickEventEv+0x96>
		}
	}
	/////////////////////////////////////////////////////////////////////////////////////////////

	//enemy move
	if (redenemys < 9) {
 8005364:	f8b6 333a 	ldrh.w	r3, [r6, #826]	; 0x33a
 8005368:	2b08      	cmp	r3, #8
 800536a:	f240 81cd 	bls.w	8005708 <_ZN11Screen4View15handleTickEventEv+0x524>
			moveEnemyRandomly(enemy_list[i], 2, tickCount);
		}
	}

	//Move the bullet of player
	if (isMove[tickCount / 10 % 10] == 0) {
 800536e:	230a      	movs	r3, #10
 8005370:	f8d6 0294 	ldr.w	r0, [r6, #660]	; 0x294
 8005374:	fbb0 f0f3 	udiv	r0, r0, r3
 8005378:	fbb0 f2f3 	udiv	r2, r0, r3
 800537c:	fb03 0012 	mls	r0, r3, r2, r0
 8005380:	eb04 0340 	add.w	r3, r4, r0, lsl #1
 8005384:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8005388:	f8b3 22c8 	ldrh.w	r2, [r3, #712]	; 0x2c8
 800538c:	b982      	cbnz	r2, 80053b0 <_ZN11Screen4View15handleTickEventEv+0x1cc>
		isMove[tickCount / 10 % 10] = 1;
 800538e:	2201      	movs	r2, #1
 8005390:	f8a3 22c8 	strh.w	r2, [r3, #712]	; 0x2c8
		bullet_list[tickCount / 10 % 10].setXY(x + 8, y - 15);
 8005394:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005396:	f103 0108 	add.w	r1, r3, #8
 800539a:	232c      	movs	r3, #44	; 0x2c
 800539c:	f1a7 020f 	sub.w	r2, r7, #15
 80053a0:	fb03 4000 	mla	r0, r3, r0, r4
 80053a4:	b212      	sxth	r2, r2
 80053a6:	b209      	sxth	r1, r1
 80053a8:	f200 4024 	addw	r0, r0, #1060	; 0x424
 80053ac:	f7fe f93d 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
 80053b0:	f204 4b24 	addw	fp, r4, #1060	; 0x424
 80053b4:	f504 5696 	add.w	r6, r4, #4800	; 0x12c0
 80053b8:	3608      	adds	r6, #8
 80053ba:	940a      	str	r4, [sp, #40]	; 0x28
 80053bc:	f204 57dc 	addw	r7, r4, #1500	; 0x5dc
			countItem = 0;
 80053c0:	465d      	mov	r5, fp
	}
	for (int16_t i = 0; i < 10; i++) {
		bullet_list[i].setY(bullet_list[i].getY() - 5);
		if (bullet_list[i].getY() <= -23) {
			isMove[i] = 0;
 80053c2:	f04f 0800 	mov.w	r8, #0
		bullet_list[i].setY(bullet_list[i].getY() - 5);
 80053c6:	88e9      	ldrh	r1, [r5, #6]
 80053c8:	682b      	ldr	r3, [r5, #0]
 80053ca:	3905      	subs	r1, #5
 80053cc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80053ce:	4628      	mov	r0, r5
 80053d0:	b209      	sxth	r1, r1
 80053d2:	4798      	blx	r3
		if (bullet_list[i].getY() <= -23) {
 80053d4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
	for (int16_t i = 0; i < 10; i++) {
 80053d8:	352c      	adds	r5, #44	; 0x2c
		if (bullet_list[i].getY() <= -23) {
 80053da:	3316      	adds	r3, #22
			isMove[i] = 0;
 80053dc:	bfb8      	it	lt
 80053de:	f8a6 8000 	strhlt.w	r8, [r6]
	for (int16_t i = 0; i < 10; i++) {
 80053e2:	42bd      	cmp	r5, r7
 80053e4:	f106 0602 	add.w	r6, r6, #2
 80053e8:	d1ed      	bne.n	80053c6 <_ZN11Screen4View15handleTickEventEv+0x1e2>
 80053ea:	f504 5398 	add.w	r3, r4, #4864	; 0x1300
 80053ee:	3302      	adds	r3, #2
 80053f0:	9308      	str	r3, [sp, #32]
 80053f2:	f604 134c 	addw	r3, r4, #2380	; 0x94c
 80053f6:	9305      	str	r3, [sp, #20]
 80053f8:	f504 5398 	add.w	r3, r4, #4864	; 0x1300
 80053fc:	3314      	adds	r3, #20
 80053fe:	9d05      	ldr	r5, [sp, #20]
 8005400:	9f08      	ldr	r7, [sp, #32]
 8005402:	9306      	str	r3, [sp, #24]
 8005404:	f04f 0803 	mov.w	r8, #3
			} else {
				enemyAttack(enemy_list[i], bullet_enemy[i], 1, 5, 3);

			}
			if (checkCollision(bullet_enemy[i], playerShip)) {
				playerHP = playerHP - 5;
 8005408:	f504 5980 	add.w	r9, r4, #4096	; 0x1000
				hpplayer.setPosition(10, 11, playerHP, 9);
 800540c:	f504 7aa4 	add.w	sl, r4, #328	; 0x148
		if (isActive[i]) {
 8005410:	f837 3f02 	ldrh.w	r3, [r7, #2]!
 8005414:	b34b      	cbz	r3, 800546a <_ZN11Screen4View15handleTickEventEv+0x286>
			if (bullet_enemy[i].getY() >= 320) {
 8005416:	f9b5 3192 	ldrsh.w	r3, [r5, #402]	; 0x192
				enemyAttack(enemy_list[i], bullet_enemy[i], 0, 5, 3);
 800541a:	f8cd 8000 	str.w	r8, [sp]
			if (bullet_enemy[i].getY() >= 320) {
 800541e:	f5b3 7fa0 	cmp.w	r3, #320	; 0x140
 8005422:	f505 76c6 	add.w	r6, r5, #396	; 0x18c
				enemyAttack(enemy_list[i], bullet_enemy[i], 0, 5, 3);
 8005426:	bfac      	ite	ge
 8005428:	2200      	movge	r2, #0
				enemyAttack(enemy_list[i], bullet_enemy[i], 1, 5, 3);
 800542a:	2201      	movlt	r2, #1
 800542c:	4631      	mov	r1, r6
 800542e:	4628      	mov	r0, r5
				enemyAttack(enemy_list[i], bullet_enemy[i], 0, 5, 3);
 8005430:	2305      	movs	r3, #5
				enemyAttack(enemy_list[i], bullet_enemy[i], 1, 5, 3);
 8005432:	f7ff fe65 	bl	8005100 <_Z11enemyAttackRN8touchgfx5ImageES1_sss>
			if (checkCollision(bullet_enemy[i], playerShip)) {
 8005436:	ee18 1a10 	vmov	r1, s16
 800543a:	4630      	mov	r0, r6
 800543c:	f7ff fdec 	bl	8005018 <_Z14checkCollisionRKN8touchgfx5ImageES2_>
 8005440:	b198      	cbz	r0, 800546a <_ZN11Screen4View15handleTickEventEv+0x286>
				playerHP = playerHP - 5;
 8005442:	f8d9 32c4 	ldr.w	r3, [r9, #708]	; 0x2c4
				hpplayer.setPosition(10, 11, playerHP, 9);
 8005446:	2209      	movs	r2, #9
				playerHP = playerHP - 5;
 8005448:	3b05      	subs	r3, #5
 800544a:	f8c9 32c4 	str.w	r3, [r9, #708]	; 0x2c4
				hpplayer.setPosition(10, 11, playerHP, 9);
 800544e:	210a      	movs	r1, #10
 8005450:	9200      	str	r2, [sp, #0]
 8005452:	b21b      	sxth	r3, r3
 8005454:	4650      	mov	r0, sl
 8005456:	220b      	movs	r2, #11
 8005458:	f7fd fa48 	bl	80028ec <_ZN8touchgfx8Drawable11setPositionEssss>
				bullet_enemy[i].setY(320);
 800545c:	f8d5 318c 	ldr.w	r3, [r5, #396]	; 0x18c
 8005460:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8005464:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005466:	4630      	mov	r0, r6
 8005468:	4798      	blx	r3
	for (int16_t i = 0; i < 9; i++) {
 800546a:	9b06      	ldr	r3, [sp, #24]
 800546c:	429f      	cmp	r7, r3
 800546e:	f105 052c 	add.w	r5, r5, #44	; 0x2c
 8005472:	d1cd      	bne.n	8005410 <_ZN11Screen4View15handleTickEventEv+0x22c>
 8005474:	930d      	str	r3, [sp, #52]	; 0x34
 8005476:	f504 5899 	add.w	r8, r4, #4896	; 0x1320
 800547a:	f604 4364 	addw	r3, r4, #3172	; 0xc64
 800547e:	9e06      	ldr	r6, [sp, #24]
 8005480:	9307      	str	r3, [sp, #28]
 8005482:	f108 0806 	add.w	r8, r8, #6
 8005486:	461d      	mov	r5, r3
			} else {
				enemyAttack(enemyblue[i], bluelazer[i], 1, 5, 3);

			}
			if (checkCollision(bluelazer[i], playerShip)) {
				playerHP = playerHP - 7;
 8005488:	f504 5a80 	add.w	sl, r4, #4096	; 0x1000
				hpplayer.setPosition(10, 11, playerHP, 9);
 800548c:	f504 79a4 	add.w	r9, r4, #328	; 0x148
		if (isActiveBlue[i]) {
 8005490:	f836 3f02 	ldrh.w	r3, [r6, #2]!
 8005494:	b353      	cbz	r3, 80054ec <_ZN11Screen4View15handleTickEventEv+0x308>
			if (bluelazer[i].getY() >= 320) {
 8005496:	f9b5 331e 	ldrsh.w	r3, [r5, #798]	; 0x31e
 800549a:	f505 7746 	add.w	r7, r5, #792	; 0x318
 800549e:	f5b3 7fa0 	cmp.w	r3, #320	; 0x140
				enemyAttack(enemyblue[i], bluelazer[i], 0, 5, 3);
 80054a2:	f04f 0303 	mov.w	r3, #3
 80054a6:	9300      	str	r3, [sp, #0]
 80054a8:	bfac      	ite	ge
 80054aa:	2200      	movge	r2, #0
				enemyAttack(enemyblue[i], bluelazer[i], 1, 5, 3);
 80054ac:	2201      	movlt	r2, #1
 80054ae:	4639      	mov	r1, r7
 80054b0:	4628      	mov	r0, r5
				enemyAttack(enemyblue[i], bluelazer[i], 0, 5, 3);
 80054b2:	2305      	movs	r3, #5
				enemyAttack(enemyblue[i], bluelazer[i], 1, 5, 3);
 80054b4:	f7ff fe24 	bl	8005100 <_Z11enemyAttackRN8touchgfx5ImageES1_sss>
			if (checkCollision(bluelazer[i], playerShip)) {
 80054b8:	ee18 1a10 	vmov	r1, s16
 80054bc:	4638      	mov	r0, r7
 80054be:	f7ff fdab 	bl	8005018 <_Z14checkCollisionRKN8touchgfx5ImageES2_>
 80054c2:	b198      	cbz	r0, 80054ec <_ZN11Screen4View15handleTickEventEv+0x308>
				playerHP = playerHP - 7;
 80054c4:	f8da 32c4 	ldr.w	r3, [sl, #708]	; 0x2c4
				hpplayer.setPosition(10, 11, playerHP, 9);
 80054c8:	2209      	movs	r2, #9
				playerHP = playerHP - 7;
 80054ca:	3b07      	subs	r3, #7
 80054cc:	f8ca 32c4 	str.w	r3, [sl, #708]	; 0x2c4
				hpplayer.setPosition(10, 11, playerHP, 9);
 80054d0:	210a      	movs	r1, #10
 80054d2:	9200      	str	r2, [sp, #0]
 80054d4:	b21b      	sxth	r3, r3
 80054d6:	4648      	mov	r0, r9
 80054d8:	220b      	movs	r2, #11
 80054da:	f7fd fa07 	bl	80028ec <_ZN8touchgfx8Drawable11setPositionEssss>
				bluelazer[i].setY(320);
 80054de:	f8d5 3318 	ldr.w	r3, [r5, #792]	; 0x318
 80054e2:	f44f 71a0 	mov.w	r1, #320	; 0x140
 80054e6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80054e8:	4638      	mov	r0, r7
 80054ea:	4798      	blx	r3
	for (int16_t i = 0; i < 9; i++) {
 80054ec:	4546      	cmp	r6, r8
 80054ee:	f105 052c 	add.w	r5, r5, #44	; 0x2c
 80054f2:	d1cd      	bne.n	8005490 <_ZN11Screen4View15handleTickEventEv+0x2ac>
 80054f4:	f504 635f 	add.w	r3, r4, #3568	; 0xdf0
 80054f8:	f504 5799 	add.w	r7, r4, #4896	; 0x1320
 80054fc:	960c      	str	r6, [sp, #48]	; 0x30
 80054fe:	9309      	str	r3, [sp, #36]	; 0x24
 8005500:	3718      	adds	r7, #24
 8005502:	461d      	mov	r5, r3
 8005504:	46b0      	mov	r8, r6
			} else {
				enemyAttack(enemyorange[i], orangelazer[i], 1, 5, 3);

			}
			if (checkCollision(orangelazer[i], playerShip)) {
				playerHP = playerHP - 8;
 8005506:	f504 5a80 	add.w	sl, r4, #4096	; 0x1000
				hpplayer.setPosition(10, 11, playerHP, 9);
 800550a:	f504 79a4 	add.w	r9, r4, #328	; 0x148
		if (isActiveOrange[i]) {
 800550e:	f838 3f02 	ldrh.w	r3, [r8, #2]!
 8005512:	b353      	cbz	r3, 800556a <_ZN11Screen4View15handleTickEventEv+0x386>
			if (orangelazer[i].getY() >= 320) {
 8005514:	f9b5 331e 	ldrsh.w	r3, [r5, #798]	; 0x31e
 8005518:	f505 7646 	add.w	r6, r5, #792	; 0x318
 800551c:	f5b3 7fa0 	cmp.w	r3, #320	; 0x140
				enemyAttack(enemyorange[i], orangelazer[i], 0, 5, 3);
 8005520:	f04f 0303 	mov.w	r3, #3
 8005524:	9300      	str	r3, [sp, #0]
 8005526:	bfac      	ite	ge
 8005528:	2200      	movge	r2, #0
				enemyAttack(enemyorange[i], orangelazer[i], 1, 5, 3);
 800552a:	2201      	movlt	r2, #1
 800552c:	4631      	mov	r1, r6
 800552e:	4628      	mov	r0, r5
				enemyAttack(enemyorange[i], orangelazer[i], 0, 5, 3);
 8005530:	2305      	movs	r3, #5
				enemyAttack(enemyorange[i], orangelazer[i], 1, 5, 3);
 8005532:	f7ff fde5 	bl	8005100 <_Z11enemyAttackRN8touchgfx5ImageES1_sss>
			if (checkCollision(orangelazer[i], playerShip)) {
 8005536:	ee18 1a10 	vmov	r1, s16
 800553a:	4630      	mov	r0, r6
 800553c:	f7ff fd6c 	bl	8005018 <_Z14checkCollisionRKN8touchgfx5ImageES2_>
 8005540:	b198      	cbz	r0, 800556a <_ZN11Screen4View15handleTickEventEv+0x386>
				playerHP = playerHP - 8;
 8005542:	f8da 32c4 	ldr.w	r3, [sl, #708]	; 0x2c4
				hpplayer.setPosition(10, 11, playerHP, 9);
 8005546:	2209      	movs	r2, #9
				playerHP = playerHP - 8;
 8005548:	3b08      	subs	r3, #8
 800554a:	f8ca 32c4 	str.w	r3, [sl, #708]	; 0x2c4
				hpplayer.setPosition(10, 11, playerHP, 9);
 800554e:	210a      	movs	r1, #10
 8005550:	9200      	str	r2, [sp, #0]
 8005552:	b21b      	sxth	r3, r3
 8005554:	4648      	mov	r0, r9
 8005556:	220b      	movs	r2, #11
 8005558:	f7fd f9c8 	bl	80028ec <_ZN8touchgfx8Drawable11setPositionEssss>
				orangelazer[i].setY(320);
 800555c:	f8d5 3318 	ldr.w	r3, [r5, #792]	; 0x318
 8005560:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8005564:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005566:	4630      	mov	r0, r6
 8005568:	4798      	blx	r3
	for (int16_t i = 0; i < 9; i++) {
 800556a:	45b8      	cmp	r8, r7
 800556c:	f105 052c 	add.w	r5, r5, #44	; 0x2c
 8005570:	d1cd      	bne.n	800550e <_ZN11Screen4View15handleTickEventEv+0x32a>
			}
		}
	}

	if (countExploreTime > 0)
 8005572:	f504 5280 	add.w	r2, r4, #4096	; 0x1000
 8005576:	f8d2 32b8 	ldr.w	r3, [r2, #696]	; 0x2b8
 800557a:	2b00      	cmp	r3, #0
 800557c:	f040 80d2 	bne.w	8005724 <_ZN11Screen4View15handleTickEventEv+0x540>
        visible = vis;
 8005580:	2300      	movs	r3, #0
 8005582:	f884 3309 	strb.w	r3, [r4, #777]	; 0x309
 8005586:	f604 134c 	addw	r3, r4, #2380	; 0x94c
 800558a:	930f      	str	r3, [sp, #60]	; 0x3c
	//Kill enemy when hit the bullet
	for (int16_t i = 0; i < 30; i++) {
		for (int16_t j = 0; j < 9; j++) {
			if (checkCollision(bullet_list[i], enemy_list[j])) {
				if (isActive[j] == 1) {
					isActive[j] = 0;
 800558c:	2700      	movs	r7, #0
		for (int16_t j = 0; j < 9; j++) {
 800558e:	f504 5898 	add.w	r8, r4, #4864	; 0x1300
 8005592:	f604 23d8 	addw	r3, r4, #2776	; 0xad8
			if (checkCollision(bullet_list[i], enemy_list[j])) {
 8005596:	9d05      	ldr	r5, [sp, #20]
 8005598:	930e      	str	r3, [sp, #56]	; 0x38
 800559a:	f108 0804 	add.w	r8, r8, #4
					enemy_list[j].setVisible(false);
					bullet_enemy[j].setVisible(false);
					explore.setXY(enemy_list[j].getX(), enemy_list[j].getY());
 800559e:	f504 7939 	add.w	r9, r4, #740	; 0x2e4
					explore.setVisible(true);
					countExploreTime = 4;
 80055a2:	f504 5680 	add.w	r6, r4, #4096	; 0x1000
			if (checkCollision(bullet_list[i], enemy_list[j])) {
 80055a6:	4629      	mov	r1, r5
 80055a8:	4658      	mov	r0, fp
 80055aa:	f7ff fd35 	bl	8005018 <_Z14checkCollisionRKN8touchgfx5ImageES2_>
 80055ae:	b1d8      	cbz	r0, 80055e8 <_ZN11Screen4View15handleTickEventEv+0x404>
				if (isActive[j] == 1) {
 80055b0:	f8b8 a000 	ldrh.w	sl, [r8]
 80055b4:	f1ba 0f01 	cmp.w	sl, #1
 80055b8:	d116      	bne.n	80055e8 <_ZN11Screen4View15handleTickEventEv+0x404>
					isActive[j] = 0;
 80055ba:	f8a8 7000 	strh.w	r7, [r8]
					explore.setXY(enemy_list[j].getX(), enemy_list[j].getY());
 80055be:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 80055c2:	f9b5 1004 	ldrsh.w	r1, [r5, #4]
 80055c6:	f885 7025 	strb.w	r7, [r5, #37]	; 0x25
 80055ca:	f885 71b1 	strb.w	r7, [r5, #433]	; 0x1b1
 80055ce:	4648      	mov	r0, r9
 80055d0:	f7fe f82b 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
					countExploreTime = 4;
 80055d4:	2304      	movs	r3, #4
 80055d6:	f884 a309 	strb.w	sl, [r4, #777]	; 0x309
 80055da:	f8c6 32b8 	str.w	r3, [r6, #696]	; 0x2b8
					redenemys += 1;
 80055de:	f8b6 333a 	ldrh.w	r3, [r6, #826]	; 0x33a
 80055e2:	3301      	adds	r3, #1
 80055e4:	f8a6 333a 	strh.w	r3, [r6, #826]	; 0x33a
				}

			}
			if (checkCollision(bullet_list[i], enemyblue[j])) {
 80055e8:	f505 7146 	add.w	r1, r5, #792	; 0x318
 80055ec:	4658      	mov	r0, fp
 80055ee:	f7ff fd13 	bl	8005018 <_Z14checkCollisionRKN8touchgfx5ImageES2_>
 80055f2:	b1d8      	cbz	r0, 800562c <_ZN11Screen4View15handleTickEventEv+0x448>
				if (isActiveBlue[j] == 1) {
 80055f4:	f8b8 a012 	ldrh.w	sl, [r8, #18]
 80055f8:	f1ba 0f01 	cmp.w	sl, #1
 80055fc:	d116      	bne.n	800562c <_ZN11Screen4View15handleTickEventEv+0x448>
					isActiveBlue[j] = 0;
 80055fe:	f8a8 7012 	strh.w	r7, [r8, #18]
					enemyblue[j].setVisible(false);
					bluelazer[j].setVisible(false);
					explore.setXY(enemyblue[j].getX(), enemyblue[j].getY());
 8005602:	f9b5 231e 	ldrsh.w	r2, [r5, #798]	; 0x31e
 8005606:	f9b5 131c 	ldrsh.w	r1, [r5, #796]	; 0x31c
 800560a:	f885 733d 	strb.w	r7, [r5, #829]	; 0x33d
 800560e:	f885 7655 	strb.w	r7, [r5, #1621]	; 0x655
 8005612:	4648      	mov	r0, r9
 8005614:	f7fe f809 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
					explore.setVisible(true);
					countExploreTime = 4;
 8005618:	2304      	movs	r3, #4
 800561a:	f884 a309 	strb.w	sl, [r4, #777]	; 0x309
 800561e:	f8c6 32b8 	str.w	r3, [r6, #696]	; 0x2b8
					redenemys += 1;
 8005622:	f8b6 333a 	ldrh.w	r3, [r6, #826]	; 0x33a
 8005626:	3301      	adds	r3, #1
 8005628:	f8a6 333a 	strh.w	r3, [r6, #826]	; 0x33a
				}
			}
			if (checkCollision(bullet_list[i], enemyorange[j])) {
 800562c:	f205 41a4 	addw	r1, r5, #1188	; 0x4a4
 8005630:	4658      	mov	r0, fp
 8005632:	f7ff fcf1 	bl	8005018 <_Z14checkCollisionRKN8touchgfx5ImageES2_>
 8005636:	b1d8      	cbz	r0, 8005670 <_ZN11Screen4View15handleTickEventEv+0x48c>
				if (isActiveOrange[j] == 1) {
 8005638:	f8b8 a024 	ldrh.w	sl, [r8, #36]	; 0x24
 800563c:	f1ba 0f01 	cmp.w	sl, #1
 8005640:	d116      	bne.n	8005670 <_ZN11Screen4View15handleTickEventEv+0x48c>
					isActiveOrange[j] = 0;
 8005642:	f8a8 7024 	strh.w	r7, [r8, #36]	; 0x24
					enemyorange[j].setVisible(false);
					orangelazer[j].setVisible(false);
					explore.setXY(enemyorange[j].getX(), enemyorange[j].getY());
 8005646:	f9b5 24aa 	ldrsh.w	r2, [r5, #1194]	; 0x4aa
 800564a:	f9b5 14a8 	ldrsh.w	r1, [r5, #1192]	; 0x4a8
 800564e:	f885 74c9 	strb.w	r7, [r5, #1225]	; 0x4c9
 8005652:	f885 77e1 	strb.w	r7, [r5, #2017]	; 0x7e1
 8005656:	4648      	mov	r0, r9
 8005658:	f7fd ffe7 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
					explore.setVisible(true);
					countExploreTime = 4;
 800565c:	2304      	movs	r3, #4
 800565e:	f884 a309 	strb.w	sl, [r4, #777]	; 0x309
 8005662:	f8c6 32b8 	str.w	r3, [r6, #696]	; 0x2b8
					redenemys += 1;
 8005666:	f8b6 333a 	ldrh.w	r3, [r6, #826]	; 0x33a
 800566a:	3301      	adds	r3, #1
 800566c:	f8a6 333a 	strh.w	r3, [r6, #826]	; 0x33a
		for (int16_t j = 0; j < 9; j++) {
 8005670:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005672:	352c      	adds	r5, #44	; 0x2c
 8005674:	42ab      	cmp	r3, r5
 8005676:	f108 0802 	add.w	r8, r8, #2
 800567a:	d194      	bne.n	80055a6 <_ZN11Screen4View15handleTickEventEv+0x3c2>
	for (int16_t i = 0; i < 30; i++) {
 800567c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800567e:	f10b 0b2c 	add.w	fp, fp, #44	; 0x2c
 8005682:	459b      	cmp	fp, r3
 8005684:	d183      	bne.n	800558e <_ZN11Screen4View15handleTickEventEv+0x3aa>
		}
	}
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	//Round 2

	if (redenemys == 9) {
 8005686:	f504 5680 	add.w	r6, r4, #4096	; 0x1000
 800568a:	f8b6 333a 	ldrh.w	r3, [r6, #826]	; 0x33a
 800568e:	2b09      	cmp	r3, #9
 8005690:	d14f      	bne.n	8005732 <_ZN11Screen4View15handleTickEventEv+0x54e>
 8005692:	f504 71c6 	add.w	r1, r4, #396	; 0x18c
 8005696:	4623      	mov	r3, r4
 8005698:	2201      	movs	r2, #1
		for (int16_t i = 0; i < 9; i++) {
			enemy_list[i].setVisible(true);
			bullet_enemy[i].setVisible(true);
			isActive[i] = 1;
 800569a:	9808      	ldr	r0, [sp, #32]
 800569c:	f883 2971 	strb.w	r2, [r3, #2417]	; 0x971
 80056a0:	f883 2afd 	strb.w	r2, [r3, #2813]	; 0xafd
 80056a4:	f820 2f02 	strh.w	r2, [r0, #2]!
		for (int16_t i = 0; i < 9; i++) {
 80056a8:	332c      	adds	r3, #44	; 0x2c
 80056aa:	428b      	cmp	r3, r1
			isActive[i] = 1;
 80056ac:	9008      	str	r0, [sp, #32]
		for (int16_t i = 0; i < 9; i++) {
 80056ae:	d1f4      	bne.n	800569a <_ZN11Screen4View15handleTickEventEv+0x4b6>
		}
	}
	if (redenemys >= 9 and redenemys <= 18) {
		tickCount2 += 1;
		if (enemy_list[8].getX() > 136)
 80056b0:	f9b4 2ab0 	ldrsh.w	r2, [r4, #2736]	; 0xab0
		tickCount2 += 1;
 80056b4:	f8d6 3298 	ldr.w	r3, [r6, #664]	; 0x298
		if (enemy_list[8].getX() > 136)
 80056b8:	2a88      	cmp	r2, #136	; 0x88
 80056ba:	dc7d      	bgt.n	80057b8 <_ZN11Screen4View15handleTickEventEv+0x5d4>
		tickCount2 += 1;
 80056bc:	3301      	adds	r3, #1
 80056be:	f8c6 3298 	str.w	r3, [r6, #664]	; 0x298
			tickCount2 = 0;
 80056c2:	25f1      	movs	r5, #241	; 0xf1
 80056c4:	2700      	movs	r7, #0
		for (int16_t i = 0; i < 9; i++) {

			if (i < 5) {
				moveStraight(enemy_list[i], 1, tickCount2, 241 + i * 20,
 80056c6:	f504 5880 	add.w	r8, r4, #4096	; 0x1000
			if (i < 5) {
 80056ca:	2f04      	cmp	r7, #4
 80056cc:	f9b8 2298 	ldrsh.w	r2, [r8, #664]	; 0x298
 80056d0:	d874      	bhi.n	80057bc <_ZN11Screen4View15handleTickEventEv+0x5d8>
				moveStraight(enemy_list[i], 1, tickCount2, 241 + i * 20,
 80056d2:	f46f 70aa 	mvn.w	r0, #340	; 0x154
 80056d6:	182b      	adds	r3, r5, r0
 80056d8:	b21b      	sxth	r3, r3
 80056da:	9302      	str	r3, [sp, #8]
 80056dc:	f1a5 03c1 	sub.w	r3, r5, #193	; 0xc1
 80056e0:	b21b      	sxth	r3, r3
 80056e2:	9301      	str	r3, [sp, #4]
 80056e4:	f1a5 039b 	sub.w	r3, r5, #155	; 0x9b
 80056e8:	b21b      	sxth	r3, r3
 80056ea:	9300      	str	r3, [sp, #0]
 80056ec:	b22b      	sxth	r3, r5
						86 + i * 20, 128 - (4 - i) * 20, -20 - (4 - i) * 20);
			} else {
				moveStraight(enemy_list[i], 1, tickCount2, -21 - (-5 + i) * 20,
 80056ee:	9805      	ldr	r0, [sp, #20]
 80056f0:	2101      	movs	r1, #1
 80056f2:	f7ff fce1 	bl	80050b8 <_Z12moveStraightRN8touchgfx5ImageEssssss>
		for (int16_t i = 0; i < 9; i++) {
 80056f6:	9b05      	ldr	r3, [sp, #20]
 80056f8:	3701      	adds	r7, #1
 80056fa:	332c      	adds	r3, #44	; 0x2c
 80056fc:	3514      	adds	r5, #20
 80056fe:	2f09      	cmp	r7, #9
 8005700:	9305      	str	r3, [sp, #20]
 8005702:	b2ad      	uxth	r5, r5
 8005704:	d1e1      	bne.n	80056ca <_ZN11Screen4View15handleTickEventEv+0x4e6>
 8005706:	e017      	b.n	8005738 <_ZN11Screen4View15handleTickEventEv+0x554>
 8005708:	f604 154c 	addw	r5, r4, #2380	; 0x94c
 800570c:	f604 28d8 	addw	r8, r4, #2776	; 0xad8
			moveEnemyRandomly(enemy_list[i], 2, tickCount);
 8005710:	4628      	mov	r0, r5
 8005712:	f9b6 2294 	ldrsh.w	r2, [r6, #660]	; 0x294
 8005716:	2102      	movs	r1, #2
		for (int16_t i = 0; i < 9; i++) {
 8005718:	352c      	adds	r5, #44	; 0x2c
			moveEnemyRandomly(enemy_list[i], 2, tickCount);
 800571a:	f7ff fc9f 	bl	800505c <_Z17moveEnemyRandomlyRN8touchgfx5ImageEss>
		for (int16_t i = 0; i < 9; i++) {
 800571e:	4545      	cmp	r5, r8
 8005720:	d1f6      	bne.n	8005710 <_ZN11Screen4View15handleTickEventEv+0x52c>
 8005722:	e624      	b.n	800536e <_ZN11Screen4View15handleTickEventEv+0x18a>
		countExploreTime -= 1;
 8005724:	3b01      	subs	r3, #1
 8005726:	f8c2 32b8 	str.w	r3, [r2, #696]	; 0x2b8
	if (countExploreTime == 0) {
 800572a:	2b00      	cmp	r3, #0
 800572c:	f47f af2b 	bne.w	8005586 <_ZN11Screen4View15handleTickEventEv+0x3a2>
 8005730:	e726      	b.n	8005580 <_ZN11Screen4View15handleTickEventEv+0x39c>
	if (redenemys >= 9 and redenemys <= 18) {
 8005732:	3b09      	subs	r3, #9
 8005734:	2b09      	cmp	r3, #9
 8005736:	d9bb      	bls.n	80056b0 <_ZN11Screen4View15handleTickEventEv+0x4cc>
		}
	}
	/////////////////////////////////////////////////////////////////////////////////////////////////////
	//Round 3

	if (redenemys == 18) {
 8005738:	f504 5180 	add.w	r1, r4, #4096	; 0x1000
 800573c:	f8b1 333a 	ldrh.w	r3, [r1, #826]	; 0x33a
 8005740:	2b12      	cmp	r3, #18
 8005742:	d14c      	bne.n	80057de <_ZN11Screen4View15handleTickEventEv+0x5fa>
 8005744:	9b06      	ldr	r3, [sp, #24]
 8005746:	f504 75c6 	add.w	r5, r4, #396	; 0x18c
 800574a:	4622      	mov	r2, r4
 800574c:	2001      	movs	r0, #1
 800574e:	f882 0c89 	strb.w	r0, [r2, #3209]	; 0xc89
 8005752:	f882 0fa1 	strb.w	r0, [r2, #4001]	; 0xfa1
		for (int16_t i = 0; i < 9; i++) {
 8005756:	322c      	adds	r2, #44	; 0x2c
 8005758:	4295      	cmp	r5, r2
			enemyblue[i].setVisible(true);
			bluelazer[i].setVisible(true);
			isActiveBlue[i] = 1;
 800575a:	f823 0f02 	strh.w	r0, [r3, #2]!
		for (int16_t i = 0; i < 9; i++) {
 800575e:	d1f6      	bne.n	800574e <_ZN11Screen4View15handleTickEventEv+0x56a>
		}
	}
	if (redenemys >= 18 and redenemys <= 27) {
		tickCount3 += 1;
		if (enemyblue[8].getX() > 250)
 8005760:	f9b4 2dc8 	ldrsh.w	r2, [r4, #3528]	; 0xdc8
		tickCount3 += 1;
 8005764:	f8d1 329c 	ldr.w	r3, [r1, #668]	; 0x29c
		if (enemyblue[8].getX() > 250)
 8005768:	2afa      	cmp	r2, #250	; 0xfa
 800576a:	dc78      	bgt.n	800585e <_ZN11Screen4View15handleTickEventEv+0x67a>
		tickCount3 += 1;
 800576c:	3301      	adds	r3, #1
			tickCount3 = 0;
 800576e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8005772:	f8c1 329c 	str.w	r3, [r1, #668]	; 0x29c
 8005776:	25f1      	movs	r5, #241	; 0xf1
 8005778:	2700      	movs	r7, #0
		for (int16_t i = 0; i < 9; i++) {
			if (i < 5) {
				moveStraight(enemyblue[i], 1, tickCount3, 241 + i * 30, 86,
 800577a:	f504 5980 	add.w	r9, r4, #4096	; 0x1000
						-20 - (4 - i) * 30, 86);
			} else {
				moveStraight(enemyblue[i], 1, tickCount3, -20 - (-5 + i) * 30,
 800577e:	f240 1a73 	movw	sl, #371	; 0x173
 8005782:	f04f 083b 	mov.w	r8, #59	; 0x3b
			if (i < 5) {
 8005786:	2f04      	cmp	r7, #4
 8005788:	f9b9 229c 	ldrsh.w	r2, [r9, #668]	; 0x29c
 800578c:	d869      	bhi.n	8005862 <_ZN11Screen4View15handleTickEventEv+0x67e>
				moveStraight(enemyblue[i], 1, tickCount3, 241 + i * 30, 86,
 800578e:	f46f 73be 	mvn.w	r3, #380	; 0x17c
 8005792:	18eb      	adds	r3, r5, r3
 8005794:	2156      	movs	r1, #86	; 0x56
 8005796:	b21b      	sxth	r3, r3
 8005798:	e9cd 1300 	strd	r1, r3, [sp]
 800579c:	9102      	str	r1, [sp, #8]
 800579e:	b22b      	sxth	r3, r5
				moveStraight(enemyblue[i], 1, tickCount3, -20 - (-5 + i) * 30,
 80057a0:	4658      	mov	r0, fp
 80057a2:	2101      	movs	r1, #1
		for (int16_t i = 0; i < 9; i++) {
 80057a4:	3701      	adds	r7, #1
				moveStraight(enemyblue[i], 1, tickCount3, -20 - (-5 + i) * 30,
 80057a6:	f7ff fc87 	bl	80050b8 <_Z12moveStraightRN8touchgfx5ImageEssssss>
		for (int16_t i = 0; i < 9; i++) {
 80057aa:	351e      	adds	r5, #30
 80057ac:	2f09      	cmp	r7, #9
 80057ae:	f10b 0b2c 	add.w	fp, fp, #44	; 0x2c
 80057b2:	b2ad      	uxth	r5, r5
 80057b4:	d1e7      	bne.n	8005786 <_ZN11Screen4View15handleTickEventEv+0x5a2>
 80057b6:	e015      	b.n	80057e4 <_ZN11Screen4View15handleTickEventEv+0x600>
			tickCount2 = 0;
 80057b8:	2300      	movs	r3, #0
 80057ba:	e780      	b.n	80056be <_ZN11Screen4View15handleTickEventEv+0x4da>
				moveStraight(enemy_list[i], 1, tickCount2, -21 - (-5 + i) * 20,
 80057bc:	f46f 71dc 	mvn.w	r1, #440	; 0x1b8
 80057c0:	1869      	adds	r1, r5, r1
 80057c2:	b209      	sxth	r1, r1
 80057c4:	9102      	str	r1, [sp, #8]
 80057c6:	f5c5 7101 	rsb	r1, r5, #516	; 0x204
 80057ca:	b209      	sxth	r1, r1
 80057cc:	9101      	str	r1, [sp, #4]
 80057ce:	f1a5 01ff 	sub.w	r1, r5, #255	; 0xff
 80057d2:	f5c5 73a0 	rsb	r3, r5, #320	; 0x140
 80057d6:	b209      	sxth	r1, r1
 80057d8:	9100      	str	r1, [sp, #0]
 80057da:	b21b      	sxth	r3, r3
 80057dc:	e787      	b.n	80056ee <_ZN11Screen4View15handleTickEventEv+0x50a>
	if (redenemys >= 18 and redenemys <= 27) {
 80057de:	3b12      	subs	r3, #18
 80057e0:	2b09      	cmp	r3, #9
 80057e2:	d9bd      	bls.n	8005760 <_ZN11Screen4View15handleTickEventEv+0x57c>

		}
	}

	//Round 4
	if (redenemys == 27) {
 80057e4:	f504 5580 	add.w	r5, r4, #4096	; 0x1000
 80057e8:	f8b5 333a 	ldrh.w	r3, [r5, #826]	; 0x33a
 80057ec:	2b1b      	cmp	r3, #27
 80057ee:	d143      	bne.n	8005878 <_ZN11Screen4View15handleTickEventEv+0x694>
 80057f0:	f604 6315 	addw	r3, r4, #3605	; 0xe15
 80057f4:	f604 61f1 	addw	r1, r4, #3825	; 0xef1
 80057f8:	2201      	movs	r2, #1
		for (int16_t i = 0; i < 5; i++) {
			enemyorange[i].setVisible(true);
			orangelazer[i].setVisible(true);
			isActiveOrange[i] = 1;
 80057fa:	980c      	ldr	r0, [sp, #48]	; 0x30
 80057fc:	701a      	strb	r2, [r3, #0]
 80057fe:	f883 2318 	strb.w	r2, [r3, #792]	; 0x318
 8005802:	f820 2f02 	strh.w	r2, [r0, #2]!
		for (int16_t i = 0; i < 5; i++) {
 8005806:	332c      	adds	r3, #44	; 0x2c
 8005808:	4299      	cmp	r1, r3
			isActiveOrange[i] = 1;
 800580a:	900c      	str	r0, [sp, #48]	; 0x30
		for (int16_t i = 0; i < 5; i++) {
 800580c:	d1f5      	bne.n	80057fa <_ZN11Screen4View15handleTickEventEv+0x616>
		}
	}
	if (redenemys >= 27 and redenemys <= 32) {
		if (tickCount4 >= 100)
 800580e:	f8d5 32a0 	ldr.w	r3, [r5, #672]	; 0x2a0
 8005812:	2b63      	cmp	r3, #99	; 0x63
 8005814:	d87a      	bhi.n	800590c <_ZN11Screen4View15handleTickEventEv+0x728>
			tickCount4 = 0;
		tickCount4 += 1;
 8005816:	f8d5 32a0 	ldr.w	r3, [r5, #672]	; 0x2a0
 800581a:	3301      	adds	r3, #1
 800581c:	f8c5 32a0 	str.w	r3, [r5, #672]	; 0x2a0
 8005820:	27f0      	movs	r7, #240	; 0xf0
		for (int16_t i = 0; i < 5; i++) {
			if (tickCount4 <= 50)
				moveStraight(enemyorange[i], 1, tickCount4, 240 + i * 40, 120,
						240 + i * 40 - 360, 120);
			else if (tickCount4 <= 100) {
				moveStraight(enemyorange[i], 1, tickCount4 - 50, -120 + i * 40,
 8005822:	f04f 0828 	mov.w	r8, #40	; 0x28
				moveStraight(enemyorange[i], 1, tickCount4, 240 + i * 40, 120,
 8005826:	f04f 0978 	mov.w	r9, #120	; 0x78
			if (tickCount4 <= 50)
 800582a:	f8d5 22a0 	ldr.w	r2, [r5, #672]	; 0x2a0
 800582e:	2a32      	cmp	r2, #50	; 0x32
 8005830:	d870      	bhi.n	8005914 <_ZN11Screen4View15handleTickEventEv+0x730>
				moveStraight(enemyorange[i], 1, tickCount4, 240 + i * 40, 120,
 8005832:	f5a7 73b4 	sub.w	r3, r7, #360	; 0x168
 8005836:	b21b      	sxth	r3, r3
 8005838:	e9cd 9300 	strd	r9, r3, [sp]
 800583c:	f8cd 9008 	str.w	r9, [sp, #8]
 8005840:	b23b      	sxth	r3, r7
				moveStraight(enemyorange[i], 1, tickCount4 - 50, -120 + i * 40,
 8005842:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005844:	b212      	sxth	r2, r2
 8005846:	2101      	movs	r1, #1
 8005848:	f7ff fc36 	bl	80050b8 <_Z12moveStraightRN8touchgfx5ImageEssssss>
		for (int16_t i = 0; i < 5; i++) {
 800584c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800584e:	3728      	adds	r7, #40	; 0x28
 8005850:	b2bf      	uxth	r7, r7
 8005852:	332c      	adds	r3, #44	; 0x2c
 8005854:	f5b7 7fdc 	cmp.w	r7, #440	; 0x1b8
 8005858:	9309      	str	r3, [sp, #36]	; 0x24
 800585a:	d1e6      	bne.n	800582a <_ZN11Screen4View15handleTickEventEv+0x646>
 800585c:	e00f      	b.n	800587e <_ZN11Screen4View15handleTickEventEv+0x69a>
			tickCount3 = 0;
 800585e:	2300      	movs	r3, #0
 8005860:	e785      	b.n	800576e <_ZN11Screen4View15handleTickEventEv+0x58a>
				moveStraight(enemyblue[i], 1, tickCount3, -20 - (-5 + i) * 30,
 8005862:	f5c5 713c 	rsb	r1, r5, #752	; 0x2f0
 8005866:	ebaa 0305 	sub.w	r3, sl, r5
 800586a:	b209      	sxth	r1, r1
 800586c:	e9cd 8100 	strd	r8, r1, [sp]
 8005870:	f8cd 8008 	str.w	r8, [sp, #8]
 8005874:	b21b      	sxth	r3, r3
 8005876:	e793      	b.n	80057a0 <_ZN11Screen4View15handleTickEventEv+0x5bc>
	if (redenemys >= 27 and redenemys <= 32) {
 8005878:	3b1b      	subs	r3, #27
 800587a:	2b05      	cmp	r3, #5
 800587c:	d9c7      	bls.n	800580e <_ZN11Screen4View15handleTickEventEv+0x62a>
//	            	moveStraight(enemyorange[i],1,(tickCount7-50),x,y,x+(x-110)/z,y+(y-60)/z);
//				}
//	        }
//		}
	//Round 8
	if (redenemys == 32) {
 800587e:	f8b5 333a 	ldrh.w	r3, [r5, #826]	; 0x33a
 8005882:	2b20      	cmp	r3, #32
 8005884:	d152      	bne.n	800592c <_ZN11Screen4View15handleTickEventEv+0x748>
 8005886:	f504 72c6 	add.w	r2, r4, #396	; 0x18c
 800588a:	2301      	movs	r3, #1
 800588c:	990a      	ldr	r1, [sp, #40]	; 0x28
 800588e:	f881 3c89 	strb.w	r3, [r1, #3209]	; 0xc89
 8005892:	f881 3fa1 	strb.w	r3, [r1, #4001]	; 0xfa1
		for (int16_t i = 0; i < 9; i++) {
			enemyblue[i].setVisible(true);
			bluelazer[i].setVisible(true);
			isActiveBlue[i] = 1;
 8005896:	990d      	ldr	r1, [sp, #52]	; 0x34
 8005898:	f821 3f02 	strh.w	r3, [r1, #2]!
 800589c:	910d      	str	r1, [sp, #52]	; 0x34
		for (int16_t i = 0; i < 9; i++) {
 800589e:	990a      	ldr	r1, [sp, #40]	; 0x28
 80058a0:	312c      	adds	r1, #44	; 0x2c
 80058a2:	428a      	cmp	r2, r1
 80058a4:	910a      	str	r1, [sp, #40]	; 0x28
 80058a6:	d1f1      	bne.n	800588c <_ZN11Screen4View15handleTickEventEv+0x6a8>
		}
	}
	if (redenemys >= 32) {
		tickCount8 += 1;
 80058a8:	f8d5 32b0 	ldr.w	r3, [r5, #688]	; 0x2b0
		for (int16_t i = 0; i < 9; i++) {
			moveStraight(enemyblue[i], 1, tickCount8, i * (20 + 7.5), -20,
 80058ac:	f8df 910c 	ldr.w	r9, [pc, #268]	; 80059bc <_ZN11Screen4View15handleTickEventEv+0x7d8>
		tickCount8 += 1;
 80058b0:	3301      	adds	r3, #1
 80058b2:	f8c5 32b0 	str.w	r3, [r5, #688]	; 0x2b0
 80058b6:	2700      	movs	r7, #0
			moveStraight(enemyblue[i], 1, tickCount8, i * (20 + 7.5), -20,
 80058b8:	f04f 0800 	mov.w	r8, #0
 80058bc:	f44f 7aaa 	mov.w	sl, #340	; 0x154
 80058c0:	f06f 0b13 	mvn.w	fp, #19
 80058c4:	b238      	sxth	r0, r7
 80058c6:	f7fa ff5f 	bl	8000788 <__aeabi_i2d>
 80058ca:	4642      	mov	r2, r8
 80058cc:	464b      	mov	r3, r9
 80058ce:	f7fa fcdf 	bl	8000290 <__aeabi_dmul>
 80058d2:	f7fa ffc3 	bl	800085c <__aeabi_d2iz>
 80058d6:	b203      	sxth	r3, r0
 80058d8:	e9cd 3a01 	strd	r3, sl, [sp, #4]
 80058dc:	f8cd b000 	str.w	fp, [sp]
 80058e0:	f9b6 22b0 	ldrsh.w	r2, [r6, #688]	; 0x2b0
 80058e4:	9807      	ldr	r0, [sp, #28]
 80058e6:	2101      	movs	r1, #1
 80058e8:	f7ff fbe6 	bl	80050b8 <_Z12moveStraightRN8touchgfx5ImageEssssss>
					i * (20 + 7.5), 340);
			if (enemyblue[i].getY() > 330)
 80058ec:	9b07      	ldr	r3, [sp, #28]
 80058ee:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 80058f2:	f5b3 7fa5 	cmp.w	r3, #330	; 0x14a
				tickCount8 = 0;
 80058f6:	bfc4      	itt	gt
 80058f8:	2300      	movgt	r3, #0
 80058fa:	f8c6 32b0 	strgt.w	r3, [r6, #688]	; 0x2b0
		for (int16_t i = 0; i < 9; i++) {
 80058fe:	9b07      	ldr	r3, [sp, #28]
 8005900:	3701      	adds	r7, #1
 8005902:	332c      	adds	r3, #44	; 0x2c
 8005904:	2f09      	cmp	r7, #9
 8005906:	9307      	str	r3, [sp, #28]
 8005908:	d1dc      	bne.n	80058c4 <_ZN11Screen4View15handleTickEventEv+0x6e0>
 800590a:	e011      	b.n	8005930 <_ZN11Screen4View15handleTickEventEv+0x74c>
			tickCount4 = 0;
 800590c:	2300      	movs	r3, #0
 800590e:	f8c5 32a0 	str.w	r3, [r5, #672]	; 0x2a0
 8005912:	e780      	b.n	8005816 <_ZN11Screen4View15handleTickEventEv+0x632>
			else if (tickCount4 <= 100) {
 8005914:	2a64      	cmp	r2, #100	; 0x64
 8005916:	d899      	bhi.n	800584c <_ZN11Screen4View15handleTickEventEv+0x668>
				moveStraight(enemyorange[i], 1, tickCount4 - 50, -120 + i * 40,
 8005918:	f5a7 73b4 	sub.w	r3, r7, #360	; 0x168
 800591c:	b239      	sxth	r1, r7
 800591e:	e9cd 8100 	strd	r8, r1, [sp]
 8005922:	3a32      	subs	r2, #50	; 0x32
 8005924:	f8cd 8008 	str.w	r8, [sp, #8]
 8005928:	b21b      	sxth	r3, r3
 800592a:	e78a      	b.n	8005842 <_ZN11Screen4View15handleTickEventEv+0x65e>
	if (redenemys >= 32) {
 800592c:	2b1f      	cmp	r3, #31
 800592e:	d8bb      	bhi.n	80058a8 <_ZN11Screen4View15handleTickEventEv+0x6c4>

		}
	}
	//
	//Control player
	control(playerShip,rightButton,leftButton);
 8005930:	f504 7168 	add.w	r1, r4, #928	; 0x3a0
 8005934:	a810      	add	r0, sp, #64	; 0x40
 8005936:	f7ff fbfd 	bl	8005134 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEC1ERKS2_>
 800593a:	f504 7148 	add.w	r1, r4, #800	; 0x320
 800593e:	a830      	add	r0, sp, #192	; 0xc0
 8005940:	f7ff fbf8 	bl	8005134 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEC1ERKS2_>
 8005944:	ee18 0a10 	vmov	r0, s16
 8005948:	aa30      	add	r2, sp, #192	; 0xc0
 800594a:	a910      	add	r1, sp, #64	; 0x40
 800594c:	f7ff fb44 	bl	8004fd8 <_Z7controlRN8touchgfx5ImageENS_24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEES4_>

	if (redenemys == 41) {
 8005950:	f8b5 333a 	ldrh.w	r3, [r5, #826]	; 0x33a
 8005954:	2b29      	cmp	r3, #41	; 0x29
 8005956:	d103      	bne.n	8005960 <_ZN11Screen4View15handleTickEventEv+0x77c>
 8005958:	f009 fa8c 	bl	800ee74 <_ZN8touchgfx11Application11getInstanceEv>
		application().gotoScreen5ScreenSlideTransitionEast();
 800595c:	f7fd f9a6 	bl	8002cac <_ZN23FrontendApplicationBase36gotoScreen5ScreenSlideTransitionEastEv>
	}

	uint8_t res = 0;
	uint32_t count = osMessageQueueGetCount(Queue1Handle);
 8005960:	4d15      	ldr	r5, [pc, #84]	; (80059b8 <_ZN11Screen4View15handleTickEventEv+0x7d4>)
	uint8_t res = 0;
 8005962:	2600      	movs	r6, #0
	uint32_t count = osMessageQueueGetCount(Queue1Handle);
 8005964:	6828      	ldr	r0, [r5, #0]
	uint8_t res = 0;
 8005966:	f88d 60c0 	strb.w	r6, [sp, #192]	; 0xc0
	uint32_t count = osMessageQueueGetCount(Queue1Handle);
 800596a:	f003 fab6 	bl	8008eda <osMessageQueueGetCount>
	if (count > 0) {
 800596e:	b190      	cbz	r0, 8005996 <_ZN11Screen4View15handleTickEventEv+0x7b2>
		osMessageQueueGet(Queue1Handle, &res, NULL, osWaitForever);
 8005970:	f04f 33ff 	mov.w	r3, #4294967295
 8005974:	6828      	ldr	r0, [r5, #0]
 8005976:	4632      	mov	r2, r6
 8005978:	a930      	add	r1, sp, #192	; 0xc0
 800597a:	f003 fa7f 	bl	8008e7c <osMessageQueueGet>
		if (res == 'R') {
 800597e:	f89d 30c0 	ldrb.w	r3, [sp, #192]	; 0xc0
 8005982:	2b52      	cmp	r3, #82	; 0x52
 8005984:	d10f      	bne.n	80059a6 <_ZN11Screen4View15handleTickEventEv+0x7c2>
			x += 3;
 8005986:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005988:	3303      	adds	r3, #3
 800598a:	b21b      	sxth	r3, r3
			if (x > 240) {
				x = 0;
 800598c:	2bf1      	cmp	r3, #241	; 0xf1
 800598e:	bfa8      	it	ge
 8005990:	4633      	movge	r3, r6
        rect.x = x;
 8005992:	f8a4 309c 	strh.w	r3, [r4, #156]	; 0x9c
     *
     * @see Container::invalidate
     */
    void invalidate() const
    {
        container.invalidate();
 8005996:	1d20      	adds	r0, r4, #4
 8005998:	f00a fa3f 	bl	800fe1a <_ZNK8touchgfx8Drawable10invalidateEv>
			playerShip.setX(x);
		}
	}

	invalidate();
}
 800599c:	b051      	add	sp, #324	; 0x144
 800599e:	ecbd 8b02 	vpop	{d8}
 80059a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		if (res == 'L') {
 80059a6:	2b4c      	cmp	r3, #76	; 0x4c
 80059a8:	d1f5      	bne.n	8005996 <_ZN11Screen4View15handleTickEventEv+0x7b2>
			x -= 1;
 80059aa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80059ac:	3b01      	subs	r3, #1
 80059ae:	b21b      	sxth	r3, r3
				x = 240;
 80059b0:	2b00      	cmp	r3, #0
 80059b2:	bfb8      	it	lt
 80059b4:	23f0      	movlt	r3, #240	; 0xf0
 80059b6:	e7ec      	b.n	8005992 <_ZN11Screen4View15handleTickEventEv+0x7ae>
 80059b8:	20002580 	.word	0x20002580
 80059bc:	403b8000 	.word	0x403b8000

080059c0 <_ZN16Screen5PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen5Presenter() {};
 80059c0:	4770      	bx	lr

080059c2 <_ZThn4_N16Screen5PresenterD1Ev>:
 80059c2:	3804      	subs	r0, #4
 80059c4:	4770      	bx	lr

080059c6 <_ZN16Screen5Presenter10deactivateEv>:
}

void Screen5Presenter::activate()
{

}
 80059c6:	4770      	bx	lr

080059c8 <_ZN16Screen5PresenterD0Ev>:
 80059c8:	b510      	push	{r4, lr}
 80059ca:	2110      	movs	r1, #16
 80059cc:	4604      	mov	r4, r0
 80059ce:	f017 fcd3 	bl	801d378 <_ZdlPvj>
 80059d2:	4620      	mov	r0, r4
 80059d4:	bd10      	pop	{r4, pc}

080059d6 <_ZThn4_N16Screen5PresenterD0Ev>:
 80059d6:	f1a0 0004 	sub.w	r0, r0, #4
 80059da:	e7f5      	b.n	80059c8 <_ZN16Screen5PresenterD0Ev>

080059dc <_ZN16Screen5PresenterC1ER11Screen5View>:
Screen5Presenter::Screen5Presenter(Screen5View& v)
 80059dc:	b510      	push	{r4, lr}
 80059de:	2200      	movs	r2, #0
 80059e0:	6082      	str	r2, [r0, #8]
    : view(v)
 80059e2:	4a04      	ldr	r2, [pc, #16]	; (80059f4 <_ZN16Screen5PresenterC1ER11Screen5View+0x18>)
 80059e4:	60c1      	str	r1, [r0, #12]
 80059e6:	f102 0408 	add.w	r4, r2, #8
 80059ea:	3220      	adds	r2, #32
 80059ec:	6004      	str	r4, [r0, #0]
 80059ee:	6042      	str	r2, [r0, #4]
}
 80059f0:	bd10      	pop	{r4, pc}
 80059f2:	bf00      	nop
 80059f4:	080202bc 	.word	0x080202bc

080059f8 <_ZN11Screen5ViewD1Ev>:
#include <gui/screen5_screen/Screen5Presenter.hpp>

class Screen5View: public Screen5ViewBase {
public:
	Screen5View();
	virtual ~Screen5View() {
 80059f8:	4b12      	ldr	r3, [pc, #72]	; (8005a44 <_ZN11Screen5ViewD1Ev+0x4c>)
 80059fa:	b570      	push	{r4, r5, r6, lr}
 80059fc:	6003      	str	r3, [r0, #0]
 80059fe:	f8d0 3aac 	ldr.w	r3, [r0, #2732]	; 0xaac
 8005a02:	4604      	mov	r4, r0
 8005a04:	f500 6528 	add.w	r5, r0, #2688	; 0xa80
 8005a08:	681b      	ldr	r3, [r3, #0]
 8005a0a:	f600 20ac 	addw	r0, r0, #2732	; 0xaac
 8005a0e:	4798      	blx	r3
 8005a10:	f8d4 3a80 	ldr.w	r3, [r4, #2688]	; 0xa80
 8005a14:	4628      	mov	r0, r5
 8005a16:	681b      	ldr	r3, [r3, #0]
 8005a18:	4798      	blx	r3
 8005a1a:	f640 2554 	movw	r5, #2644	; 0xa54
	}
 8005a1e:	f640 06c8 	movw	r6, #2248	; 0x8c8
	virtual ~Screen5View() {
 8005a22:	5963      	ldr	r3, [r4, r5]
 8005a24:	1960      	adds	r0, r4, r5
 8005a26:	681b      	ldr	r3, [r3, #0]
 8005a28:	3d2c      	subs	r5, #44	; 0x2c
 8005a2a:	4798      	blx	r3
	}
 8005a2c:	42b5      	cmp	r5, r6
 8005a2e:	d1f8      	bne.n	8005a22 <_ZN11Screen5ViewD1Ev+0x2a>
	virtual ~Screen5View() {
 8005a30:	5963      	ldr	r3, [r4, r5]
 8005a32:	1960      	adds	r0, r4, r5
 8005a34:	681b      	ldr	r3, [r3, #0]
 8005a36:	3d2c      	subs	r5, #44	; 0x2c
 8005a38:	4798      	blx	r3
	}
 8005a3a:	f5b5 7f68 	cmp.w	r5, #928	; 0x3a0
 8005a3e:	d1f7      	bne.n	8005a30 <_ZN11Screen5ViewD1Ev+0x38>
 8005a40:	4620      	mov	r0, r4
 8005a42:	bd70      	pop	{r4, r5, r6, pc}
 8005a44:	080202ec 	.word	0x080202ec

08005a48 <_ZN11Screen5View14tearDownScreenEv>:
	Screen5ViewBase::setupScreen();
}

void Screen5View::tearDownScreen() {
	Screen5ViewBase::tearDownScreen();
}
 8005a48:	4770      	bx	lr

08005a4a <_ZN11Screen5ViewD0Ev>:
	virtual ~Screen5View() {
 8005a4a:	b510      	push	{r4, lr}
 8005a4c:	4604      	mov	r4, r0
	}
 8005a4e:	f7ff ffd3 	bl	80059f8 <_ZN11Screen5ViewD1Ev>
 8005a52:	4620      	mov	r0, r4
 8005a54:	f640 3134 	movw	r1, #2868	; 0xb34
 8005a58:	f017 fc8e 	bl	801d378 <_ZdlPvj>
 8005a5c:	4620      	mov	r0, r4
 8005a5e:	bd10      	pop	{r4, pc}

08005a60 <_ZN11Screen5View11setupScreenEv>:
	Screen5ViewBase::setupScreen();
 8005a60:	f7fe bb37 	b.w	80040d2 <_ZN15Screen5ViewBase11setupScreenEv>

08005a64 <_ZN11Screen5ViewC1Ev>:
Screen5View::Screen5View() {
 8005a64:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8005a68:	4604      	mov	r4, r0
 8005a6a:	f7fe fb3d 	bl	80040e8 <_ZN15Screen5ViewBaseC1Ev>
 8005a6e:	4b4d      	ldr	r3, [pc, #308]	; (8005ba4 <_ZN11Screen5ViewC1Ev+0x140>)
 8005a70:	6023      	str	r3, [r4, #0]
 8005a72:	f504 7573 	add.w	r5, r4, #972	; 0x3cc
 8005a76:	f604 06f4 	addw	r6, r4, #2292	; 0x8f4
 8005a7a:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8005a7e:	4628      	mov	r0, r5
 8005a80:	a903      	add	r1, sp, #12
 8005a82:	352c      	adds	r5, #44	; 0x2c
 8005a84:	f8ad 700c 	strh.w	r7, [sp, #12]
 8005a88:	f7fd fed0 	bl	800382c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8005a8c:	42b5      	cmp	r5, r6
 8005a8e:	d1f6      	bne.n	8005a7e <_ZN11Screen5ViewC1Ev+0x1a>
 8005a90:	f504 6728 	add.w	r7, r4, #2688	; 0xa80
 8005a94:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8005a98:	4628      	mov	r0, r5
 8005a9a:	a903      	add	r1, sp, #12
 8005a9c:	352c      	adds	r5, #44	; 0x2c
 8005a9e:	f8ad 600c 	strh.w	r6, [sp, #12]
 8005aa2:	f7fd fec3 	bl	800382c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8005aa6:	42bd      	cmp	r5, r7
 8005aa8:	d1f6      	bne.n	8005a98 <_ZN11Screen5ViewC1Ev+0x34>
 8005aaa:	a903      	add	r1, sp, #12
 8005aac:	4628      	mov	r0, r5
 8005aae:	f8ad 600c 	strh.w	r6, [sp, #12]
 8005ab2:	f006 fce1 	bl	800c478 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8005ab6:	a903      	add	r1, sp, #12
 8005ab8:	f604 20ac 	addw	r0, r4, #2732	; 0xaac
 8005abc:	f8ad 600c 	strh.w	r6, [sp, #12]
 8005ac0:	f006 fcda 	bl	800c478 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
	ultiCount = 0 ;
 8005ac4:	f44f 3380 	mov.w	r3, #65536	; 0x10000
	bossHP = 100;
 8005ac8:	2264      	movs	r2, #100	; 0x64
	countItem = 0;
 8005aca:	2500      	movs	r5, #0
	ultiCount = 0 ;
 8005acc:	f8c4 3aec 	str.w	r3, [r4, #2796]	; 0xaec
	bossHP = 100;
 8005ad0:	f8a4 2af4 	strh.w	r2, [r4, #2804]	; 0xaf4
	playerHP = 85;
 8005ad4:	2355      	movs	r3, #85	; 0x55
	hpplayer.setPosition(10, 11, 85, 9);
 8005ad6:	2209      	movs	r2, #9
	playerHP = 85;
 8005ad8:	f8c4 3af0 	str.w	r3, [r4, #2800]	; 0xaf0
	hpplayer.setPosition(10, 11, 85, 9);
 8005adc:	9200      	str	r2, [sp, #0]
 8005ade:	210a      	movs	r1, #10
 8005ae0:	220b      	movs	r2, #11
 8005ae2:	f504 708e 	add.w	r0, r4, #284	; 0x11c
	countItem = 0;
 8005ae6:	f8c4 5adc 	str.w	r5, [r4, #2780]	; 0xadc
	countExploreTime = 0;
 8005aea:	f8c4 5ae0 	str.w	r5, [r4, #2784]	; 0xae0
	isItem = 0;
 8005aee:	f8c4 5ae4 	str.w	r5, [r4, #2788]	; 0xae4
	isUlti = 0;
 8005af2:	f8a4 5aea 	strh.w	r5, [r4, #2794]	; 0xaea
	hpplayer.setPosition(10, 11, 85, 9);
 8005af6:	f7fc fef9 	bl	80028ec <_ZN8touchgfx8Drawable11setPositionEssss>
	 ultimate.setPosition(234, 150, 54, 2);
 8005afa:	2302      	movs	r3, #2
 8005afc:	9300      	str	r3, [sp, #0]
 8005afe:	2296      	movs	r2, #150	; 0x96
 8005b00:	2336      	movs	r3, #54	; 0x36
 8005b02:	21ea      	movs	r1, #234	; 0xea
 8005b04:	f504 7002 	add.w	r0, r4, #520	; 0x208
 8005b08:	f7fc fef0 	bl	80028ec <_ZN8touchgfx8Drawable11setPositionEssss>
	for(int16_t i  = 0 ;i <2;i++){
 8005b0c:	f104 0958 	add.w	r9, r4, #88	; 0x58
	 ultimate.setPosition(234, 150, 54, 2);
 8005b10:	4626      	mov	r6, r4
 8005b12:	f04f 0a1c 	mov.w	sl, #28
		ulti[i].setBitmap(touchgfx::Bitmap(BITMAP_UNTIMATE_ID));
 8005b16:	f8d6 3a80 	ldr.w	r3, [r6, #2688]	; 0xa80
 8005b1a:	f506 6728 	add.w	r7, r6, #2688	; 0xa80
 8005b1e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8005b20:	f8ad a00c 	strh.w	sl, [sp, #12]
 8005b24:	a903      	add	r1, sp, #12
 8005b26:	4638      	mov	r0, r7
 8005b28:	4798      	blx	r3
		ulti[i].setPosition(70, 104, 54, 0);
 8005b2a:	2268      	movs	r2, #104	; 0x68
 8005b2c:	2336      	movs	r3, #54	; 0x36
 8005b2e:	2146      	movs	r1, #70	; 0x46
 8005b30:	4638      	mov	r0, r7
 8005b32:	9500      	str	r5, [sp, #0]
 8005b34:	f7fc feda 	bl	80028ec <_ZN8touchgfx8Drawable11setPositionEssss>
		ulti[i].setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005b38:	f8d6 3a80 	ldr.w	r3, [r6, #2688]	; 0xa80
 8005b3c:	2100      	movs	r1, #0
 8005b3e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8005b40:	4638      	mov	r0, r7
        container.add(d);
 8005b42:	f104 0804 	add.w	r8, r4, #4
 8005b46:	4798      	blx	r3
	for(int16_t i  = 0 ;i <2;i++){
 8005b48:	362c      	adds	r6, #44	; 0x2c
 8005b4a:	4639      	mov	r1, r7
 8005b4c:	4640      	mov	r0, r8
 8005b4e:	f005 f951 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005b52:	454e      	cmp	r6, r9
 8005b54:	d1df      	bne.n	8005b16 <_ZN11Screen5ViewC1Ev+0xb2>
	tickCount = 0;
 8005b56:	f8c4 5ad8 	str.w	r5, [r4, #2776]	; 0xad8
	for (int16_t i = 0; i < 30; i++) {
 8005b5a:	f604 27f4 	addw	r7, r4, #2804	; 0xaf4
	tickCount = 0;
 8005b5e:	f44f 7573 	mov.w	r5, #972	; 0x3cc
 8005b62:	f04f 0905 	mov.w	r9, #5
			bullet_list[i].setXY(110, -23);
 8005b66:	1966      	adds	r6, r4, r5
 8005b68:	f06f 0216 	mvn.w	r2, #22
 8005b6c:	216e      	movs	r1, #110	; 0x6e
 8005b6e:	4630      	mov	r0, r6
 8005b70:	f7fd fd5b 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
			bullet_list[i].setBitmap(touchgfx::Bitmap(BITMAP_BULLET_ID));
 8005b74:	5963      	ldr	r3, [r4, r5]
 8005b76:	a903      	add	r1, sp, #12
 8005b78:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8005b7a:	f8ad 900c 	strh.w	r9, [sp, #12]
 8005b7e:	4630      	mov	r0, r6
 8005b80:	4798      	blx	r3
 8005b82:	4631      	mov	r1, r6
 8005b84:	4640      	mov	r0, r8
 8005b86:	f005 f935 	bl	800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
			isMove[i] = 0;
 8005b8a:	2300      	movs	r3, #0
 8005b8c:	f827 3f02 	strh.w	r3, [r7, #2]!
	for (int16_t i = 0; i < 30; i++) {
 8005b90:	352c      	adds	r5, #44	; 0x2c
 8005b92:	f640 03f4 	movw	r3, #2292	; 0x8f4
 8005b96:	429d      	cmp	r5, r3
 8005b98:	d1e5      	bne.n	8005b66 <_ZN11Screen5ViewC1Ev+0x102>
}
 8005b9a:	4620      	mov	r0, r4
 8005b9c:	b004      	add	sp, #16
 8005b9e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005ba2:	bf00      	nop
 8005ba4:	080202ec 	.word	0x080202ec

08005ba8 <_Z8controlBRN8touchgfx5ImageENS_24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEES4_>:
	if(rightButton.getPressed()==1){
 8005ba8:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
void controlB(touchgfx::Image &player, touchgfx::BoxWithBorderButtonStyle< touchgfx::RepeatButtonTrigger >  rightButton, touchgfx::BoxWithBorderButtonStyle< touchgfx::RepeatButtonTrigger >  leftButton){
 8005bac:	b570      	push	{r4, r5, r6, lr}
        return rect.x;
 8005bae:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8005bb2:	4605      	mov	r5, r0
 8005bb4:	4616      	mov	r6, r2
	if(rightButton.getPressed()==1){
 8005bb6:	b143      	cbz	r3, 8005bca <_Z8controlBRN8touchgfx5ImageENS_24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEES4_+0x22>
			x+=3;
 8005bb8:	3403      	adds	r4, #3
 8005bba:	b224      	sxth	r4, r4
			player.setX(x);
 8005bbc:	6803      	ldr	r3, [r0, #0]
				x=0;
 8005bbe:	2cf1      	cmp	r4, #241	; 0xf1
 8005bc0:	bfa8      	it	ge
 8005bc2:	2400      	movge	r4, #0
			player.setX(x);
 8005bc4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005bc6:	4621      	mov	r1, r4
 8005bc8:	4798      	blx	r3
		if(leftButton.getPressed()==1){
 8005bca:	f896 302c 	ldrb.w	r3, [r6, #44]	; 0x2c
 8005bce:	b153      	cbz	r3, 8005be6 <_Z8controlBRN8touchgfx5ImageENS_24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEES4_+0x3e>
			x-=3;
 8005bd0:	1ee1      	subs	r1, r4, #3
			player.setX(x);
 8005bd2:	682b      	ldr	r3, [r5, #0]
			x-=3;
 8005bd4:	b209      	sxth	r1, r1
				x=240;
 8005bd6:	2900      	cmp	r1, #0
			player.setX(x);
 8005bd8:	4628      	mov	r0, r5
 8005bda:	6b1b      	ldr	r3, [r3, #48]	; 0x30
}
 8005bdc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			player.setX(x);
 8005be0:	bfb8      	it	lt
 8005be2:	21f0      	movlt	r1, #240	; 0xf0
 8005be4:	4718      	bx	r3
}
 8005be6:	bd70      	pop	{r4, r5, r6, pc}

08005be8 <_Z8bossMoveRN8touchgfx5ImageEss>:
void bossMove(touchgfx::Image &boss,int16_t speed,int16_t direct){
 8005be8:	b410      	push	{r4}
 8005bea:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8005bee:	4604      	mov	r4, r0
	if(direct == 0){
 8005bf0:	b932      	cbnz	r2, 8005c00 <_Z8bossMoveRN8touchgfx5ImageEss+0x18>
		boss.setX(x-speed);
 8005bf2:	1a59      	subs	r1, r3, r1
		boss.setX(x+speed);
 8005bf4:	6823      	ldr	r3, [r4, #0]
}
 8005bf6:	f85d 4b04 	ldr.w	r4, [sp], #4
		boss.setX(x+speed);
 8005bfa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005bfc:	b209      	sxth	r1, r1
 8005bfe:	4718      	bx	r3
	if(direct ==1){
 8005c00:	2a01      	cmp	r2, #1
 8005c02:	d101      	bne.n	8005c08 <_Z8bossMoveRN8touchgfx5ImageEss+0x20>
		boss.setX(x+speed);
 8005c04:	4419      	add	r1, r3
 8005c06:	e7f5      	b.n	8005bf4 <_Z8bossMoveRN8touchgfx5ImageEss+0xc>
}
 8005c08:	f85d 4b04 	ldr.w	r4, [sp], #4
 8005c0c:	4770      	bx	lr

08005c0e <_Z10bossAttachRN8touchgfx5ImageES1_ssss>:
		int16_t isMove, int16_t bullet_speed,int16_t x_axis,int16_t y_axis) {
 8005c0e:	b570      	push	{r4, r5, r6, lr}
 8005c10:	4604      	mov	r4, r0
	if (isMove == 1) {
 8005c12:	2a01      	cmp	r2, #1
		int16_t isMove, int16_t bullet_speed,int16_t x_axis,int16_t y_axis) {
 8005c14:	4608      	mov	r0, r1
 8005c16:	f9bd 5010 	ldrsh.w	r5, [sp, #16]
 8005c1a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8005c1e:	f9bd 6014 	ldrsh.w	r6, [sp, #20]
        return rect.y;
 8005c22:	f9b4 4006 	ldrsh.w	r4, [r4, #6]
	if (isMove == 1) {
 8005c26:	d107      	bne.n	8005c38 <_Z10bossAttachRN8touchgfx5ImageES1_ssss+0x2a>
		bullet.setY(bullet.getY() + bullet_speed);
 8005c28:	88c2      	ldrh	r2, [r0, #6]
 8005c2a:	4413      	add	r3, r2
 8005c2c:	6802      	ldr	r2, [r0, #0]
}
 8005c2e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		bullet.setY(bullet.getY() + bullet_speed);
 8005c32:	6b52      	ldr	r2, [r2, #52]	; 0x34
 8005c34:	b219      	sxth	r1, r3
 8005c36:	4710      	bx	r2
	if (isMove == 0) {
 8005c38:	b92a      	cbnz	r2, 8005c46 <_Z10bossAttachRN8touchgfx5ImageES1_ssss+0x38>
		bullet.setXY(x + x_axis, y + y_axis);
 8005c3a:	19a2      	adds	r2, r4, r6
 8005c3c:	4429      	add	r1, r5
 8005c3e:	b212      	sxth	r2, r2
 8005c40:	b209      	sxth	r1, r1
 8005c42:	f7fd fcf2 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
}
 8005c46:	bd70      	pop	{r4, r5, r6, pc}

08005c48 <_Z15checkCollisionBRKN8touchgfx5ImageES2_>:
	if (x1 < (x2 + width2) && (x1 + width1) > x2 && y1 < (y2 + height2)
 8005c48:	f9b1 2004 	ldrsh.w	r2, [r1, #4]
 8005c4c:	f9b1 3008 	ldrsh.w	r3, [r1, #8]
		const touchgfx::Image &image2) {
 8005c50:	b510      	push	{r4, lr}
	if (x1 < (x2 + width2) && (x1 + width1) > x2 && y1 < (y2 + height2)
 8005c52:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8005c56:	4413      	add	r3, r2
 8005c58:	429c      	cmp	r4, r3
 8005c5a:	da15      	bge.n	8005c88 <_Z15checkCollisionBRKN8touchgfx5ImageES2_+0x40>
 8005c5c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8005c60:	4423      	add	r3, r4
 8005c62:	429a      	cmp	r2, r3
 8005c64:	da10      	bge.n	8005c88 <_Z15checkCollisionBRKN8touchgfx5ImageES2_+0x40>
 8005c66:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8005c6a:	f9b1 200a 	ldrsh.w	r2, [r1, #10]
 8005c6e:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 8005c72:	441a      	add	r2, r3
 8005c74:	4294      	cmp	r4, r2
 8005c76:	da07      	bge.n	8005c88 <_Z15checkCollisionBRKN8touchgfx5ImageES2_+0x40>
			&& (y1 + height1) > y2) {
 8005c78:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8005c7c:	4422      	add	r2, r4
 8005c7e:	4293      	cmp	r3, r2
 8005c80:	bfac      	ite	ge
 8005c82:	2000      	movge	r0, #0
 8005c84:	2001      	movlt	r0, #1
}
 8005c86:	bd10      	pop	{r4, pc}
	return false;
 8005c88:	2000      	movs	r0, #0
 8005c8a:	e7fc      	b.n	8005c86 <_Z15checkCollisionBRKN8touchgfx5ImageES2_+0x3e>

08005c8c <_ZN11Screen5View15handleTickEventEv>:
void Screen5View::handleTickEvent() {
 8005c8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	//set HP bar increase or decrease
	int16_t xb = boss.getX();
	int16_t yb = boss.getY();
	if (playerHP <= 0) {
 8005c90:	f8d0 3af0 	ldr.w	r3, [r0, #2800]	; 0xaf0
        return rect.x;
 8005c94:	f9b0 61e0 	ldrsh.w	r6, [r0, #480]	; 0x1e0
        return rect.y;
 8005c98:	f9b0 81e2 	ldrsh.w	r8, [r0, #482]	; 0x1e2
void Screen5View::handleTickEvent() {
 8005c9c:	ed2d 8b02 	vpush	{d8}
	if (playerHP <= 0) {
 8005ca0:	2b00      	cmp	r3, #0
void Screen5View::handleTickEvent() {
 8005ca2:	b0c5      	sub	sp, #276	; 0x114
 8005ca4:	4604      	mov	r4, r0
	if (playerHP <= 0) {
 8005ca6:	dc03      	bgt.n	8005cb0 <_ZN11Screen5View15handleTickEventEv+0x24>
 8005ca8:	f009 f8e4 	bl	800ee74 <_ZN8touchgfx11Application11getInstanceEv>
		application().gotoScreen3ScreenSlideTransitionEast();
 8005cac:	f7fc ffce 	bl	8002c4c <_ZN23FrontendApplicationBase36gotoScreen3ScreenSlideTransitionEastEv>
	}
	if(bossHP<=0){
 8005cb0:	f9b4 3af4 	ldrsh.w	r3, [r4, #2804]	; 0xaf4
 8005cb4:	2b00      	cmp	r3, #0
 8005cb6:	dc03      	bgt.n	8005cc0 <_ZN11Screen5View15handleTickEventEv+0x34>
 8005cb8:	f009 f8dc 	bl	800ee74 <_ZN8touchgfx11Application11getInstanceEv>
		application().gotoScreen6ScreenSlideTransitionEast();
 8005cbc:	f7fd f806 	bl	8002ccc <_ZN23FrontendApplicationBase36gotoScreen6ScreenSlideTransitionEastEv>
	}
	if(bossHP==70 or bossHP==30){
 8005cc0:	f9b4 3af4 	ldrsh.w	r3, [r4, #2804]	; 0xaf4
 8005cc4:	2b46      	cmp	r3, #70	; 0x46
 8005cc6:	d001      	beq.n	8005ccc <_ZN11Screen5View15handleTickEventEv+0x40>
 8005cc8:	2b1e      	cmp	r3, #30
 8005cca:	d102      	bne.n	8005cd2 <_ZN11Screen5View15handleTickEventEv+0x46>
		isUlti=1;
 8005ccc:	2301      	movs	r3, #1
 8005cce:	f8a4 3aea 	strh.w	r3, [r4, #2794]	; 0xaea
	}
	if(ultiCount==50){
 8005cd2:	f8b4 3aec 	ldrh.w	r3, [r4, #2796]	; 0xaec
 8005cd6:	2b32      	cmp	r3, #50	; 0x32
 8005cd8:	f504 6528 	add.w	r5, r4, #2688	; 0xa80
 8005cdc:	d113      	bne.n	8005d06 <_ZN11Screen5View15handleTickEventEv+0x7a>
		isUlti=0;
 8005cde:	2700      	movs	r7, #0
		ultiCount=0;
		for(int16_t i=0;i<2;i++){
			ulti[i].setVisible(false);
			ulti[i].setHeight(0);
 8005ce0:	4639      	mov	r1, r7
 8005ce2:	4628      	mov	r0, r5
		isUlti=0;
 8005ce4:	f8a4 7aea 	strh.w	r7, [r4, #2794]	; 0xaea
		ultiCount=0;
 8005ce8:	f8a4 7aec 	strh.w	r7, [r4, #2796]	; 0xaec
        visible = vis;
 8005cec:	f884 7aa5 	strb.w	r7, [r4, #2725]	; 0xaa5
			ulti[i].setHeight(0);
 8005cf0:	f7fc fc42 	bl	8002578 <_ZN8touchgfx8Drawable9setHeightEs>
 8005cf4:	f8d4 3aac 	ldr.w	r3, [r4, #2732]	; 0xaac
 8005cf8:	f884 7ad1 	strb.w	r7, [r4, #2769]	; 0xad1
 8005cfc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005cfe:	4639      	mov	r1, r7
 8005d00:	f604 20ac 	addw	r0, r4, #2732	; 0xaac
 8005d04:	4798      	blx	r3
		}
	}
	if(isUlti==1){
 8005d06:	f8b4 3aea 	ldrh.w	r3, [r4, #2794]	; 0xaea
 8005d0a:	2b01      	cmp	r3, #1
 8005d0c:	d127      	bne.n	8005d5e <_ZN11Screen5View15handleTickEventEv+0xd2>
		ultiCount+=1;
 8005d0e:	f8b4 2aec 	ldrh.w	r2, [r4, #2796]	; 0xaec
 8005d12:	f884 3aa5 	strb.w	r3, [r4, #2725]	; 0xaa5
 8005d16:	f884 3ad1 	strb.w	r3, [r4, #2769]	; 0xad1
		for(int16_t i=0;i<2;i++){
					ulti[i].setVisible(true);
				}
		ulti[0].setPosition(xb+24,yb+70,54,ulti[0].getHeight()+10);
 8005d1a:	f8b4 3a8a 	ldrh.w	r3, [r4, #2698]	; 0xa8a
		ultiCount+=1;
 8005d1e:	3201      	adds	r2, #1
		ulti[0].setPosition(xb+24,yb+70,54,ulti[0].getHeight()+10);
 8005d20:	b2b6      	uxth	r6, r6
 8005d22:	330a      	adds	r3, #10
		ultiCount+=1;
 8005d24:	f8a4 2aec 	strh.w	r2, [r4, #2796]	; 0xaec
		ulti[0].setPosition(xb+24,yb+70,54,ulti[0].getHeight()+10);
 8005d28:	b21b      	sxth	r3, r3
 8005d2a:	f108 0246 	add.w	r2, r8, #70	; 0x46
 8005d2e:	f106 0118 	add.w	r1, r6, #24
 8005d32:	b212      	sxth	r2, r2
 8005d34:	9300      	str	r3, [sp, #0]
 8005d36:	b209      	sxth	r1, r1
 8005d38:	2336      	movs	r3, #54	; 0x36
 8005d3a:	4628      	mov	r0, r5
 8005d3c:	9202      	str	r2, [sp, #8]
 8005d3e:	f7fc fdd5 	bl	80028ec <_ZN8touchgfx8Drawable11setPositionEssss>
		ulti[1].setPosition(xb+70,yb+70,54,ulti[1].getHeight()+10);
 8005d42:	f8b4 3ab6 	ldrh.w	r3, [r4, #2742]	; 0xab6
 8005d46:	9a02      	ldr	r2, [sp, #8]
 8005d48:	330a      	adds	r3, #10
 8005d4a:	b21b      	sxth	r3, r3
 8005d4c:	f106 0146 	add.w	r1, r6, #70	; 0x46
 8005d50:	9300      	str	r3, [sp, #0]
 8005d52:	b209      	sxth	r1, r1
 8005d54:	2336      	movs	r3, #54	; 0x36
 8005d56:	f604 20ac 	addw	r0, r4, #2732	; 0xaac
 8005d5a:	f7fc fdc7 	bl	80028ec <_ZN8touchgfx8Drawable11setPositionEssss>
 8005d5e:	f604 26d8 	addw	r6, r4, #2776	; 0xad8
	}
	for(int16_t i= 0 ;i< 2;i++){
		if(checkCollisionB(ulti[i],playerShip)){
 8005d62:	f104 0798 	add.w	r7, r4, #152	; 0x98
			playerHP -= 1;
			hpplayer.setPosition(10, 11, playerHP, 9);
 8005d66:	f504 788e 	add.w	r8, r4, #284	; 0x11c
 8005d6a:	f04f 0909 	mov.w	r9, #9
		if(checkCollisionB(ulti[i],playerShip)){
 8005d6e:	4639      	mov	r1, r7
 8005d70:	4628      	mov	r0, r5
 8005d72:	f7ff ff69 	bl	8005c48 <_Z15checkCollisionBRKN8touchgfx5ImageES2_>
 8005d76:	b1d0      	cbz	r0, 8005dae <_ZN11Screen5View15handleTickEventEv+0x122>
			playerHP -= 1;
 8005d78:	f8d4 3af0 	ldr.w	r3, [r4, #2800]	; 0xaf0
			hpplayer.setPosition(10, 11, playerHP, 9);
 8005d7c:	f8cd 9000 	str.w	r9, [sp]
			playerHP -= 1;
 8005d80:	3b01      	subs	r3, #1
 8005d82:	f8c4 3af0 	str.w	r3, [r4, #2800]	; 0xaf0
			hpplayer.setPosition(10, 11, playerHP, 9);
 8005d86:	220b      	movs	r2, #11
 8005d88:	b21b      	sxth	r3, r3
 8005d8a:	210a      	movs	r1, #10
 8005d8c:	4640      	mov	r0, r8
 8005d8e:	f7fc fdad 	bl	80028ec <_ZN8touchgfx8Drawable11setPositionEssss>
			explore.setXY(playerShip.getX(), playerShip.getY());
 8005d92:	f9b4 209e 	ldrsh.w	r2, [r4, #158]	; 0x9e
 8005d96:	f9b4 109c 	ldrsh.w	r1, [r4, #156]	; 0x9c
 8005d9a:	f504 700d 	add.w	r0, r4, #564	; 0x234
 8005d9e:	f7fd fc44 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
 8005da2:	2301      	movs	r3, #1
 8005da4:	f884 3259 	strb.w	r3, [r4, #601]	; 0x259
			explore.setVisible(true);
			countExploreTime = 4;
 8005da8:	2304      	movs	r3, #4
 8005daa:	f8c4 3ae0 	str.w	r3, [r4, #2784]	; 0xae0
	for(int16_t i= 0 ;i< 2;i++){
 8005dae:	352c      	adds	r5, #44	; 0x2c
 8005db0:	42ae      	cmp	r6, r5
 8005db2:	d1dc      	bne.n	8005d6e <_ZN11Screen5View15handleTickEventEv+0xe2>
        return rect.y;
 8005db4:	f9b4 309e 	ldrsh.w	r3, [r4, #158]	; 0x9e
 8005db8:	9302      	str	r3, [sp, #8]
		}
	}
	Screen5ViewBase::handleTickEvent();
	int16_t x = playerShip.getX();
	int16_t y = playerShip.getY();
	tickCount++;
 8005dba:	f8d4 3ad8 	ldr.w	r3, [r4, #2776]	; 0xad8
        return rect.x;
 8005dbe:	f9b4 509c 	ldrsh.w	r5, [r4, #156]	; 0x9c
 8005dc2:	3301      	adds	r3, #1
 8005dc4:	f8c4 3ad8 	str.w	r3, [r4, #2776]	; 0xad8
	// Boss Move
	if(turnLeft == 1){
 8005dc8:	f8b4 3aee 	ldrh.w	r3, [r4, #2798]	; 0xaee
		bossMove(boss,6,0);
 8005dcc:	f504 78ee 	add.w	r8, r4, #476	; 0x1dc
	if(turnLeft == 1){
 8005dd0:	2b01      	cmp	r3, #1
		bossMove(boss,6,0);
 8005dd2:	bf0c      	ite	eq
 8005dd4:	2200      	moveq	r2, #0
	}
	else bossMove(boss,6,1);
 8005dd6:	2201      	movne	r2, #1
 8005dd8:	2106      	movs	r1, #6
 8005dda:	4640      	mov	r0, r8
 8005ddc:	f7ff ff04 	bl	8005be8 <_Z8bossMoveRN8touchgfx5ImageEss>
 8005de0:	f9b4 31e0 	ldrsh.w	r3, [r4, #480]	; 0x1e0
	if(boss.getX()<=-74){
 8005de4:	f113 0f49 	cmn.w	r3, #73	; 0x49
 8005de8:	da67      	bge.n	8005eba <_ZN11Screen5View15handleTickEventEv+0x22e>
		turnLeft = 0;
 8005dea:	2300      	movs	r3, #0
	}
	if(boss.getX()>=166){
		turnLeft =1;
 8005dec:	f8a4 3aee 	strh.w	r3, [r4, #2798]	; 0xaee
 8005df0:	f504 63a5 	add.w	r3, r4, #1320	; 0x528
 8005df4:	9303      	str	r3, [sp, #12]
// player attach
	for(int i= 0;i<30;i++){
		if(checkCollisionB(bullet_list[i],boss) ){
			explore.setXY(bullet_list[i].getX(), bullet_list[i].getY()-20);
			bossHP -= 3;
			hpboss.setPosition(70,241,bossHP,3);
 8005df6:	f504 7327 	add.w	r3, r4, #668	; 0x29c
 8005dfa:	ee08 3a10 	vmov	s16, r3
void Screen5View::handleTickEvent() {
 8005dfe:	4626      	mov	r6, r4
			explore.setXY(bullet_list[i].getX(), bullet_list[i].getY()-20);
 8005e00:	f504 7b0d 	add.w	fp, r4, #564	; 0x234
		if(checkCollisionB(bullet_list[i],boss) ){
 8005e04:	f506 7a73 	add.w	sl, r6, #972	; 0x3cc
 8005e08:	4641      	mov	r1, r8
 8005e0a:	4650      	mov	r0, sl
 8005e0c:	f7ff ff1c 	bl	8005c48 <_Z15checkCollisionBRKN8touchgfx5ImageES2_>
 8005e10:	b318      	cbz	r0, 8005e5a <_ZN11Screen5View15handleTickEventEv+0x1ce>
			explore.setXY(bullet_list[i].getX(), bullet_list[i].getY()-20);
 8005e12:	f8b6 23d2 	ldrh.w	r2, [r6, #978]	; 0x3d2
 8005e16:	f9b6 13d0 	ldrsh.w	r1, [r6, #976]	; 0x3d0
 8005e1a:	3a14      	subs	r2, #20
 8005e1c:	b212      	sxth	r2, r2
 8005e1e:	4658      	mov	r0, fp
 8005e20:	f7fd fc03 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
			bossHP -= 3;
 8005e24:	f8b4 3af4 	ldrh.w	r3, [r4, #2804]	; 0xaf4
 8005e28:	3b03      	subs	r3, #3
 8005e2a:	b21b      	sxth	r3, r3
			hpboss.setPosition(70,241,bossHP,3);
 8005e2c:	2203      	movs	r2, #3
 8005e2e:	ee18 0a10 	vmov	r0, s16
			bossHP -= 3;
 8005e32:	f8a4 3af4 	strh.w	r3, [r4, #2804]	; 0xaf4
			hpboss.setPosition(70,241,bossHP,3);
 8005e36:	9200      	str	r2, [sp, #0]
 8005e38:	2146      	movs	r1, #70	; 0x46
 8005e3a:	22f1      	movs	r2, #241	; 0xf1
 8005e3c:	f7fc fd56 	bl	80028ec <_ZN8touchgfx8Drawable11setPositionEssss>
        visible = vis;
 8005e40:	2301      	movs	r3, #1
 8005e42:	f884 3259 	strb.w	r3, [r4, #601]	; 0x259
			explore.setVisible(true);
			bullet_list[i].setY(-23);
 8005e46:	f8d6 33cc 	ldr.w	r3, [r6, #972]	; 0x3cc
 8005e4a:	f06f 0116 	mvn.w	r1, #22
 8005e4e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005e50:	4650      	mov	r0, sl
 8005e52:	4798      	blx	r3
			countExploreTime = 4;
 8005e54:	2304      	movs	r3, #4
 8005e56:	f8c4 3ae0 	str.w	r3, [r4, #2784]	; 0xae0

		}
		if(checkCollisionB(bullet_list[i],bossLazer)){
 8005e5a:	f504 79a4 	add.w	r9, r4, #328	; 0x148
 8005e5e:	4649      	mov	r1, r9
 8005e60:	4650      	mov	r0, sl
 8005e62:	f7ff fef1 	bl	8005c48 <_Z15checkCollisionBRKN8touchgfx5ImageES2_>
 8005e66:	b198      	cbz	r0, 8005e90 <_ZN11Screen5View15handleTickEventEv+0x204>
			explore.setXY(bullet_list[i].getX(), bullet_list[i].getY());
 8005e68:	f9b6 23d2 	ldrsh.w	r2, [r6, #978]	; 0x3d2
 8005e6c:	f9b6 13d0 	ldrsh.w	r1, [r6, #976]	; 0x3d0
 8005e70:	4658      	mov	r0, fp
 8005e72:	f7fd fbda 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
 8005e76:	2301      	movs	r3, #1
 8005e78:	f884 3259 	strb.w	r3, [r4, #601]	; 0x259
			explore.setVisible(true);
			bullet_list[i].setY(-23);
 8005e7c:	f8d6 33cc 	ldr.w	r3, [r6, #972]	; 0x3cc
 8005e80:	f06f 0116 	mvn.w	r1, #22
 8005e84:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005e86:	4650      	mov	r0, sl
 8005e88:	4798      	blx	r3
			countExploreTime = 4;
 8005e8a:	2304      	movs	r3, #4
 8005e8c:	f8c4 3ae0 	str.w	r3, [r4, #2784]	; 0xae0
	for(int i= 0;i<30;i++){
 8005e90:	9b03      	ldr	r3, [sp, #12]
 8005e92:	362c      	adds	r6, #44	; 0x2c
 8005e94:	42b3      	cmp	r3, r6
 8005e96:	d1b5      	bne.n	8005e04 <_ZN11Screen5View15handleTickEventEv+0x178>
		if(checkCollisionB(bullet_list[i],bossLazer)){
 8005e98:	f8d4 3ad8 	ldr.w	r3, [r4, #2776]	; 0xad8
 8005e9c:	2264      	movs	r2, #100	; 0x64
 8005e9e:	fbb3 f1f2 	udiv	r1, r3, r2
 8005ea2:	fb02 3311 	mls	r3, r2, r1, r3

		}
	}
	// Check Item X3 Bullet
	if (tickCount % 100 == 0) {
 8005ea6:	b963      	cbnz	r3, 8005ec2 <_ZN11Screen5View15handleTickEventEv+0x236>
		isDrop = 1;
 8005ea8:	2301      	movs	r3, #1
 8005eaa:	f8a4 3ae6 	strh.w	r3, [r4, #2790]	; 0xae6
	}
	if (isDrop == 1) {
		x3.setY(x3.getY() + 5);
 8005eae:	f8b4 31b6 	ldrh.w	r3, [r4, #438]	; 0x1b6
 8005eb2:	3305      	adds	r3, #5
        rect.y = y;
 8005eb4:	f8a4 31b6 	strh.w	r3, [r4, #438]	; 0x1b6
    }
 8005eb8:	e007      	b.n	8005eca <_ZN11Screen5View15handleTickEventEv+0x23e>
	if(boss.getX()>=166){
 8005eba:	2ba5      	cmp	r3, #165	; 0xa5
 8005ebc:	dd98      	ble.n	8005df0 <_ZN11Screen5View15handleTickEventEv+0x164>
		turnLeft =1;
 8005ebe:	2301      	movs	r3, #1
 8005ec0:	e794      	b.n	8005dec <_ZN11Screen5View15handleTickEventEv+0x160>
	if (isDrop == 1) {
 8005ec2:	f8b4 3ae6 	ldrh.w	r3, [r4, #2790]	; 0xae6
 8005ec6:	2b01      	cmp	r3, #1
 8005ec8:	d0f1      	beq.n	8005eae <_ZN11Screen5View15handleTickEventEv+0x222>
	}
	if (x3.getY() > 320) {
 8005eca:	f9b4 31b6 	ldrsh.w	r3, [r4, #438]	; 0x1b6
 8005ece:	f5b3 7fa0 	cmp.w	r3, #320	; 0x140
		isDrop = 0;
 8005ed2:	bfc1      	itttt	gt
 8005ed4:	2300      	movgt	r3, #0
 8005ed6:	f8a4 3ae6 	strhgt.w	r3, [r4, #2790]	; 0xae6
        rect.y = y;
 8005eda:	f64f 73ec 	movwgt	r3, #65516	; 0xffec
 8005ede:	f8a4 31b6 	strhgt.w	r3, [r4, #438]	; 0x1b6
		x3.setY(-20);
	}

	if(checkCollisionB(playerShip,bossLazer)){
 8005ee2:	4649      	mov	r1, r9
 8005ee4:	4638      	mov	r0, r7
 8005ee6:	f7ff feaf 	bl	8005c48 <_Z15checkCollisionBRKN8touchgfx5ImageES2_>
 8005eea:	b1f8      	cbz	r0, 8005f2c <_ZN11Screen5View15handleTickEventEv+0x2a0>
		playerHP -= 10;
 8005eec:	f8d4 3af0 	ldr.w	r3, [r4, #2800]	; 0xaf0
 8005ef0:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8005ef4:	3b0a      	subs	r3, #10
 8005ef6:	f8a4 214e 	strh.w	r2, [r4, #334]	; 0x14e
		bossLazer.setY(320);
		hpplayer.setPosition(10, 11, playerHP, 9);
 8005efa:	2209      	movs	r2, #9
		playerHP -= 10;
 8005efc:	f8c4 3af0 	str.w	r3, [r4, #2800]	; 0xaf0
		hpplayer.setPosition(10, 11, playerHP, 9);
 8005f00:	9200      	str	r2, [sp, #0]
 8005f02:	b21b      	sxth	r3, r3
 8005f04:	220b      	movs	r2, #11
 8005f06:	210a      	movs	r1, #10
 8005f08:	f504 708e 	add.w	r0, r4, #284	; 0x11c
 8005f0c:	f7fc fcee 	bl	80028ec <_ZN8touchgfx8Drawable11setPositionEssss>
		explore.setXY(playerShip.getX(), playerShip.getY());
 8005f10:	f9b4 209e 	ldrsh.w	r2, [r4, #158]	; 0x9e
 8005f14:	f9b4 109c 	ldrsh.w	r1, [r4, #156]	; 0x9c
 8005f18:	f504 700d 	add.w	r0, r4, #564	; 0x234
 8005f1c:	f7fd fb85 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
        visible = vis;
 8005f20:	2301      	movs	r3, #1
 8005f22:	f884 3259 	strb.w	r3, [r4, #601]	; 0x259
		explore.setVisible(true);
		countExploreTime = 4;
 8005f26:	2304      	movs	r3, #4
 8005f28:	f8c4 3ae0 	str.w	r3, [r4, #2784]	; 0xae0
	}

	if (checkCollisionB(x3, playerShip)) {
 8005f2c:	4639      	mov	r1, r7
 8005f2e:	f504 70d8 	add.w	r0, r4, #432	; 0x1b0
 8005f32:	f7ff fe89 	bl	8005c48 <_Z15checkCollisionBRKN8touchgfx5ImageES2_>
 8005f36:	f204 5b84 	addw	fp, r4, #1412	; 0x584
 8005f3a:	2800      	cmp	r0, #0
 8005f3c:	d074      	beq.n	8006028 <_ZN11Screen5View15handleTickEventEv+0x39c>
        rect.y = y;
 8005f3e:	f64f 73ec 	movw	r3, #65516	; 0xffec
 8005f42:	f8a4 31b6 	strh.w	r3, [r4, #438]	; 0x1b6
		isItem = 1;
 8005f46:	2301      	movs	r3, #1
 8005f48:	f8c4 3ae4 	str.w	r3, [r4, #2788]	; 0xae4
		x3.setY(-20);
		isDrop = 0;
	}
	if (isItem == 1) {
		countItem += 1;
 8005f4c:	f8d4 3adc 	ldr.w	r3, [r4, #2780]	; 0xadc
		if (isMove[10 + tickCount / 10 % 10] == 0) {
 8005f50:	f04f 0a0a 	mov.w	sl, #10
		countItem += 1;
 8005f54:	3301      	adds	r3, #1
 8005f56:	f8c4 3adc 	str.w	r3, [r4, #2780]	; 0xadc
		if (isMove[10 + tickCount / 10 % 10] == 0) {
 8005f5a:	f8d4 3ad8 	ldr.w	r3, [r4, #2776]	; 0xad8
 8005f5e:	fbb3 f3fa 	udiv	r3, r3, sl
 8005f62:	fbb3 f2fa 	udiv	r2, r3, sl
 8005f66:	fb0a 3312 	mls	r3, sl, r2, r3
 8005f6a:	eb03 000a 	add.w	r0, r3, sl
 8005f6e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8005f72:	f8b3 2b0a 	ldrh.w	r2, [r3, #2826]	; 0xb0a
 8005f76:	bb3a      	cbnz	r2, 8005fc8 <_ZN11Screen5View15handleTickEventEv+0x33c>
			isMove[10 + tickCount / 10 % 10] = 1;
 8005f78:	2201      	movs	r2, #1
 8005f7a:	f8a3 2b0a 	strh.w	r2, [r3, #2826]	; 0xb0a
			isMove[20 + tickCount / 10 % 10] = 1;
 8005f7e:	f8a3 2b1e 	strh.w	r2, [r3, #2846]	; 0xb1e
			bullet_list[10 + tickCount / 10 % 10].setXY(x - 3, y - 15);
 8005f82:	9b02      	ldr	r3, [sp, #8]
 8005f84:	b2ae      	uxth	r6, r5
 8005f86:	f1a3 020f 	sub.w	r2, r3, #15
 8005f8a:	232c      	movs	r3, #44	; 0x2c
 8005f8c:	fb03 4000 	mla	r0, r3, r0, r4
 8005f90:	1ef1      	subs	r1, r6, #3
 8005f92:	b212      	sxth	r2, r2
 8005f94:	b209      	sxth	r1, r1
 8005f96:	f500 7073 	add.w	r0, r0, #972	; 0x3cc
 8005f9a:	9203      	str	r2, [sp, #12]
 8005f9c:	f7fd fb45 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
			bullet_list[20 + tickCount / 10 % 10].setXY(x + 18, y - 15);
 8005fa0:	f106 0112 	add.w	r1, r6, #18
 8005fa4:	f8d4 0ad8 	ldr.w	r0, [r4, #2776]	; 0xad8
 8005fa8:	fbb0 f0fa 	udiv	r0, r0, sl
 8005fac:	fbb0 f6fa 	udiv	r6, r0, sl
 8005fb0:	fb0a 0016 	mls	r0, sl, r6, r0
 8005fb4:	3014      	adds	r0, #20
 8005fb6:	232c      	movs	r3, #44	; 0x2c
 8005fb8:	fb03 4000 	mla	r0, r3, r0, r4
 8005fbc:	9a03      	ldr	r2, [sp, #12]
 8005fbe:	b209      	sxth	r1, r1
 8005fc0:	f500 7073 	add.w	r0, r0, #972	; 0x3cc
 8005fc4:	f7fd fb31 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
 8005fc8:	4658      	mov	r0, fp
 8005fca:	f604 360a 	addw	r6, r4, #2826	; 0xb0a
 8005fce:	f604 0af4 	addw	sl, r4, #2292	; 0x8f4
		}
		for (int16_t i = 10; i < 30; i++) {
			bullet_list[i].setY(bullet_list[i].getY() - 5);
 8005fd2:	88c1      	ldrh	r1, [r0, #6]
 8005fd4:	6802      	ldr	r2, [r0, #0]
 8005fd6:	9003      	str	r0, [sp, #12]
 8005fd8:	3905      	subs	r1, #5
 8005fda:	6b52      	ldr	r2, [r2, #52]	; 0x34
 8005fdc:	b209      	sxth	r1, r1
 8005fde:	4790      	blx	r2
			if (bullet_list[i].getY() <= -23) {
 8005fe0:	9803      	ldr	r0, [sp, #12]
 8005fe2:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8005fe6:	2300      	movs	r3, #0
 8005fe8:	3216      	adds	r2, #22
		for (int16_t i = 10; i < 30; i++) {
 8005fea:	f100 002c 	add.w	r0, r0, #44	; 0x2c
				isMove[i] = 0;
 8005fee:	bfb8      	it	lt
 8005ff0:	8033      	strhlt	r3, [r6, #0]
		for (int16_t i = 10; i < 30; i++) {
 8005ff2:	4582      	cmp	sl, r0
 8005ff4:	f106 0602 	add.w	r6, r6, #2
 8005ff8:	d1eb      	bne.n	8005fd2 <_ZN11Screen5View15handleTickEventEv+0x346>
			}
		}
		if (countItem >= 100) {
 8005ffa:	f8d4 3adc 	ldr.w	r3, [r4, #2780]	; 0xadc
 8005ffe:	2b63      	cmp	r3, #99	; 0x63
 8006000:	d916      	bls.n	8006030 <_ZN11Screen5View15handleTickEventEv+0x3a4>
			isItem = 0;
 8006002:	2300      	movs	r3, #0
 8006004:	f8a4 3ae4 	strh.w	r3, [r4, #2788]	; 0xae4
			countItem = 0;
 8006008:	f8c4 3adc 	str.w	r3, [r4, #2780]	; 0xadc
 800600c:	f240 5684 	movw	r6, #1412	; 0x584
			for (int16_t i = 10; i < 30; i++) {
 8006010:	f640 0af4 	movw	sl, #2292	; 0x8f4
				bullet_list[i].setY(-50);
 8006014:	59a3      	ldr	r3, [r4, r6]
 8006016:	19a0      	adds	r0, r4, r6
 8006018:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800601a:	f06f 0131 	mvn.w	r1, #49	; 0x31
			for (int16_t i = 10; i < 30; i++) {
 800601e:	362c      	adds	r6, #44	; 0x2c
				bullet_list[i].setY(-50);
 8006020:	4798      	blx	r3
			for (int16_t i = 10; i < 30; i++) {
 8006022:	4556      	cmp	r6, sl
 8006024:	d1f6      	bne.n	8006014 <_ZN11Screen5View15handleTickEventEv+0x388>
 8006026:	e003      	b.n	8006030 <_ZN11Screen5View15handleTickEventEv+0x3a4>
	if (isItem == 1) {
 8006028:	f8b4 3ae4 	ldrh.w	r3, [r4, #2788]	; 0xae4
 800602c:	2b01      	cmp	r3, #1
 800602e:	d08d      	beq.n	8005f4c <_ZN11Screen5View15handleTickEventEv+0x2c0>
		}
	}
	/////////////////////////////////////////////////////////////////////////////////////////////

	//boss attach
	if(bossLazer.getY()>=320){
 8006030:	f9b4 314e 	ldrsh.w	r3, [r4, #334]	; 0x14e
 8006034:	f5b3 7fa0 	cmp.w	r3, #320	; 0x140
 8006038:	da0a      	bge.n	8006050 <_ZN11Screen5View15handleTickEventEv+0x3c4>
		bossAttach(boss, bossLazer ,0,8,55,80);
	}
	else bossAttach(boss, bossLazer ,1,8,55,80);
 800603a:	2337      	movs	r3, #55	; 0x37
 800603c:	2250      	movs	r2, #80	; 0x50
 800603e:	e9cd 3200 	strd	r3, r2, [sp]
 8006042:	4649      	mov	r1, r9
 8006044:	2308      	movs	r3, #8
 8006046:	2201      	movs	r2, #1
 8006048:	4640      	mov	r0, r8
 800604a:	f7ff fde0 	bl	8005c0e <_Z10bossAttachRN8touchgfx5ImageES1_ssss>
 800604e:	e00a      	b.n	8006066 <_ZN11Screen5View15handleTickEventEv+0x3da>
		bullet.setXY(x + x_axis, y + y_axis);
 8006050:	f8b4 21e2 	ldrh.w	r2, [r4, #482]	; 0x1e2
 8006054:	f8b4 11e0 	ldrh.w	r1, [r4, #480]	; 0x1e0
 8006058:	3250      	adds	r2, #80	; 0x50
 800605a:	3137      	adds	r1, #55	; 0x37
 800605c:	b212      	sxth	r2, r2
 800605e:	b209      	sxth	r1, r1
 8006060:	4648      	mov	r0, r9
 8006062:	f7fd fae2 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
	//Move the bullet of player
	if (isMove[tickCount / 10 % 10] == 0) {
 8006066:	230a      	movs	r3, #10
 8006068:	f8d4 0ad8 	ldr.w	r0, [r4, #2776]	; 0xad8
 800606c:	fbb0 f0f3 	udiv	r0, r0, r3
 8006070:	fbb0 f2f3 	udiv	r2, r0, r3
 8006074:	fb03 0012 	mls	r0, r3, r2, r0
 8006078:	eb04 0340 	add.w	r3, r4, r0, lsl #1
 800607c:	f8b3 2af6 	ldrh.w	r2, [r3, #2806]	; 0xaf6
 8006080:	b982      	cbnz	r2, 80060a4 <_ZN11Screen5View15handleTickEventEv+0x418>
		isMove[tickCount / 10 % 10] = 1;
 8006082:	2201      	movs	r2, #1
 8006084:	f8a3 2af6 	strh.w	r2, [r3, #2806]	; 0xaf6
		bullet_list[tickCount / 10 % 10].setXY(x + 8, y - 15);
 8006088:	9b02      	ldr	r3, [sp, #8]
 800608a:	f1a3 020f 	sub.w	r2, r3, #15
 800608e:	232c      	movs	r3, #44	; 0x2c
 8006090:	f105 0108 	add.w	r1, r5, #8
 8006094:	fb03 4000 	mla	r0, r3, r0, r4
 8006098:	b212      	sxth	r2, r2
 800609a:	b209      	sxth	r1, r1
 800609c:	f500 7073 	add.w	r0, r0, #972	; 0x3cc
 80060a0:	f7fd fac3 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
 80060a4:	f504 7673 	add.w	r6, r4, #972	; 0x3cc
 80060a8:	f604 28f6 	addw	r8, r4, #2806	; 0xaf6
	}
	for (int16_t i = 0; i < 10; i++) {
		bullet_list[i].setY(bullet_list[i].getY() - 5);
		if (bullet_list[i].getY() <= -23) {
			isMove[i] = 0;
 80060ac:	f04f 0900 	mov.w	r9, #0
		bullet_list[i].setY(bullet_list[i].getY() - 5);
 80060b0:	88f1      	ldrh	r1, [r6, #6]
 80060b2:	6833      	ldr	r3, [r6, #0]
 80060b4:	3905      	subs	r1, #5
 80060b6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80060b8:	4630      	mov	r0, r6
 80060ba:	b209      	sxth	r1, r1
 80060bc:	4798      	blx	r3
		if (bullet_list[i].getY() <= -23) {
 80060be:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
	for (int16_t i = 0; i < 10; i++) {
 80060c2:	362c      	adds	r6, #44	; 0x2c
		if (bullet_list[i].getY() <= -23) {
 80060c4:	3316      	adds	r3, #22
			isMove[i] = 0;
 80060c6:	bfb8      	it	lt
 80060c8:	f8a8 9000 	strhlt.w	r9, [r8]
	for (int16_t i = 0; i < 10; i++) {
 80060cc:	45b3      	cmp	fp, r6
 80060ce:	f108 0802 	add.w	r8, r8, #2
 80060d2:	d1ed      	bne.n	80060b0 <_ZN11Screen5View15handleTickEventEv+0x424>
		}
	}

//
	if (countExploreTime > 0)
 80060d4:	f8d4 3ae0 	ldr.w	r3, [r4, #2784]	; 0xae0
 80060d8:	bb9b      	cbnz	r3, 8006142 <_ZN11Screen5View15handleTickEventEv+0x4b6>
        visible = vis;
 80060da:	2300      	movs	r3, #0
 80060dc:	f884 3259 	strb.w	r3, [r4, #601]	; 0x259
		countExploreTime -= 1;
	if (countExploreTime == 0)
		explore.setVisible(false);

	//Kill enemy when hit the bullet
	controlB(playerShip,rightButton,leftButton);
 80060e0:	f504 7152 	add.w	r1, r4, #840	; 0x348
 80060e4:	a804      	add	r0, sp, #16
 80060e6:	f7ff f825 	bl	8005134 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEC1ERKS2_>
	uint8_t res = 0;
	uint32_t count = osMessageQueueGetCount(Queue1Handle);
 80060ea:	4e1d      	ldr	r6, [pc, #116]	; (8006160 <_ZN11Screen5View15handleTickEventEv+0x4d4>)
	controlB(playerShip,rightButton,leftButton);
 80060ec:	f504 7132 	add.w	r1, r4, #712	; 0x2c8
 80060f0:	a824      	add	r0, sp, #144	; 0x90
 80060f2:	f7ff f81f 	bl	8005134 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEC1ERKS2_>
 80060f6:	4638      	mov	r0, r7
 80060f8:	aa24      	add	r2, sp, #144	; 0x90
 80060fa:	a904      	add	r1, sp, #16
 80060fc:	f7ff fd54 	bl	8005ba8 <_Z8controlBRN8touchgfx5ImageENS_24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEES4_>
	uint8_t res = 0;
 8006100:	2700      	movs	r7, #0
	uint32_t count = osMessageQueueGetCount(Queue1Handle);
 8006102:	6830      	ldr	r0, [r6, #0]
	uint8_t res = 0;
 8006104:	f88d 7090 	strb.w	r7, [sp, #144]	; 0x90
	uint32_t count = osMessageQueueGetCount(Queue1Handle);
 8006108:	f002 fee7 	bl	8008eda <osMessageQueueGetCount>
	if (count > 0) {
 800610c:	b188      	cbz	r0, 8006132 <_ZN11Screen5View15handleTickEventEv+0x4a6>
		osMessageQueueGet(Queue1Handle, &res, NULL, osWaitForever);
 800610e:	f04f 33ff 	mov.w	r3, #4294967295
 8006112:	6830      	ldr	r0, [r6, #0]
 8006114:	463a      	mov	r2, r7
 8006116:	a924      	add	r1, sp, #144	; 0x90
 8006118:	f002 feb0 	bl	8008e7c <osMessageQueueGet>
		if (res == 'R') {
 800611c:	f89d 3090 	ldrb.w	r3, [sp, #144]	; 0x90
 8006120:	2b52      	cmp	r3, #82	; 0x52
 8006122:	d114      	bne.n	800614e <_ZN11Screen5View15handleTickEventEv+0x4c2>
			x += 3;
 8006124:	3503      	adds	r5, #3
 8006126:	b22d      	sxth	r5, r5
			if (x > 240) {
				x = 0;
 8006128:	2df1      	cmp	r5, #241	; 0xf1
 800612a:	bfa8      	it	ge
 800612c:	463d      	movge	r5, r7
        rect.x = x;
 800612e:	f8a4 509c 	strh.w	r5, [r4, #156]	; 0x9c
        container.invalidate();
 8006132:	1d20      	adds	r0, r4, #4
 8006134:	f009 fe71 	bl	800fe1a <_ZNK8touchgfx8Drawable10invalidateEv>
			playerShip.setX(x);
		}
	}

	invalidate();
}
 8006138:	b045      	add	sp, #276	; 0x114
 800613a:	ecbd 8b02 	vpop	{d8}
 800613e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		countExploreTime -= 1;
 8006142:	3b01      	subs	r3, #1
 8006144:	f8c4 3ae0 	str.w	r3, [r4, #2784]	; 0xae0
	if (countExploreTime == 0)
 8006148:	2b00      	cmp	r3, #0
 800614a:	d1c9      	bne.n	80060e0 <_ZN11Screen5View15handleTickEventEv+0x454>
 800614c:	e7c5      	b.n	80060da <_ZN11Screen5View15handleTickEventEv+0x44e>
		if (res == 'L') {
 800614e:	2b4c      	cmp	r3, #76	; 0x4c
 8006150:	d1ef      	bne.n	8006132 <_ZN11Screen5View15handleTickEventEv+0x4a6>
			x -= 1;
 8006152:	3d01      	subs	r5, #1
 8006154:	b22d      	sxth	r5, r5
				x = 240;
 8006156:	2d00      	cmp	r5, #0
 8006158:	bfb8      	it	lt
 800615a:	25f0      	movlt	r5, #240	; 0xf0
 800615c:	e7e7      	b.n	800612e <_ZN11Screen5View15handleTickEventEv+0x4a2>
 800615e:	bf00      	nop
 8006160:	20002580 	.word	0x20002580

08006164 <_ZN16Screen6PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen6Presenter() {};
 8006164:	4770      	bx	lr

08006166 <_ZThn4_N16Screen6PresenterD1Ev>:
 8006166:	3804      	subs	r0, #4
 8006168:	4770      	bx	lr

0800616a <_ZN16Screen6Presenter10deactivateEv>:
}

void Screen6Presenter::activate()
{

}
 800616a:	4770      	bx	lr

0800616c <_ZN16Screen6PresenterD0Ev>:
 800616c:	b510      	push	{r4, lr}
 800616e:	2110      	movs	r1, #16
 8006170:	4604      	mov	r4, r0
 8006172:	f017 f901 	bl	801d378 <_ZdlPvj>
 8006176:	4620      	mov	r0, r4
 8006178:	bd10      	pop	{r4, pc}

0800617a <_ZThn4_N16Screen6PresenterD0Ev>:
 800617a:	f1a0 0004 	sub.w	r0, r0, #4
 800617e:	e7f5      	b.n	800616c <_ZN16Screen6PresenterD0Ev>

08006180 <_ZN16Screen6PresenterC1ER11Screen6View>:
Screen6Presenter::Screen6Presenter(Screen6View& v)
 8006180:	b510      	push	{r4, lr}
 8006182:	2200      	movs	r2, #0
 8006184:	6082      	str	r2, [r0, #8]
    : view(v)
 8006186:	4a04      	ldr	r2, [pc, #16]	; (8006198 <_ZN16Screen6PresenterC1ER11Screen6View+0x18>)
 8006188:	60c1      	str	r1, [r0, #12]
 800618a:	f102 0408 	add.w	r4, r2, #8
 800618e:	3220      	adds	r2, #32
 8006190:	6004      	str	r4, [r0, #0]
 8006192:	6042      	str	r2, [r0, #4]
}
 8006194:	bd10      	pop	{r4, pc}
 8006196:	bf00      	nop
 8006198:	08020318 	.word	0x08020318

0800619c <_ZN11Screen6ViewD1Ev>:

class Screen6View : public Screen6ViewBase
{
public:
    Screen6View();
    virtual ~Screen6View() {}
 800619c:	4770      	bx	lr

0800619e <_ZN11Screen6View14tearDownScreenEv>:
}

void Screen6View::tearDownScreen()
{
    Screen6ViewBase::tearDownScreen();
}
 800619e:	4770      	bx	lr

080061a0 <_ZN11Screen6View11setupScreenEv>:
    Screen6ViewBase::setupScreen();
 80061a0:	f7fe ba27 	b.w	80045f2 <_ZN15Screen6ViewBase11setupScreenEv>

080061a4 <_ZN11Screen6ViewD0Ev>:
 80061a4:	b510      	push	{r4, lr}
 80061a6:	f44f 7192 	mov.w	r1, #292	; 0x124
 80061aa:	4604      	mov	r4, r0
 80061ac:	f017 f8e4 	bl	801d378 <_ZdlPvj>
 80061b0:	4620      	mov	r0, r4
 80061b2:	bd10      	pop	{r4, pc}

080061b4 <_ZN11Screen6ViewC1Ev>:
Screen6View::Screen6View()
 80061b4:	b510      	push	{r4, lr}
 80061b6:	4604      	mov	r4, r0
 80061b8:	f7fe fa52 	bl	8004660 <_ZN15Screen6ViewBaseC1Ev>
 80061bc:	4b01      	ldr	r3, [pc, #4]	; (80061c4 <_ZN11Screen6ViewC1Ev+0x10>)
 80061be:	6023      	str	r3, [r4, #0]
}
 80061c0:	4620      	mov	r0, r4
 80061c2:	bd10      	pop	{r4, pc}
 80061c4:	08020348 	.word	0x08020348

080061c8 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 80061c8:	20f0      	movs	r0, #240	; 0xf0
 80061ca:	4770      	bx	lr

080061cc <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 80061cc:	f44f 70a0 	mov.w	r0, #320	; 0x140
 80061d0:	4770      	bx	lr

080061d2 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 80061d2:	2029      	movs	r0, #41	; 0x29
 80061d4:	f7fb be22 	b.w	8001e1c <LCD_IO_WriteReg>

080061d8 <ili9341_DisplayOff>:
 80061d8:	2028      	movs	r0, #40	; 0x28
 80061da:	f7fb be1f 	b.w	8001e1c <LCD_IO_WriteReg>

080061de <ili9341_Init>:
{
 80061de:	b508      	push	{r3, lr}
  LCD_IO_Init();
 80061e0:	f7fb fdf0 	bl	8001dc4 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 80061e4:	20ca      	movs	r0, #202	; 0xca
 80061e6:	f7fb fe19 	bl	8001e1c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80061ea:	20c3      	movs	r0, #195	; 0xc3
 80061ec:	f7fb fdfa 	bl	8001de4 <LCD_IO_WriteData>
 80061f0:	2008      	movs	r0, #8
 80061f2:	f7fb fdf7 	bl	8001de4 <LCD_IO_WriteData>
 80061f6:	2050      	movs	r0, #80	; 0x50
 80061f8:	f7fb fdf4 	bl	8001de4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80061fc:	20cf      	movs	r0, #207	; 0xcf
 80061fe:	f7fb fe0d 	bl	8001e1c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8006202:	2000      	movs	r0, #0
 8006204:	f7fb fdee 	bl	8001de4 <LCD_IO_WriteData>
 8006208:	20c1      	movs	r0, #193	; 0xc1
 800620a:	f7fb fdeb 	bl	8001de4 <LCD_IO_WriteData>
 800620e:	2030      	movs	r0, #48	; 0x30
 8006210:	f7fb fde8 	bl	8001de4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8006214:	20ed      	movs	r0, #237	; 0xed
 8006216:	f7fb fe01 	bl	8001e1c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800621a:	2064      	movs	r0, #100	; 0x64
 800621c:	f7fb fde2 	bl	8001de4 <LCD_IO_WriteData>
 8006220:	2003      	movs	r0, #3
 8006222:	f7fb fddf 	bl	8001de4 <LCD_IO_WriteData>
 8006226:	2012      	movs	r0, #18
 8006228:	f7fb fddc 	bl	8001de4 <LCD_IO_WriteData>
 800622c:	2081      	movs	r0, #129	; 0x81
 800622e:	f7fb fdd9 	bl	8001de4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8006232:	20e8      	movs	r0, #232	; 0xe8
 8006234:	f7fb fdf2 	bl	8001e1c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8006238:	2085      	movs	r0, #133	; 0x85
 800623a:	f7fb fdd3 	bl	8001de4 <LCD_IO_WriteData>
 800623e:	2000      	movs	r0, #0
 8006240:	f7fb fdd0 	bl	8001de4 <LCD_IO_WriteData>
 8006244:	2078      	movs	r0, #120	; 0x78
 8006246:	f7fb fdcd 	bl	8001de4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800624a:	20cb      	movs	r0, #203	; 0xcb
 800624c:	f7fb fde6 	bl	8001e1c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8006250:	2039      	movs	r0, #57	; 0x39
 8006252:	f7fb fdc7 	bl	8001de4 <LCD_IO_WriteData>
 8006256:	202c      	movs	r0, #44	; 0x2c
 8006258:	f7fb fdc4 	bl	8001de4 <LCD_IO_WriteData>
 800625c:	2000      	movs	r0, #0
 800625e:	f7fb fdc1 	bl	8001de4 <LCD_IO_WriteData>
 8006262:	2034      	movs	r0, #52	; 0x34
 8006264:	f7fb fdbe 	bl	8001de4 <LCD_IO_WriteData>
 8006268:	2002      	movs	r0, #2
 800626a:	f7fb fdbb 	bl	8001de4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800626e:	20f7      	movs	r0, #247	; 0xf7
 8006270:	f7fb fdd4 	bl	8001e1c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8006274:	2020      	movs	r0, #32
 8006276:	f7fb fdb5 	bl	8001de4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800627a:	20ea      	movs	r0, #234	; 0xea
 800627c:	f7fb fdce 	bl	8001e1c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8006280:	2000      	movs	r0, #0
 8006282:	f7fb fdaf 	bl	8001de4 <LCD_IO_WriteData>
 8006286:	2000      	movs	r0, #0
 8006288:	f7fb fdac 	bl	8001de4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800628c:	20b1      	movs	r0, #177	; 0xb1
 800628e:	f7fb fdc5 	bl	8001e1c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8006292:	2000      	movs	r0, #0
 8006294:	f7fb fda6 	bl	8001de4 <LCD_IO_WriteData>
 8006298:	201b      	movs	r0, #27
 800629a:	f7fb fda3 	bl	8001de4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800629e:	20b6      	movs	r0, #182	; 0xb6
 80062a0:	f7fb fdbc 	bl	8001e1c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80062a4:	200a      	movs	r0, #10
 80062a6:	f7fb fd9d 	bl	8001de4 <LCD_IO_WriteData>
 80062aa:	20a2      	movs	r0, #162	; 0xa2
 80062ac:	f7fb fd9a 	bl	8001de4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80062b0:	20c0      	movs	r0, #192	; 0xc0
 80062b2:	f7fb fdb3 	bl	8001e1c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80062b6:	2010      	movs	r0, #16
 80062b8:	f7fb fd94 	bl	8001de4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80062bc:	20c1      	movs	r0, #193	; 0xc1
 80062be:	f7fb fdad 	bl	8001e1c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80062c2:	2010      	movs	r0, #16
 80062c4:	f7fb fd8e 	bl	8001de4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80062c8:	20c5      	movs	r0, #197	; 0xc5
 80062ca:	f7fb fda7 	bl	8001e1c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80062ce:	2045      	movs	r0, #69	; 0x45
 80062d0:	f7fb fd88 	bl	8001de4 <LCD_IO_WriteData>
 80062d4:	2015      	movs	r0, #21
 80062d6:	f7fb fd85 	bl	8001de4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80062da:	20c7      	movs	r0, #199	; 0xc7
 80062dc:	f7fb fd9e 	bl	8001e1c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80062e0:	2090      	movs	r0, #144	; 0x90
 80062e2:	f7fb fd7f 	bl	8001de4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80062e6:	2036      	movs	r0, #54	; 0x36
 80062e8:	f7fb fd98 	bl	8001e1c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80062ec:	20c8      	movs	r0, #200	; 0xc8
 80062ee:	f7fb fd79 	bl	8001de4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80062f2:	20f2      	movs	r0, #242	; 0xf2
 80062f4:	f7fb fd92 	bl	8001e1c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80062f8:	2000      	movs	r0, #0
 80062fa:	f7fb fd73 	bl	8001de4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80062fe:	20b0      	movs	r0, #176	; 0xb0
 8006300:	f7fb fd8c 	bl	8001e1c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8006304:	20c2      	movs	r0, #194	; 0xc2
 8006306:	f7fb fd6d 	bl	8001de4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800630a:	20b6      	movs	r0, #182	; 0xb6
 800630c:	f7fb fd86 	bl	8001e1c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8006310:	200a      	movs	r0, #10
 8006312:	f7fb fd67 	bl	8001de4 <LCD_IO_WriteData>
 8006316:	20a7      	movs	r0, #167	; 0xa7
 8006318:	f7fb fd64 	bl	8001de4 <LCD_IO_WriteData>
 800631c:	2027      	movs	r0, #39	; 0x27
 800631e:	f7fb fd61 	bl	8001de4 <LCD_IO_WriteData>
 8006322:	2004      	movs	r0, #4
 8006324:	f7fb fd5e 	bl	8001de4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8006328:	202a      	movs	r0, #42	; 0x2a
 800632a:	f7fb fd77 	bl	8001e1c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800632e:	2000      	movs	r0, #0
 8006330:	f7fb fd58 	bl	8001de4 <LCD_IO_WriteData>
 8006334:	2000      	movs	r0, #0
 8006336:	f7fb fd55 	bl	8001de4 <LCD_IO_WriteData>
 800633a:	2000      	movs	r0, #0
 800633c:	f7fb fd52 	bl	8001de4 <LCD_IO_WriteData>
 8006340:	20ef      	movs	r0, #239	; 0xef
 8006342:	f7fb fd4f 	bl	8001de4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8006346:	202b      	movs	r0, #43	; 0x2b
 8006348:	f7fb fd68 	bl	8001e1c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800634c:	2000      	movs	r0, #0
 800634e:	f7fb fd49 	bl	8001de4 <LCD_IO_WriteData>
 8006352:	2000      	movs	r0, #0
 8006354:	f7fb fd46 	bl	8001de4 <LCD_IO_WriteData>
 8006358:	2001      	movs	r0, #1
 800635a:	f7fb fd43 	bl	8001de4 <LCD_IO_WriteData>
 800635e:	203f      	movs	r0, #63	; 0x3f
 8006360:	f7fb fd40 	bl	8001de4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8006364:	20f6      	movs	r0, #246	; 0xf6
 8006366:	f7fb fd59 	bl	8001e1c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800636a:	2001      	movs	r0, #1
 800636c:	f7fb fd3a 	bl	8001de4 <LCD_IO_WriteData>
 8006370:	2000      	movs	r0, #0
 8006372:	f7fb fd37 	bl	8001de4 <LCD_IO_WriteData>
 8006376:	2006      	movs	r0, #6
 8006378:	f7fb fd34 	bl	8001de4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800637c:	202c      	movs	r0, #44	; 0x2c
 800637e:	f7fb fd4d 	bl	8001e1c <LCD_IO_WriteReg>
  LCD_Delay(200);
 8006382:	20c8      	movs	r0, #200	; 0xc8
 8006384:	f7fb fd98 	bl	8001eb8 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8006388:	2026      	movs	r0, #38	; 0x26
 800638a:	f7fb fd47 	bl	8001e1c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800638e:	2001      	movs	r0, #1
 8006390:	f7fb fd28 	bl	8001de4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8006394:	20e0      	movs	r0, #224	; 0xe0
 8006396:	f7fb fd41 	bl	8001e1c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800639a:	200f      	movs	r0, #15
 800639c:	f7fb fd22 	bl	8001de4 <LCD_IO_WriteData>
 80063a0:	2029      	movs	r0, #41	; 0x29
 80063a2:	f7fb fd1f 	bl	8001de4 <LCD_IO_WriteData>
 80063a6:	2024      	movs	r0, #36	; 0x24
 80063a8:	f7fb fd1c 	bl	8001de4 <LCD_IO_WriteData>
 80063ac:	200c      	movs	r0, #12
 80063ae:	f7fb fd19 	bl	8001de4 <LCD_IO_WriteData>
 80063b2:	200e      	movs	r0, #14
 80063b4:	f7fb fd16 	bl	8001de4 <LCD_IO_WriteData>
 80063b8:	2009      	movs	r0, #9
 80063ba:	f7fb fd13 	bl	8001de4 <LCD_IO_WriteData>
 80063be:	204e      	movs	r0, #78	; 0x4e
 80063c0:	f7fb fd10 	bl	8001de4 <LCD_IO_WriteData>
 80063c4:	2078      	movs	r0, #120	; 0x78
 80063c6:	f7fb fd0d 	bl	8001de4 <LCD_IO_WriteData>
 80063ca:	203c      	movs	r0, #60	; 0x3c
 80063cc:	f7fb fd0a 	bl	8001de4 <LCD_IO_WriteData>
 80063d0:	2009      	movs	r0, #9
 80063d2:	f7fb fd07 	bl	8001de4 <LCD_IO_WriteData>
 80063d6:	2013      	movs	r0, #19
 80063d8:	f7fb fd04 	bl	8001de4 <LCD_IO_WriteData>
 80063dc:	2005      	movs	r0, #5
 80063de:	f7fb fd01 	bl	8001de4 <LCD_IO_WriteData>
 80063e2:	2017      	movs	r0, #23
 80063e4:	f7fb fcfe 	bl	8001de4 <LCD_IO_WriteData>
 80063e8:	2011      	movs	r0, #17
 80063ea:	f7fb fcfb 	bl	8001de4 <LCD_IO_WriteData>
 80063ee:	2000      	movs	r0, #0
 80063f0:	f7fb fcf8 	bl	8001de4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80063f4:	20e1      	movs	r0, #225	; 0xe1
 80063f6:	f7fb fd11 	bl	8001e1c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80063fa:	2000      	movs	r0, #0
 80063fc:	f7fb fcf2 	bl	8001de4 <LCD_IO_WriteData>
 8006400:	2016      	movs	r0, #22
 8006402:	f7fb fcef 	bl	8001de4 <LCD_IO_WriteData>
 8006406:	201b      	movs	r0, #27
 8006408:	f7fb fcec 	bl	8001de4 <LCD_IO_WriteData>
 800640c:	2004      	movs	r0, #4
 800640e:	f7fb fce9 	bl	8001de4 <LCD_IO_WriteData>
 8006412:	2011      	movs	r0, #17
 8006414:	f7fb fce6 	bl	8001de4 <LCD_IO_WriteData>
 8006418:	2007      	movs	r0, #7
 800641a:	f7fb fce3 	bl	8001de4 <LCD_IO_WriteData>
 800641e:	2031      	movs	r0, #49	; 0x31
 8006420:	f7fb fce0 	bl	8001de4 <LCD_IO_WriteData>
 8006424:	2033      	movs	r0, #51	; 0x33
 8006426:	f7fb fcdd 	bl	8001de4 <LCD_IO_WriteData>
 800642a:	2042      	movs	r0, #66	; 0x42
 800642c:	f7fb fcda 	bl	8001de4 <LCD_IO_WriteData>
 8006430:	2005      	movs	r0, #5
 8006432:	f7fb fcd7 	bl	8001de4 <LCD_IO_WriteData>
 8006436:	200c      	movs	r0, #12
 8006438:	f7fb fcd4 	bl	8001de4 <LCD_IO_WriteData>
 800643c:	200a      	movs	r0, #10
 800643e:	f7fb fcd1 	bl	8001de4 <LCD_IO_WriteData>
 8006442:	2028      	movs	r0, #40	; 0x28
 8006444:	f7fb fcce 	bl	8001de4 <LCD_IO_WriteData>
 8006448:	202f      	movs	r0, #47	; 0x2f
 800644a:	f7fb fccb 	bl	8001de4 <LCD_IO_WriteData>
 800644e:	200f      	movs	r0, #15
 8006450:	f7fb fcc8 	bl	8001de4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8006454:	2011      	movs	r0, #17
 8006456:	f7fb fce1 	bl	8001e1c <LCD_IO_WriteReg>
  LCD_Delay(200);
 800645a:	20c8      	movs	r0, #200	; 0xc8
 800645c:	f7fb fd2c 	bl	8001eb8 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8006460:	2029      	movs	r0, #41	; 0x29
 8006462:	f7fb fcdb 	bl	8001e1c <LCD_IO_WriteReg>
}
 8006466:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 800646a:	202c      	movs	r0, #44	; 0x2c
 800646c:	f7fb bcd6 	b.w	8001e1c <LCD_IO_WriteReg>

08006470 <ili9341_ReadID>:
{
 8006470:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8006472:	f7fb fca7 	bl	8001dc4 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8006476:	2103      	movs	r1, #3
 8006478:	20d3      	movs	r0, #211	; 0xd3
 800647a:	f7fb fceb 	bl	8001e54 <LCD_IO_ReadData>
}
 800647e:	b280      	uxth	r0, r0
 8006480:	bd08      	pop	{r3, pc}

08006482 <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 8006482:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8006484:	b2c4      	uxtb	r4, r0
 8006486:	2202      	movs	r2, #2
 8006488:	2103      	movs	r1, #3
 800648a:	4620      	mov	r0, r4
 800648c:	f7fb fc50 	bl	8001d30 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 8006490:	200a      	movs	r0, #10
 8006492:	f7fb fc95 	bl	8001dc0 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8006496:	4620      	mov	r0, r4
 8006498:	2200      	movs	r2, #0
 800649a:	2103      	movs	r1, #3
 800649c:	f7fb fc48 	bl	8001d30 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 80064a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 80064a4:	2002      	movs	r0, #2
 80064a6:	f7fb bc8b 	b.w	8001dc0 <IOE_Delay>

080064aa <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 80064aa:	b538      	push	{r3, r4, r5, lr}
 80064ac:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80064ae:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 80064b0:	f7fb fc3c 	bl	8001d2c <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80064b4:	2100      	movs	r1, #0
 80064b6:	4620      	mov	r0, r4
 80064b8:	f7fb fc52 	bl	8001d60 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80064bc:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80064be:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80064c0:	4620      	mov	r0, r4
 80064c2:	f7fb fc4d 	bl	8001d60 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80064c6:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 80064ca:	b280      	uxth	r0, r0
 80064cc:	bd38      	pop	{r3, r4, r5, pc}

080064ce <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 80064ce:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 80064d0:	b2c4      	uxtb	r4, r0
 80064d2:	2140      	movs	r1, #64	; 0x40
 80064d4:	4620      	mov	r0, r4
 80064d6:	f7fb fc43 	bl	8001d60 <IOE_Read>
  
  if(state > 0)
 80064da:	0603      	lsls	r3, r0, #24
 80064dc:	d507      	bpl.n	80064ee <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 80064de:	214c      	movs	r1, #76	; 0x4c
 80064e0:	4620      	mov	r0, r4
 80064e2:	f7fb fc3d 	bl	8001d60 <IOE_Read>
    {
      ret = 1;
 80064e6:	3800      	subs	r0, #0
 80064e8:	bf18      	it	ne
 80064ea:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 80064ec:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80064ee:	2201      	movs	r2, #1
 80064f0:	214b      	movs	r1, #75	; 0x4b
 80064f2:	4620      	mov	r0, r4
 80064f4:	f7fb fc1c 	bl	8001d30 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80064f8:	4620      	mov	r0, r4
 80064fa:	2200      	movs	r2, #0
 80064fc:	214b      	movs	r1, #75	; 0x4b
 80064fe:	f7fb fc17 	bl	8001d30 <IOE_Write>
  uint8_t ret = 0;
 8006502:	2000      	movs	r0, #0
 8006504:	e7f2      	b.n	80064ec <stmpe811_TS_DetectTouch+0x1e>

08006506 <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8006506:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8006508:	2304      	movs	r3, #4
 800650a:	b2c4      	uxtb	r4, r0
{
 800650c:	460e      	mov	r6, r1
 800650e:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8006510:	21d7      	movs	r1, #215	; 0xd7
 8006512:	eb0d 0203 	add.w	r2, sp, r3
 8006516:	4620      	mov	r0, r4
 8006518:	f7fb fc3c 	bl	8001d94 <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 800651c:	9b01      	ldr	r3, [sp, #4]
 800651e:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8006520:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8006522:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8006526:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8006528:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800652a:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800652c:	2201      	movs	r2, #1
 800652e:	214b      	movs	r1, #75	; 0x4b
 8006530:	f7fb fbfe 	bl	8001d30 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8006534:	2200      	movs	r2, #0
 8006536:	214b      	movs	r1, #75	; 0x4b
 8006538:	4620      	mov	r0, r4
 800653a:	f7fb fbf9 	bl	8001d30 <IOE_Write>
}
 800653e:	b002      	add	sp, #8
 8006540:	bd70      	pop	{r4, r5, r6, pc}
	...

08006544 <stmpe811_Init>:
{
 8006544:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8006546:	4b0a      	ldr	r3, [pc, #40]	; (8006570 <stmpe811_Init+0x2c>)
 8006548:	781a      	ldrb	r2, [r3, #0]
 800654a:	4290      	cmp	r0, r2
{
 800654c:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 800654e:	d00d      	beq.n	800656c <stmpe811_Init+0x28>
 8006550:	7859      	ldrb	r1, [r3, #1]
 8006552:	4288      	cmp	r0, r1
 8006554:	d00a      	beq.n	800656c <stmpe811_Init+0x28>
 8006556:	b10a      	cbz	r2, 800655c <stmpe811_Init+0x18>
 8006558:	b941      	cbnz	r1, 800656c <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 800655a:	2201      	movs	r2, #1
      stmpe811[empty] = DeviceAddr;
 800655c:	549c      	strb	r4, [r3, r2]
      IOE_Init(); 
 800655e:	f7fb fbe5 	bl	8001d2c <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 8006562:	4620      	mov	r0, r4
}
 8006564:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8006568:	f7ff bf8b 	b.w	8006482 <stmpe811_Reset>
}
 800656c:	bd10      	pop	{r4, pc}
 800656e:	bf00      	nop
 8006570:	20002848 	.word	0x20002848

08006574 <stmpe811_EnableGlobalIT>:
{
 8006574:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8006576:	b2c4      	uxtb	r4, r0
 8006578:	2109      	movs	r1, #9
 800657a:	4620      	mov	r0, r4
 800657c:	f7fb fbf0 	bl	8001d60 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8006580:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8006584:	b2c2      	uxtb	r2, r0
 8006586:	2109      	movs	r1, #9
 8006588:	4620      	mov	r0, r4
}
 800658a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800658e:	f7fb bbcf 	b.w	8001d30 <IOE_Write>

08006592 <stmpe811_DisableGlobalIT>:
{
 8006592:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8006594:	b2c4      	uxtb	r4, r0
 8006596:	2109      	movs	r1, #9
 8006598:	4620      	mov	r0, r4
 800659a:	f7fb fbe1 	bl	8001d60 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800659e:	2109      	movs	r1, #9
 80065a0:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 80065a4:	4620      	mov	r0, r4
}
 80065a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 80065aa:	f7fb bbc1 	b.w	8001d30 <IOE_Write>

080065ae <stmpe811_EnableITSource>:
{
 80065ae:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80065b0:	b2c4      	uxtb	r4, r0
{
 80065b2:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80065b4:	4620      	mov	r0, r4
 80065b6:	210a      	movs	r1, #10
 80065b8:	f7fb fbd2 	bl	8001d60 <IOE_Read>
  tmp |= Source; 
 80065bc:	ea40 0205 	orr.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80065c0:	b2d2      	uxtb	r2, r2
 80065c2:	4620      	mov	r0, r4
 80065c4:	210a      	movs	r1, #10
}
 80065c6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80065ca:	f7fb bbb1 	b.w	8001d30 <IOE_Write>

080065ce <stmpe811_TS_EnableIT>:
{
 80065ce:	b507      	push	{r0, r1, r2, lr}
 80065d0:	9001      	str	r0, [sp, #4]
  IOE_ITConfig();
 80065d2:	f7fb fbac 	bl	8001d2e <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 80065d6:	9801      	ldr	r0, [sp, #4]
 80065d8:	211f      	movs	r1, #31
 80065da:	f7ff ffe8 	bl	80065ae <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 80065de:	9801      	ldr	r0, [sp, #4]
}
 80065e0:	b003      	add	sp, #12
 80065e2:	f85d eb04 	ldr.w	lr, [sp], #4
  stmpe811_EnableGlobalIT(DeviceAddr);
 80065e6:	f7ff bfc5 	b.w	8006574 <stmpe811_EnableGlobalIT>

080065ea <stmpe811_DisableITSource>:
{
 80065ea:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80065ec:	b2c4      	uxtb	r4, r0
{
 80065ee:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80065f0:	4620      	mov	r0, r4
 80065f2:	210a      	movs	r1, #10
 80065f4:	f7fb fbb4 	bl	8001d60 <IOE_Read>
  tmp &= ~Source; 
 80065f8:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80065fc:	b2d2      	uxtb	r2, r2
 80065fe:	4620      	mov	r0, r4
 8006600:	210a      	movs	r1, #10
}
 8006602:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8006606:	f7fb bb93 	b.w	8001d30 <IOE_Write>

0800660a <stmpe811_TS_DisableIT>:
{
 800660a:	b510      	push	{r4, lr}
 800660c:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 800660e:	f7ff ffc0 	bl	8006592 <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8006612:	4620      	mov	r0, r4
 8006614:	211f      	movs	r1, #31
}
 8006616:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 800661a:	f7ff bfe6 	b.w	80065ea <stmpe811_DisableITSource>

0800661e <stmpe811_ReadGITStatus>:
{
 800661e:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8006620:	b2c0      	uxtb	r0, r0
{
 8006622:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8006624:	210b      	movs	r1, #11
 8006626:	f7fb fb9b 	bl	8001d60 <IOE_Read>
}
 800662a:	4020      	ands	r0, r4
 800662c:	bd10      	pop	{r4, pc}

0800662e <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 800662e:	211f      	movs	r1, #31
 8006630:	f7ff bff5 	b.w	800661e <stmpe811_ReadGITStatus>

08006634 <stmpe811_ClearGlobalIT>:
{
 8006634:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8006636:	b2c0      	uxtb	r0, r0
 8006638:	210b      	movs	r1, #11
 800663a:	f7fb bb79 	b.w	8001d30 <IOE_Write>

0800663e <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 800663e:	211f      	movs	r1, #31
 8006640:	f7ff bff8 	b.w	8006634 <stmpe811_ClearGlobalIT>

08006644 <stmpe811_IO_EnableAF>:
{
 8006644:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8006646:	b2c4      	uxtb	r4, r0
{
 8006648:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 800664a:	4620      	mov	r0, r4
 800664c:	2117      	movs	r1, #23
 800664e:	f7fb fb87 	bl	8001d60 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8006652:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8006656:	b2d2      	uxtb	r2, r2
 8006658:	4620      	mov	r0, r4
 800665a:	2117      	movs	r1, #23
}
 800665c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8006660:	f7fb bb66 	b.w	8001d30 <IOE_Write>

08006664 <stmpe811_TS_Start>:
{
 8006664:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8006666:	b2c4      	uxtb	r4, r0
{
 8006668:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800666a:	2104      	movs	r1, #4
 800666c:	4620      	mov	r0, r4
 800666e:	f7fb fb77 	bl	8001d60 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8006672:	2104      	movs	r1, #4
 8006674:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8006678:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800667a:	4620      	mov	r0, r4
 800667c:	f7fb fb58 	bl	8001d30 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 8006680:	4630      	mov	r0, r6
 8006682:	21f0      	movs	r1, #240	; 0xf0
 8006684:	f7ff ffde 	bl	8006644 <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8006688:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 800668c:	4620      	mov	r0, r4
 800668e:	2104      	movs	r1, #4
 8006690:	f7fb fb4e 	bl	8001d30 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8006694:	2249      	movs	r2, #73	; 0x49
 8006696:	2120      	movs	r1, #32
 8006698:	4620      	mov	r0, r4
 800669a:	f7fb fb49 	bl	8001d30 <IOE_Write>
  IOE_Delay(2); 
 800669e:	2002      	movs	r0, #2
 80066a0:	f7fb fb8e 	bl	8001dc0 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 80066a4:	4620      	mov	r0, r4
 80066a6:	2201      	movs	r2, #1
 80066a8:	2121      	movs	r1, #33	; 0x21
 80066aa:	f7fb fb41 	bl	8001d30 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 80066ae:	4620      	mov	r0, r4
 80066b0:	229a      	movs	r2, #154	; 0x9a
 80066b2:	2141      	movs	r1, #65	; 0x41
 80066b4:	f7fb fb3c 	bl	8001d30 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 80066b8:	4620      	mov	r0, r4
 80066ba:	2201      	movs	r2, #1
 80066bc:	214a      	movs	r1, #74	; 0x4a
 80066be:	f7fb fb37 	bl	8001d30 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80066c2:	4620      	mov	r0, r4
 80066c4:	2201      	movs	r2, #1
 80066c6:	214b      	movs	r1, #75	; 0x4b
 80066c8:	f7fb fb32 	bl	8001d30 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80066cc:	4620      	mov	r0, r4
 80066ce:	2200      	movs	r2, #0
 80066d0:	214b      	movs	r1, #75	; 0x4b
 80066d2:	f7fb fb2d 	bl	8001d30 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 80066d6:	4620      	mov	r0, r4
 80066d8:	2201      	movs	r2, #1
 80066da:	2156      	movs	r1, #86	; 0x56
 80066dc:	f7fb fb28 	bl	8001d30 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 80066e0:	4620      	mov	r0, r4
 80066e2:	2201      	movs	r2, #1
 80066e4:	2158      	movs	r1, #88	; 0x58
 80066e6:	f7fb fb23 	bl	8001d30 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 80066ea:	4620      	mov	r0, r4
 80066ec:	2201      	movs	r2, #1
 80066ee:	2140      	movs	r1, #64	; 0x40
 80066f0:	f7fb fb1e 	bl	8001d30 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 80066f4:	4620      	mov	r0, r4
 80066f6:	22ff      	movs	r2, #255	; 0xff
 80066f8:	210b      	movs	r1, #11
 80066fa:	f7fb fb19 	bl	8001d30 <IOE_Write>
}
 80066fe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 8006702:	2002      	movs	r0, #2
 8006704:	f7fb bb5c 	b.w	8001dc0 <IOE_Delay>

08006708 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8006708:	4b05      	ldr	r3, [pc, #20]	; (8006720 <SystemInit+0x18>)
 800670a:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 800670e:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8006712:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8006716:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800671a:	609a      	str	r2, [r3, #8]
#endif
}
 800671c:	4770      	bx	lr
 800671e:	bf00      	nop
 8006720:	e000ed00 	.word	0xe000ed00

08006724 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8006724:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8006726:	4b0b      	ldr	r3, [pc, #44]	; (8006754 <HAL_Init+0x30>)
 8006728:	681a      	ldr	r2, [r3, #0]
 800672a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800672e:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8006730:	681a      	ldr	r2, [r3, #0]
 8006732:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8006736:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8006738:	681a      	ldr	r2, [r3, #0]
 800673a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800673e:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8006740:	2003      	movs	r0, #3
 8006742:	f000 f82f 	bl	80067a4 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8006746:	2000      	movs	r0, #0
 8006748:	f7fb fdf8 	bl	800233c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800674c:	f7fb fbc2 	bl	8001ed4 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8006750:	2000      	movs	r0, #0
 8006752:	bd08      	pop	{r3, pc}
 8006754:	40023c00 	.word	0x40023c00

08006758 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8006758:	4a03      	ldr	r2, [pc, #12]	; (8006768 <HAL_IncTick+0x10>)
 800675a:	4b04      	ldr	r3, [pc, #16]	; (800676c <HAL_IncTick+0x14>)
 800675c:	6811      	ldr	r1, [r2, #0]
 800675e:	781b      	ldrb	r3, [r3, #0]
 8006760:	440b      	add	r3, r1
 8006762:	6013      	str	r3, [r2, #0]
}
 8006764:	4770      	bx	lr
 8006766:	bf00      	nop
 8006768:	2000284c 	.word	0x2000284c
 800676c:	20000078 	.word	0x20000078

08006770 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8006770:	4b01      	ldr	r3, [pc, #4]	; (8006778 <HAL_GetTick+0x8>)
 8006772:	6818      	ldr	r0, [r3, #0]
}
 8006774:	4770      	bx	lr
 8006776:	bf00      	nop
 8006778:	2000284c 	.word	0x2000284c

0800677c <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800677c:	b538      	push	{r3, r4, r5, lr}
 800677e:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8006780:	f7ff fff6 	bl	8006770 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8006784:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8006786:	bf1c      	itt	ne
 8006788:	4b05      	ldrne	r3, [pc, #20]	; (80067a0 <HAL_Delay+0x24>)
 800678a:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 800678c:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 800678e:	bf18      	it	ne
 8006790:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8006792:	f7ff ffed 	bl	8006770 <HAL_GetTick>
 8006796:	1b43      	subs	r3, r0, r5
 8006798:	42a3      	cmp	r3, r4
 800679a:	d3fa      	bcc.n	8006792 <HAL_Delay+0x16>
  {
  }
}
 800679c:	bd38      	pop	{r3, r4, r5, pc}
 800679e:	bf00      	nop
 80067a0:	20000078 	.word	0x20000078

080067a4 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80067a4:	4907      	ldr	r1, [pc, #28]	; (80067c4 <HAL_NVIC_SetPriorityGrouping+0x20>)
 80067a6:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80067a8:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80067ac:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80067ae:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80067b0:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80067b4:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80067b6:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80067b8:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80067bc:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 80067c0:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80067c2:	4770      	bx	lr
 80067c4:	e000ed00 	.word	0xe000ed00

080067c8 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80067c8:	4b16      	ldr	r3, [pc, #88]	; (8006824 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80067ca:	b530      	push	{r4, r5, lr}
 80067cc:	68dc      	ldr	r4, [r3, #12]
 80067ce:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80067d2:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80067d6:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80067d8:	2b04      	cmp	r3, #4
 80067da:	bf28      	it	cs
 80067dc:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80067de:	2d06      	cmp	r5, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80067e0:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80067e4:	bf8c      	ite	hi
 80067e6:	3c03      	subhi	r4, #3
 80067e8:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80067ea:	fa05 f303 	lsl.w	r3, r5, r3
 80067ee:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80067f2:	40a5      	lsls	r5, r4
 80067f4:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80067f8:	40a3      	lsls	r3, r4
  if ((int32_t)(IRQn) >= 0)
 80067fa:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80067fc:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006800:	bfac      	ite	ge
 8006802:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006806:	4a08      	ldrlt	r2, [pc, #32]	; (8006828 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006808:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800680c:	bfb8      	it	lt
 800680e:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006812:	b2db      	uxtb	r3, r3
 8006814:	bfaa      	itet	ge
 8006816:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800681a:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800681c:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8006820:	bd30      	pop	{r4, r5, pc}
 8006822:	bf00      	nop
 8006824:	e000ed00 	.word	0xe000ed00
 8006828:	e000ed14 	.word	0xe000ed14

0800682c <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800682c:	2800      	cmp	r0, #0
 800682e:	db07      	blt.n	8006840 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8006830:	0941      	lsrs	r1, r0, #5
 8006832:	4a04      	ldr	r2, [pc, #16]	; (8006844 <HAL_NVIC_EnableIRQ+0x18>)
 8006834:	f000 001f 	and.w	r0, r0, #31
 8006838:	2301      	movs	r3, #1
 800683a:	4083      	lsls	r3, r0
 800683c:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8006840:	4770      	bx	lr
 8006842:	bf00      	nop
 8006844:	e000e100 	.word	0xe000e100

08006848 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8006848:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800684a:	4604      	mov	r4, r0
 800684c:	b150      	cbz	r0, 8006864 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800684e:	7943      	ldrb	r3, [r0, #5]
 8006850:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006854:	b913      	cbnz	r3, 800685c <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8006856:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8006858:	f7fb fb5c 	bl	8001f14 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800685c:	2301      	movs	r3, #1
 800685e:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8006860:	2000      	movs	r0, #0
}
 8006862:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006864:	2001      	movs	r0, #1
 8006866:	e7fc      	b.n	8006862 <HAL_CRC_Init+0x1a>

08006868 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8006868:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 800686a:	4604      	mov	r4, r0
 800686c:	b330      	cbz	r0, 80068bc <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 800686e:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8006872:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006876:	b91b      	cbnz	r3, 8006880 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8006878:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 800687c:	f7fb fb62 	bl	8001f44 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8006880:	6822      	ldr	r2, [r4, #0]
 8006882:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8006884:	2302      	movs	r3, #2
 8006886:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800688a:	6813      	ldr	r3, [r2, #0]
 800688c:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8006890:	430b      	orrs	r3, r1
 8006892:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8006894:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8006896:	68a1      	ldr	r1, [r4, #8]
 8006898:	f023 0307 	bic.w	r3, r3, #7
 800689c:	430b      	orrs	r3, r1
 800689e:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 80068a0:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80068a2:	68e1      	ldr	r1, [r4, #12]
 80068a4:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 80068a8:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80068ac:	430b      	orrs	r3, r1
 80068ae:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80068b0:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80068b2:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80068b4:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80068b6:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 80068ba:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80068bc:	2001      	movs	r0, #1
 80068be:	e7fc      	b.n	80068ba <HAL_DMA2D_Init+0x52>

080068c0 <HAL_DMA2D_LineEventCallback>:
 80068c0:	4770      	bx	lr

080068c2 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 80068c2:	4770      	bx	lr

080068c4 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80068c4:	6803      	ldr	r3, [r0, #0]
{
 80068c6:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80068c8:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 80068ca:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80068cc:	07f2      	lsls	r2, r6, #31
{
 80068ce:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80068d0:	d514      	bpl.n	80068fc <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 80068d2:	05e9      	lsls	r1, r5, #23
 80068d4:	d512      	bpl.n	80068fc <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 80068d6:	681a      	ldr	r2, [r3, #0]
 80068d8:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80068dc:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 80068de:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 80068e0:	f042 0201 	orr.w	r2, r2, #1
 80068e4:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 80068e6:	2201      	movs	r2, #1
 80068e8:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80068ea:	2304      	movs	r3, #4
 80068ec:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80068f0:	2300      	movs	r3, #0
 80068f2:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 80068f6:	6943      	ldr	r3, [r0, #20]
 80068f8:	b103      	cbz	r3, 80068fc <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80068fa:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 80068fc:	06b2      	lsls	r2, r6, #26
 80068fe:	d516      	bpl.n	800692e <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8006900:	04ab      	lsls	r3, r5, #18
 8006902:	d514      	bpl.n	800692e <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8006904:	6823      	ldr	r3, [r4, #0]
 8006906:	681a      	ldr	r2, [r3, #0]
 8006908:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800690c:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 800690e:	2220      	movs	r2, #32
 8006910:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8006912:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006914:	f043 0302 	orr.w	r3, r3, #2
 8006918:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800691a:	2304      	movs	r3, #4
 800691c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8006920:	2300      	movs	r3, #0
 8006922:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8006926:	6963      	ldr	r3, [r4, #20]
 8006928:	b10b      	cbz	r3, 800692e <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800692a:	4620      	mov	r0, r4
 800692c:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 800692e:	0730      	lsls	r0, r6, #28
 8006930:	d516      	bpl.n	8006960 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8006932:	0529      	lsls	r1, r5, #20
 8006934:	d514      	bpl.n	8006960 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8006936:	6823      	ldr	r3, [r4, #0]
 8006938:	681a      	ldr	r2, [r3, #0]
 800693a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800693e:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8006940:	2208      	movs	r2, #8
 8006942:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8006944:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006946:	f043 0304 	orr.w	r3, r3, #4
 800694a:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800694c:	2304      	movs	r3, #4
 800694e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8006952:	2300      	movs	r3, #0
 8006954:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8006958:	6963      	ldr	r3, [r4, #20]
 800695a:	b10b      	cbz	r3, 8006960 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800695c:	4620      	mov	r0, r4
 800695e:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8006960:	0772      	lsls	r2, r6, #29
 8006962:	d50b      	bpl.n	800697c <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8006964:	056b      	lsls	r3, r5, #21
 8006966:	d509      	bpl.n	800697c <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8006968:	6823      	ldr	r3, [r4, #0]
 800696a:	681a      	ldr	r2, [r3, #0]
 800696c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006970:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8006972:	2204      	movs	r2, #4
 8006974:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 8006976:	4620      	mov	r0, r4
 8006978:	f7ff ffa2 	bl	80068c0 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 800697c:	07b0      	lsls	r0, r6, #30
 800697e:	d514      	bpl.n	80069aa <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8006980:	05a9      	lsls	r1, r5, #22
 8006982:	d512      	bpl.n	80069aa <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8006984:	6823      	ldr	r3, [r4, #0]
 8006986:	681a      	ldr	r2, [r3, #0]
 8006988:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800698c:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 800698e:	2202      	movs	r2, #2
 8006990:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8006992:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006994:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8006996:	2301      	movs	r3, #1
 8006998:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800699c:	2300      	movs	r3, #0
 800699e:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferCpltCallback != NULL)
 80069a2:	6923      	ldr	r3, [r4, #16]
 80069a4:	b10b      	cbz	r3, 80069aa <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 80069a6:	4620      	mov	r0, r4
 80069a8:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 80069aa:	06f2      	lsls	r2, r6, #27
 80069ac:	d513      	bpl.n	80069d6 <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 80069ae:	04eb      	lsls	r3, r5, #19
 80069b0:	d511      	bpl.n	80069d6 <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 80069b2:	6823      	ldr	r3, [r4, #0]
 80069b4:	681a      	ldr	r2, [r3, #0]
 80069b6:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80069ba:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 80069bc:	2210      	movs	r2, #16
 80069be:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80069c0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80069c2:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80069c4:	2301      	movs	r3, #1
 80069c6:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80069ca:	2300      	movs	r3, #0
 80069cc:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 80069d0:	4620      	mov	r0, r4
 80069d2:	f7ff ff76 	bl	80068c2 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 80069d6:	bd70      	pop	{r4, r5, r6, pc}

080069d8 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 80069d8:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 80069da:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 80069de:	2b01      	cmp	r3, #1
 80069e0:	f04f 0302 	mov.w	r3, #2
 80069e4:	d02b      	beq.n	8006a3e <HAL_DMA2D_ConfigLayer+0x66>
 80069e6:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80069e8:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 80069ec:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80069f0:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 80069f4:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 80069f8:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 80069fa:	4f18      	ldr	r7, [pc, #96]	; (8006a5c <HAL_DMA2D_ConfigLayer+0x84>)
 80069fc:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8006a00:	3c09      	subs	r4, #9
 8006a02:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8006a04:	bf9c      	itt	ls
 8006a06:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 8006a0a:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8006a0c:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8006a10:	6803      	ldr	r3, [r0, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8006a12:	bf88      	it	hi
 8006a14:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8006a18:	b999      	cbnz	r1, 8006a42 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8006a1a:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8006a1c:	4039      	ands	r1, r7
 8006a1e:	430a      	orrs	r2, r1
 8006a20:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8006a22:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8006a24:	6982      	ldr	r2, [r0, #24]
 8006a26:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8006a28:	d803      	bhi.n	8006a32 <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8006a2a:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8006a2c:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8006a30:	629a      	str	r2, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8006a32:	2301      	movs	r3, #1
 8006a34:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8006a38:	2300      	movs	r3, #0
 8006a3a:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 8006a3e:	4618      	mov	r0, r3

  return HAL_OK;
}
 8006a40:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8006a42:	69d9      	ldr	r1, [r3, #28]
 8006a44:	4039      	ands	r1, r7
 8006a46:	430a      	orrs	r2, r1
 8006a48:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8006a4a:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8006a4c:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8006a4e:	6992      	ldr	r2, [r2, #24]
 8006a50:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8006a52:	bf9c      	itt	ls
 8006a54:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 8006a58:	621d      	strls	r5, [r3, #32]
 8006a5a:	e7ea      	b.n	8006a32 <HAL_DMA2D_ConfigLayer+0x5a>
 8006a5c:	00fcfff0 	.word	0x00fcfff0

08006a60 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8006a60:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8006a64:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 8006c28 <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8006a68:	4a6d      	ldr	r2, [pc, #436]	; (8006c20 <HAL_GPIO_Init+0x1c0>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 8006a6a:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8006a6c:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 8006a6e:	2401      	movs	r4, #1
 8006a70:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8006a72:	ea04 0c05 	and.w	ip, r4, r5
    if(iocurrent == ioposition)
 8006a76:	43ac      	bics	r4, r5
 8006a78:	f040 80b9 	bne.w	8006bee <HAL_GPIO_Init+0x18e>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8006a7c:	684d      	ldr	r5, [r1, #4]
 8006a7e:	f005 0403 	and.w	r4, r5, #3
 8006a82:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8006a86:	2603      	movs	r6, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8006a88:	1e67      	subs	r7, r4, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8006a8a:	fa06 f608 	lsl.w	r6, r6, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8006a8e:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8006a90:	ea6f 0606 	mvn.w	r6, r6
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8006a94:	d834      	bhi.n	8006b00 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 8006a96:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8006a98:	ea07 0e06 	and.w	lr, r7, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
 8006a9c:	68cf      	ldr	r7, [r1, #12]
 8006a9e:	fa07 f708 	lsl.w	r7, r7, r8
 8006aa2:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 8006aa6:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8006aa8:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8006aaa:	ea27 0e0c 	bic.w	lr, r7, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8006aae:	f3c5 1700 	ubfx	r7, r5, #4, #1
 8006ab2:	409f      	lsls	r7, r3
 8006ab4:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 8006ab8:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8006aba:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8006abc:	ea07 0e06 	and.w	lr, r7, r6
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8006ac0:	688f      	ldr	r7, [r1, #8]
 8006ac2:	fa07 f708 	lsl.w	r7, r7, r8
 8006ac6:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8006aca:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 8006acc:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8006ace:	d119      	bne.n	8006b04 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 8006ad0:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8006ad4:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8006ad8:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8006adc:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8006ae0:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8006ae4:	f04f 0e0f 	mov.w	lr, #15
 8006ae8:	fa0e fe0b 	lsl.w	lr, lr, fp
 8006aec:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8006af0:	690f      	ldr	r7, [r1, #16]
 8006af2:	fa07 f70b 	lsl.w	r7, r7, fp
 8006af6:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 8006afa:	f8ca 7020 	str.w	r7, [sl, #32]
 8006afe:	e001      	b.n	8006b04 <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8006b00:	2c03      	cmp	r4, #3
 8006b02:	d1da      	bne.n	8006aba <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 8006b04:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8006b06:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8006b0a:	4037      	ands	r7, r6
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8006b0c:	433c      	orrs	r4, r7
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8006b0e:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      GPIOx->MODER = temp;
 8006b12:	6004      	str	r4, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8006b14:	d06b      	beq.n	8006bee <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8006b16:	f04f 0a00 	mov.w	sl, #0
 8006b1a:	f8cd a004 	str.w	sl, [sp, #4]
 8006b1e:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006b22:	4c40      	ldr	r4, [pc, #256]	; (8006c24 <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8006b24:	f446 4680 	orr.w	r6, r6, #16384	; 0x4000
 8006b28:	f8c9 6044 	str.w	r6, [r9, #68]	; 0x44
 8006b2c:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
 8006b30:	f406 4680 	and.w	r6, r6, #16384	; 0x4000
 8006b34:	9601      	str	r6, [sp, #4]
 8006b36:	9e01      	ldr	r6, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8006b38:	f023 0603 	bic.w	r6, r3, #3
 8006b3c:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
 8006b40:	f506 369c 	add.w	r6, r6, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8006b44:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8006b48:	f8d6 8008 	ldr.w	r8, [r6, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8006b4c:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8006b50:	270f      	movs	r7, #15
 8006b52:	fa07 f70e 	lsl.w	r7, r7, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006b56:	42a0      	cmp	r0, r4
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8006b58:	ea28 0707 	bic.w	r7, r8, r7
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006b5c:	d04e      	beq.n	8006bfc <HAL_GPIO_Init+0x19c>
 8006b5e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8006b62:	42a0      	cmp	r0, r4
 8006b64:	d04c      	beq.n	8006c00 <HAL_GPIO_Init+0x1a0>
 8006b66:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8006b6a:	42a0      	cmp	r0, r4
 8006b6c:	d04a      	beq.n	8006c04 <HAL_GPIO_Init+0x1a4>
 8006b6e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8006b72:	42a0      	cmp	r0, r4
 8006b74:	d048      	beq.n	8006c08 <HAL_GPIO_Init+0x1a8>
 8006b76:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8006b7a:	42a0      	cmp	r0, r4
 8006b7c:	d046      	beq.n	8006c0c <HAL_GPIO_Init+0x1ac>
 8006b7e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8006b82:	42a0      	cmp	r0, r4
 8006b84:	d044      	beq.n	8006c10 <HAL_GPIO_Init+0x1b0>
 8006b86:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8006b8a:	42a0      	cmp	r0, r4
 8006b8c:	d042      	beq.n	8006c14 <HAL_GPIO_Init+0x1b4>
 8006b8e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8006b92:	42a0      	cmp	r0, r4
 8006b94:	d040      	beq.n	8006c18 <HAL_GPIO_Init+0x1b8>
 8006b96:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8006b9a:	42a0      	cmp	r0, r4
 8006b9c:	d03e      	beq.n	8006c1c <HAL_GPIO_Init+0x1bc>
 8006b9e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8006ba2:	42a0      	cmp	r0, r4
 8006ba4:	bf0c      	ite	eq
 8006ba6:	2409      	moveq	r4, #9
 8006ba8:	240a      	movne	r4, #10
 8006baa:	fa04 f40e 	lsl.w	r4, r4, lr
 8006bae:	433c      	orrs	r4, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 8006bb0:	60b4      	str	r4, [r6, #8]
        temp = EXTI->RTSR;
 8006bb2:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 8006bb4:	ea6f 060c 	mvn.w	r6, ip
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8006bb8:	02ef      	lsls	r7, r5, #11
        temp &= ~((uint32_t)iocurrent);
 8006bba:	bf54      	ite	pl
 8006bbc:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8006bbe:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->RTSR = temp;
 8006bc2:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 8006bc4:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8006bc6:	02af      	lsls	r7, r5, #10
        temp &= ~((uint32_t)iocurrent);
 8006bc8:	bf54      	ite	pl
 8006bca:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8006bcc:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->FTSR = temp;
 8006bd0:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 8006bd2:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8006bd4:	03af      	lsls	r7, r5, #14
        temp &= ~((uint32_t)iocurrent);
 8006bd6:	bf54      	ite	pl
 8006bd8:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8006bda:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->EMR = temp;
 8006bde:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8006be0:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8006be2:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 8006be4:	bf54      	ite	pl
 8006be6:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8006be8:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->IMR = temp;
 8006bec:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8006bee:	3301      	adds	r3, #1
 8006bf0:	2b10      	cmp	r3, #16
 8006bf2:	f47f af3b 	bne.w	8006a6c <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 8006bf6:	b003      	add	sp, #12
 8006bf8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006bfc:	4654      	mov	r4, sl
 8006bfe:	e7d4      	b.n	8006baa <HAL_GPIO_Init+0x14a>
 8006c00:	2401      	movs	r4, #1
 8006c02:	e7d2      	b.n	8006baa <HAL_GPIO_Init+0x14a>
 8006c04:	2402      	movs	r4, #2
 8006c06:	e7d0      	b.n	8006baa <HAL_GPIO_Init+0x14a>
 8006c08:	2403      	movs	r4, #3
 8006c0a:	e7ce      	b.n	8006baa <HAL_GPIO_Init+0x14a>
 8006c0c:	2404      	movs	r4, #4
 8006c0e:	e7cc      	b.n	8006baa <HAL_GPIO_Init+0x14a>
 8006c10:	2405      	movs	r4, #5
 8006c12:	e7ca      	b.n	8006baa <HAL_GPIO_Init+0x14a>
 8006c14:	2406      	movs	r4, #6
 8006c16:	e7c8      	b.n	8006baa <HAL_GPIO_Init+0x14a>
 8006c18:	2407      	movs	r4, #7
 8006c1a:	e7c6      	b.n	8006baa <HAL_GPIO_Init+0x14a>
 8006c1c:	2408      	movs	r4, #8
 8006c1e:	e7c4      	b.n	8006baa <HAL_GPIO_Init+0x14a>
 8006c20:	40013c00 	.word	0x40013c00
 8006c24:	40020000 	.word	0x40020000
 8006c28:	40023800 	.word	0x40023800

08006c2c <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8006c2c:	6903      	ldr	r3, [r0, #16]
 8006c2e:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8006c30:	bf14      	ite	ne
 8006c32:	2001      	movne	r0, #1
 8006c34:	2000      	moveq	r0, #0
 8006c36:	4770      	bx	lr

08006c38 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8006c38:	b10a      	cbz	r2, 8006c3e <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8006c3a:	6181      	str	r1, [r0, #24]
  }
}
 8006c3c:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8006c3e:	0409      	lsls	r1, r1, #16
 8006c40:	e7fb      	b.n	8006c3a <HAL_GPIO_WritePin+0x2>

08006c42 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8006c42:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8006c44:	ea01 0203 	and.w	r2, r1, r3
 8006c48:	ea21 0103 	bic.w	r1, r1, r3
 8006c4c:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8006c50:	6181      	str	r1, [r0, #24]
}
 8006c52:	4770      	bx	lr

08006c54 <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 8006c54:	4770      	bx	lr
	...

08006c58 <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 8006c58:	4a04      	ldr	r2, [pc, #16]	; (8006c6c <HAL_GPIO_EXTI_IRQHandler+0x14>)
 8006c5a:	6951      	ldr	r1, [r2, #20]
 8006c5c:	4201      	tst	r1, r0
{
 8006c5e:	b508      	push	{r3, lr}
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 8006c60:	d002      	beq.n	8006c68 <HAL_GPIO_EXTI_IRQHandler+0x10>
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 8006c62:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 8006c64:	f7ff fff6 	bl	8006c54 <HAL_GPIO_EXTI_Callback>
}
 8006c68:	bd08      	pop	{r3, pc}
 8006c6a:	bf00      	nop
 8006c6c:	40013c00 	.word	0x40013c00

08006c70 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8006c70:	6801      	ldr	r1, [r0, #0]
 8006c72:	694b      	ldr	r3, [r1, #20]
 8006c74:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 8006c78:	f04f 0200 	mov.w	r2, #0
 8006c7c:	d010      	beq.n	8006ca0 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8006c7e:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8006c82:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8006c84:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8006c86:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8006c88:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006c8c:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8006c90:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8006c92:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8006c96:	f043 0304 	orr.w	r3, r3, #4
 8006c9a:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 8006c9c:	2001      	movs	r0, #1
 8006c9e:	4770      	bx	lr
  }
  return HAL_OK;
 8006ca0:	4618      	mov	r0, r3
}
 8006ca2:	4770      	bx	lr

08006ca4 <I2C_WaitOnFlagUntilTimeout>:
{
 8006ca4:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8006ca8:	4606      	mov	r6, r0
 8006caa:	460f      	mov	r7, r1
 8006cac:	4691      	mov	r9, r2
 8006cae:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8006cb0:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8006cb4:	6833      	ldr	r3, [r6, #0]
 8006cb6:	f1ba 0f01 	cmp.w	sl, #1
 8006cba:	bf0c      	ite	eq
 8006cbc:	695c      	ldreq	r4, [r3, #20]
 8006cbe:	699c      	ldrne	r4, [r3, #24]
 8006cc0:	ea27 0404 	bic.w	r4, r7, r4
 8006cc4:	b2a4      	uxth	r4, r4
 8006cc6:	fab4 f484 	clz	r4, r4
 8006cca:	0964      	lsrs	r4, r4, #5
 8006ccc:	45a1      	cmp	r9, r4
 8006cce:	d001      	beq.n	8006cd4 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8006cd0:	2000      	movs	r0, #0
 8006cd2:	e017      	b.n	8006d04 <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 8006cd4:	1c6a      	adds	r2, r5, #1
 8006cd6:	d0ee      	beq.n	8006cb6 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006cd8:	f7ff fd4a 	bl	8006770 <HAL_GetTick>
 8006cdc:	9b08      	ldr	r3, [sp, #32]
 8006cde:	1ac0      	subs	r0, r0, r3
 8006ce0:	42a8      	cmp	r0, r5
 8006ce2:	d801      	bhi.n	8006ce8 <I2C_WaitOnFlagUntilTimeout+0x44>
 8006ce4:	2d00      	cmp	r5, #0
 8006ce6:	d1e5      	bne.n	8006cb4 <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8006ce8:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8006cea:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8006cec:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8006cee:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8006cf2:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8006cf6:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8006cf8:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8006cfc:	f042 0220 	orr.w	r2, r2, #32
 8006d00:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 8006d02:	2001      	movs	r0, #1
}
 8006d04:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08006d08 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8006d08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006d0c:	4604      	mov	r4, r0
 8006d0e:	460f      	mov	r7, r1
 8006d10:	4616      	mov	r6, r2
 8006d12:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8006d14:	6825      	ldr	r5, [r4, #0]
 8006d16:	6968      	ldr	r0, [r5, #20]
 8006d18:	ea27 0000 	bic.w	r0, r7, r0
 8006d1c:	b280      	uxth	r0, r0
 8006d1e:	b1b8      	cbz	r0, 8006d50 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8006d20:	696b      	ldr	r3, [r5, #20]
 8006d22:	055a      	lsls	r2, r3, #21
 8006d24:	d516      	bpl.n	8006d54 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006d26:	682b      	ldr	r3, [r5, #0]
 8006d28:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8006d2c:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8006d2e:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8006d32:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8006d34:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006d36:	2300      	movs	r3, #0
 8006d38:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8006d3a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006d3e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8006d42:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006d44:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006d48:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8006d4a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 8006d4e:	2001      	movs	r0, #1
}
 8006d50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8006d54:	1c73      	adds	r3, r6, #1
 8006d56:	d0de      	beq.n	8006d16 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006d58:	f7ff fd0a 	bl	8006770 <HAL_GetTick>
 8006d5c:	eba0 0008 	sub.w	r0, r0, r8
 8006d60:	42b0      	cmp	r0, r6
 8006d62:	d801      	bhi.n	8006d68 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 8006d64:	2e00      	cmp	r6, #0
 8006d66:	d1d5      	bne.n	8006d14 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006d68:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8006d6a:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006d6c:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8006d6e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006d72:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006d76:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006d78:	f042 0220 	orr.w	r2, r2, #32
 8006d7c:	e7e4      	b.n	8006d48 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08006d7e <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8006d7e:	b570      	push	{r4, r5, r6, lr}
 8006d80:	4604      	mov	r4, r0
 8006d82:	460d      	mov	r5, r1
 8006d84:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8006d86:	6821      	ldr	r1, [r4, #0]
 8006d88:	694b      	ldr	r3, [r1, #20]
 8006d8a:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 8006d8e:	d001      	beq.n	8006d94 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8006d90:	2000      	movs	r0, #0
 8006d92:	e010      	b.n	8006db6 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8006d94:	694a      	ldr	r2, [r1, #20]
 8006d96:	06d2      	lsls	r2, r2, #27
 8006d98:	d50e      	bpl.n	8006db8 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8006d9a:	f06f 0210 	mvn.w	r2, #16
 8006d9e:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8006da0:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006da2:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8006da4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006da8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8006dac:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006dae:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8006db0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 8006db4:	2001      	movs	r0, #1
}
 8006db6:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006db8:	f7ff fcda 	bl	8006770 <HAL_GetTick>
 8006dbc:	1b80      	subs	r0, r0, r6
 8006dbe:	42a8      	cmp	r0, r5
 8006dc0:	d801      	bhi.n	8006dc6 <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 8006dc2:	2d00      	cmp	r5, #0
 8006dc4:	d1df      	bne.n	8006d86 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006dc6:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 8006dc8:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006dca:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8006dcc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006dd0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006dd4:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006dd6:	f042 0220 	orr.w	r2, r2, #32
 8006dda:	e7e8      	b.n	8006dae <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

08006ddc <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8006ddc:	b570      	push	{r4, r5, r6, lr}
 8006dde:	4604      	mov	r4, r0
 8006de0:	460d      	mov	r5, r1
 8006de2:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8006de4:	6823      	ldr	r3, [r4, #0]
 8006de6:	695b      	ldr	r3, [r3, #20]
 8006de8:	061b      	lsls	r3, r3, #24
 8006dea:	d501      	bpl.n	8006df0 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8006dec:	2000      	movs	r0, #0
}
 8006dee:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8006df0:	4620      	mov	r0, r4
 8006df2:	f7ff ff3d 	bl	8006c70 <I2C_IsAcknowledgeFailed>
 8006df6:	b9a8      	cbnz	r0, 8006e24 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8006df8:	1c6a      	adds	r2, r5, #1
 8006dfa:	d0f3      	beq.n	8006de4 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006dfc:	f7ff fcb8 	bl	8006770 <HAL_GetTick>
 8006e00:	1b80      	subs	r0, r0, r6
 8006e02:	42a8      	cmp	r0, r5
 8006e04:	d801      	bhi.n	8006e0a <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8006e06:	2d00      	cmp	r5, #0
 8006e08:	d1ec      	bne.n	8006de4 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006e0a:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8006e0c:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006e0e:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8006e10:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006e14:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006e18:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8006e1a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006e1e:	f042 0220 	orr.w	r2, r2, #32
 8006e22:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8006e24:	2001      	movs	r0, #1
 8006e26:	e7e2      	b.n	8006dee <I2C_WaitOnTXEFlagUntilTimeout+0x12>

08006e28 <I2C_RequestMemoryWrite>:
{
 8006e28:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006e2c:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006e2e:	6802      	ldr	r2, [r0, #0]
{
 8006e30:	b085      	sub	sp, #20
 8006e32:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 8006e36:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006e38:	6813      	ldr	r3, [r2, #0]
 8006e3a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006e3e:	6013      	str	r3, [r2, #0]
{
 8006e40:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006e42:	463b      	mov	r3, r7
 8006e44:	f8cd 8000 	str.w	r8, [sp]
 8006e48:	2200      	movs	r2, #0
 8006e4a:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8006e4e:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006e50:	f7ff ff28 	bl	8006ca4 <I2C_WaitOnFlagUntilTimeout>
 8006e54:	6823      	ldr	r3, [r4, #0]
 8006e56:	b138      	cbz	r0, 8006e68 <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8006e58:	681b      	ldr	r3, [r3, #0]
 8006e5a:	05db      	lsls	r3, r3, #23
 8006e5c:	d502      	bpl.n	8006e64 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8006e5e:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006e62:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8006e64:	2003      	movs	r0, #3
 8006e66:	e00a      	b.n	8006e7e <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8006e68:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8006e6c:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8006e6e:	4919      	ldr	r1, [pc, #100]	; (8006ed4 <I2C_RequestMemoryWrite+0xac>)
 8006e70:	4643      	mov	r3, r8
 8006e72:	463a      	mov	r2, r7
 8006e74:	4620      	mov	r0, r4
 8006e76:	f7ff ff47 	bl	8006d08 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006e7a:	b118      	cbz	r0, 8006e84 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 8006e7c:	2001      	movs	r0, #1
}
 8006e7e:	b005      	add	sp, #20
 8006e80:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006e84:	6823      	ldr	r3, [r4, #0]
 8006e86:	9003      	str	r0, [sp, #12]
 8006e88:	695a      	ldr	r2, [r3, #20]
 8006e8a:	9203      	str	r2, [sp, #12]
 8006e8c:	699b      	ldr	r3, [r3, #24]
 8006e8e:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006e90:	4642      	mov	r2, r8
 8006e92:	4639      	mov	r1, r7
 8006e94:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006e96:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006e98:	f7ff ffa0 	bl	8006ddc <I2C_WaitOnTXEFlagUntilTimeout>
 8006e9c:	b140      	cbz	r0, 8006eb0 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8006e9e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006ea0:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006ea2:	bf01      	itttt	eq
 8006ea4:	6822      	ldreq	r2, [r4, #0]
 8006ea6:	6813      	ldreq	r3, [r2, #0]
 8006ea8:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8006eac:	6013      	streq	r3, [r2, #0]
 8006eae:	e7e5      	b.n	8006e7c <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006eb0:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006eb4:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006eb6:	d102      	bne.n	8006ebe <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006eb8:	b2ed      	uxtb	r5, r5
 8006eba:	611d      	str	r5, [r3, #16]
 8006ebc:	e7df      	b.n	8006e7e <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8006ebe:	0a2a      	lsrs	r2, r5, #8
 8006ec0:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006ec2:	4639      	mov	r1, r7
 8006ec4:	4642      	mov	r2, r8
 8006ec6:	4620      	mov	r0, r4
 8006ec8:	f7ff ff88 	bl	8006ddc <I2C_WaitOnTXEFlagUntilTimeout>
 8006ecc:	2800      	cmp	r0, #0
 8006ece:	d1e6      	bne.n	8006e9e <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006ed0:	6823      	ldr	r3, [r4, #0]
 8006ed2:	e7f1      	b.n	8006eb8 <I2C_RequestMemoryWrite+0x90>
 8006ed4:	00010002 	.word	0x00010002

08006ed8 <I2C_RequestMemoryRead>:
{
 8006ed8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8006edc:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006ede:	6803      	ldr	r3, [r0, #0]
{
 8006ee0:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006ee2:	681a      	ldr	r2, [r3, #0]
 8006ee4:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8006ee8:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006eea:	681a      	ldr	r2, [r3, #0]
{
 8006eec:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006ef0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8006ef4:	601a      	str	r2, [r3, #0]
{
 8006ef6:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006ef8:	463b      	mov	r3, r7
 8006efa:	f8cd 8000 	str.w	r8, [sp]
 8006efe:	2200      	movs	r2, #0
 8006f00:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8006f04:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006f06:	f7ff fecd 	bl	8006ca4 <I2C_WaitOnFlagUntilTimeout>
 8006f0a:	6823      	ldr	r3, [r4, #0]
 8006f0c:	b148      	cbz	r0, 8006f22 <I2C_RequestMemoryRead+0x4a>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8006f0e:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8006f10:	05db      	lsls	r3, r3, #23
 8006f12:	d502      	bpl.n	8006f1a <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8006f14:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006f18:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8006f1a:	2003      	movs	r0, #3
}
 8006f1c:	b004      	add	sp, #16
 8006f1e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8006f22:	fa5f f986 	uxtb.w	r9, r6
 8006f26:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8006f2a:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8006f2c:	492a      	ldr	r1, [pc, #168]	; (8006fd8 <I2C_RequestMemoryRead+0x100>)
 8006f2e:	4643      	mov	r3, r8
 8006f30:	463a      	mov	r2, r7
 8006f32:	4620      	mov	r0, r4
 8006f34:	f7ff fee8 	bl	8006d08 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006f38:	b108      	cbz	r0, 8006f3e <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 8006f3a:	2001      	movs	r0, #1
 8006f3c:	e7ee      	b.n	8006f1c <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006f3e:	6823      	ldr	r3, [r4, #0]
 8006f40:	9003      	str	r0, [sp, #12]
 8006f42:	695a      	ldr	r2, [r3, #20]
 8006f44:	9203      	str	r2, [sp, #12]
 8006f46:	699b      	ldr	r3, [r3, #24]
 8006f48:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006f4a:	4642      	mov	r2, r8
 8006f4c:	4639      	mov	r1, r7
 8006f4e:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006f50:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006f52:	f7ff ff43 	bl	8006ddc <I2C_WaitOnTXEFlagUntilTimeout>
 8006f56:	b140      	cbz	r0, 8006f6a <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8006f58:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006f5a:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006f5c:	bf01      	itttt	eq
 8006f5e:	6822      	ldreq	r2, [r4, #0]
 8006f60:	6813      	ldreq	r3, [r2, #0]
 8006f62:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8006f66:	6013      	streq	r3, [r2, #0]
 8006f68:	e7e7      	b.n	8006f3a <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006f6a:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006f6e:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006f70:	d11a      	bne.n	8006fa8 <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006f72:	b2ed      	uxtb	r5, r5
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006f74:	4642      	mov	r2, r8
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006f76:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006f78:	4639      	mov	r1, r7
 8006f7a:	4620      	mov	r0, r4
 8006f7c:	f7ff ff2e 	bl	8006ddc <I2C_WaitOnTXEFlagUntilTimeout>
 8006f80:	4602      	mov	r2, r0
 8006f82:	2800      	cmp	r0, #0
 8006f84:	d1e8      	bne.n	8006f58 <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006f86:	6821      	ldr	r1, [r4, #0]
 8006f88:	680b      	ldr	r3, [r1, #0]
 8006f8a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006f8e:	600b      	str	r3, [r1, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006f90:	4620      	mov	r0, r4
 8006f92:	f8cd 8000 	str.w	r8, [sp]
 8006f96:	463b      	mov	r3, r7
 8006f98:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8006f9c:	f7ff fe82 	bl	8006ca4 <I2C_WaitOnFlagUntilTimeout>
 8006fa0:	6822      	ldr	r2, [r4, #0]
 8006fa2:	b160      	cbz	r0, 8006fbe <I2C_RequestMemoryRead+0xe6>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8006fa4:	6813      	ldr	r3, [r2, #0]
 8006fa6:	e7b3      	b.n	8006f10 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8006fa8:	0a2a      	lsrs	r2, r5, #8
 8006faa:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006fac:	4639      	mov	r1, r7
 8006fae:	4642      	mov	r2, r8
 8006fb0:	4620      	mov	r0, r4
 8006fb2:	f7ff ff13 	bl	8006ddc <I2C_WaitOnTXEFlagUntilTimeout>
 8006fb6:	2800      	cmp	r0, #0
 8006fb8:	d1ce      	bne.n	8006f58 <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006fba:	6823      	ldr	r3, [r4, #0]
 8006fbc:	e7d9      	b.n	8006f72 <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8006fbe:	f049 0301 	orr.w	r3, r9, #1
 8006fc2:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8006fc4:	4904      	ldr	r1, [pc, #16]	; (8006fd8 <I2C_RequestMemoryRead+0x100>)
 8006fc6:	4643      	mov	r3, r8
 8006fc8:	463a      	mov	r2, r7
 8006fca:	4620      	mov	r0, r4
 8006fcc:	f7ff fe9c 	bl	8006d08 <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 8006fd0:	3800      	subs	r0, #0
 8006fd2:	bf18      	it	ne
 8006fd4:	2001      	movne	r0, #1
 8006fd6:	e7a1      	b.n	8006f1c <I2C_RequestMemoryRead+0x44>
 8006fd8:	00010002 	.word	0x00010002

08006fdc <I2C_WaitOnBTFFlagUntilTimeout>:
{
 8006fdc:	b570      	push	{r4, r5, r6, lr}
 8006fde:	4604      	mov	r4, r0
 8006fe0:	460d      	mov	r5, r1
 8006fe2:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8006fe4:	6823      	ldr	r3, [r4, #0]
 8006fe6:	695b      	ldr	r3, [r3, #20]
 8006fe8:	075b      	lsls	r3, r3, #29
 8006fea:	d501      	bpl.n	8006ff0 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8006fec:	2000      	movs	r0, #0
}
 8006fee:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8006ff0:	4620      	mov	r0, r4
 8006ff2:	f7ff fe3d 	bl	8006c70 <I2C_IsAcknowledgeFailed>
 8006ff6:	b9a8      	cbnz	r0, 8007024 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8006ff8:	1c6a      	adds	r2, r5, #1
 8006ffa:	d0f3      	beq.n	8006fe4 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006ffc:	f7ff fbb8 	bl	8006770 <HAL_GetTick>
 8007000:	1b80      	subs	r0, r0, r6
 8007002:	42a8      	cmp	r0, r5
 8007004:	d801      	bhi.n	800700a <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8007006:	2d00      	cmp	r5, #0
 8007008:	d1ec      	bne.n	8006fe4 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800700a:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800700c:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800700e:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8007010:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8007014:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8007018:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800701a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800701e:	f042 0220 	orr.w	r2, r2, #32
 8007022:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8007024:	2001      	movs	r0, #1
 8007026:	e7e2      	b.n	8006fee <I2C_WaitOnBTFFlagUntilTimeout+0x12>

08007028 <HAL_I2C_Init>:
{
 8007028:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 800702a:	4604      	mov	r4, r0
 800702c:	b908      	cbnz	r0, 8007032 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 800702e:	2001      	movs	r0, #1
}
 8007030:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8007032:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8007036:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800703a:	b91b      	cbnz	r3, 8007044 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 800703c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8007040:	f7fa ffa2 	bl	8001f88 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8007044:	2324      	movs	r3, #36	; 0x24
 8007046:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800704a:	6823      	ldr	r3, [r4, #0]
 800704c:	681a      	ldr	r2, [r3, #0]
 800704e:	f022 0201 	bic.w	r2, r2, #1
 8007052:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8007054:	681a      	ldr	r2, [r3, #0]
 8007056:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800705a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800705c:	681a      	ldr	r2, [r3, #0]
 800705e:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8007062:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8007064:	f000 fe6a 	bl	8007d3c <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8007068:	4b3f      	ldr	r3, [pc, #252]	; (8007168 <HAL_I2C_Init+0x140>)
 800706a:	6865      	ldr	r5, [r4, #4]
 800706c:	429d      	cmp	r5, r3
 800706e:	bf94      	ite	ls
 8007070:	4b3e      	ldrls	r3, [pc, #248]	; (800716c <HAL_I2C_Init+0x144>)
 8007072:	4b3f      	ldrhi	r3, [pc, #252]	; (8007170 <HAL_I2C_Init+0x148>)
 8007074:	4298      	cmp	r0, r3
 8007076:	bf8c      	ite	hi
 8007078:	2300      	movhi	r3, #0
 800707a:	2301      	movls	r3, #1
 800707c:	2b00      	cmp	r3, #0
 800707e:	d1d6      	bne.n	800702e <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8007080:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8007082:	4e39      	ldr	r6, [pc, #228]	; (8007168 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8007084:	6851      	ldr	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8007086:	4b3b      	ldr	r3, [pc, #236]	; (8007174 <HAL_I2C_Init+0x14c>)
 8007088:	fbb0 f3f3 	udiv	r3, r0, r3
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800708c:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8007090:	4319      	orrs	r1, r3
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8007092:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8007094:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8007096:	bf88      	it	hi
 8007098:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 800709c:	6a11      	ldr	r1, [r2, #32]
 800709e:	bf88      	it	hi
 80070a0:	4373      	mulhi	r3, r6
 80070a2:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 80070a6:	bf84      	itt	hi
 80070a8:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 80070ac:	fbb3 f3f6 	udivhi	r3, r3, r6
 80070b0:	3301      	adds	r3, #1
 80070b2:	430b      	orrs	r3, r1
 80070b4:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80070b6:	69d1      	ldr	r1, [r2, #28]
 80070b8:	1e43      	subs	r3, r0, #1
 80070ba:	482b      	ldr	r0, [pc, #172]	; (8007168 <HAL_I2C_Init+0x140>)
 80070bc:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 80070c0:	4285      	cmp	r5, r0
 80070c2:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 80070c6:	d832      	bhi.n	800712e <HAL_I2C_Init+0x106>
 80070c8:	006d      	lsls	r5, r5, #1
 80070ca:	f640 70fc 	movw	r0, #4092	; 0xffc
 80070ce:	fbb3 f3f5 	udiv	r3, r3, r5
 80070d2:	3301      	adds	r3, #1
 80070d4:	4203      	tst	r3, r0
 80070d6:	d042      	beq.n	800715e <HAL_I2C_Init+0x136>
 80070d8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80070dc:	4319      	orrs	r1, r3
 80070de:	61d1      	str	r1, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 80070e0:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 80070e4:	6811      	ldr	r1, [r2, #0]
 80070e6:	4303      	orrs	r3, r0
 80070e8:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 80070ec:	430b      	orrs	r3, r1
 80070ee:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 80070f0:	6891      	ldr	r1, [r2, #8]
 80070f2:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 80070f6:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 80070fa:	4303      	orrs	r3, r0
 80070fc:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8007100:	430b      	orrs	r3, r1
 8007102:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8007104:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8007108:	68d1      	ldr	r1, [r2, #12]
 800710a:	4303      	orrs	r3, r0
 800710c:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8007110:	430b      	orrs	r3, r1
 8007112:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8007114:	6813      	ldr	r3, [r2, #0]
 8007116:	f043 0301 	orr.w	r3, r3, #1
 800711a:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800711c:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 800711e:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8007120:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8007122:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8007126:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8007128:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 800712c:	e780      	b.n	8007030 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800712e:	68a0      	ldr	r0, [r4, #8]
 8007130:	b950      	cbnz	r0, 8007148 <HAL_I2C_Init+0x120>
 8007132:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8007136:	fbb3 f3f5 	udiv	r3, r3, r5
 800713a:	3301      	adds	r3, #1
 800713c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8007140:	b17b      	cbz	r3, 8007162 <HAL_I2C_Init+0x13a>
 8007142:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8007146:	e7c9      	b.n	80070dc <HAL_I2C_Init+0xb4>
 8007148:	2019      	movs	r0, #25
 800714a:	4368      	muls	r0, r5
 800714c:	fbb3 f3f0 	udiv	r3, r3, r0
 8007150:	3301      	adds	r3, #1
 8007152:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8007156:	b123      	cbz	r3, 8007162 <HAL_I2C_Init+0x13a>
 8007158:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800715c:	e7be      	b.n	80070dc <HAL_I2C_Init+0xb4>
 800715e:	2304      	movs	r3, #4
 8007160:	e7bc      	b.n	80070dc <HAL_I2C_Init+0xb4>
 8007162:	2301      	movs	r3, #1
 8007164:	e7ba      	b.n	80070dc <HAL_I2C_Init+0xb4>
 8007166:	bf00      	nop
 8007168:	000186a0 	.word	0x000186a0
 800716c:	001e847f 	.word	0x001e847f
 8007170:	003d08ff 	.word	0x003d08ff
 8007174:	000f4240 	.word	0x000f4240

08007178 <HAL_I2C_Mem_Write>:
{
 8007178:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800717c:	4604      	mov	r4, r0
 800717e:	4699      	mov	r9, r3
 8007180:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8007182:	460f      	mov	r7, r1
 8007184:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8007186:	f7ff faf3 	bl	8006770 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800718a:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800718e:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8007190:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8007192:	d003      	beq.n	800719c <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 8007194:	2002      	movs	r0, #2
}
 8007196:	b003      	add	sp, #12
 8007198:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800719c:	9000      	str	r0, [sp, #0]
 800719e:	493c      	ldr	r1, [pc, #240]	; (8007290 <HAL_I2C_Mem_Write+0x118>)
 80071a0:	2319      	movs	r3, #25
 80071a2:	2201      	movs	r2, #1
 80071a4:	4620      	mov	r0, r4
 80071a6:	f7ff fd7d 	bl	8006ca4 <I2C_WaitOnFlagUntilTimeout>
 80071aa:	2800      	cmp	r0, #0
 80071ac:	d1f2      	bne.n	8007194 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 80071ae:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 80071b2:	2b01      	cmp	r3, #1
 80071b4:	d0ee      	beq.n	8007194 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80071b6:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 80071b8:	2301      	movs	r3, #1
 80071ba:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80071be:	6803      	ldr	r3, [r0, #0]
 80071c0:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 80071c2:	bf5e      	ittt	pl
 80071c4:	6803      	ldrpl	r3, [r0, #0]
 80071c6:	f043 0301 	orrpl.w	r3, r3, #1
 80071ca:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80071cc:	6803      	ldr	r3, [r0, #0]
 80071ce:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80071d2:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 80071d4:	2321      	movs	r3, #33	; 0x21
 80071d6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80071da:	2340      	movs	r3, #64	; 0x40
 80071dc:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80071e0:	2300      	movs	r3, #0
 80071e2:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 80071e4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80071e6:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 80071e8:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 80071ec:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80071ee:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80071f0:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80071f2:	4b28      	ldr	r3, [pc, #160]	; (8007294 <HAL_I2C_Mem_Write+0x11c>)
 80071f4:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80071f6:	e9cd 6500 	strd	r6, r5, [sp]
 80071fa:	464b      	mov	r3, r9
 80071fc:	4642      	mov	r2, r8
 80071fe:	4639      	mov	r1, r7
 8007200:	4620      	mov	r0, r4
 8007202:	f7ff fe11 	bl	8006e28 <I2C_RequestMemoryWrite>
 8007206:	2800      	cmp	r0, #0
 8007208:	d02a      	beq.n	8007260 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 800720a:	2001      	movs	r0, #1
 800720c:	e7c3      	b.n	8007196 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800720e:	f7ff fde5 	bl	8006ddc <I2C_WaitOnTXEFlagUntilTimeout>
 8007212:	b140      	cbz	r0, 8007226 <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8007214:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8007216:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8007218:	bf01      	itttt	eq
 800721a:	6822      	ldreq	r2, [r4, #0]
 800721c:	6813      	ldreq	r3, [r2, #0]
 800721e:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8007222:	6013      	streq	r3, [r2, #0]
 8007224:	e7f1      	b.n	800720a <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8007226:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007228:	6827      	ldr	r7, [r4, #0]
 800722a:	461a      	mov	r2, r3
 800722c:	f812 1b01 	ldrb.w	r1, [r2], #1
 8007230:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8007232:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8007234:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8007236:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8007238:	3a01      	subs	r2, #1
 800723a:	b292      	uxth	r2, r2
 800723c:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800723e:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8007240:	1e48      	subs	r0, r1, #1
 8007242:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8007244:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8007246:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8007248:	d50a      	bpl.n	8007260 <HAL_I2C_Mem_Write+0xe8>
 800724a:	b148      	cbz	r0, 8007260 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800724c:	785a      	ldrb	r2, [r3, #1]
 800724e:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8007250:	3302      	adds	r3, #2
 8007252:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8007254:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8007256:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8007258:	3902      	subs	r1, #2
        hi2c->XferCount--;
 800725a:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 800725c:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800725e:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8007260:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8007262:	462a      	mov	r2, r5
 8007264:	4631      	mov	r1, r6
 8007266:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8007268:	2b00      	cmp	r3, #0
 800726a:	d1d0      	bne.n	800720e <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800726c:	f7ff feb6 	bl	8006fdc <I2C_WaitOnBTFFlagUntilTimeout>
 8007270:	2800      	cmp	r0, #0
 8007272:	d1cf      	bne.n	8007214 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8007274:	6822      	ldr	r2, [r4, #0]
 8007276:	6813      	ldr	r3, [r2, #0]
 8007278:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800727c:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800727e:	2320      	movs	r3, #32
 8007280:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8007284:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8007288:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 800728c:	e783      	b.n	8007196 <HAL_I2C_Mem_Write+0x1e>
 800728e:	bf00      	nop
 8007290:	00100002 	.word	0x00100002
 8007294:	ffff0000 	.word	0xffff0000

08007298 <HAL_I2C_Mem_Read>:
{
 8007298:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800729c:	4604      	mov	r4, r0
 800729e:	b087      	sub	sp, #28
 80072a0:	4699      	mov	r9, r3
 80072a2:	9f10      	ldr	r7, [sp, #64]	; 0x40
 80072a4:	460d      	mov	r5, r1
 80072a6:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 80072a8:	f7ff fa62 	bl	8006770 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 80072ac:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 80072b0:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 80072b2:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 80072b4:	d004      	beq.n	80072c0 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 80072b6:	2502      	movs	r5, #2
}
 80072b8:	4628      	mov	r0, r5
 80072ba:	b007      	add	sp, #28
 80072bc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 80072c0:	9000      	str	r0, [sp, #0]
 80072c2:	4976      	ldr	r1, [pc, #472]	; (800749c <HAL_I2C_Mem_Read+0x204>)
 80072c4:	2319      	movs	r3, #25
 80072c6:	2201      	movs	r2, #1
 80072c8:	4620      	mov	r0, r4
 80072ca:	f7ff fceb 	bl	8006ca4 <I2C_WaitOnFlagUntilTimeout>
 80072ce:	2800      	cmp	r0, #0
 80072d0:	d1f1      	bne.n	80072b6 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 80072d2:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 80072d6:	2b01      	cmp	r3, #1
 80072d8:	d0ed      	beq.n	80072b6 <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80072da:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 80072dc:	2301      	movs	r3, #1
 80072de:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80072e2:	6803      	ldr	r3, [r0, #0]
 80072e4:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 80072e6:	bf5e      	ittt	pl
 80072e8:	6803      	ldrpl	r3, [r0, #0]
 80072ea:	f043 0301 	orrpl.w	r3, r3, #1
 80072ee:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80072f0:	6803      	ldr	r3, [r0, #0]
 80072f2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80072f6:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 80072f8:	2322      	movs	r3, #34	; 0x22
 80072fa:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80072fe:	2340      	movs	r3, #64	; 0x40
 8007300:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8007304:	2300      	movs	r3, #0
 8007306:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8007308:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800730a:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 800730c:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8007310:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8007312:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8007314:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8007316:	4b62      	ldr	r3, [pc, #392]	; (80074a0 <HAL_I2C_Mem_Read+0x208>)
 8007318:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800731a:	4629      	mov	r1, r5
 800731c:	e9cd 7600 	strd	r7, r6, [sp]
 8007320:	464b      	mov	r3, r9
 8007322:	4642      	mov	r2, r8
 8007324:	4620      	mov	r0, r4
 8007326:	f7ff fdd7 	bl	8006ed8 <I2C_RequestMemoryRead>
 800732a:	4605      	mov	r5, r0
 800732c:	b108      	cbz	r0, 8007332 <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 800732e:	2501      	movs	r5, #1
 8007330:	e7c2      	b.n	80072b8 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8007332:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8007334:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 8007336:	b9b2      	cbnz	r2, 8007366 <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8007338:	9002      	str	r0, [sp, #8]
 800733a:	695a      	ldr	r2, [r3, #20]
 800733c:	9202      	str	r2, [sp, #8]
 800733e:	699a      	ldr	r2, [r3, #24]
 8007340:	9202      	str	r2, [sp, #8]
 8007342:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8007344:	681a      	ldr	r2, [r3, #0]
 8007346:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800734a:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800734c:	f8df 8154 	ldr.w	r8, [pc, #340]	; 80074a4 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 8007350:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8007352:	2b00      	cmp	r3, #0
 8007354:	d12c      	bne.n	80073b0 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8007356:	2220      	movs	r2, #32
 8007358:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800735c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8007360:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8007364:	e7a8      	b.n	80072b8 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8007366:	2a01      	cmp	r2, #1
 8007368:	d10a      	bne.n	8007380 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800736a:	681a      	ldr	r2, [r3, #0]
 800736c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007370:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8007372:	9003      	str	r0, [sp, #12]
 8007374:	695a      	ldr	r2, [r3, #20]
 8007376:	9203      	str	r2, [sp, #12]
 8007378:	699a      	ldr	r2, [r3, #24]
 800737a:	9203      	str	r2, [sp, #12]
 800737c:	9a03      	ldr	r2, [sp, #12]
 800737e:	e7e1      	b.n	8007344 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8007380:	2a02      	cmp	r2, #2
 8007382:	d10e      	bne.n	80073a2 <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8007384:	681a      	ldr	r2, [r3, #0]
 8007386:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800738a:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800738c:	681a      	ldr	r2, [r3, #0]
 800738e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8007392:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8007394:	9004      	str	r0, [sp, #16]
 8007396:	695a      	ldr	r2, [r3, #20]
 8007398:	9204      	str	r2, [sp, #16]
 800739a:	699b      	ldr	r3, [r3, #24]
 800739c:	9304      	str	r3, [sp, #16]
 800739e:	9b04      	ldr	r3, [sp, #16]
 80073a0:	e7d4      	b.n	800734c <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80073a2:	9005      	str	r0, [sp, #20]
 80073a4:	695a      	ldr	r2, [r3, #20]
 80073a6:	9205      	str	r2, [sp, #20]
 80073a8:	699b      	ldr	r3, [r3, #24]
 80073aa:	9305      	str	r3, [sp, #20]
 80073ac:	9b05      	ldr	r3, [sp, #20]
 80073ae:	e7cd      	b.n	800734c <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 80073b0:	2b03      	cmp	r3, #3
 80073b2:	d856      	bhi.n	8007462 <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 80073b4:	2b01      	cmp	r3, #1
 80073b6:	d115      	bne.n	80073e4 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80073b8:	4632      	mov	r2, r6
 80073ba:	4639      	mov	r1, r7
 80073bc:	4620      	mov	r0, r4
 80073be:	f7ff fcde 	bl	8006d7e <I2C_WaitOnRXNEFlagUntilTimeout>
 80073c2:	2800      	cmp	r0, #0
 80073c4:	d1b3      	bne.n	800732e <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80073c6:	6823      	ldr	r3, [r4, #0]
 80073c8:	691a      	ldr	r2, [r3, #16]
 80073ca:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80073cc:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80073ce:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80073d0:	3301      	adds	r3, #1
 80073d2:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 80073d4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80073d6:	3b01      	subs	r3, #1
 80073d8:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 80073da:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80073dc:	3b01      	subs	r3, #1
 80073de:	b29b      	uxth	r3, r3
 80073e0:	8563      	strh	r3, [r4, #42]	; 0x2a
 80073e2:	e7b5      	b.n	8007350 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 80073e4:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80073e6:	9600      	str	r6, [sp, #0]
 80073e8:	463b      	mov	r3, r7
 80073ea:	f04f 0200 	mov.w	r2, #0
 80073ee:	4641      	mov	r1, r8
 80073f0:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 80073f2:	d119      	bne.n	8007428 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80073f4:	f7ff fc56 	bl	8006ca4 <I2C_WaitOnFlagUntilTimeout>
 80073f8:	2800      	cmp	r0, #0
 80073fa:	d198      	bne.n	800732e <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80073fc:	6823      	ldr	r3, [r4, #0]
 80073fe:	681a      	ldr	r2, [r3, #0]
 8007400:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8007404:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8007406:	691a      	ldr	r2, [r3, #16]
 8007408:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800740a:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800740c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800740e:	1c53      	adds	r3, r2, #1
 8007410:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8007412:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8007414:	3b01      	subs	r3, #1
 8007416:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8007418:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800741a:	3b01      	subs	r3, #1
 800741c:	b29b      	uxth	r3, r3
 800741e:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8007420:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8007422:	691b      	ldr	r3, [r3, #16]
 8007424:	7053      	strb	r3, [r2, #1]
 8007426:	e7d2      	b.n	80073ce <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8007428:	f7ff fc3c 	bl	8006ca4 <I2C_WaitOnFlagUntilTimeout>
 800742c:	4602      	mov	r2, r0
 800742e:	2800      	cmp	r0, #0
 8007430:	f47f af7d 	bne.w	800732e <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8007434:	6823      	ldr	r3, [r4, #0]
 8007436:	6819      	ldr	r1, [r3, #0]
 8007438:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800743c:	6019      	str	r1, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800743e:	6919      	ldr	r1, [r3, #16]
 8007440:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007442:	7019      	strb	r1, [r3, #0]
          hi2c->pBuffPtr++;
 8007444:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8007446:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 8007448:	3301      	adds	r3, #1
 800744a:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800744c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800744e:	3b01      	subs	r3, #1
 8007450:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8007452:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8007454:	3b01      	subs	r3, #1
 8007456:	b29b      	uxth	r3, r3
 8007458:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800745a:	4641      	mov	r1, r8
 800745c:	463b      	mov	r3, r7
 800745e:	4620      	mov	r0, r4
 8007460:	e7c8      	b.n	80073f4 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8007462:	4632      	mov	r2, r6
 8007464:	4639      	mov	r1, r7
 8007466:	4620      	mov	r0, r4
 8007468:	f7ff fc89 	bl	8006d7e <I2C_WaitOnRXNEFlagUntilTimeout>
 800746c:	2800      	cmp	r0, #0
 800746e:	f47f af5e 	bne.w	800732e <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8007472:	6823      	ldr	r3, [r4, #0]
 8007474:	691a      	ldr	r2, [r3, #16]
 8007476:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007478:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 800747a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800747c:	1c53      	adds	r3, r2, #1
 800747e:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8007480:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8007482:	3b01      	subs	r3, #1
 8007484:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8007486:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8007488:	3b01      	subs	r3, #1
 800748a:	b29b      	uxth	r3, r3
 800748c:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800748e:	6823      	ldr	r3, [r4, #0]
 8007490:	6959      	ldr	r1, [r3, #20]
 8007492:	0749      	lsls	r1, r1, #29
 8007494:	f57f af5c 	bpl.w	8007350 <HAL_I2C_Mem_Read+0xb8>
 8007498:	e7c3      	b.n	8007422 <HAL_I2C_Mem_Read+0x18a>
 800749a:	bf00      	nop
 800749c:	00100002 	.word	0x00100002
 80074a0:	ffff0000 	.word	0xffff0000
 80074a4:	00010004 	.word	0x00010004

080074a8 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 80074a8:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80074aa:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80074ae:	2b20      	cmp	r3, #32
 80074b0:	b2dc      	uxtb	r4, r3
 80074b2:	d116      	bne.n	80074e2 <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 80074b4:	2324      	movs	r3, #36	; 0x24
 80074b6:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80074ba:	6803      	ldr	r3, [r0, #0]
 80074bc:	681a      	ldr	r2, [r3, #0]
 80074be:	f022 0201 	bic.w	r2, r2, #1
 80074c2:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 80074c4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80074c6:	f022 0210 	bic.w	r2, r2, #16
 80074ca:	625a      	str	r2, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 80074cc:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80074ce:	4311      	orrs	r1, r2
 80074d0:	6259      	str	r1, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 80074d2:	681a      	ldr	r2, [r3, #0]
 80074d4:	f042 0201 	orr.w	r2, r2, #1
 80074d8:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80074da:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 80074de:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 80074e0:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 80074e2:	2002      	movs	r0, #2
 80074e4:	e7fc      	b.n	80074e0 <HAL_I2CEx_ConfigAnalogFilter+0x38>

080074e6 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 80074e6:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80074e8:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80074ec:	2b20      	cmp	r3, #32
 80074ee:	b2dc      	uxtb	r4, r3
 80074f0:	d116      	bne.n	8007520 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80074f2:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 80074f4:	2324      	movs	r3, #36	; 0x24
 80074f6:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 80074fa:	6813      	ldr	r3, [r2, #0]
 80074fc:	f023 0301 	bic.w	r3, r3, #1
 8007500:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 8007502:	6a55      	ldr	r5, [r2, #36]	; 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8007504:	f64f 73f0 	movw	r3, #65520	; 0xfff0
 8007508:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 800750a:	4319      	orrs	r1, r3

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 800750c:	b289      	uxth	r1, r1
 800750e:	6251      	str	r1, [r2, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8007510:	6813      	ldr	r3, [r2, #0]
 8007512:	f043 0301 	orr.w	r3, r3, #1
 8007516:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8007518:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 800751c:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 800751e:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8007520:	2002      	movs	r0, #2
 8007522:	e7fc      	b.n	800751e <HAL_I2CEx_ConfigDigitalFilter+0x38>

08007524 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8007524:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8007526:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800752a:	01d2      	lsls	r2, r2, #7
 800752c:	3284      	adds	r2, #132	; 0x84
 800752e:	1883      	adds	r3, r0, r2
{
 8007530:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8007534:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8007536:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8007538:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800753a:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800753e:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8007542:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8007544:	68c5      	ldr	r5, [r0, #12]
 8007546:	f10c 0701 	add.w	r7, ip, #1
 800754a:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800754e:	f3c6 460b 	ubfx	r6, r6, #16, #12
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8007552:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8007554:	4426      	add	r6, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8007556:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800755a:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800755c:	68c6      	ldr	r6, [r0, #12]
 800755e:	68cd      	ldr	r5, [r1, #12]
 8007560:	f3c6 060a 	ubfx	r6, r6, #0, #11
 8007564:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8007566:	689d      	ldr	r5, [r3, #8]
 8007568:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 800756c:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800756e:	68c7      	ldr	r7, [r0, #12]
 8007570:	688d      	ldr	r5, [r1, #8]
 8007572:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8007576:	3501      	adds	r5, #1
 8007578:	443d      	add	r5, r7
 800757a:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 800757e:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8007580:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8007582:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8007584:	f025 0507 	bic.w	r5, r5, #7
 8007588:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800758a:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800758e:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8007590:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8007592:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8007596:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800759a:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800759e:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 80075a2:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 80075a6:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 80075aa:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 80075ae:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 80075b0:	695d      	ldr	r5, [r3, #20]
 80075b2:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 80075b6:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 80075b8:	694d      	ldr	r5, [r1, #20]
 80075ba:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 80075bc:	69dd      	ldr	r5, [r3, #28]
 80075be:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 80075c2:	f025 0507 	bic.w	r5, r5, #7
 80075c6:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 80075c8:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 80075cc:	433d      	orrs	r5, r7
 80075ce:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80075d0:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80075d2:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80075d4:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80075d8:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 80075da:	b1fe      	cbz	r6, 800761c <LTDC_SetConfig+0xf8>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 80075dc:	3e01      	subs	r6, #1
 80075de:	2e06      	cmp	r6, #6
 80075e0:	d81e      	bhi.n	8007620 <LTDC_SetConfig+0xfc>
 80075e2:	4d10      	ldr	r5, [pc, #64]	; (8007624 <LTDC_SetConfig+0x100>)
 80075e4:	5dad      	ldrb	r5, [r5, r6]
  {
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 80075e6:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 80075e8:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 80075ec:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80075ee:	eba4 040c 	sub.w	r4, r4, ip
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 80075f2:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80075f4:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80075f6:	436c      	muls	r4, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 80075f8:	436e      	muls	r6, r5
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80075fa:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 80075fc:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 8007600:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8007602:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 8007604:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 8007608:	f024 0407 	bic.w	r4, r4, #7
 800760c:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800760e:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8007610:	5883      	ldr	r3, [r0, r2]
 8007612:	f043 0301 	orr.w	r3, r3, #1
 8007616:	5083      	str	r3, [r0, r2]
}
 8007618:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 800761c:	2504      	movs	r5, #4
 800761e:	e7e2      	b.n	80075e6 <LTDC_SetConfig+0xc2>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8007620:	2501      	movs	r5, #1
 8007622:	e7e0      	b.n	80075e6 <LTDC_SetConfig+0xc2>
 8007624:	0802038c 	.word	0x0802038c

08007628 <HAL_LTDC_Init>:
{
 8007628:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 800762a:	4604      	mov	r4, r0
 800762c:	2800      	cmp	r0, #0
 800762e:	d063      	beq.n	80076f8 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8007630:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 8007634:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007638:	b91b      	cbnz	r3, 8007642 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 800763a:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800763e:	f7fa fcff 	bl	8002040 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8007642:	2302      	movs	r3, #2
 8007644:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8007648:	6823      	ldr	r3, [r4, #0]
 800764a:	699a      	ldr	r2, [r3, #24]
 800764c:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8007650:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8007652:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8007656:	4302      	orrs	r2, r0
 8007658:	68e0      	ldr	r0, [r4, #12]
 800765a:	6999      	ldr	r1, [r3, #24]
 800765c:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800765e:	6920      	ldr	r0, [r4, #16]
 8007660:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8007662:	430a      	orrs	r2, r1
 8007664:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8007666:	689a      	ldr	r2, [r3, #8]
 8007668:	4924      	ldr	r1, [pc, #144]	; (80076fc <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800766a:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800766c:	400a      	ands	r2, r1
 800766e:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8007670:	689a      	ldr	r2, [r3, #8]
 8007672:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8007676:	69a0      	ldr	r0, [r4, #24]
 8007678:	4302      	orrs	r2, r0
 800767a:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800767c:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800767e:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8007680:	400a      	ands	r2, r1
 8007682:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8007684:	68da      	ldr	r2, [r3, #12]
 8007686:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800768a:	6a20      	ldr	r0, [r4, #32]
 800768c:	4302      	orrs	r2, r0
 800768e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8007690:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8007692:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8007694:	400a      	ands	r2, r1
 8007696:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8007698:	691a      	ldr	r2, [r3, #16]
 800769a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800769e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80076a0:	4302      	orrs	r2, r0
 80076a2:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 80076a4:	695a      	ldr	r2, [r3, #20]
 80076a6:	400a      	ands	r2, r1
 80076a8:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80076aa:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 80076ac:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80076ae:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80076b2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80076b4:	430a      	orrs	r2, r1
 80076b6:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80076b8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 80076ba:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 80076be:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80076c2:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 80076c6:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 80076c8:	6add      	ldr	r5, [r3, #44]	; 0x2c
 80076ca:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 80076ce:	432a      	orrs	r2, r5
 80076d0:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 80076d4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80076d8:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 80076da:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80076dc:	f042 0206 	orr.w	r2, r2, #6
 80076e0:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 80076e2:	699a      	ldr	r2, [r3, #24]
 80076e4:	f042 0201 	orr.w	r2, r2, #1
 80076e8:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80076ea:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 80076ec:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80076ee:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 80076f2:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 80076f6:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80076f8:	2001      	movs	r0, #1
 80076fa:	e7fc      	b.n	80076f6 <HAL_LTDC_Init+0xce>
 80076fc:	f000f800 	.word	0xf000f800

08007700 <HAL_LTDC_ErrorCallback>:
 8007700:	4770      	bx	lr

08007702 <HAL_LTDC_ReloadEventCallback>:
 8007702:	4770      	bx	lr

08007704 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8007704:	6803      	ldr	r3, [r0, #0]
{
 8007706:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8007708:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800770a:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800770c:	0772      	lsls	r2, r6, #29
{
 800770e:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8007710:	d514      	bpl.n	800773c <HAL_LTDC_IRQHandler+0x38>
 8007712:	0769      	lsls	r1, r5, #29
 8007714:	d512      	bpl.n	800773c <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8007716:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007718:	f022 0204 	bic.w	r2, r2, #4
 800771c:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800771e:	2204      	movs	r2, #4
 8007720:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8007722:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8007726:	f043 0301 	orr.w	r3, r3, #1
 800772a:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800772e:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8007730:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8007734:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8007738:	f7ff ffe2 	bl	8007700 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800773c:	07b2      	lsls	r2, r6, #30
 800773e:	d516      	bpl.n	800776e <HAL_LTDC_IRQHandler+0x6a>
 8007740:	07ab      	lsls	r3, r5, #30
 8007742:	d514      	bpl.n	800776e <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8007744:	6823      	ldr	r3, [r4, #0]
 8007746:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007748:	f022 0202 	bic.w	r2, r2, #2
 800774c:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800774e:	2202      	movs	r2, #2
 8007750:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8007752:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8007756:	4313      	orrs	r3, r2
 8007758:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800775c:	2304      	movs	r3, #4
 800775e:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8007762:	2300      	movs	r3, #0
 8007764:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8007768:	4620      	mov	r0, r4
 800776a:	f7ff ffc9 	bl	8007700 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800776e:	07f0      	lsls	r0, r6, #31
 8007770:	d510      	bpl.n	8007794 <HAL_LTDC_IRQHandler+0x90>
 8007772:	07e9      	lsls	r1, r5, #31
 8007774:	d50e      	bpl.n	8007794 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8007776:	6823      	ldr	r3, [r4, #0]
 8007778:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800777a:	f022 0201 	bic.w	r2, r2, #1
 800777e:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8007780:	2201      	movs	r2, #1
 8007782:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8007784:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8007786:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800778a:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800778e:	4620      	mov	r0, r4
 8007790:	f7fa f820 	bl	80017d4 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8007794:	0732      	lsls	r2, r6, #28
 8007796:	d511      	bpl.n	80077bc <HAL_LTDC_IRQHandler+0xb8>
 8007798:	072b      	lsls	r3, r5, #28
 800779a:	d50f      	bpl.n	80077bc <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800779c:	6823      	ldr	r3, [r4, #0]
 800779e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80077a0:	f022 0208 	bic.w	r2, r2, #8
 80077a4:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 80077a6:	2208      	movs	r2, #8
 80077a8:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 80077aa:	2301      	movs	r3, #1
 80077ac:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80077b0:	2300      	movs	r3, #0
 80077b2:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 80077b6:	4620      	mov	r0, r4
 80077b8:	f7ff ffa3 	bl	8007702 <HAL_LTDC_ReloadEventCallback>
}
 80077bc:	bd70      	pop	{r4, r5, r6, pc}

080077be <HAL_LTDC_ConfigLayer>:
{
 80077be:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 80077c2:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80077c6:	2b01      	cmp	r3, #1
{
 80077c8:	4606      	mov	r6, r0
 80077ca:	460f      	mov	r7, r1
 80077cc:	4694      	mov	ip, r2
 80077ce:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 80077d2:	d01f      	beq.n	8007814 <HAL_LTDC_ConfigLayer+0x56>
 80077d4:	f04f 0801 	mov.w	r8, #1
 80077d8:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80077dc:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80077e0:	2434      	movs	r4, #52	; 0x34
 80077e2:	460d      	mov	r5, r1
 80077e4:	fb04 6402 	mla	r4, r4, r2, r6
 80077e8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80077ea:	3438      	adds	r4, #56	; 0x38
 80077ec:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80077ee:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80077f0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80077f2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80077f4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80077f6:	682b      	ldr	r3, [r5, #0]
 80077f8:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 80077fa:	4630      	mov	r0, r6
 80077fc:	4662      	mov	r2, ip
 80077fe:	4639      	mov	r1, r7
 8007800:	f7ff fe90 	bl	8007524 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8007804:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8007806:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8007808:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800780c:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8007810:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 8007814:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08007818 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8007818:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800781c:	2b01      	cmp	r3, #1
 800781e:	f04f 0302 	mov.w	r3, #2
 8007822:	d012      	beq.n	800784a <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8007824:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8007828:	6803      	ldr	r3, [r0, #0]
 800782a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800782c:	f022 0201 	bic.w	r2, r2, #1
 8007830:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8007832:	4a07      	ldr	r2, [pc, #28]	; (8007850 <HAL_LTDC_ProgramLineEvent+0x38>)
 8007834:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8007836:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007838:	f042 0201 	orr.w	r2, r2, #1
 800783c:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800783e:	2301      	movs	r3, #1
 8007840:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8007844:	2300      	movs	r3, #0
 8007846:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 800784a:	4618      	mov	r0, r3
}
 800784c:	4770      	bx	lr
 800784e:	bf00      	nop
 8007850:	40016800 	.word	0x40016800

08007854 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8007854:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8007858:	4604      	mov	r4, r0
 800785a:	b340      	cbz	r0, 80078ae <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800785c:	6803      	ldr	r3, [r0, #0]
 800785e:	07dd      	lsls	r5, r3, #31
 8007860:	d410      	bmi.n	8007884 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8007862:	6823      	ldr	r3, [r4, #0]
 8007864:	0798      	lsls	r0, r3, #30
 8007866:	d45b      	bmi.n	8007920 <HAL_RCC_OscConfig+0xcc>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8007868:	6823      	ldr	r3, [r4, #0]
 800786a:	071a      	lsls	r2, r3, #28
 800786c:	f100 809d 	bmi.w	80079aa <HAL_RCC_OscConfig+0x156>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8007870:	6823      	ldr	r3, [r4, #0]
 8007872:	075b      	lsls	r3, r3, #29
 8007874:	f100 80bd 	bmi.w	80079f2 <HAL_RCC_OscConfig+0x19e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8007878:	69a0      	ldr	r0, [r4, #24]
 800787a:	2800      	cmp	r0, #0
 800787c:	f040 8124 	bne.w	8007ac8 <HAL_RCC_OscConfig+0x274>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8007880:	2000      	movs	r0, #0
 8007882:	e02c      	b.n	80078de <HAL_RCC_OscConfig+0x8a>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8007884:	4b8d      	ldr	r3, [pc, #564]	; (8007abc <HAL_RCC_OscConfig+0x268>)
 8007886:	689a      	ldr	r2, [r3, #8]
 8007888:	f002 020c 	and.w	r2, r2, #12
 800788c:	2a04      	cmp	r2, #4
 800788e:	d007      	beq.n	80078a0 <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8007890:	689a      	ldr	r2, [r3, #8]
 8007892:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8007896:	2a08      	cmp	r2, #8
 8007898:	d10b      	bne.n	80078b2 <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800789a:	685b      	ldr	r3, [r3, #4]
 800789c:	0259      	lsls	r1, r3, #9
 800789e:	d508      	bpl.n	80078b2 <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80078a0:	4b86      	ldr	r3, [pc, #536]	; (8007abc <HAL_RCC_OscConfig+0x268>)
 80078a2:	681b      	ldr	r3, [r3, #0]
 80078a4:	039a      	lsls	r2, r3, #14
 80078a6:	d5dc      	bpl.n	8007862 <HAL_RCC_OscConfig+0xe>
 80078a8:	6863      	ldr	r3, [r4, #4]
 80078aa:	2b00      	cmp	r3, #0
 80078ac:	d1d9      	bne.n	8007862 <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 80078ae:	2001      	movs	r0, #1
 80078b0:	e015      	b.n	80078de <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80078b2:	6863      	ldr	r3, [r4, #4]
 80078b4:	4d81      	ldr	r5, [pc, #516]	; (8007abc <HAL_RCC_OscConfig+0x268>)
 80078b6:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80078ba:	d113      	bne.n	80078e4 <HAL_RCC_OscConfig+0x90>
 80078bc:	682b      	ldr	r3, [r5, #0]
 80078be:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80078c2:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80078c4:	f7fe ff54 	bl	8006770 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80078c8:	4e7c      	ldr	r6, [pc, #496]	; (8007abc <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 80078ca:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80078cc:	6833      	ldr	r3, [r6, #0]
 80078ce:	039b      	lsls	r3, r3, #14
 80078d0:	d4c7      	bmi.n	8007862 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80078d2:	f7fe ff4d 	bl	8006770 <HAL_GetTick>
 80078d6:	1b40      	subs	r0, r0, r5
 80078d8:	2864      	cmp	r0, #100	; 0x64
 80078da:	d9f7      	bls.n	80078cc <HAL_RCC_OscConfig+0x78>
            return HAL_TIMEOUT;
 80078dc:	2003      	movs	r0, #3
}
 80078de:	b002      	add	sp, #8
 80078e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80078e4:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80078e8:	d104      	bne.n	80078f4 <HAL_RCC_OscConfig+0xa0>
 80078ea:	682b      	ldr	r3, [r5, #0]
 80078ec:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80078f0:	602b      	str	r3, [r5, #0]
 80078f2:	e7e3      	b.n	80078bc <HAL_RCC_OscConfig+0x68>
 80078f4:	682a      	ldr	r2, [r5, #0]
 80078f6:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 80078fa:	602a      	str	r2, [r5, #0]
 80078fc:	682a      	ldr	r2, [r5, #0]
 80078fe:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8007902:	602a      	str	r2, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8007904:	2b00      	cmp	r3, #0
 8007906:	d1dd      	bne.n	80078c4 <HAL_RCC_OscConfig+0x70>
        tickstart = HAL_GetTick();
 8007908:	f7fe ff32 	bl	8006770 <HAL_GetTick>
 800790c:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800790e:	682b      	ldr	r3, [r5, #0]
 8007910:	039f      	lsls	r7, r3, #14
 8007912:	d5a6      	bpl.n	8007862 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8007914:	f7fe ff2c 	bl	8006770 <HAL_GetTick>
 8007918:	1b80      	subs	r0, r0, r6
 800791a:	2864      	cmp	r0, #100	; 0x64
 800791c:	d9f7      	bls.n	800790e <HAL_RCC_OscConfig+0xba>
 800791e:	e7dd      	b.n	80078dc <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8007920:	4b66      	ldr	r3, [pc, #408]	; (8007abc <HAL_RCC_OscConfig+0x268>)
 8007922:	689a      	ldr	r2, [r3, #8]
 8007924:	f012 0f0c 	tst.w	r2, #12
 8007928:	d007      	beq.n	800793a <HAL_RCC_OscConfig+0xe6>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800792a:	689a      	ldr	r2, [r3, #8]
 800792c:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8007930:	2a08      	cmp	r2, #8
 8007932:	d111      	bne.n	8007958 <HAL_RCC_OscConfig+0x104>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8007934:	685b      	ldr	r3, [r3, #4]
 8007936:	025e      	lsls	r6, r3, #9
 8007938:	d40e      	bmi.n	8007958 <HAL_RCC_OscConfig+0x104>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800793a:	4a60      	ldr	r2, [pc, #384]	; (8007abc <HAL_RCC_OscConfig+0x268>)
 800793c:	6813      	ldr	r3, [r2, #0]
 800793e:	079d      	lsls	r5, r3, #30
 8007940:	d502      	bpl.n	8007948 <HAL_RCC_OscConfig+0xf4>
 8007942:	68e3      	ldr	r3, [r4, #12]
 8007944:	2b01      	cmp	r3, #1
 8007946:	d1b2      	bne.n	80078ae <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8007948:	6813      	ldr	r3, [r2, #0]
 800794a:	6921      	ldr	r1, [r4, #16]
 800794c:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8007950:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8007954:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8007956:	e787      	b.n	8007868 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8007958:	68e2      	ldr	r2, [r4, #12]
 800795a:	4b59      	ldr	r3, [pc, #356]	; (8007ac0 <HAL_RCC_OscConfig+0x26c>)
 800795c:	b1b2      	cbz	r2, 800798c <HAL_RCC_OscConfig+0x138>
        __HAL_RCC_HSI_ENABLE();
 800795e:	2201      	movs	r2, #1
 8007960:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8007962:	f7fe ff05 	bl	8006770 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007966:	4d55      	ldr	r5, [pc, #340]	; (8007abc <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 8007968:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800796a:	682b      	ldr	r3, [r5, #0]
 800796c:	0798      	lsls	r0, r3, #30
 800796e:	d507      	bpl.n	8007980 <HAL_RCC_OscConfig+0x12c>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8007970:	682b      	ldr	r3, [r5, #0]
 8007972:	6922      	ldr	r2, [r4, #16]
 8007974:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8007978:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800797c:	602b      	str	r3, [r5, #0]
 800797e:	e773      	b.n	8007868 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8007980:	f7fe fef6 	bl	8006770 <HAL_GetTick>
 8007984:	1b80      	subs	r0, r0, r6
 8007986:	2802      	cmp	r0, #2
 8007988:	d9ef      	bls.n	800796a <HAL_RCC_OscConfig+0x116>
 800798a:	e7a7      	b.n	80078dc <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_HSI_DISABLE();
 800798c:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800798e:	f7fe feef 	bl	8006770 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8007992:	4e4a      	ldr	r6, [pc, #296]	; (8007abc <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 8007994:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8007996:	6833      	ldr	r3, [r6, #0]
 8007998:	0799      	lsls	r1, r3, #30
 800799a:	f57f af65 	bpl.w	8007868 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800799e:	f7fe fee7 	bl	8006770 <HAL_GetTick>
 80079a2:	1b40      	subs	r0, r0, r5
 80079a4:	2802      	cmp	r0, #2
 80079a6:	d9f6      	bls.n	8007996 <HAL_RCC_OscConfig+0x142>
 80079a8:	e798      	b.n	80078dc <HAL_RCC_OscConfig+0x88>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 80079aa:	6962      	ldr	r2, [r4, #20]
 80079ac:	4b44      	ldr	r3, [pc, #272]	; (8007ac0 <HAL_RCC_OscConfig+0x26c>)
 80079ae:	b182      	cbz	r2, 80079d2 <HAL_RCC_OscConfig+0x17e>
      __HAL_RCC_LSI_ENABLE();
 80079b0:	2201      	movs	r2, #1
 80079b2:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 80079b6:	f7fe fedb 	bl	8006770 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80079ba:	4e40      	ldr	r6, [pc, #256]	; (8007abc <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 80079bc:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80079be:	6f73      	ldr	r3, [r6, #116]	; 0x74
 80079c0:	079f      	lsls	r7, r3, #30
 80079c2:	f53f af55 	bmi.w	8007870 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80079c6:	f7fe fed3 	bl	8006770 <HAL_GetTick>
 80079ca:	1b40      	subs	r0, r0, r5
 80079cc:	2802      	cmp	r0, #2
 80079ce:	d9f6      	bls.n	80079be <HAL_RCC_OscConfig+0x16a>
 80079d0:	e784      	b.n	80078dc <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_LSI_DISABLE();
 80079d2:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 80079d6:	f7fe fecb 	bl	8006770 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80079da:	4e38      	ldr	r6, [pc, #224]	; (8007abc <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 80079dc:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80079de:	6f73      	ldr	r3, [r6, #116]	; 0x74
 80079e0:	0798      	lsls	r0, r3, #30
 80079e2:	f57f af45 	bpl.w	8007870 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80079e6:	f7fe fec3 	bl	8006770 <HAL_GetTick>
 80079ea:	1b40      	subs	r0, r0, r5
 80079ec:	2802      	cmp	r0, #2
 80079ee:	d9f6      	bls.n	80079de <HAL_RCC_OscConfig+0x18a>
 80079f0:	e774      	b.n	80078dc <HAL_RCC_OscConfig+0x88>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80079f2:	4b32      	ldr	r3, [pc, #200]	; (8007abc <HAL_RCC_OscConfig+0x268>)
 80079f4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80079f6:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 80079fa:	d128      	bne.n	8007a4e <HAL_RCC_OscConfig+0x1fa>
      __HAL_RCC_PWR_CLK_ENABLE();
 80079fc:	9201      	str	r2, [sp, #4]
 80079fe:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8007a00:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8007a04:	641a      	str	r2, [r3, #64]	; 0x40
 8007a06:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007a08:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007a0c:	9301      	str	r3, [sp, #4]
 8007a0e:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8007a10:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8007a12:	4d2c      	ldr	r5, [pc, #176]	; (8007ac4 <HAL_RCC_OscConfig+0x270>)
 8007a14:	682b      	ldr	r3, [r5, #0]
 8007a16:	05d9      	lsls	r1, r3, #23
 8007a18:	d51b      	bpl.n	8007a52 <HAL_RCC_OscConfig+0x1fe>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8007a1a:	68a3      	ldr	r3, [r4, #8]
 8007a1c:	4d27      	ldr	r5, [pc, #156]	; (8007abc <HAL_RCC_OscConfig+0x268>)
 8007a1e:	2b01      	cmp	r3, #1
 8007a20:	d127      	bne.n	8007a72 <HAL_RCC_OscConfig+0x21e>
 8007a22:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007a24:	f043 0301 	orr.w	r3, r3, #1
 8007a28:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 8007a2a:	f7fe fea1 	bl	8006770 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8007a2e:	4e23      	ldr	r6, [pc, #140]	; (8007abc <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 8007a30:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007a32:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8007a36:	6f33      	ldr	r3, [r6, #112]	; 0x70
 8007a38:	079b      	lsls	r3, r3, #30
 8007a3a:	d539      	bpl.n	8007ab0 <HAL_RCC_OscConfig+0x25c>
    if(pwrclkchanged == SET)
 8007a3c:	2f00      	cmp	r7, #0
 8007a3e:	f43f af1b 	beq.w	8007878 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 8007a42:	4a1e      	ldr	r2, [pc, #120]	; (8007abc <HAL_RCC_OscConfig+0x268>)
 8007a44:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8007a46:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8007a4a:	6413      	str	r3, [r2, #64]	; 0x40
 8007a4c:	e714      	b.n	8007878 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 8007a4e:	2700      	movs	r7, #0
 8007a50:	e7df      	b.n	8007a12 <HAL_RCC_OscConfig+0x1be>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8007a52:	682b      	ldr	r3, [r5, #0]
 8007a54:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007a58:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8007a5a:	f7fe fe89 	bl	8006770 <HAL_GetTick>
 8007a5e:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8007a60:	682b      	ldr	r3, [r5, #0]
 8007a62:	05da      	lsls	r2, r3, #23
 8007a64:	d4d9      	bmi.n	8007a1a <HAL_RCC_OscConfig+0x1c6>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8007a66:	f7fe fe83 	bl	8006770 <HAL_GetTick>
 8007a6a:	1b80      	subs	r0, r0, r6
 8007a6c:	2802      	cmp	r0, #2
 8007a6e:	d9f7      	bls.n	8007a60 <HAL_RCC_OscConfig+0x20c>
 8007a70:	e734      	b.n	80078dc <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8007a72:	2b05      	cmp	r3, #5
 8007a74:	d104      	bne.n	8007a80 <HAL_RCC_OscConfig+0x22c>
 8007a76:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007a78:	f043 0304 	orr.w	r3, r3, #4
 8007a7c:	672b      	str	r3, [r5, #112]	; 0x70
 8007a7e:	e7d0      	b.n	8007a22 <HAL_RCC_OscConfig+0x1ce>
 8007a80:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8007a82:	f022 0201 	bic.w	r2, r2, #1
 8007a86:	672a      	str	r2, [r5, #112]	; 0x70
 8007a88:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8007a8a:	f022 0204 	bic.w	r2, r2, #4
 8007a8e:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8007a90:	2b00      	cmp	r3, #0
 8007a92:	d1ca      	bne.n	8007a2a <HAL_RCC_OscConfig+0x1d6>
      tickstart = HAL_GetTick();
 8007a94:	f7fe fe6c 	bl	8006770 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007a98:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 8007a9c:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8007a9e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007aa0:	0798      	lsls	r0, r3, #30
 8007aa2:	d5cb      	bpl.n	8007a3c <HAL_RCC_OscConfig+0x1e8>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007aa4:	f7fe fe64 	bl	8006770 <HAL_GetTick>
 8007aa8:	1b80      	subs	r0, r0, r6
 8007aaa:	4540      	cmp	r0, r8
 8007aac:	d9f7      	bls.n	8007a9e <HAL_RCC_OscConfig+0x24a>
 8007aae:	e715      	b.n	80078dc <HAL_RCC_OscConfig+0x88>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007ab0:	f7fe fe5e 	bl	8006770 <HAL_GetTick>
 8007ab4:	1b40      	subs	r0, r0, r5
 8007ab6:	4540      	cmp	r0, r8
 8007ab8:	d9bd      	bls.n	8007a36 <HAL_RCC_OscConfig+0x1e2>
 8007aba:	e70f      	b.n	80078dc <HAL_RCC_OscConfig+0x88>
 8007abc:	40023800 	.word	0x40023800
 8007ac0:	42470000 	.word	0x42470000
 8007ac4:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8007ac8:	4d36      	ldr	r5, [pc, #216]	; (8007ba4 <HAL_RCC_OscConfig+0x350>)
 8007aca:	68ab      	ldr	r3, [r5, #8]
 8007acc:	f003 030c 	and.w	r3, r3, #12
 8007ad0:	2b08      	cmp	r3, #8
 8007ad2:	d03d      	beq.n	8007b50 <HAL_RCC_OscConfig+0x2fc>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8007ad4:	4b34      	ldr	r3, [pc, #208]	; (8007ba8 <HAL_RCC_OscConfig+0x354>)
 8007ad6:	2200      	movs	r2, #0
 8007ad8:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 8007ada:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8007adc:	d12b      	bne.n	8007b36 <HAL_RCC_OscConfig+0x2e2>
        tickstart = HAL_GetTick();
 8007ade:	f7fe fe47 	bl	8006770 <HAL_GetTick>
 8007ae2:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8007ae4:	682b      	ldr	r3, [r5, #0]
 8007ae6:	0199      	lsls	r1, r3, #6
 8007ae8:	d41f      	bmi.n	8007b2a <HAL_RCC_OscConfig+0x2d6>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8007aea:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8007aee:	4313      	orrs	r3, r2
 8007af0:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8007af2:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8007af6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8007af8:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8007afc:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8007afe:	0852      	lsrs	r2, r2, #1
 8007b00:	3a01      	subs	r2, #1
 8007b02:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8007b06:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8007b08:	4b27      	ldr	r3, [pc, #156]	; (8007ba8 <HAL_RCC_OscConfig+0x354>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8007b0a:	4d26      	ldr	r5, [pc, #152]	; (8007ba4 <HAL_RCC_OscConfig+0x350>)
        __HAL_RCC_PLL_ENABLE();
 8007b0c:	2201      	movs	r2, #1
 8007b0e:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 8007b10:	f7fe fe2e 	bl	8006770 <HAL_GetTick>
 8007b14:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8007b16:	682b      	ldr	r3, [r5, #0]
 8007b18:	019a      	lsls	r2, r3, #6
 8007b1a:	f53f aeb1 	bmi.w	8007880 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8007b1e:	f7fe fe27 	bl	8006770 <HAL_GetTick>
 8007b22:	1b00      	subs	r0, r0, r4
 8007b24:	2802      	cmp	r0, #2
 8007b26:	d9f6      	bls.n	8007b16 <HAL_RCC_OscConfig+0x2c2>
 8007b28:	e6d8      	b.n	80078dc <HAL_RCC_OscConfig+0x88>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8007b2a:	f7fe fe21 	bl	8006770 <HAL_GetTick>
 8007b2e:	1b80      	subs	r0, r0, r6
 8007b30:	2802      	cmp	r0, #2
 8007b32:	d9d7      	bls.n	8007ae4 <HAL_RCC_OscConfig+0x290>
 8007b34:	e6d2      	b.n	80078dc <HAL_RCC_OscConfig+0x88>
        tickstart = HAL_GetTick();
 8007b36:	f7fe fe1b 	bl	8006770 <HAL_GetTick>
 8007b3a:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8007b3c:	682b      	ldr	r3, [r5, #0]
 8007b3e:	019b      	lsls	r3, r3, #6
 8007b40:	f57f ae9e 	bpl.w	8007880 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8007b44:	f7fe fe14 	bl	8006770 <HAL_GetTick>
 8007b48:	1b00      	subs	r0, r0, r4
 8007b4a:	2802      	cmp	r0, #2
 8007b4c:	d9f6      	bls.n	8007b3c <HAL_RCC_OscConfig+0x2e8>
 8007b4e:	e6c5      	b.n	80078dc <HAL_RCC_OscConfig+0x88>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8007b50:	2801      	cmp	r0, #1
 8007b52:	f43f aec4 	beq.w	80078de <HAL_RCC_OscConfig+0x8a>
        pll_config = RCC->PLLCFGR;
 8007b56:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8007b58:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8007b5a:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8007b5e:	4291      	cmp	r1, r2
 8007b60:	f47f aea5 	bne.w	80078ae <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8007b64:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8007b66:	f003 023f 	and.w	r2, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8007b6a:	428a      	cmp	r2, r1
 8007b6c:	f47f ae9f 	bne.w	80078ae <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8007b70:	6a61      	ldr	r1, [r4, #36]	; 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8007b72:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 8007b76:	401a      	ands	r2, r3
 8007b78:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 8007b7c:	f47f ae97 	bne.w	80078ae <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8007b80:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8007b82:	0852      	lsrs	r2, r2, #1
 8007b84:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 8007b88:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8007b8a:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 8007b8e:	f47f ae8e 	bne.w	80078ae <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 8007b92:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8007b94:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8007b98:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
 8007b9c:	f43f ae70 	beq.w	8007880 <HAL_RCC_OscConfig+0x2c>
 8007ba0:	e685      	b.n	80078ae <HAL_RCC_OscConfig+0x5a>
 8007ba2:	bf00      	nop
 8007ba4:	40023800 	.word	0x40023800
 8007ba8:	42470000 	.word	0x42470000

08007bac <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007bac:	4913      	ldr	r1, [pc, #76]	; (8007bfc <HAL_RCC_GetSysClockFreq+0x50>)
{
 8007bae:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007bb0:	688b      	ldr	r3, [r1, #8]
 8007bb2:	f003 030c 	and.w	r3, r3, #12
 8007bb6:	2b04      	cmp	r3, #4
 8007bb8:	d01c      	beq.n	8007bf4 <HAL_RCC_GetSysClockFreq+0x48>
 8007bba:	2b08      	cmp	r3, #8
 8007bbc:	d11c      	bne.n	8007bf8 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8007bbe:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8007bc0:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007bc2:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8007bc4:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007bc8:	bf14      	ite	ne
 8007bca:	480d      	ldrne	r0, [pc, #52]	; (8007c00 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007bcc:	480d      	ldreq	r0, [pc, #52]	; (8007c04 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007bce:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8007bd2:	bf18      	it	ne
 8007bd4:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8007bd6:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007bda:	fba1 0100 	umull	r0, r1, r1, r0
 8007bde:	f7f8 fe65 	bl	80008ac <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8007be2:	4b06      	ldr	r3, [pc, #24]	; (8007bfc <HAL_RCC_GetSysClockFreq+0x50>)
 8007be4:	685b      	ldr	r3, [r3, #4]
 8007be6:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8007bea:	3301      	adds	r3, #1
 8007bec:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 8007bee:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8007bf2:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007bf4:	4802      	ldr	r0, [pc, #8]	; (8007c00 <HAL_RCC_GetSysClockFreq+0x54>)
 8007bf6:	e7fc      	b.n	8007bf2 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8007bf8:	4802      	ldr	r0, [pc, #8]	; (8007c04 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8007bfa:	e7fa      	b.n	8007bf2 <HAL_RCC_GetSysClockFreq+0x46>
 8007bfc:	40023800 	.word	0x40023800
 8007c00:	007a1200 	.word	0x007a1200
 8007c04:	00f42400 	.word	0x00f42400

08007c08 <HAL_RCC_ClockConfig>:
{
 8007c08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007c0c:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 8007c0e:	4604      	mov	r4, r0
 8007c10:	b910      	cbnz	r0, 8007c18 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8007c12:	2001      	movs	r0, #1
}
 8007c14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8007c18:	4b43      	ldr	r3, [pc, #268]	; (8007d28 <HAL_RCC_ClockConfig+0x120>)
 8007c1a:	681a      	ldr	r2, [r3, #0]
 8007c1c:	f002 020f 	and.w	r2, r2, #15
 8007c20:	428a      	cmp	r2, r1
 8007c22:	d328      	bcc.n	8007c76 <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8007c24:	6821      	ldr	r1, [r4, #0]
 8007c26:	078f      	lsls	r7, r1, #30
 8007c28:	d42d      	bmi.n	8007c86 <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8007c2a:	07c8      	lsls	r0, r1, #31
 8007c2c:	d440      	bmi.n	8007cb0 <HAL_RCC_ClockConfig+0xa8>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8007c2e:	4b3e      	ldr	r3, [pc, #248]	; (8007d28 <HAL_RCC_ClockConfig+0x120>)
 8007c30:	681a      	ldr	r2, [r3, #0]
 8007c32:	f002 020f 	and.w	r2, r2, #15
 8007c36:	42aa      	cmp	r2, r5
 8007c38:	d865      	bhi.n	8007d06 <HAL_RCC_ClockConfig+0xfe>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8007c3a:	6822      	ldr	r2, [r4, #0]
 8007c3c:	0751      	lsls	r1, r2, #29
 8007c3e:	d46b      	bmi.n	8007d18 <HAL_RCC_ClockConfig+0x110>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8007c40:	0713      	lsls	r3, r2, #28
 8007c42:	d507      	bpl.n	8007c54 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8007c44:	4a39      	ldr	r2, [pc, #228]	; (8007d2c <HAL_RCC_ClockConfig+0x124>)
 8007c46:	6921      	ldr	r1, [r4, #16]
 8007c48:	6893      	ldr	r3, [r2, #8]
 8007c4a:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8007c4e:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8007c52:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8007c54:	f7ff ffaa 	bl	8007bac <HAL_RCC_GetSysClockFreq>
 8007c58:	4b34      	ldr	r3, [pc, #208]	; (8007d2c <HAL_RCC_ClockConfig+0x124>)
 8007c5a:	4a35      	ldr	r2, [pc, #212]	; (8007d30 <HAL_RCC_ClockConfig+0x128>)
 8007c5c:	689b      	ldr	r3, [r3, #8]
 8007c5e:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8007c62:	5cd3      	ldrb	r3, [r2, r3]
 8007c64:	40d8      	lsrs	r0, r3
 8007c66:	4b33      	ldr	r3, [pc, #204]	; (8007d34 <HAL_RCC_ClockConfig+0x12c>)
 8007c68:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 8007c6a:	4b33      	ldr	r3, [pc, #204]	; (8007d38 <HAL_RCC_ClockConfig+0x130>)
 8007c6c:	6818      	ldr	r0, [r3, #0]
 8007c6e:	f7fa fb65 	bl	800233c <HAL_InitTick>
  return HAL_OK;
 8007c72:	2000      	movs	r0, #0
 8007c74:	e7ce      	b.n	8007c14 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8007c76:	b2ca      	uxtb	r2, r1
 8007c78:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8007c7a:	681b      	ldr	r3, [r3, #0]
 8007c7c:	f003 030f 	and.w	r3, r3, #15
 8007c80:	428b      	cmp	r3, r1
 8007c82:	d1c6      	bne.n	8007c12 <HAL_RCC_ClockConfig+0xa>
 8007c84:	e7ce      	b.n	8007c24 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8007c86:	4b29      	ldr	r3, [pc, #164]	; (8007d2c <HAL_RCC_ClockConfig+0x124>)
 8007c88:	f011 0f04 	tst.w	r1, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8007c8c:	bf1e      	ittt	ne
 8007c8e:	689a      	ldrne	r2, [r3, #8]
 8007c90:	f442 52e0 	orrne.w	r2, r2, #7168	; 0x1c00
 8007c94:	609a      	strne	r2, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8007c96:	070e      	lsls	r6, r1, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8007c98:	bf42      	ittt	mi
 8007c9a:	689a      	ldrmi	r2, [r3, #8]
 8007c9c:	f442 4260 	orrmi.w	r2, r2, #57344	; 0xe000
 8007ca0:	609a      	strmi	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8007ca2:	689a      	ldr	r2, [r3, #8]
 8007ca4:	68a0      	ldr	r0, [r4, #8]
 8007ca6:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8007caa:	4302      	orrs	r2, r0
 8007cac:	609a      	str	r2, [r3, #8]
 8007cae:	e7bc      	b.n	8007c2a <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8007cb0:	6862      	ldr	r2, [r4, #4]
 8007cb2:	4b1e      	ldr	r3, [pc, #120]	; (8007d2c <HAL_RCC_ClockConfig+0x124>)
 8007cb4:	2a01      	cmp	r2, #1
 8007cb6:	d11c      	bne.n	8007cf2 <HAL_RCC_ClockConfig+0xea>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8007cb8:	681b      	ldr	r3, [r3, #0]
 8007cba:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007cbe:	d0a8      	beq.n	8007c12 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8007cc0:	4e1a      	ldr	r6, [pc, #104]	; (8007d2c <HAL_RCC_ClockConfig+0x124>)
 8007cc2:	68b3      	ldr	r3, [r6, #8]
 8007cc4:	f023 0303 	bic.w	r3, r3, #3
 8007cc8:	4313      	orrs	r3, r2
 8007cca:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8007ccc:	f7fe fd50 	bl	8006770 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8007cd0:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 8007cd4:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8007cd6:	68b3      	ldr	r3, [r6, #8]
 8007cd8:	6862      	ldr	r2, [r4, #4]
 8007cda:	f003 030c 	and.w	r3, r3, #12
 8007cde:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8007ce2:	d0a4      	beq.n	8007c2e <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8007ce4:	f7fe fd44 	bl	8006770 <HAL_GetTick>
 8007ce8:	1bc0      	subs	r0, r0, r7
 8007cea:	4540      	cmp	r0, r8
 8007cec:	d9f3      	bls.n	8007cd6 <HAL_RCC_ClockConfig+0xce>
        return HAL_TIMEOUT;
 8007cee:	2003      	movs	r0, #3
 8007cf0:	e790      	b.n	8007c14 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8007cf2:	1e91      	subs	r1, r2, #2
 8007cf4:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8007cf6:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8007cf8:	d802      	bhi.n	8007d00 <HAL_RCC_ClockConfig+0xf8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8007cfa:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8007cfe:	e7de      	b.n	8007cbe <HAL_RCC_ClockConfig+0xb6>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007d00:	f013 0f02 	tst.w	r3, #2
 8007d04:	e7db      	b.n	8007cbe <HAL_RCC_ClockConfig+0xb6>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8007d06:	b2ea      	uxtb	r2, r5
 8007d08:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8007d0a:	681b      	ldr	r3, [r3, #0]
 8007d0c:	f003 030f 	and.w	r3, r3, #15
 8007d10:	42ab      	cmp	r3, r5
 8007d12:	f47f af7e 	bne.w	8007c12 <HAL_RCC_ClockConfig+0xa>
 8007d16:	e790      	b.n	8007c3a <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8007d18:	4904      	ldr	r1, [pc, #16]	; (8007d2c <HAL_RCC_ClockConfig+0x124>)
 8007d1a:	68e0      	ldr	r0, [r4, #12]
 8007d1c:	688b      	ldr	r3, [r1, #8]
 8007d1e:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8007d22:	4303      	orrs	r3, r0
 8007d24:	608b      	str	r3, [r1, #8]
 8007d26:	e78b      	b.n	8007c40 <HAL_RCC_ClockConfig+0x38>
 8007d28:	40023c00 	.word	0x40023c00
 8007d2c:	40023800 	.word	0x40023800
 8007d30:	08020374 	.word	0x08020374
 8007d34:	20000074 	.word	0x20000074
 8007d38:	2000007c 	.word	0x2000007c

08007d3c <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8007d3c:	4b04      	ldr	r3, [pc, #16]	; (8007d50 <HAL_RCC_GetPCLK1Freq+0x14>)
 8007d3e:	4a05      	ldr	r2, [pc, #20]	; (8007d54 <HAL_RCC_GetPCLK1Freq+0x18>)
 8007d40:	689b      	ldr	r3, [r3, #8]
 8007d42:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8007d46:	5cd3      	ldrb	r3, [r2, r3]
 8007d48:	4a03      	ldr	r2, [pc, #12]	; (8007d58 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8007d4a:	6810      	ldr	r0, [r2, #0]
}
 8007d4c:	40d8      	lsrs	r0, r3
 8007d4e:	4770      	bx	lr
 8007d50:	40023800 	.word	0x40023800
 8007d54:	08020384 	.word	0x08020384
 8007d58:	20000074 	.word	0x20000074

08007d5c <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8007d5c:	230f      	movs	r3, #15
 8007d5e:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8007d60:	4b0b      	ldr	r3, [pc, #44]	; (8007d90 <HAL_RCC_GetClockConfig+0x34>)
 8007d62:	689a      	ldr	r2, [r3, #8]
 8007d64:	f002 0203 	and.w	r2, r2, #3
 8007d68:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8007d6a:	689a      	ldr	r2, [r3, #8]
 8007d6c:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8007d70:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 8007d72:	689a      	ldr	r2, [r3, #8]
 8007d74:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8007d78:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8007d7a:	689b      	ldr	r3, [r3, #8]
 8007d7c:	08db      	lsrs	r3, r3, #3
 8007d7e:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8007d82:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8007d84:	4b03      	ldr	r3, [pc, #12]	; (8007d94 <HAL_RCC_GetClockConfig+0x38>)
 8007d86:	681b      	ldr	r3, [r3, #0]
 8007d88:	f003 030f 	and.w	r3, r3, #15
 8007d8c:	600b      	str	r3, [r1, #0]
}
 8007d8e:	4770      	bx	lr
 8007d90:	40023800 	.word	0x40023800
 8007d94:	40023c00 	.word	0x40023c00

08007d98 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8007d98:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8007d9a:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 8007d9e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007da0:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8007da2:	f040 808d 	bne.w	8007ec0 <HAL_RCCEx_PeriphCLKConfig+0x128>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8007da6:	6823      	ldr	r3, [r4, #0]
 8007da8:	f013 0f0c 	tst.w	r3, #12
 8007dac:	d045      	beq.n	8007e3a <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8007dae:	4b8b      	ldr	r3, [pc, #556]	; (8007fdc <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8007db0:	4d8b      	ldr	r5, [pc, #556]	; (8007fe0 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_DISABLE();
 8007db2:	2200      	movs	r2, #0
 8007db4:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8007db6:	f7fe fcdb 	bl	8006770 <HAL_GetTick>
 8007dba:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8007dbc:	682b      	ldr	r3, [r5, #0]
 8007dbe:	009f      	lsls	r7, r3, #2
 8007dc0:	f100 80d0 	bmi.w	8007f64 <HAL_RCCEx_PeriphCLKConfig+0x1cc>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8007dc4:	6821      	ldr	r1, [r4, #0]
 8007dc6:	074e      	lsls	r6, r1, #29
 8007dc8:	d515      	bpl.n	8007df6 <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8007dca:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8007dce:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8007dd2:	061b      	lsls	r3, r3, #24
 8007dd4:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 8007dd8:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8007ddc:	4313      	orrs	r3, r2
 8007dde:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8007de2:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 8007de6:	6a22      	ldr	r2, [r4, #32]
 8007de8:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8007dec:	3a01      	subs	r2, #1
 8007dee:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8007df2:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8007df6:	070d      	lsls	r5, r1, #28
 8007df8:	d514      	bpl.n	8007e24 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8007dfa:	4a79      	ldr	r2, [pc, #484]	; (8007fe0 <HAL_RCCEx_PeriphCLKConfig+0x248>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8007dfc:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8007dfe:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8007e02:	6920      	ldr	r0, [r4, #16]
 8007e04:	071b      	lsls	r3, r3, #28
 8007e06:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 8007e0a:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8007e0e:	430b      	orrs	r3, r1
 8007e10:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8007e14:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8007e18:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8007e1a:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8007e1e:	430b      	orrs	r3, r1
 8007e20:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8007e24:	4b6d      	ldr	r3, [pc, #436]	; (8007fdc <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8007e26:	4e6e      	ldr	r6, [pc, #440]	; (8007fe0 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_ENABLE();
 8007e28:	2201      	movs	r2, #1
 8007e2a:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8007e2c:	f7fe fca0 	bl	8006770 <HAL_GetTick>
 8007e30:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8007e32:	6833      	ldr	r3, [r6, #0]
 8007e34:	0098      	lsls	r0, r3, #2
 8007e36:	f140 809c 	bpl.w	8007f72 <HAL_RCCEx_PeriphCLKConfig+0x1da>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8007e3a:	6823      	ldr	r3, [r4, #0]
 8007e3c:	069b      	lsls	r3, r3, #26
 8007e3e:	d534      	bpl.n	8007eaa <HAL_RCCEx_PeriphCLKConfig+0x112>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8007e40:	2300      	movs	r3, #0
 8007e42:	9301      	str	r3, [sp, #4]
 8007e44:	4b66      	ldr	r3, [pc, #408]	; (8007fe0 <HAL_RCCEx_PeriphCLKConfig+0x248>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 8007e46:	4d67      	ldr	r5, [pc, #412]	; (8007fe4 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8007e48:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8007e4a:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8007e4e:	641a      	str	r2, [r3, #64]	; 0x40
 8007e50:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007e52:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007e56:	9301      	str	r3, [sp, #4]
 8007e58:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8007e5a:	682b      	ldr	r3, [r5, #0]
 8007e5c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007e60:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 8007e62:	f7fe fc85 	bl	8006770 <HAL_GetTick>
 8007e66:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 8007e68:	682b      	ldr	r3, [r5, #0]
 8007e6a:	05d9      	lsls	r1, r3, #23
 8007e6c:	f140 8088 	bpl.w	8007f80 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8007e70:	4d5b      	ldr	r5, [pc, #364]	; (8007fe0 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8007e72:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8007e74:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8007e76:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8007e7a:	f040 8088 	bne.w	8007f8e <HAL_RCCEx_PeriphCLKConfig+0x1f6>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8007e7e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8007e80:	f403 7240 	and.w	r2, r3, #768	; 0x300
 8007e84:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8007e88:	4a55      	ldr	r2, [pc, #340]	; (8007fe0 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8007e8a:	f040 80a3 	bne.w	8007fd4 <HAL_RCCEx_PeriphCLKConfig+0x23c>
 8007e8e:	6891      	ldr	r1, [r2, #8]
 8007e90:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 8007e94:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8007e98:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 8007e9c:	4301      	orrs	r1, r0
 8007e9e:	6091      	str	r1, [r2, #8]
 8007ea0:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8007ea2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8007ea6:	430b      	orrs	r3, r1
 8007ea8:	6713      	str	r3, [r2, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8007eaa:	6820      	ldr	r0, [r4, #0]
 8007eac:	f010 0010 	ands.w	r0, r0, #16
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8007eb0:	bf1f      	itttt	ne
 8007eb2:	4b4d      	ldrne	r3, [pc, #308]	; (8007fe8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 8007eb4:	f894 202c 	ldrbne.w	r2, [r4, #44]	; 0x2c
 8007eb8:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 8007ebc:	2000      	movne	r0, #0
 8007ebe:	e04f      	b.n	8007f60 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    __HAL_RCC_PLLI2S_DISABLE();
 8007ec0:	4b46      	ldr	r3, [pc, #280]	; (8007fdc <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8007ec2:	4e47      	ldr	r6, [pc, #284]	; (8007fe0 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_DISABLE();
 8007ec4:	2200      	movs	r2, #0
 8007ec6:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 8007ec8:	f7fe fc52 	bl	8006770 <HAL_GetTick>
 8007ecc:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8007ece:	6833      	ldr	r3, [r6, #0]
 8007ed0:	011f      	lsls	r7, r3, #4
 8007ed2:	d43f      	bmi.n	8007f54 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8007ed4:	6821      	ldr	r1, [r4, #0]
 8007ed6:	07cd      	lsls	r5, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 8007ed8:	bf41      	itttt	mi
 8007eda:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8007ede:	071b      	lslmi	r3, r3, #28
 8007ee0:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 8007ee4:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8007ee8:	0788      	lsls	r0, r1, #30
 8007eea:	d515      	bpl.n	8007f18 <HAL_RCCEx_PeriphCLKConfig+0x180>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8007eec:	4a3c      	ldr	r2, [pc, #240]	; (8007fe0 <HAL_RCCEx_PeriphCLKConfig+0x248>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8007eee:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8007ef0:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8007ef4:	6865      	ldr	r5, [r4, #4]
 8007ef6:	061b      	lsls	r3, r3, #24
 8007ef8:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 8007efc:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 8007f00:	4303      	orrs	r3, r0
 8007f02:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8007f06:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 8007f0a:	69e3      	ldr	r3, [r4, #28]
 8007f0c:	f020 001f 	bic.w	r0, r0, #31
 8007f10:	3b01      	subs	r3, #1
 8007f12:	4303      	orrs	r3, r0
 8007f14:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8007f18:	0649      	lsls	r1, r1, #25
 8007f1a:	d50a      	bpl.n	8007f32 <HAL_RCCEx_PeriphCLKConfig+0x19a>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8007f1c:	68e3      	ldr	r3, [r4, #12]
 8007f1e:	6862      	ldr	r2, [r4, #4]
 8007f20:	061b      	lsls	r3, r3, #24
 8007f22:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8007f26:	68a2      	ldr	r2, [r4, #8]
 8007f28:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8007f2c:	4a2c      	ldr	r2, [pc, #176]	; (8007fe0 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8007f2e:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8007f32:	4b2a      	ldr	r3, [pc, #168]	; (8007fdc <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8007f34:	4e2a      	ldr	r6, [pc, #168]	; (8007fe0 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_ENABLE();
 8007f36:	2201      	movs	r2, #1
 8007f38:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 8007f3a:	f7fe fc19 	bl	8006770 <HAL_GetTick>
 8007f3e:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8007f40:	6833      	ldr	r3, [r6, #0]
 8007f42:	011a      	lsls	r2, r3, #4
 8007f44:	f53f af2f 	bmi.w	8007da6 <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8007f48:	f7fe fc12 	bl	8006770 <HAL_GetTick>
 8007f4c:	1b40      	subs	r0, r0, r5
 8007f4e:	2802      	cmp	r0, #2
 8007f50:	d9f6      	bls.n	8007f40 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
 8007f52:	e004      	b.n	8007f5e <HAL_RCCEx_PeriphCLKConfig+0x1c6>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8007f54:	f7fe fc0c 	bl	8006770 <HAL_GetTick>
 8007f58:	1b40      	subs	r0, r0, r5
 8007f5a:	2802      	cmp	r0, #2
 8007f5c:	d9b7      	bls.n	8007ece <HAL_RCCEx_PeriphCLKConfig+0x136>
        return HAL_TIMEOUT;
 8007f5e:	2003      	movs	r0, #3
}
 8007f60:	b003      	add	sp, #12
 8007f62:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8007f64:	f7fe fc04 	bl	8006770 <HAL_GetTick>
 8007f68:	1b80      	subs	r0, r0, r6
 8007f6a:	2802      	cmp	r0, #2
 8007f6c:	f67f af26 	bls.w	8007dbc <HAL_RCCEx_PeriphCLKConfig+0x24>
 8007f70:	e7f5      	b.n	8007f5e <HAL_RCCEx_PeriphCLKConfig+0x1c6>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8007f72:	f7fe fbfd 	bl	8006770 <HAL_GetTick>
 8007f76:	1b40      	subs	r0, r0, r5
 8007f78:	2802      	cmp	r0, #2
 8007f7a:	f67f af5a 	bls.w	8007e32 <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8007f7e:	e7ee      	b.n	8007f5e <HAL_RCCEx_PeriphCLKConfig+0x1c6>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8007f80:	f7fe fbf6 	bl	8006770 <HAL_GetTick>
 8007f84:	1b80      	subs	r0, r0, r6
 8007f86:	2802      	cmp	r0, #2
 8007f88:	f67f af6e 	bls.w	8007e68 <HAL_RCCEx_PeriphCLKConfig+0xd0>
 8007f8c:	e7e7      	b.n	8007f5e <HAL_RCCEx_PeriphCLKConfig+0x1c6>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8007f8e:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8007f92:	4293      	cmp	r3, r2
 8007f94:	f43f af73 	beq.w	8007e7e <HAL_RCCEx_PeriphCLKConfig+0xe6>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8007f98:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8007f9a:	4a10      	ldr	r2, [pc, #64]	; (8007fdc <HAL_RCCEx_PeriphCLKConfig+0x244>)
 8007f9c:	2101      	movs	r1, #1
 8007f9e:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8007fa2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8007fa6:	2100      	movs	r1, #0
 8007fa8:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 8007fac:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8007fae:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007fb0:	07da      	lsls	r2, r3, #31
 8007fb2:	f57f af64 	bpl.w	8007e7e <HAL_RCCEx_PeriphCLKConfig+0xe6>
        tickstart = HAL_GetTick();
 8007fb6:	f7fe fbdb 	bl	8006770 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007fba:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 8007fbe:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8007fc0:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007fc2:	079b      	lsls	r3, r3, #30
 8007fc4:	f53f af5b 	bmi.w	8007e7e <HAL_RCCEx_PeriphCLKConfig+0xe6>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007fc8:	f7fe fbd2 	bl	8006770 <HAL_GetTick>
 8007fcc:	1b80      	subs	r0, r0, r6
 8007fce:	42b8      	cmp	r0, r7
 8007fd0:	d9f6      	bls.n	8007fc0 <HAL_RCCEx_PeriphCLKConfig+0x228>
 8007fd2:	e7c4      	b.n	8007f5e <HAL_RCCEx_PeriphCLKConfig+0x1c6>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8007fd4:	6891      	ldr	r1, [r2, #8]
 8007fd6:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8007fda:	e760      	b.n	8007e9e <HAL_RCCEx_PeriphCLKConfig+0x106>
 8007fdc:	42470000 	.word	0x42470000
 8007fe0:	40023800 	.word	0x40023800
 8007fe4:	40007000 	.word	0x40007000
 8007fe8:	42471000 	.word	0x42471000

08007fec <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 8007fec:	b538      	push	{r3, r4, r5, lr}
 8007fee:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 8007ff0:	4604      	mov	r4, r0
 8007ff2:	b1c8      	cbz	r0, 8008028 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 8007ff4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8007ff8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007ffc:	b91b      	cbnz	r3, 8008006 <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8007ffe:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8008002:	f7fa f92f 	bl	8002264 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8008006:	2302      	movs	r3, #2
 8008008:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800800c:	1d21      	adds	r1, r4, #4
 800800e:	6820      	ldr	r0, [r4, #0]
 8008010:	f000 fcf8 	bl	8008a04 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 8008014:	6862      	ldr	r2, [r4, #4]
 8008016:	6820      	ldr	r0, [r4, #0]
 8008018:	4629      	mov	r1, r5
 800801a:	f000 fd2b 	bl	8008a74 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800801e:	2301      	movs	r3, #1
 8008020:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 8008024:	2000      	movs	r0, #0
}
 8008026:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8008028:	2001      	movs	r0, #1
 800802a:	e7fc      	b.n	8008026 <HAL_SDRAM_Init+0x3a>

0800802c <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800802c:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800802e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 8008032:	2b02      	cmp	r3, #2
{
 8008034:	4605      	mov	r5, r0
 8008036:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8008038:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800803a:	d012      	beq.n	8008062 <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800803c:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 8008040:	2c01      	cmp	r4, #1
 8008042:	d10f      	bne.n	8008064 <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8008044:	2302      	movs	r3, #2
 8008046:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800804a:	6828      	ldr	r0, [r5, #0]
 800804c:	f000 fd48 	bl	8008ae0 <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8008050:	6833      	ldr	r3, [r6, #0]
 8008052:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8008054:	bf06      	itte	eq
 8008056:	2305      	moveq	r3, #5
 8008058:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 800805c:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8008060:	2000      	movs	r0, #0
}
 8008062:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 8008064:	2001      	movs	r0, #1
 8008066:	e7fc      	b.n	8008062 <HAL_SDRAM_SendCommand+0x36>

08008068 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8008068:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800806a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800806e:	2b02      	cmp	r3, #2
{
 8008070:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8008072:	b2d8      	uxtb	r0, r3
 8008074:	d00d      	beq.n	8008092 <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 8008076:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800807a:	2b01      	cmp	r3, #1
 800807c:	b2dd      	uxtb	r5, r3
 800807e:	d109      	bne.n	8008094 <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8008080:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8008082:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8008084:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8008088:	f000 fd50 	bl	8008b2c <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 800808c:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8008090:	2000      	movs	r0, #0
}
 8008092:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8008094:	2001      	movs	r0, #1
 8008096:	e7fc      	b.n	8008092 <HAL_SDRAM_ProgramRefreshRate+0x2a>

08008098 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 8008098:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800809c:	461c      	mov	r4, r3
 800809e:	4616      	mov	r6, r2
 80080a0:	460f      	mov	r7, r1
 80080a2:	4605      	mov	r5, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 80080a4:	f7fe fb64 	bl	8006770 <HAL_GetTick>
 80080a8:	4434      	add	r4, r6
 80080aa:	1a24      	subs	r4, r4, r0
  tmp_tickstart = HAL_GetTick();
 80080ac:	f7fe fb60 	bl	8006770 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 80080b0:	4b23      	ldr	r3, [pc, #140]	; (8008140 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa8>)
 80080b2:	681b      	ldr	r3, [r3, #0]
 80080b4:	f3c3 33cb 	ubfx	r3, r3, #15, #12
  tmp_tickstart = HAL_GetTick();
 80080b8:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 80080ba:	4363      	muls	r3, r4

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 80080bc:	682a      	ldr	r2, [r5, #0]
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
      {
        tmp_timeout = 0U;
      }
      count--;
 80080be:	9301      	str	r3, [sp, #4]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 80080c0:	6893      	ldr	r3, [r2, #8]
 80080c2:	ea37 0303 	bics.w	r3, r7, r3
 80080c6:	d001      	beq.n	80080cc <SPI_WaitFlagStateUntilTimeout.constprop.0+0x34>
    }
  }

  return HAL_OK;
 80080c8:	2000      	movs	r0, #0
 80080ca:	e02e      	b.n	800812a <SPI_WaitFlagStateUntilTimeout.constprop.0+0x92>
    if (Timeout != HAL_MAX_DELAY)
 80080cc:	1c73      	adds	r3, r6, #1
 80080ce:	d0f7      	beq.n	80080c0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x28>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 80080d0:	f7fe fb4e 	bl	8006770 <HAL_GetTick>
 80080d4:	eba0 0008 	sub.w	r0, r0, r8
 80080d8:	42a0      	cmp	r0, r4
 80080da:	d329      	bcc.n	8008130 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x98>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 80080dc:	682b      	ldr	r3, [r5, #0]
 80080de:	685a      	ldr	r2, [r3, #4]
 80080e0:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 80080e4:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80080e6:	686a      	ldr	r2, [r5, #4]
 80080e8:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 80080ec:	d10a      	bne.n	8008104 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x6c>
 80080ee:	68aa      	ldr	r2, [r5, #8]
 80080f0:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 80080f4:	d002      	beq.n	80080fc <SPI_WaitFlagStateUntilTimeout.constprop.0+0x64>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 80080f6:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 80080fa:	d103      	bne.n	8008104 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x6c>
          __HAL_SPI_DISABLE(hspi);
 80080fc:	681a      	ldr	r2, [r3, #0]
 80080fe:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8008102:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8008104:	6aaa      	ldr	r2, [r5, #40]	; 0x28
 8008106:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800810a:	d107      	bne.n	800811c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x84>
          SPI_RESET_CRC(hspi);
 800810c:	681a      	ldr	r2, [r3, #0]
 800810e:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8008112:	601a      	str	r2, [r3, #0]
 8008114:	681a      	ldr	r2, [r3, #0]
 8008116:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800811a:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800811c:	2301      	movs	r3, #1
 800811e:	f885 3051 	strb.w	r3, [r5, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 8008122:	2300      	movs	r3, #0
 8008124:	f885 3050 	strb.w	r3, [r5, #80]	; 0x50
        return HAL_TIMEOUT;
 8008128:	2003      	movs	r0, #3
}
 800812a:	b002      	add	sp, #8
 800812c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if (count == 0U)
 8008130:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 8008132:	2b00      	cmp	r3, #0
      count--;
 8008134:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 8008136:	bf08      	it	eq
 8008138:	2400      	moveq	r4, #0
      count--;
 800813a:	3b01      	subs	r3, #1
 800813c:	e7be      	b.n	80080bc <SPI_WaitFlagStateUntilTimeout.constprop.0+0x24>
 800813e:	bf00      	nop
 8008140:	20000074 	.word	0x20000074

08008144 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 8008144:	b538      	push	{r3, r4, r5, lr}
 8008146:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8008148:	6842      	ldr	r2, [r0, #4]
 800814a:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800814e:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8008150:	d11f      	bne.n	8008192 <SPI_EndRxTransaction+0x4e>
 8008152:	6882      	ldr	r2, [r0, #8]
 8008154:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8008158:	d002      	beq.n	8008160 <SPI_EndRxTransaction+0x1c>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800815a:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800815e:	d107      	bne.n	8008170 <SPI_EndRxTransaction+0x2c>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 8008160:	6825      	ldr	r5, [r4, #0]
 8008162:	6828      	ldr	r0, [r5, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8008164:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    __HAL_SPI_DISABLE(hspi);
 8008168:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 800816c:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 800816e:	d007      	beq.n	8008180 <SPI_EndRxTransaction+0x3c>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8008170:	460a      	mov	r2, r1
 8008172:	2180      	movs	r1, #128	; 0x80
 8008174:	4620      	mov	r0, r4
 8008176:	f7ff ff8f 	bl	8008098 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800817a:	b920      	cbnz	r0, 8008186 <SPI_EndRxTransaction+0x42>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800817c:	2000      	movs	r0, #0
}
 800817e:	bd38      	pop	{r3, r4, r5, pc}
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8008180:	460a      	mov	r2, r1
 8008182:	2101      	movs	r1, #1
 8008184:	e7f6      	b.n	8008174 <SPI_EndRxTransaction+0x30>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8008186:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8008188:	f043 0320 	orr.w	r3, r3, #32
 800818c:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 800818e:	2003      	movs	r0, #3
 8008190:	e7f5      	b.n	800817e <SPI_EndRxTransaction+0x3a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8008192:	460a      	mov	r2, r1
 8008194:	2101      	movs	r1, #1
 8008196:	e7ee      	b.n	8008176 <SPI_EndRxTransaction+0x32>

08008198 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8008198:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800819a:	4613      	mov	r3, r2
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800819c:	4a12      	ldr	r2, [pc, #72]	; (80081e8 <SPI_EndRxTxTransaction+0x50>)
 800819e:	6815      	ldr	r5, [r2, #0]
 80081a0:	4a12      	ldr	r2, [pc, #72]	; (80081ec <SPI_EndRxTxTransaction+0x54>)
 80081a2:	fbb5 f5f2 	udiv	r5, r5, r2
 80081a6:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80081aa:	4355      	muls	r5, r2
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 80081ac:	6842      	ldr	r2, [r0, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 80081ae:	9501      	str	r5, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 80081b0:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 80081b4:	4604      	mov	r4, r0
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 80081b6:	d10b      	bne.n	80081d0 <SPI_EndRxTxTransaction+0x38>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 80081b8:	460a      	mov	r2, r1
 80081ba:	2180      	movs	r1, #128	; 0x80
 80081bc:	f7ff ff6c 	bl	8008098 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 80081c0:	b178      	cbz	r0, 80081e2 <SPI_EndRxTxTransaction+0x4a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 80081c2:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80081c4:	f043 0320 	orr.w	r3, r3, #32
 80081c8:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 80081ca:	2003      	movs	r0, #3
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 80081cc:	b003      	add	sp, #12
 80081ce:	bd30      	pop	{r4, r5, pc}
      if (count == 0U)
 80081d0:	9b01      	ldr	r3, [sp, #4]
 80081d2:	b133      	cbz	r3, 80081e2 <SPI_EndRxTxTransaction+0x4a>
      count--;
 80081d4:	9b01      	ldr	r3, [sp, #4]
 80081d6:	3b01      	subs	r3, #1
 80081d8:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 80081da:	6823      	ldr	r3, [r4, #0]
 80081dc:	689b      	ldr	r3, [r3, #8]
 80081de:	061b      	lsls	r3, r3, #24
 80081e0:	d4f6      	bmi.n	80081d0 <SPI_EndRxTxTransaction+0x38>
  return HAL_OK;
 80081e2:	2000      	movs	r0, #0
 80081e4:	e7f2      	b.n	80081cc <SPI_EndRxTxTransaction+0x34>
 80081e6:	bf00      	nop
 80081e8:	20000074 	.word	0x20000074
 80081ec:	016e3600 	.word	0x016e3600

080081f0 <HAL_SPI_Init>:
{
 80081f0:	b510      	push	{r4, lr}
  if (hspi == NULL)
 80081f2:	4604      	mov	r4, r0
 80081f4:	2800      	cmp	r0, #0
 80081f6:	d055      	beq.n	80082a4 <HAL_SPI_Init+0xb4>
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 80081f8:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80081fa:	2b00      	cmp	r3, #0
 80081fc:	d14e      	bne.n	800829c <HAL_SPI_Init+0xac>
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 80081fe:	6842      	ldr	r2, [r0, #4]
 8008200:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8008204:	d000      	beq.n	8008208 <HAL_SPI_Init+0x18>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8008206:	61c3      	str	r3, [r0, #28]
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8008208:	2300      	movs	r3, #0
 800820a:	62a3      	str	r3, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800820c:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8008210:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8008214:	b923      	cbnz	r3, 8008220 <HAL_SPI_Init+0x30>
    hspi->Lock = HAL_UNLOCKED;
 8008216:	f884 2050 	strb.w	r2, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800821a:	4620      	mov	r0, r4
 800821c:	f7f9 ffec 	bl	80021f8 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 8008220:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8008222:	68a0      	ldr	r0, [r4, #8]
 8008224:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 8008226:	2302      	movs	r3, #2
 8008228:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800822c:	680b      	ldr	r3, [r1, #0]
 800822e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8008232:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8008234:	6863      	ldr	r3, [r4, #4]
 8008236:	f400 4004 	and.w	r0, r0, #33792	; 0x8400
 800823a:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800823e:	4303      	orrs	r3, r0
 8008240:	68e0      	ldr	r0, [r4, #12]
 8008242:	f400 6000 	and.w	r0, r0, #2048	; 0x800
 8008246:	4303      	orrs	r3, r0
 8008248:	6920      	ldr	r0, [r4, #16]
 800824a:	f000 0002 	and.w	r0, r0, #2
 800824e:	4303      	orrs	r3, r0
 8008250:	6960      	ldr	r0, [r4, #20]
 8008252:	f000 0001 	and.w	r0, r0, #1
 8008256:	4303      	orrs	r3, r0
 8008258:	f402 7000 	and.w	r0, r2, #512	; 0x200
 800825c:	4303      	orrs	r3, r0
 800825e:	69e0      	ldr	r0, [r4, #28]
 8008260:	f000 0038 	and.w	r0, r0, #56	; 0x38
 8008264:	4303      	orrs	r3, r0
 8008266:	6a20      	ldr	r0, [r4, #32]
 8008268:	f000 0080 	and.w	r0, r0, #128	; 0x80
 800826c:	4303      	orrs	r3, r0
 800826e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8008270:	f400 5000 	and.w	r0, r0, #8192	; 0x2000
 8008274:	4303      	orrs	r3, r0
 8008276:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 8008278:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800827a:	0c12      	lsrs	r2, r2, #16
 800827c:	f003 0310 	and.w	r3, r3, #16
 8008280:	f002 0204 	and.w	r2, r2, #4
 8008284:	431a      	orrs	r2, r3
 8008286:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8008288:	69cb      	ldr	r3, [r1, #28]
 800828a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800828e:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8008290:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 8008292:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8008294:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8008296:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
}
 800829a:	bd10      	pop	{r4, pc}
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800829c:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800829e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80082a2:	e7b1      	b.n	8008208 <HAL_SPI_Init+0x18>
    return HAL_ERROR;
 80082a4:	2001      	movs	r0, #1
 80082a6:	e7f8      	b.n	800829a <HAL_SPI_Init+0xaa>

080082a8 <HAL_SPI_Transmit>:
{
 80082a8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80082ac:	461f      	mov	r7, r3
  __HAL_LOCK(hspi);
 80082ae:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 80082b2:	2b01      	cmp	r3, #1
{
 80082b4:	4604      	mov	r4, r0
 80082b6:	460d      	mov	r5, r1
 80082b8:	4690      	mov	r8, r2
  __HAL_LOCK(hspi);
 80082ba:	f000 80a0 	beq.w	80083fe <HAL_SPI_Transmit+0x156>
 80082be:	2301      	movs	r3, #1
 80082c0:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 80082c4:	f7fe fa54 	bl	8006770 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 80082c8:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 80082cc:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 80082ce:	4681      	mov	r9, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 80082d0:	b2d8      	uxtb	r0, r3
 80082d2:	f040 8092 	bne.w	80083fa <HAL_SPI_Transmit+0x152>
  if ((pData == NULL) || (Size == 0U))
 80082d6:	2d00      	cmp	r5, #0
 80082d8:	d061      	beq.n	800839e <HAL_SPI_Transmit+0xf6>
 80082da:	f1b8 0f00 	cmp.w	r8, #0
 80082de:	d05e      	beq.n	800839e <HAL_SPI_Transmit+0xf6>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 80082e0:	2303      	movs	r3, #3
 80082e2:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80082e6:	2300      	movs	r3, #0
 80082e8:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->RxISR       = NULL;
 80082ea:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->TxXferCount = Size;
 80082ee:	f8a4 8036 	strh.w	r8, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 80082f2:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 80082f4:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 80082f6:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80082f8:	68a3      	ldr	r3, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 80082fa:	6826      	ldr	r6, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 80082fc:	6325      	str	r5, [r4, #48]	; 0x30
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80082fe:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
  hspi->TxXferSize  = Size;
 8008302:	f8a4 8034 	strh.w	r8, [r4, #52]	; 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8008306:	d107      	bne.n	8008318 <HAL_SPI_Transmit+0x70>
    __HAL_SPI_DISABLE(hspi);
 8008308:	6833      	ldr	r3, [r6, #0]
 800830a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800830e:	6033      	str	r3, [r6, #0]
    SPI_1LINE_TX(hspi);
 8008310:	6833      	ldr	r3, [r6, #0]
 8008312:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8008316:	6033      	str	r3, [r6, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8008318:	6833      	ldr	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800831a:	68e2      	ldr	r2, [r4, #12]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800831c:	065b      	lsls	r3, r3, #25
    __HAL_SPI_ENABLE(hspi);
 800831e:	bf5e      	ittt	pl
 8008320:	6833      	ldrpl	r3, [r6, #0]
 8008322:	f043 0340 	orrpl.w	r3, r3, #64	; 0x40
 8008326:	6033      	strpl	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8008328:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800832c:	6863      	ldr	r3, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800832e:	d13f      	bne.n	80083b0 <HAL_SPI_Transmit+0x108>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8008330:	b113      	cbz	r3, 8008338 <HAL_SPI_Transmit+0x90>
 8008332:	f1b8 0f01 	cmp.w	r8, #1
 8008336:	d107      	bne.n	8008348 <HAL_SPI_Transmit+0xa0>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8008338:	f835 3b02 	ldrh.w	r3, [r5], #2
 800833c:	60f3      	str	r3, [r6, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800833e:	6325      	str	r5, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8008340:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008342:	3b01      	subs	r3, #1
 8008344:	b29b      	uxth	r3, r3
 8008346:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8008348:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800834a:	b29b      	uxth	r3, r3
 800834c:	b9a3      	cbnz	r3, 8008378 <HAL_SPI_Transmit+0xd0>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800834e:	464a      	mov	r2, r9
 8008350:	4639      	mov	r1, r7
 8008352:	4620      	mov	r0, r4
 8008354:	f7ff ff20 	bl	8008198 <SPI_EndRxTxTransaction>
 8008358:	2800      	cmp	r0, #0
 800835a:	d14b      	bne.n	80083f4 <HAL_SPI_Transmit+0x14c>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800835c:	68a3      	ldr	r3, [r4, #8]
 800835e:	b933      	cbnz	r3, 800836e <HAL_SPI_Transmit+0xc6>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8008360:	9301      	str	r3, [sp, #4]
 8008362:	6823      	ldr	r3, [r4, #0]
 8008364:	68da      	ldr	r2, [r3, #12]
 8008366:	9201      	str	r2, [sp, #4]
 8008368:	689b      	ldr	r3, [r3, #8]
 800836a:	9301      	str	r3, [sp, #4]
 800836c:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800836e:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8008370:	3800      	subs	r0, #0
 8008372:	bf18      	it	ne
 8008374:	2001      	movne	r0, #1
error:
 8008376:	e012      	b.n	800839e <HAL_SPI_Transmit+0xf6>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8008378:	6822      	ldr	r2, [r4, #0]
 800837a:	6893      	ldr	r3, [r2, #8]
 800837c:	0798      	lsls	r0, r3, #30
 800837e:	d505      	bpl.n	800838c <HAL_SPI_Transmit+0xe4>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8008380:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008382:	f833 1b02 	ldrh.w	r1, [r3], #2
 8008386:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8008388:	6323      	str	r3, [r4, #48]	; 0x30
 800838a:	e7d9      	b.n	8008340 <HAL_SPI_Transmit+0x98>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800838c:	f7fe f9f0 	bl	8006770 <HAL_GetTick>
 8008390:	eba0 0009 	sub.w	r0, r0, r9
 8008394:	42b8      	cmp	r0, r7
 8008396:	d3d7      	bcc.n	8008348 <HAL_SPI_Transmit+0xa0>
 8008398:	1c79      	adds	r1, r7, #1
 800839a:	d0d5      	beq.n	8008348 <HAL_SPI_Transmit+0xa0>
          errorcode = HAL_TIMEOUT;
 800839c:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 800839e:	2301      	movs	r3, #1
 80083a0:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 80083a4:	2300      	movs	r3, #0
 80083a6:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 80083aa:	b003      	add	sp, #12
 80083ac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80083b0:	b113      	cbz	r3, 80083b8 <HAL_SPI_Transmit+0x110>
 80083b2:	f1b8 0f01 	cmp.w	r8, #1
 80083b6:	d108      	bne.n	80083ca <HAL_SPI_Transmit+0x122>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80083b8:	782b      	ldrb	r3, [r5, #0]
 80083ba:	7333      	strb	r3, [r6, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 80083bc:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80083be:	3301      	adds	r3, #1
 80083c0:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 80083c2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80083c4:	3b01      	subs	r3, #1
 80083c6:	b29b      	uxth	r3, r3
 80083c8:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 80083ca:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80083cc:	b29b      	uxth	r3, r3
 80083ce:	2b00      	cmp	r3, #0
 80083d0:	d0bd      	beq.n	800834e <HAL_SPI_Transmit+0xa6>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 80083d2:	6823      	ldr	r3, [r4, #0]
 80083d4:	689a      	ldr	r2, [r3, #8]
 80083d6:	0792      	lsls	r2, r2, #30
 80083d8:	d503      	bpl.n	80083e2 <HAL_SPI_Transmit+0x13a>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80083da:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80083dc:	7812      	ldrb	r2, [r2, #0]
 80083de:	731a      	strb	r2, [r3, #12]
 80083e0:	e7ec      	b.n	80083bc <HAL_SPI_Transmit+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80083e2:	f7fe f9c5 	bl	8006770 <HAL_GetTick>
 80083e6:	eba0 0009 	sub.w	r0, r0, r9
 80083ea:	42b8      	cmp	r0, r7
 80083ec:	d3ed      	bcc.n	80083ca <HAL_SPI_Transmit+0x122>
 80083ee:	1c7b      	adds	r3, r7, #1
 80083f0:	d0eb      	beq.n	80083ca <HAL_SPI_Transmit+0x122>
 80083f2:	e7d3      	b.n	800839c <HAL_SPI_Transmit+0xf4>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80083f4:	2320      	movs	r3, #32
 80083f6:	6563      	str	r3, [r4, #84]	; 0x54
 80083f8:	e7b0      	b.n	800835c <HAL_SPI_Transmit+0xb4>
    errorcode = HAL_BUSY;
 80083fa:	2002      	movs	r0, #2
 80083fc:	e7cf      	b.n	800839e <HAL_SPI_Transmit+0xf6>
  __HAL_LOCK(hspi);
 80083fe:	2002      	movs	r0, #2
 8008400:	e7d3      	b.n	80083aa <HAL_SPI_Transmit+0x102>

08008402 <HAL_SPI_TransmitReceive>:
{
 8008402:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8008406:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8008408:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
{
 800840c:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  __HAL_LOCK(hspi);
 8008410:	2b01      	cmp	r3, #1
{
 8008412:	4604      	mov	r4, r0
 8008414:	460d      	mov	r5, r1
 8008416:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 8008418:	f000 80e0 	beq.w	80085dc <HAL_SPI_TransmitReceive+0x1da>
 800841c:	2301      	movs	r3, #1
 800841e:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8008422:	f7fe f9a5 	bl	8006770 <HAL_GetTick>
  tmp_state           = hspi->State;
 8008426:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800842a:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800842c:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800842e:	4607      	mov	r7, r0
  tmp_state           = hspi->State;
 8008430:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8008432:	d00a      	beq.n	800844a <HAL_SPI_TransmitReceive+0x48>
 8008434:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8008438:	f040 80ce 	bne.w	80085d8 <HAL_SPI_TransmitReceive+0x1d6>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800843c:	68a3      	ldr	r3, [r4, #8]
 800843e:	2b00      	cmp	r3, #0
 8008440:	f040 80ca 	bne.w	80085d8 <HAL_SPI_TransmitReceive+0x1d6>
 8008444:	2904      	cmp	r1, #4
 8008446:	f040 80c7 	bne.w	80085d8 <HAL_SPI_TransmitReceive+0x1d6>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800844a:	2d00      	cmp	r5, #0
 800844c:	d03f      	beq.n	80084ce <HAL_SPI_TransmitReceive+0xcc>
 800844e:	f1b9 0f00 	cmp.w	r9, #0
 8008452:	d03c      	beq.n	80084ce <HAL_SPI_TransmitReceive+0xcc>
 8008454:	2e00      	cmp	r6, #0
 8008456:	d03a      	beq.n	80084ce <HAL_SPI_TransmitReceive+0xcc>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8008458:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800845c:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8008460:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8008462:	bf1c      	itt	ne
 8008464:	2305      	movne	r3, #5
 8008466:	f884 3051 	strbne.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800846a:	2300      	movs	r3, #0
 800846c:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800846e:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8008472:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8008474:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 8008476:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8008478:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 800847a:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800847c:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 800847e:	bf58      	it	pl
 8008480:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 8008482:	6325      	str	r5, [r4, #48]	; 0x30
    __HAL_SPI_ENABLE(hspi);
 8008484:	bf58      	it	pl
 8008486:	f041 0140 	orrpl.w	r1, r1, #64	; 0x40
  hspi->TxXferSize  = Size;
 800848a:	86a6      	strh	r6, [r4, #52]	; 0x34
    __HAL_SPI_ENABLE(hspi);
 800848c:	bf58      	it	pl
 800848e:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8008490:	68e1      	ldr	r1, [r4, #12]
 8008492:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 8008496:	d151      	bne.n	800853c <HAL_SPI_TransmitReceive+0x13a>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8008498:	b10a      	cbz	r2, 800849e <HAL_SPI_TransmitReceive+0x9c>
 800849a:	2e01      	cmp	r6, #1
 800849c:	d107      	bne.n	80084ae <HAL_SPI_TransmitReceive+0xac>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800849e:	f835 2b02 	ldrh.w	r2, [r5], #2
 80084a2:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 80084a4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 80084a6:	6325      	str	r5, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 80084a8:	3b01      	subs	r3, #1
 80084aa:	b29b      	uxth	r3, r3
 80084ac:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 80084ae:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80084b0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80084b2:	b29b      	uxth	r3, r3
 80084b4:	b96b      	cbnz	r3, 80084d2 <HAL_SPI_TransmitReceive+0xd0>
 80084b6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80084b8:	b29b      	uxth	r3, r3
 80084ba:	b953      	cbnz	r3, 80084d2 <HAL_SPI_TransmitReceive+0xd0>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80084bc:	463a      	mov	r2, r7
 80084be:	4641      	mov	r1, r8
 80084c0:	4620      	mov	r0, r4
 80084c2:	f7ff fe69 	bl	8008198 <SPI_EndRxTxTransaction>
 80084c6:	2800      	cmp	r0, #0
 80084c8:	d07b      	beq.n	80085c2 <HAL_SPI_TransmitReceive+0x1c0>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80084ca:	2320      	movs	r3, #32
 80084cc:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 80084ce:	2001      	movs	r0, #1
 80084d0:	e02b      	b.n	800852a <HAL_SPI_TransmitReceive+0x128>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 80084d2:	6821      	ldr	r1, [r4, #0]
 80084d4:	688b      	ldr	r3, [r1, #8]
 80084d6:	079a      	lsls	r2, r3, #30
 80084d8:	d50d      	bpl.n	80084f6 <HAL_SPI_TransmitReceive+0xf4>
 80084da:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80084dc:	b29b      	uxth	r3, r3
 80084de:	b153      	cbz	r3, 80084f6 <HAL_SPI_TransmitReceive+0xf4>
 80084e0:	b14d      	cbz	r5, 80084f6 <HAL_SPI_TransmitReceive+0xf4>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80084e2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80084e4:	f833 2b02 	ldrh.w	r2, [r3], #2
 80084e8:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 80084ea:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 80084ec:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80084ee:	3b01      	subs	r3, #1
 80084f0:	b29b      	uxth	r3, r3
 80084f2:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 80084f4:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 80084f6:	688a      	ldr	r2, [r1, #8]
 80084f8:	f012 0201 	ands.w	r2, r2, #1
 80084fc:	d00c      	beq.n	8008518 <HAL_SPI_TransmitReceive+0x116>
 80084fe:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008500:	b29b      	uxth	r3, r3
 8008502:	b14b      	cbz	r3, 8008518 <HAL_SPI_TransmitReceive+0x116>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8008504:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8008506:	68c9      	ldr	r1, [r1, #12]
 8008508:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800850c:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800850e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008510:	3b01      	subs	r3, #1
 8008512:	b29b      	uxth	r3, r3
 8008514:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8008516:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8008518:	f7fe f92a 	bl	8006770 <HAL_GetTick>
 800851c:	1bc0      	subs	r0, r0, r7
 800851e:	4540      	cmp	r0, r8
 8008520:	d3c6      	bcc.n	80084b0 <HAL_SPI_TransmitReceive+0xae>
 8008522:	f1b8 3fff 	cmp.w	r8, #4294967295
 8008526:	d0c3      	beq.n	80084b0 <HAL_SPI_TransmitReceive+0xae>
        errorcode = HAL_TIMEOUT;
 8008528:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 800852a:	2301      	movs	r3, #1
 800852c:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8008530:	2300      	movs	r3, #0
 8008532:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8008536:	b003      	add	sp, #12
 8008538:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800853c:	b10a      	cbz	r2, 8008542 <HAL_SPI_TransmitReceive+0x140>
 800853e:	2e01      	cmp	r6, #1
 8008540:	d108      	bne.n	8008554 <HAL_SPI_TransmitReceive+0x152>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8008542:	782a      	ldrb	r2, [r5, #0]
 8008544:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8008546:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008548:	3301      	adds	r3, #1
 800854a:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800854c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800854e:	3b01      	subs	r3, #1
 8008550:	b29b      	uxth	r3, r3
 8008552:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8008554:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8008556:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008558:	b29b      	uxth	r3, r3
 800855a:	b91b      	cbnz	r3, 8008564 <HAL_SPI_TransmitReceive+0x162>
 800855c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800855e:	b29b      	uxth	r3, r3
 8008560:	2b00      	cmp	r3, #0
 8008562:	d0ab      	beq.n	80084bc <HAL_SPI_TransmitReceive+0xba>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8008564:	6822      	ldr	r2, [r4, #0]
 8008566:	6893      	ldr	r3, [r2, #8]
 8008568:	079b      	lsls	r3, r3, #30
 800856a:	d50e      	bpl.n	800858a <HAL_SPI_TransmitReceive+0x188>
 800856c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800856e:	b29b      	uxth	r3, r3
 8008570:	b15b      	cbz	r3, 800858a <HAL_SPI_TransmitReceive+0x188>
 8008572:	b155      	cbz	r5, 800858a <HAL_SPI_TransmitReceive+0x188>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8008574:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008576:	781b      	ldrb	r3, [r3, #0]
 8008578:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 800857a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800857c:	3301      	adds	r3, #1
 800857e:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8008580:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008582:	3b01      	subs	r3, #1
 8008584:	b29b      	uxth	r3, r3
 8008586:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8008588:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800858a:	6822      	ldr	r2, [r4, #0]
 800858c:	6891      	ldr	r1, [r2, #8]
 800858e:	f011 0101 	ands.w	r1, r1, #1
 8008592:	d00d      	beq.n	80085b0 <HAL_SPI_TransmitReceive+0x1ae>
 8008594:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008596:	b29b      	uxth	r3, r3
 8008598:	b153      	cbz	r3, 80085b0 <HAL_SPI_TransmitReceive+0x1ae>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800859a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800859c:	68d2      	ldr	r2, [r2, #12]
 800859e:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 80085a0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80085a2:	3301      	adds	r3, #1
 80085a4:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 80085a6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80085a8:	3b01      	subs	r3, #1
 80085aa:	b29b      	uxth	r3, r3
 80085ac:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 80085ae:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 80085b0:	f7fe f8de 	bl	8006770 <HAL_GetTick>
 80085b4:	1bc0      	subs	r0, r0, r7
 80085b6:	4540      	cmp	r0, r8
 80085b8:	d3cd      	bcc.n	8008556 <HAL_SPI_TransmitReceive+0x154>
 80085ba:	f1b8 3fff 	cmp.w	r8, #4294967295
 80085be:	d0ca      	beq.n	8008556 <HAL_SPI_TransmitReceive+0x154>
 80085c0:	e7b2      	b.n	8008528 <HAL_SPI_TransmitReceive+0x126>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 80085c2:	68a3      	ldr	r3, [r4, #8]
 80085c4:	2b00      	cmp	r3, #0
 80085c6:	d1b0      	bne.n	800852a <HAL_SPI_TransmitReceive+0x128>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 80085c8:	6823      	ldr	r3, [r4, #0]
 80085ca:	9001      	str	r0, [sp, #4]
 80085cc:	68da      	ldr	r2, [r3, #12]
 80085ce:	9201      	str	r2, [sp, #4]
 80085d0:	689b      	ldr	r3, [r3, #8]
 80085d2:	9301      	str	r3, [sp, #4]
 80085d4:	9b01      	ldr	r3, [sp, #4]
 80085d6:	e7a8      	b.n	800852a <HAL_SPI_TransmitReceive+0x128>
    errorcode = HAL_BUSY;
 80085d8:	2002      	movs	r0, #2
 80085da:	e7a6      	b.n	800852a <HAL_SPI_TransmitReceive+0x128>
  __HAL_LOCK(hspi);
 80085dc:	2002      	movs	r0, #2
 80085de:	e7aa      	b.n	8008536 <HAL_SPI_TransmitReceive+0x134>

080085e0 <HAL_SPI_Receive>:
{
 80085e0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80085e4:	461d      	mov	r5, r3
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 80085e6:	6843      	ldr	r3, [r0, #4]
 80085e8:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
{
 80085ec:	4604      	mov	r4, r0
 80085ee:	4689      	mov	r9, r1
 80085f0:	4617      	mov	r7, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 80085f2:	d10c      	bne.n	800860e <HAL_SPI_Receive+0x2e>
 80085f4:	6883      	ldr	r3, [r0, #8]
 80085f6:	b953      	cbnz	r3, 800860e <HAL_SPI_Receive+0x2e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 80085f8:	2304      	movs	r3, #4
 80085fa:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 80085fe:	4613      	mov	r3, r2
 8008600:	9500      	str	r5, [sp, #0]
 8008602:	460a      	mov	r2, r1
 8008604:	f7ff fefd 	bl	8008402 <HAL_SPI_TransmitReceive>
}
 8008608:	b003      	add	sp, #12
 800860a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(hspi);
 800860e:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8008612:	2b01      	cmp	r3, #1
 8008614:	d07f      	beq.n	8008716 <HAL_SPI_Receive+0x136>
 8008616:	2301      	movs	r3, #1
 8008618:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800861c:	f7fe f8a8 	bl	8006770 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8008620:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8008624:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8008626:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8008628:	b2d8      	uxtb	r0, r3
 800862a:	d172      	bne.n	8008712 <HAL_SPI_Receive+0x132>
  if ((pData == NULL) || (Size == 0U))
 800862c:	f1b9 0f00 	cmp.w	r9, #0
 8008630:	d05c      	beq.n	80086ec <HAL_SPI_Receive+0x10c>
 8008632:	2f00      	cmp	r7, #0
 8008634:	d05a      	beq.n	80086ec <HAL_SPI_Receive+0x10c>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8008636:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 8008638:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800863c:	2600      	movs	r6, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800863e:	2304      	movs	r3, #4
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8008640:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8008644:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 8008648:	e9c4 6610 	strd	r6, r6, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800864c:	6566      	str	r6, [r4, #84]	; 0x54
    __HAL_SPI_DISABLE(hspi);
 800864e:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8008650:	87e7      	strh	r7, [r4, #62]	; 0x3e
  hspi->RxXferSize  = Size;
 8008652:	87a7      	strh	r7, [r4, #60]	; 0x3c
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 8008654:	6326      	str	r6, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 8008656:	86a6      	strh	r6, [r4, #52]	; 0x34
  hspi->TxXferCount = 0U;
 8008658:	86e6      	strh	r6, [r4, #54]	; 0x36
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800865a:	d107      	bne.n	800866c <HAL_SPI_Receive+0x8c>
    __HAL_SPI_DISABLE(hspi);
 800865c:	681a      	ldr	r2, [r3, #0]
 800865e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8008662:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 8008664:	681a      	ldr	r2, [r3, #0]
 8008666:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800866a:	601a      	str	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800866c:	681a      	ldr	r2, [r3, #0]
 800866e:	0656      	lsls	r6, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8008670:	bf5e      	ittt	pl
 8008672:	681a      	ldrpl	r2, [r3, #0]
 8008674:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8008678:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800867a:	68e3      	ldr	r3, [r4, #12]
 800867c:	b1f3      	cbz	r3, 80086bc <HAL_SPI_Receive+0xdc>
    while (hspi->RxXferCount > 0U)
 800867e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008680:	b29b      	uxth	r3, r3
 8008682:	b1fb      	cbz	r3, 80086c4 <HAL_SPI_Receive+0xe4>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8008684:	6823      	ldr	r3, [r4, #0]
 8008686:	689a      	ldr	r2, [r3, #8]
 8008688:	07d2      	lsls	r2, r2, #31
 800868a:	d536      	bpl.n	80086fa <HAL_SPI_Receive+0x11a>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800868c:	68da      	ldr	r2, [r3, #12]
 800868e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8008690:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8008694:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8008696:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008698:	3b01      	subs	r3, #1
 800869a:	b29b      	uxth	r3, r3
 800869c:	87e3      	strh	r3, [r4, #62]	; 0x3e
 800869e:	e7ee      	b.n	800867e <HAL_SPI_Receive+0x9e>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 80086a0:	6823      	ldr	r3, [r4, #0]
 80086a2:	689a      	ldr	r2, [r3, #8]
 80086a4:	07d0      	lsls	r0, r2, #31
 80086a6:	d518      	bpl.n	80086da <HAL_SPI_Receive+0xfa>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 80086a8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80086aa:	7b1b      	ldrb	r3, [r3, #12]
 80086ac:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 80086ae:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80086b0:	3301      	adds	r3, #1
 80086b2:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 80086b4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80086b6:	3b01      	subs	r3, #1
 80086b8:	b29b      	uxth	r3, r3
 80086ba:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 80086bc:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80086be:	b29b      	uxth	r3, r3
 80086c0:	2b00      	cmp	r3, #0
 80086c2:	d1ed      	bne.n	80086a0 <HAL_SPI_Receive+0xc0>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80086c4:	4642      	mov	r2, r8
 80086c6:	4629      	mov	r1, r5
 80086c8:	4620      	mov	r0, r4
 80086ca:	f7ff fd3b 	bl	8008144 <SPI_EndRxTransaction>
 80086ce:	b9e8      	cbnz	r0, 800870c <HAL_SPI_Receive+0x12c>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80086d0:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 80086d2:	3800      	subs	r0, #0
 80086d4:	bf18      	it	ne
 80086d6:	2001      	movne	r0, #1
error :
 80086d8:	e008      	b.n	80086ec <HAL_SPI_Receive+0x10c>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80086da:	f7fe f849 	bl	8006770 <HAL_GetTick>
 80086de:	eba0 0008 	sub.w	r0, r0, r8
 80086e2:	42a8      	cmp	r0, r5
 80086e4:	d3ea      	bcc.n	80086bc <HAL_SPI_Receive+0xdc>
 80086e6:	1c69      	adds	r1, r5, #1
 80086e8:	d0e8      	beq.n	80086bc <HAL_SPI_Receive+0xdc>
          errorcode = HAL_TIMEOUT;
 80086ea:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 80086ec:	2301      	movs	r3, #1
 80086ee:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 80086f2:	2300      	movs	r3, #0
 80086f4:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  return errorcode;
 80086f8:	e786      	b.n	8008608 <HAL_SPI_Receive+0x28>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80086fa:	f7fe f839 	bl	8006770 <HAL_GetTick>
 80086fe:	eba0 0008 	sub.w	r0, r0, r8
 8008702:	42a8      	cmp	r0, r5
 8008704:	d3bb      	bcc.n	800867e <HAL_SPI_Receive+0x9e>
 8008706:	1c6b      	adds	r3, r5, #1
 8008708:	d0b9      	beq.n	800867e <HAL_SPI_Receive+0x9e>
 800870a:	e7ee      	b.n	80086ea <HAL_SPI_Receive+0x10a>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800870c:	2320      	movs	r3, #32
 800870e:	6563      	str	r3, [r4, #84]	; 0x54
 8008710:	e7de      	b.n	80086d0 <HAL_SPI_Receive+0xf0>
    errorcode = HAL_BUSY;
 8008712:	2002      	movs	r0, #2
 8008714:	e7ea      	b.n	80086ec <HAL_SPI_Receive+0x10c>
  __HAL_LOCK(hspi);
 8008716:	2002      	movs	r0, #2
 8008718:	e776      	b.n	8008608 <HAL_SPI_Receive+0x28>

0800871a <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 800871a:	4770      	bx	lr

0800871c <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 800871c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8008720:	2b01      	cmp	r3, #1
 8008722:	d130      	bne.n	8008786 <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8008724:	2302      	movs	r3, #2
 8008726:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800872a:	6803      	ldr	r3, [r0, #0]
 800872c:	68da      	ldr	r2, [r3, #12]
 800872e:	f042 0201 	orr.w	r2, r2, #1
 8008732:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8008734:	4a15      	ldr	r2, [pc, #84]	; (800878c <HAL_TIM_Base_Start_IT+0x70>)
 8008736:	4293      	cmp	r3, r2
 8008738:	d01a      	beq.n	8008770 <HAL_TIM_Base_Start_IT+0x54>
 800873a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800873e:	d017      	beq.n	8008770 <HAL_TIM_Base_Start_IT+0x54>
 8008740:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8008744:	4293      	cmp	r3, r2
 8008746:	d013      	beq.n	8008770 <HAL_TIM_Base_Start_IT+0x54>
 8008748:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800874c:	4293      	cmp	r3, r2
 800874e:	d00f      	beq.n	8008770 <HAL_TIM_Base_Start_IT+0x54>
 8008750:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008754:	4293      	cmp	r3, r2
 8008756:	d00b      	beq.n	8008770 <HAL_TIM_Base_Start_IT+0x54>
 8008758:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800875c:	4293      	cmp	r3, r2
 800875e:	d007      	beq.n	8008770 <HAL_TIM_Base_Start_IT+0x54>
 8008760:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 8008764:	4293      	cmp	r3, r2
 8008766:	d003      	beq.n	8008770 <HAL_TIM_Base_Start_IT+0x54>
 8008768:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800876c:	4293      	cmp	r3, r2
 800876e:	d104      	bne.n	800877a <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8008770:	689a      	ldr	r2, [r3, #8]
 8008772:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8008776:	2a06      	cmp	r2, #6
 8008778:	d003      	beq.n	8008782 <HAL_TIM_Base_Start_IT+0x66>
      __HAL_TIM_ENABLE(htim);
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 800877a:	681a      	ldr	r2, [r3, #0]
 800877c:	f042 0201 	orr.w	r2, r2, #1
 8008780:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8008782:	2000      	movs	r0, #0
}
 8008784:	4770      	bx	lr
    return HAL_ERROR;
 8008786:	2001      	movs	r0, #1
 8008788:	4770      	bx	lr
 800878a:	bf00      	nop
 800878c:	40010000 	.word	0x40010000

08008790 <HAL_TIM_OC_DelayElapsedCallback>:
 8008790:	4770      	bx	lr

08008792 <HAL_TIM_IC_CaptureCallback>:
 8008792:	4770      	bx	lr

08008794 <HAL_TIM_PWM_PulseFinishedCallback>:
 8008794:	4770      	bx	lr

08008796 <HAL_TIM_TriggerCallback>:
 8008796:	4770      	bx	lr

08008798 <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8008798:	6803      	ldr	r3, [r0, #0]
 800879a:	691a      	ldr	r2, [r3, #16]
 800879c:	0791      	lsls	r1, r2, #30
{
 800879e:	b510      	push	{r4, lr}
 80087a0:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 80087a2:	d50e      	bpl.n	80087c2 <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 80087a4:	68da      	ldr	r2, [r3, #12]
 80087a6:	0792      	lsls	r2, r2, #30
 80087a8:	d50b      	bpl.n	80087c2 <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 80087aa:	f06f 0202 	mvn.w	r2, #2
 80087ae:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 80087b0:	2201      	movs	r2, #1
 80087b2:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 80087b4:	699b      	ldr	r3, [r3, #24]
 80087b6:	079b      	lsls	r3, r3, #30
 80087b8:	d077      	beq.n	80088aa <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 80087ba:	f7ff ffea 	bl	8008792 <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80087be:	2300      	movs	r3, #0
 80087c0:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 80087c2:	6823      	ldr	r3, [r4, #0]
 80087c4:	691a      	ldr	r2, [r3, #16]
 80087c6:	0750      	lsls	r0, r2, #29
 80087c8:	d510      	bpl.n	80087ec <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 80087ca:	68da      	ldr	r2, [r3, #12]
 80087cc:	0751      	lsls	r1, r2, #29
 80087ce:	d50d      	bpl.n	80087ec <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 80087d0:	f06f 0204 	mvn.w	r2, #4
 80087d4:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80087d6:	2202      	movs	r2, #2
 80087d8:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80087da:	699b      	ldr	r3, [r3, #24]
 80087dc:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80087e0:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80087e2:	d068      	beq.n	80088b6 <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 80087e4:	f7ff ffd5 	bl	8008792 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80087e8:	2300      	movs	r3, #0
 80087ea:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 80087ec:	6823      	ldr	r3, [r4, #0]
 80087ee:	691a      	ldr	r2, [r3, #16]
 80087f0:	0712      	lsls	r2, r2, #28
 80087f2:	d50f      	bpl.n	8008814 <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 80087f4:	68da      	ldr	r2, [r3, #12]
 80087f6:	0710      	lsls	r0, r2, #28
 80087f8:	d50c      	bpl.n	8008814 <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80087fa:	f06f 0208 	mvn.w	r2, #8
 80087fe:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8008800:	2204      	movs	r2, #4
 8008802:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8008804:	69db      	ldr	r3, [r3, #28]
 8008806:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8008808:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800880a:	d05a      	beq.n	80088c2 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 800880c:	f7ff ffc1 	bl	8008792 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8008810:	2300      	movs	r3, #0
 8008812:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8008814:	6823      	ldr	r3, [r4, #0]
 8008816:	691a      	ldr	r2, [r3, #16]
 8008818:	06d2      	lsls	r2, r2, #27
 800881a:	d510      	bpl.n	800883e <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800881c:	68da      	ldr	r2, [r3, #12]
 800881e:	06d0      	lsls	r0, r2, #27
 8008820:	d50d      	bpl.n	800883e <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8008822:	f06f 0210 	mvn.w	r2, #16
 8008826:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8008828:	2208      	movs	r2, #8
 800882a:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800882c:	69db      	ldr	r3, [r3, #28]
 800882e:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8008832:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8008834:	d04b      	beq.n	80088ce <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 8008836:	f7ff ffac 	bl	8008792 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800883a:	2300      	movs	r3, #0
 800883c:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800883e:	6823      	ldr	r3, [r4, #0]
 8008840:	691a      	ldr	r2, [r3, #16]
 8008842:	07d1      	lsls	r1, r2, #31
 8008844:	d508      	bpl.n	8008858 <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8008846:	68da      	ldr	r2, [r3, #12]
 8008848:	07d2      	lsls	r2, r2, #31
 800884a:	d505      	bpl.n	8008858 <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800884c:	f06f 0201 	mvn.w	r2, #1
 8008850:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8008852:	4620      	mov	r0, r4
 8008854:	f7f9 fb32 	bl	8001ebc <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8008858:	6823      	ldr	r3, [r4, #0]
 800885a:	691a      	ldr	r2, [r3, #16]
 800885c:	0610      	lsls	r0, r2, #24
 800885e:	d508      	bpl.n	8008872 <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8008860:	68da      	ldr	r2, [r3, #12]
 8008862:	0611      	lsls	r1, r2, #24
 8008864:	d505      	bpl.n	8008872 <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8008866:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800886a:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 800886c:	4620      	mov	r0, r4
 800886e:	f000 f8c8 	bl	8008a02 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8008872:	6823      	ldr	r3, [r4, #0]
 8008874:	691a      	ldr	r2, [r3, #16]
 8008876:	0652      	lsls	r2, r2, #25
 8008878:	d508      	bpl.n	800888c <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800887a:	68da      	ldr	r2, [r3, #12]
 800887c:	0650      	lsls	r0, r2, #25
 800887e:	d505      	bpl.n	800888c <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8008880:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8008884:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8008886:	4620      	mov	r0, r4
 8008888:	f7ff ff85 	bl	8008796 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800888c:	6823      	ldr	r3, [r4, #0]
 800888e:	691a      	ldr	r2, [r3, #16]
 8008890:	0691      	lsls	r1, r2, #26
 8008892:	d522      	bpl.n	80088da <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8008894:	68da      	ldr	r2, [r3, #12]
 8008896:	0692      	lsls	r2, r2, #26
 8008898:	d51f      	bpl.n	80088da <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800889a:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 800889e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 80088a0:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 80088a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 80088a6:	f000 b8ab 	b.w	8008a00 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 80088aa:	f7ff ff71 	bl	8008790 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 80088ae:	4620      	mov	r0, r4
 80088b0:	f7ff ff70 	bl	8008794 <HAL_TIM_PWM_PulseFinishedCallback>
 80088b4:	e783      	b.n	80087be <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80088b6:	f7ff ff6b 	bl	8008790 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80088ba:	4620      	mov	r0, r4
 80088bc:	f7ff ff6a 	bl	8008794 <HAL_TIM_PWM_PulseFinishedCallback>
 80088c0:	e792      	b.n	80087e8 <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80088c2:	f7ff ff65 	bl	8008790 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80088c6:	4620      	mov	r0, r4
 80088c8:	f7ff ff64 	bl	8008794 <HAL_TIM_PWM_PulseFinishedCallback>
 80088cc:	e7a0      	b.n	8008810 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80088ce:	f7ff ff5f 	bl	8008790 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80088d2:	4620      	mov	r0, r4
 80088d4:	f7ff ff5e 	bl	8008794 <HAL_TIM_PWM_PulseFinishedCallback>
 80088d8:	e7af      	b.n	800883a <HAL_TIM_IRQHandler+0xa2>
}
 80088da:	bd10      	pop	{r4, pc}

080088dc <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80088dc:	4a30      	ldr	r2, [pc, #192]	; (80089a0 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 80088de:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80088e0:	4290      	cmp	r0, r2
 80088e2:	d012      	beq.n	800890a <TIM_Base_SetConfig+0x2e>
 80088e4:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80088e8:	d00f      	beq.n	800890a <TIM_Base_SetConfig+0x2e>
 80088ea:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80088ee:	4290      	cmp	r0, r2
 80088f0:	d00b      	beq.n	800890a <TIM_Base_SetConfig+0x2e>
 80088f2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80088f6:	4290      	cmp	r0, r2
 80088f8:	d007      	beq.n	800890a <TIM_Base_SetConfig+0x2e>
 80088fa:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80088fe:	4290      	cmp	r0, r2
 8008900:	d003      	beq.n	800890a <TIM_Base_SetConfig+0x2e>
 8008902:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8008906:	4290      	cmp	r0, r2
 8008908:	d119      	bne.n	800893e <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 800890a:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800890c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8008910:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8008912:	4a23      	ldr	r2, [pc, #140]	; (80089a0 <TIM_Base_SetConfig+0xc4>)
 8008914:	4290      	cmp	r0, r2
 8008916:	d029      	beq.n	800896c <TIM_Base_SetConfig+0x90>
 8008918:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800891c:	d026      	beq.n	800896c <TIM_Base_SetConfig+0x90>
 800891e:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8008922:	4290      	cmp	r0, r2
 8008924:	d022      	beq.n	800896c <TIM_Base_SetConfig+0x90>
 8008926:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800892a:	4290      	cmp	r0, r2
 800892c:	d01e      	beq.n	800896c <TIM_Base_SetConfig+0x90>
 800892e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008932:	4290      	cmp	r0, r2
 8008934:	d01a      	beq.n	800896c <TIM_Base_SetConfig+0x90>
 8008936:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800893a:	4290      	cmp	r0, r2
 800893c:	d016      	beq.n	800896c <TIM_Base_SetConfig+0x90>
 800893e:	4a19      	ldr	r2, [pc, #100]	; (80089a4 <TIM_Base_SetConfig+0xc8>)
 8008940:	4290      	cmp	r0, r2
 8008942:	d013      	beq.n	800896c <TIM_Base_SetConfig+0x90>
 8008944:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008948:	4290      	cmp	r0, r2
 800894a:	d00f      	beq.n	800896c <TIM_Base_SetConfig+0x90>
 800894c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008950:	4290      	cmp	r0, r2
 8008952:	d00b      	beq.n	800896c <TIM_Base_SetConfig+0x90>
 8008954:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 8008958:	4290      	cmp	r0, r2
 800895a:	d007      	beq.n	800896c <TIM_Base_SetConfig+0x90>
 800895c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008960:	4290      	cmp	r0, r2
 8008962:	d003      	beq.n	800896c <TIM_Base_SetConfig+0x90>
 8008964:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008968:	4290      	cmp	r0, r2
 800896a:	d103      	bne.n	8008974 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800896c:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 800896e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8008972:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8008974:	694a      	ldr	r2, [r1, #20]
 8008976:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800897a:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 800897c:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800897e:	688b      	ldr	r3, [r1, #8]
 8008980:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8008982:	680b      	ldr	r3, [r1, #0]
 8008984:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8008986:	4b06      	ldr	r3, [pc, #24]	; (80089a0 <TIM_Base_SetConfig+0xc4>)
 8008988:	4298      	cmp	r0, r3
 800898a:	d003      	beq.n	8008994 <TIM_Base_SetConfig+0xb8>
 800898c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8008990:	4298      	cmp	r0, r3
 8008992:	d101      	bne.n	8008998 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8008994:	690b      	ldr	r3, [r1, #16]
 8008996:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8008998:	2301      	movs	r3, #1
 800899a:	6143      	str	r3, [r0, #20]
}
 800899c:	4770      	bx	lr
 800899e:	bf00      	nop
 80089a0:	40010000 	.word	0x40010000
 80089a4:	40014000 	.word	0x40014000

080089a8 <HAL_TIM_Base_Init>:
{
 80089a8:	b510      	push	{r4, lr}
  if (htim == NULL)
 80089aa:	4604      	mov	r4, r0
 80089ac:	b330      	cbz	r0, 80089fc <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 80089ae:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80089b2:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80089b6:	b91b      	cbnz	r3, 80089c0 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 80089b8:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 80089bc:	f7ff fead 	bl	800871a <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 80089c0:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80089c2:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 80089c4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80089c8:	1d21      	adds	r1, r4, #4
 80089ca:	f7ff ff87 	bl	80088dc <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 80089ce:	2301      	movs	r3, #1
 80089d0:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  return HAL_OK;
 80089d4:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80089d6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 80089da:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 80089de:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 80089e2:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80089e6:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80089ea:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80089ee:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 80089f2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 80089f6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 80089fa:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80089fc:	2001      	movs	r0, #1
 80089fe:	e7fc      	b.n	80089fa <HAL_TIM_Base_Init+0x52>

08008a00 <HAL_TIMEx_CommutCallback>:
 8008a00:	4770      	bx	lr

08008a02 <HAL_TIMEx_BreakCallback>:
 8008a02:	4770      	bx	lr

08008a04 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8008a04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8008a08:	e9d1 3807 	ldrd	r3, r8, [r1, #28]
 8008a0c:	e9d1 2c01 	ldrd	r2, ip, [r1, #4]
 8008a10:	e9d1 7603 	ldrd	r7, r6, [r1, #12]
 8008a14:	e9d1 5405 	ldrd	r5, r4, [r1, #20]
 8008a18:	f8d1 e024 	ldr.w	lr, [r1, #36]	; 0x24
  if (Init->SDBank == FMC_SDRAM_BANK1)
 8008a1c:	6809      	ldr	r1, [r1, #0]
 8008a1e:	ea43 0308 	orr.w	r3, r3, r8
 8008a22:	b991      	cbnz	r1, 8008a4a <FMC_SDRAM_Init+0x46>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8008a24:	ea43 030e 	orr.w	r3, r3, lr
 8008a28:	4313      	orrs	r3, r2
 8008a2a:	ea43 030c 	orr.w	r3, r3, ip
 8008a2e:	6801      	ldr	r1, [r0, #0]
 8008a30:	433b      	orrs	r3, r7
 8008a32:	4333      	orrs	r3, r6
 8008a34:	432b      	orrs	r3, r5
 8008a36:	f421 41ff 	bic.w	r1, r1, #32640	; 0x7f80
 8008a3a:	4323      	orrs	r3, r4
 8008a3c:	f021 017f 	bic.w	r1, r1, #127	; 0x7f
 8008a40:	430b      	orrs	r3, r1
 8008a42:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 8008a44:	2000      	movs	r0, #0
 8008a46:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8008a4a:	6801      	ldr	r1, [r0, #0]
 8008a4c:	ea43 030e 	orr.w	r3, r3, lr
 8008a50:	f421 41f8 	bic.w	r1, r1, #31744	; 0x7c00
 8008a54:	430b      	orrs	r3, r1
 8008a56:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 8008a58:	ea42 030c 	orr.w	r3, r2, ip
 8008a5c:	6841      	ldr	r1, [r0, #4]
 8008a5e:	433b      	orrs	r3, r7
 8008a60:	4333      	orrs	r3, r6
 8008a62:	432b      	orrs	r3, r5
 8008a64:	f421 42ff 	bic.w	r2, r1, #32640	; 0x7f80
 8008a68:	4323      	orrs	r3, r4
 8008a6a:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
 8008a6e:	4313      	orrs	r3, r2
 8008a70:	6043      	str	r3, [r0, #4]
 8008a72:	e7e7      	b.n	8008a44 <FMC_SDRAM_Init+0x40>

08008a74 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8008a74:	68cb      	ldr	r3, [r1, #12]
 8008a76:	f103 3cff 	add.w	ip, r3, #4294967295
 8008a7a:	694b      	ldr	r3, [r1, #20]
{
 8008a7c:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8008a7e:	680f      	ldr	r7, [r1, #0]
 8008a80:	684c      	ldr	r4, [r1, #4]
 8008a82:	688e      	ldr	r6, [r1, #8]
 8008a84:	690d      	ldr	r5, [r1, #16]
 8008a86:	6989      	ldr	r1, [r1, #24]
 8008a88:	3b01      	subs	r3, #1
 8008a8a:	051b      	lsls	r3, r3, #20
 8008a8c:	3c01      	subs	r4, #1
 8008a8e:	3e01      	subs	r6, #1
 8008a90:	3d01      	subs	r5, #1
 8008a92:	3901      	subs	r1, #1
 8008a94:	3f01      	subs	r7, #1
 8008a96:	0124      	lsls	r4, r4, #4
 8008a98:	0236      	lsls	r6, r6, #8
 8008a9a:	042d      	lsls	r5, r5, #16
 8008a9c:	0609      	lsls	r1, r1, #24
 8008a9e:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 8008aa2:	b95a      	cbnz	r2, 8008abc <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8008aa4:	433b      	orrs	r3, r7
 8008aa6:	4323      	orrs	r3, r4
 8008aa8:	6882      	ldr	r2, [r0, #8]
 8008aaa:	4333      	orrs	r3, r6
 8008aac:	432b      	orrs	r3, r5
 8008aae:	430b      	orrs	r3, r1
 8008ab0:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 8008ab4:	4313      	orrs	r3, r2
 8008ab6:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 8008ab8:	2000      	movs	r0, #0
 8008aba:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8008abc:	6882      	ldr	r2, [r0, #8]
 8008abe:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8008ac2:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 8008ac6:	431a      	orrs	r2, r3
 8008ac8:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 8008aca:	ea44 0306 	orr.w	r3, r4, r6
 8008ace:	68c2      	ldr	r2, [r0, #12]
 8008ad0:	433b      	orrs	r3, r7
 8008ad2:	432b      	orrs	r3, r5
 8008ad4:	430b      	orrs	r3, r1
 8008ad6:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 8008ada:	4313      	orrs	r3, r2
 8008adc:	60c3      	str	r3, [r0, #12]
 8008ade:	e7eb      	b.n	8008ab8 <FMC_SDRAM_Timing_Init+0x44>

08008ae0 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8008ae0:	b570      	push	{r4, r5, r6, lr}
 8008ae2:	4604      	mov	r4, r0
 8008ae4:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 8008ae6:	6902      	ldr	r2, [r0, #16]
 8008ae8:	e9d1 3000 	ldrd	r3, r0, [r1]
 8008aec:	4303      	orrs	r3, r0
 8008aee:	68c8      	ldr	r0, [r1, #12]
 8008af0:	0d92      	lsrs	r2, r2, #22
 8008af2:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 8008af6:	0592      	lsls	r2, r2, #22
 8008af8:	4313      	orrs	r3, r2
 8008afa:	688a      	ldr	r2, [r1, #8]
 8008afc:	3a01      	subs	r2, #1
 8008afe:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8008b02:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 8008b04:	f7fd fe34 	bl	8006770 <HAL_GetTick>
 8008b08:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8008b0a:	69a3      	ldr	r3, [r4, #24]
 8008b0c:	f013 0320 	ands.w	r3, r3, #32
 8008b10:	d101      	bne.n	8008b16 <FMC_SDRAM_SendCommand+0x36>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 8008b12:	4618      	mov	r0, r3
 8008b14:	e003      	b.n	8008b1e <FMC_SDRAM_SendCommand+0x3e>
    if (Timeout != HAL_MAX_DELAY)
 8008b16:	1c6b      	adds	r3, r5, #1
 8008b18:	d0f7      	beq.n	8008b0a <FMC_SDRAM_SendCommand+0x2a>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8008b1a:	b90d      	cbnz	r5, 8008b20 <FMC_SDRAM_SendCommand+0x40>
        return HAL_TIMEOUT;
 8008b1c:	2003      	movs	r0, #3
}
 8008b1e:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8008b20:	f7fd fe26 	bl	8006770 <HAL_GetTick>
 8008b24:	1b80      	subs	r0, r0, r6
 8008b26:	42a8      	cmp	r0, r5
 8008b28:	d9ef      	bls.n	8008b0a <FMC_SDRAM_SendCommand+0x2a>
 8008b2a:	e7f7      	b.n	8008b1c <FMC_SDRAM_SendCommand+0x3c>

08008b2c <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 8008b2c:	6943      	ldr	r3, [r0, #20]
 8008b2e:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8008b32:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 8008b36:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 8008b3a:	6141      	str	r1, [r0, #20]

  return HAL_OK;
}
 8008b3c:	2000      	movs	r0, #0
 8008b3e:	4770      	bx	lr

08008b40 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 8008b40:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 8008b42:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008b46:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 8008b48:	f001 fe3e 	bl	800a7c8 <xTaskGetSchedulerState>
 8008b4c:	2801      	cmp	r0, #1
 8008b4e:	d003      	beq.n	8008b58 <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 8008b50:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 8008b54:	f000 bbee 	b.w	8009334 <xPortSysTickHandler>
}
 8008b58:	bd08      	pop	{r3, pc}
	...

08008b5c <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008b5c:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8008b60:	b92b      	cbnz	r3, 8008b6e <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 8008b62:	4b06      	ldr	r3, [pc, #24]	; (8008b7c <osKernelInitialize+0x20>)
 8008b64:	6818      	ldr	r0, [r3, #0]
 8008b66:	b928      	cbnz	r0, 8008b74 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8008b68:	2201      	movs	r2, #1
 8008b6a:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8008b6c:	4770      	bx	lr
    stat = osErrorISR;
 8008b6e:	f06f 0005 	mvn.w	r0, #5
 8008b72:	4770      	bx	lr
    } else {
      stat = osError;
 8008b74:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8008b78:	4770      	bx	lr
 8008b7a:	bf00      	nop
 8008b7c:	20002ab0 	.word	0x20002ab0

08008b80 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8008b80:	b510      	push	{r4, lr}
 8008b82:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8008b86:	b95c      	cbnz	r4, 8008ba0 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 8008b88:	4b08      	ldr	r3, [pc, #32]	; (8008bac <osKernelStart+0x2c>)
 8008b8a:	681a      	ldr	r2, [r3, #0]
 8008b8c:	2a01      	cmp	r2, #1
 8008b8e:	d10a      	bne.n	8008ba6 <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8008b90:	4a07      	ldr	r2, [pc, #28]	; (8008bb0 <osKernelStart+0x30>)
 8008b92:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 8008b94:	2202      	movs	r2, #2
 8008b96:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 8008b98:	f001 fb90 	bl	800a2bc <vTaskStartScheduler>
      stat = osOK;
 8008b9c:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 8008b9e:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8008ba0:	f06f 0005 	mvn.w	r0, #5
 8008ba4:	e7fb      	b.n	8008b9e <osKernelStart+0x1e>
      stat = osError;
 8008ba6:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8008baa:	e7f8      	b.n	8008b9e <osKernelStart+0x1e>
 8008bac:	20002ab0 	.word	0x20002ab0
 8008bb0:	e000ed00 	.word	0xe000ed00

08008bb4 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8008bb4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008bb6:	b087      	sub	sp, #28
 8008bb8:	460b      	mov	r3, r1
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8008bba:	2100      	movs	r1, #0
 8008bbc:	9105      	str	r1, [sp, #20]
 8008bbe:	f3ef 8405 	mrs	r4, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8008bc2:	b9cc      	cbnz	r4, 8008bf8 <osThreadNew+0x44>
 8008bc4:	b1c0      	cbz	r0, 8008bf8 <osThreadNew+0x44>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8008bc6:	b36a      	cbz	r2, 8008c24 <osThreadNew+0x70>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8008bc8:	6995      	ldr	r5, [r2, #24]
 8008bca:	428d      	cmp	r5, r1
 8008bcc:	bf08      	it	eq
 8008bce:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8008bd0:	1e69      	subs	r1, r5, #1
 8008bd2:	2937      	cmp	r1, #55	; 0x37
 8008bd4:	46ac      	mov	ip, r5
 8008bd6:	d82a      	bhi.n	8008c2e <osThreadNew+0x7a>
 8008bd8:	6851      	ldr	r1, [r2, #4]
 8008bda:	07c9      	lsls	r1, r1, #31
 8008bdc:	d427      	bmi.n	8008c2e <osThreadNew+0x7a>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8008bde:	6956      	ldr	r6, [r2, #20]
 8008be0:	b16e      	cbz	r6, 8008bfe <osThreadNew+0x4a>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8008be2:	08b4      	lsrs	r4, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008be4:	e9d2 7e02 	ldrd	r7, lr, [r2, #8]
      if (attr->name != NULL) {
 8008be8:	6811      	ldr	r1, [r2, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008bea:	b157      	cbz	r7, 8008c02 <osThreadNew+0x4e>
 8008bec:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 8008bf0:	d902      	bls.n	8008bf8 <osThreadNew+0x44>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8008bf2:	6912      	ldr	r2, [r2, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008bf4:	b102      	cbz	r2, 8008bf8 <osThreadNew+0x44>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8008bf6:	b9e6      	cbnz	r6, 8008c32 <osThreadNew+0x7e>
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 8008bf8:	9805      	ldr	r0, [sp, #20]
}
 8008bfa:	b007      	add	sp, #28
 8008bfc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8008bfe:	2480      	movs	r4, #128	; 0x80
 8008c00:	e7f0      	b.n	8008be4 <osThreadNew+0x30>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8008c02:	f1be 0f00 	cmp.w	lr, #0
 8008c06:	d1f7      	bne.n	8008bf8 <osThreadNew+0x44>
      if (mem == 0) {
 8008c08:	6912      	ldr	r2, [r2, #16]
 8008c0a:	2a00      	cmp	r2, #0
 8008c0c:	d1f4      	bne.n	8008bf8 <osThreadNew+0x44>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8008c0e:	aa05      	add	r2, sp, #20
 8008c10:	e9cd c200 	strd	ip, r2, [sp]
 8008c14:	b2a2      	uxth	r2, r4
 8008c16:	f001 fb24 	bl	800a262 <xTaskCreate>
 8008c1a:	2801      	cmp	r0, #1
            hTask = NULL;
 8008c1c:	bf1c      	itt	ne
 8008c1e:	2300      	movne	r3, #0
 8008c20:	9305      	strne	r3, [sp, #20]
 8008c22:	e7e9      	b.n	8008bf8 <osThreadNew+0x44>
    name = NULL;
 8008c24:	4611      	mov	r1, r2
    prio  = (UBaseType_t)osPriorityNormal;
 8008c26:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 8008c2a:	2480      	movs	r4, #128	; 0x80
 8008c2c:	e7ef      	b.n	8008c0e <osThreadNew+0x5a>
        return (NULL);
 8008c2e:	4620      	mov	r0, r4
 8008c30:	e7e3      	b.n	8008bfa <osThreadNew+0x46>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8008c32:	e9cd 2701 	strd	r2, r7, [sp, #4]
 8008c36:	9500      	str	r5, [sp, #0]
 8008c38:	4622      	mov	r2, r4
 8008c3a:	f001 fada 	bl	800a1f2 <xTaskCreateStatic>
 8008c3e:	9005      	str	r0, [sp, #20]
 8008c40:	e7da      	b.n	8008bf8 <osThreadNew+0x44>

08008c42 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 8008c42:	b510      	push	{r4, lr}
 8008c44:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8008c48:	b924      	cbnz	r4, 8008c54 <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 8008c4a:	b110      	cbz	r0, 8008c52 <osDelay+0x10>
      vTaskDelay(ticks);
 8008c4c:	f001 fc94 	bl	800a578 <vTaskDelay>
    stat = osOK;
 8008c50:	4620      	mov	r0, r4
    }
  }

  return (stat);
}
 8008c52:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8008c54:	f06f 0005 	mvn.w	r0, #5
 8008c58:	e7fb      	b.n	8008c52 <osDelay+0x10>

08008c5a <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8008c5a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008c5c:	4604      	mov	r4, r0
 8008c5e:	460e      	mov	r6, r1
 8008c60:	4615      	mov	r5, r2
 8008c62:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8008c66:	b11a      	cbz	r2, 8008c70 <osSemaphoreNew+0x16>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 8008c68:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8008c6a:	4620      	mov	r0, r4
 8008c6c:	b003      	add	sp, #12
 8008c6e:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8008c70:	2800      	cmp	r0, #0
 8008c72:	d0f9      	beq.n	8008c68 <osSemaphoreNew+0xe>
 8008c74:	4288      	cmp	r0, r1
 8008c76:	d3f7      	bcc.n	8008c68 <osSemaphoreNew+0xe>
    if (attr != NULL) {
 8008c78:	b1e5      	cbz	r5, 8008cb4 <osSemaphoreNew+0x5a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8008c7a:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 8008c7e:	b1bb      	cbz	r3, 8008cb0 <osSemaphoreNew+0x56>
 8008c80:	2f4f      	cmp	r7, #79	; 0x4f
 8008c82:	d9f1      	bls.n	8008c68 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 8008c84:	2801      	cmp	r0, #1
 8008c86:	d12a      	bne.n	8008cde <osSemaphoreNew+0x84>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8008c88:	2103      	movs	r1, #3
 8008c8a:	9100      	str	r1, [sp, #0]
 8008c8c:	4611      	mov	r1, r2
 8008c8e:	f000 fcfa 	bl	8009686 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 8008c92:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8008c94:	2800      	cmp	r0, #0
 8008c96:	d0e7      	beq.n	8008c68 <osSemaphoreNew+0xe>
 8008c98:	b1de      	cbz	r6, 8008cd2 <osSemaphoreNew+0x78>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8008c9a:	2300      	movs	r3, #0
 8008c9c:	461a      	mov	r2, r3
 8008c9e:	4619      	mov	r1, r3
 8008ca0:	f000 fda6 	bl	80097f0 <xQueueGenericSend>
 8008ca4:	2801      	cmp	r0, #1
 8008ca6:	d014      	beq.n	8008cd2 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 8008ca8:	4620      	mov	r0, r4
 8008caa:	f001 f903 	bl	8009eb4 <vQueueDelete>
 8008cae:	e7db      	b.n	8008c68 <osSemaphoreNew+0xe>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8008cb0:	2f00      	cmp	r7, #0
 8008cb2:	d1d9      	bne.n	8008c68 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 8008cb4:	2c01      	cmp	r4, #1
 8008cb6:	d105      	bne.n	8008cc4 <osSemaphoreNew+0x6a>
            hSemaphore = xSemaphoreCreateBinary();
 8008cb8:	2203      	movs	r2, #3
 8008cba:	2100      	movs	r1, #0
 8008cbc:	4620      	mov	r0, r4
 8008cbe:	f000 fd30 	bl	8009722 <xQueueGenericCreate>
 8008cc2:	e7e6      	b.n	8008c92 <osSemaphoreNew+0x38>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8008cc4:	4620      	mov	r0, r4
 8008cc6:	4631      	mov	r1, r6
 8008cc8:	f000 fd74 	bl	80097b4 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8008ccc:	4604      	mov	r4, r0
 8008cce:	2800      	cmp	r0, #0
 8008cd0:	d0ca      	beq.n	8008c68 <osSemaphoreNew+0xe>
        if (attr != NULL) {
 8008cd2:	b955      	cbnz	r5, 8008cea <osSemaphoreNew+0x90>
        vQueueAddToRegistry (hSemaphore, name);
 8008cd4:	4629      	mov	r1, r5
 8008cd6:	4620      	mov	r0, r4
 8008cd8:	f001 f8c6 	bl	8009e68 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8008cdc:	e7c5      	b.n	8008c6a <osSemaphoreNew+0x10>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8008cde:	461a      	mov	r2, r3
 8008ce0:	f000 fd46 	bl	8009770 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8008ce4:	4604      	mov	r4, r0
 8008ce6:	2800      	cmp	r0, #0
 8008ce8:	d0be      	beq.n	8008c68 <osSemaphoreNew+0xe>
          name = attr->name;
 8008cea:	682d      	ldr	r5, [r5, #0]
 8008cec:	e7f2      	b.n	8008cd4 <osSemaphoreNew+0x7a>

08008cee <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8008cee:	b513      	push	{r0, r1, r4, lr}
 8008cf0:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8008cf2:	b308      	cbz	r0, 8008d38 <osSemaphoreAcquire+0x4a>
 8008cf4:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8008cf8:	b1b3      	cbz	r3, 8008d28 <osSemaphoreAcquire+0x3a>
    if (timeout != 0U) {
 8008cfa:	b9e9      	cbnz	r1, 8008d38 <osSemaphoreAcquire+0x4a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8008cfc:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008cfe:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8008d00:	f001 f841 	bl	8009d86 <xQueueReceiveFromISR>
 8008d04:	2801      	cmp	r0, #1
 8008d06:	d114      	bne.n	8008d32 <osSemaphoreAcquire+0x44>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8008d08:	9b01      	ldr	r3, [sp, #4]
 8008d0a:	b913      	cbnz	r3, 8008d12 <osSemaphoreAcquire+0x24>
  stat = osOK;
 8008d0c:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8008d0e:	b002      	add	sp, #8
 8008d10:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 8008d12:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008d16:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008d1a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008d1e:	f3bf 8f4f 	dsb	sy
 8008d22:	f3bf 8f6f 	isb	sy
 8008d26:	e7f1      	b.n	8008d0c <osSemaphoreAcquire+0x1e>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8008d28:	f000 ff6a 	bl	8009c00 <xQueueSemaphoreTake>
 8008d2c:	2801      	cmp	r0, #1
 8008d2e:	d0ed      	beq.n	8008d0c <osSemaphoreAcquire+0x1e>
      if (timeout != 0U) {
 8008d30:	b92c      	cbnz	r4, 8008d3e <osSemaphoreAcquire+0x50>
        stat = osErrorResource;
 8008d32:	f06f 0002 	mvn.w	r0, #2
 8008d36:	e7ea      	b.n	8008d0e <osSemaphoreAcquire+0x20>
    stat = osErrorParameter;
 8008d38:	f06f 0003 	mvn.w	r0, #3
 8008d3c:	e7e7      	b.n	8008d0e <osSemaphoreAcquire+0x20>
        stat = osErrorTimeout;
 8008d3e:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008d42:	e7e4      	b.n	8008d0e <osSemaphoreAcquire+0x20>

08008d44 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8008d44:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8008d46:	b310      	cbz	r0, 8008d8e <osSemaphoreRelease+0x4a>
 8008d48:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8008d4c:	b1b3      	cbz	r3, 8008d7c <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 8008d4e:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008d50:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8008d52:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008d54:	f000 fe61 	bl	8009a1a <xQueueGiveFromISR>
 8008d58:	2801      	cmp	r0, #1
 8008d5a:	d115      	bne.n	8008d88 <osSemaphoreRelease+0x44>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 8008d5c:	9b01      	ldr	r3, [sp, #4]
 8008d5e:	b913      	cbnz	r3, 8008d66 <osSemaphoreRelease+0x22>
  stat = osOK;
 8008d60:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
 8008d62:	b002      	add	sp, #8
 8008d64:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8008d66:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008d6a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008d6e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008d72:	f3bf 8f4f 	dsb	sy
 8008d76:	f3bf 8f6f 	isb	sy
 8008d7a:	e7f1      	b.n	8008d60 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8008d7c:	461a      	mov	r2, r3
 8008d7e:	4619      	mov	r1, r3
 8008d80:	f000 fd36 	bl	80097f0 <xQueueGenericSend>
 8008d84:	2801      	cmp	r0, #1
 8008d86:	d0eb      	beq.n	8008d60 <osSemaphoreRelease+0x1c>
      stat = osErrorResource;
 8008d88:	f06f 0002 	mvn.w	r0, #2
 8008d8c:	e7e9      	b.n	8008d62 <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 8008d8e:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8008d92:	e7e6      	b.n	8008d62 <osSemaphoreRelease+0x1e>

08008d94 <osSemaphoreGetCount>:

uint32_t osSemaphoreGetCount (osSemaphoreId_t semaphore_id) {
  SemaphoreHandle_t hSemaphore = (SemaphoreHandle_t)semaphore_id;
  uint32_t count;

  if (hSemaphore == NULL) {
 8008d94:	b130      	cbz	r0, 8008da4 <osSemaphoreGetCount+0x10>
 8008d96:	f3ef 8305 	mrs	r3, IPSR
    count = 0U;
  }
  else if (IS_IRQ()) {
 8008d9a:	b10b      	cbz	r3, 8008da0 <osSemaphoreGetCount+0xc>
    count = uxQueueMessagesWaitingFromISR (hSemaphore);
 8008d9c:	f001 b857 	b.w	8009e4e <uxQueueMessagesWaitingFromISR>
  } else {
    count = (uint32_t)uxSemaphoreGetCount (hSemaphore);
 8008da0:	f001 b840 	b.w	8009e24 <uxQueueMessagesWaiting>
  }

  return (count);
}
 8008da4:	4770      	bx	lr

08008da6 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8008da6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008da8:	4605      	mov	r5, r0
 8008daa:	460e      	mov	r6, r1
 8008dac:	4614      	mov	r4, r2
 8008dae:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8008db2:	b11f      	cbz	r7, 8008dbc <osMessageQueueNew+0x16>
  hQueue = NULL;
 8008db4:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8008db6:	4628      	mov	r0, r5
 8008db8:	b003      	add	sp, #12
 8008dba:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8008dbc:	2800      	cmp	r0, #0
 8008dbe:	d0f9      	beq.n	8008db4 <osMessageQueueNew+0xe>
 8008dc0:	2900      	cmp	r1, #0
 8008dc2:	d0f7      	beq.n	8008db4 <osMessageQueueNew+0xe>
    if (attr != NULL) {
 8008dc4:	b1da      	cbz	r2, 8008dfe <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8008dc6:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 8008dca:	b183      	cbz	r3, 8008dee <osMessageQueueNew+0x48>
 8008dcc:	2a4f      	cmp	r2, #79	; 0x4f
 8008dce:	d9f1      	bls.n	8008db4 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8008dd0:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8008dd2:	2a00      	cmp	r2, #0
 8008dd4:	d0ee      	beq.n	8008db4 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8008dd6:	6966      	ldr	r6, [r4, #20]
 8008dd8:	434d      	muls	r5, r1
 8008dda:	42ae      	cmp	r6, r5
 8008ddc:	d3ea      	bcc.n	8008db4 <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8008dde:	9700      	str	r7, [sp, #0]
 8008de0:	f000 fc51 	bl	8009686 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8008de4:	4605      	mov	r5, r0
 8008de6:	2800      	cmp	r0, #0
 8008de8:	d0e4      	beq.n	8008db4 <osMessageQueueNew+0xe>
        name = attr->name;
 8008dea:	6824      	ldr	r4, [r4, #0]
 8008dec:	e011      	b.n	8008e12 <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8008dee:	2a00      	cmp	r2, #0
 8008df0:	d1e0      	bne.n	8008db4 <osMessageQueueNew+0xe>
 8008df2:	6923      	ldr	r3, [r4, #16]
 8008df4:	2b00      	cmp	r3, #0
 8008df6:	d1dd      	bne.n	8008db4 <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8008df8:	6963      	ldr	r3, [r4, #20]
 8008dfa:	2b00      	cmp	r3, #0
 8008dfc:	d1da      	bne.n	8008db4 <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 8008dfe:	4628      	mov	r0, r5
 8008e00:	2200      	movs	r2, #0
 8008e02:	4631      	mov	r1, r6
 8008e04:	f000 fc8d 	bl	8009722 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8008e08:	4605      	mov	r5, r0
 8008e0a:	2800      	cmp	r0, #0
 8008e0c:	d0d2      	beq.n	8008db4 <osMessageQueueNew+0xe>
      if (attr != NULL) {
 8008e0e:	2c00      	cmp	r4, #0
 8008e10:	d1eb      	bne.n	8008dea <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 8008e12:	4621      	mov	r1, r4
 8008e14:	4628      	mov	r0, r5
 8008e16:	f001 f827 	bl	8009e68 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8008e1a:	e7cc      	b.n	8008db6 <osMessageQueueNew+0x10>

08008e1c <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8008e1c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008e1e:	461c      	mov	r4, r3
 8008e20:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8008e24:	b1c6      	cbz	r6, 8008e58 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008e26:	b318      	cbz	r0, 8008e70 <osMessageQueuePut+0x54>
 8008e28:	b311      	cbz	r1, 8008e70 <osMessageQueuePut+0x54>
 8008e2a:	bb0b      	cbnz	r3, 8008e70 <osMessageQueuePut+0x54>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8008e2c:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008e2e:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8008e30:	f000 fd91 	bl	8009956 <xQueueGenericSendFromISR>
 8008e34:	2801      	cmp	r0, #1
 8008e36:	d118      	bne.n	8008e6a <osMessageQueuePut+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8008e38:	9b01      	ldr	r3, [sp, #4]
 8008e3a:	b913      	cbnz	r3, 8008e42 <osMessageQueuePut+0x26>
  stat = osOK;
 8008e3c:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8008e3e:	b002      	add	sp, #8
 8008e40:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 8008e42:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008e46:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008e4a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008e4e:	f3bf 8f4f 	dsb	sy
 8008e52:	f3bf 8f6f 	isb	sy
 8008e56:	e7f1      	b.n	8008e3c <osMessageQueuePut+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008e58:	b150      	cbz	r0, 8008e70 <osMessageQueuePut+0x54>
 8008e5a:	b149      	cbz	r1, 8008e70 <osMessageQueuePut+0x54>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008e5c:	4633      	mov	r3, r6
 8008e5e:	4622      	mov	r2, r4
 8008e60:	f000 fcc6 	bl	80097f0 <xQueueGenericSend>
 8008e64:	2801      	cmp	r0, #1
 8008e66:	d0e9      	beq.n	8008e3c <osMessageQueuePut+0x20>
        if (timeout != 0U) {
 8008e68:	b92c      	cbnz	r4, 8008e76 <osMessageQueuePut+0x5a>
          stat = osErrorResource;
 8008e6a:	f06f 0002 	mvn.w	r0, #2
 8008e6e:	e7e6      	b.n	8008e3e <osMessageQueuePut+0x22>
      stat = osErrorParameter;
 8008e70:	f06f 0003 	mvn.w	r0, #3
 8008e74:	e7e3      	b.n	8008e3e <osMessageQueuePut+0x22>
          stat = osErrorTimeout;
 8008e76:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008e7a:	e7e0      	b.n	8008e3e <osMessageQueuePut+0x22>

08008e7c <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8008e7c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008e7e:	461c      	mov	r4, r3
 8008e80:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8008e84:	b1c3      	cbz	r3, 8008eb8 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008e86:	b310      	cbz	r0, 8008ece <osMessageQueueGet+0x52>
 8008e88:	b309      	cbz	r1, 8008ece <osMessageQueueGet+0x52>
 8008e8a:	bb04      	cbnz	r4, 8008ece <osMessageQueueGet+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8008e8c:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008e8e:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8008e90:	f000 ff79 	bl	8009d86 <xQueueReceiveFromISR>
 8008e94:	2801      	cmp	r0, #1
 8008e96:	d117      	bne.n	8008ec8 <osMessageQueueGet+0x4c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8008e98:	9b01      	ldr	r3, [sp, #4]
 8008e9a:	b913      	cbnz	r3, 8008ea2 <osMessageQueueGet+0x26>
  stat = osOK;
 8008e9c:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8008e9e:	b003      	add	sp, #12
 8008ea0:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 8008ea2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008ea6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008eaa:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008eae:	f3bf 8f4f 	dsb	sy
 8008eb2:	f3bf 8f6f 	isb	sy
 8008eb6:	e7f1      	b.n	8008e9c <osMessageQueueGet+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008eb8:	b148      	cbz	r0, 8008ece <osMessageQueueGet+0x52>
 8008eba:	b141      	cbz	r1, 8008ece <osMessageQueueGet+0x52>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008ebc:	4622      	mov	r2, r4
 8008ebe:	f000 fe00 	bl	8009ac2 <xQueueReceive>
 8008ec2:	2801      	cmp	r0, #1
 8008ec4:	d0ea      	beq.n	8008e9c <osMessageQueueGet+0x20>
        if (timeout != 0U) {
 8008ec6:	b92c      	cbnz	r4, 8008ed4 <osMessageQueueGet+0x58>
          stat = osErrorResource;
 8008ec8:	f06f 0002 	mvn.w	r0, #2
 8008ecc:	e7e7      	b.n	8008e9e <osMessageQueueGet+0x22>
      stat = osErrorParameter;
 8008ece:	f06f 0003 	mvn.w	r0, #3
 8008ed2:	e7e4      	b.n	8008e9e <osMessageQueueGet+0x22>
          stat = osErrorTimeout;
 8008ed4:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008ed8:	e7e1      	b.n	8008e9e <osMessageQueueGet+0x22>

08008eda <osMessageQueueGetCount>:
 8008eda:	f7ff bf5b 	b.w	8008d94 <osSemaphoreGetCount>
	...

08008ee0 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8008ee0:	4b03      	ldr	r3, [pc, #12]	; (8008ef0 <vApplicationGetIdleTaskMemory+0x10>)
 8008ee2:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8008ee4:	4b03      	ldr	r3, [pc, #12]	; (8008ef4 <vApplicationGetIdleTaskMemory+0x14>)
 8008ee6:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8008ee8:	2380      	movs	r3, #128	; 0x80
 8008eea:	6013      	str	r3, [r2, #0]
}
 8008eec:	4770      	bx	lr
 8008eee:	bf00      	nop
 8008ef0:	20002a50 	.word	0x20002a50
 8008ef4:	20002850 	.word	0x20002850

08008ef8 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8008ef8:	4b03      	ldr	r3, [pc, #12]	; (8008f08 <vApplicationGetTimerTaskMemory+0x10>)
 8008efa:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8008efc:	4b03      	ldr	r3, [pc, #12]	; (8008f0c <vApplicationGetTimerTaskMemory+0x14>)
 8008efe:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8008f00:	f44f 7380 	mov.w	r3, #256	; 0x100
 8008f04:	6013      	str	r3, [r2, #0]
}
 8008f06:	4770      	bx	lr
 8008f08:	20002eb4 	.word	0x20002eb4
 8008f0c:	20002ab4 	.word	0x20002ab4

08008f10 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8008f10:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8008f12:	4b10      	ldr	r3, [pc, #64]	; (8008f54 <prvInsertBlockIntoFreeList+0x44>)
 8008f14:	461a      	mov	r2, r3
 8008f16:	681b      	ldr	r3, [r3, #0]
 8008f18:	4283      	cmp	r3, r0
 8008f1a:	d3fb      	bcc.n	8008f14 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8008f1c:	6854      	ldr	r4, [r2, #4]
 8008f1e:	1911      	adds	r1, r2, r4
 8008f20:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8008f22:	bf01      	itttt	eq
 8008f24:	6841      	ldreq	r1, [r0, #4]
 8008f26:	4610      	moveq	r0, r2
 8008f28:	1909      	addeq	r1, r1, r4
 8008f2a:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8008f2c:	6844      	ldr	r4, [r0, #4]
 8008f2e:	1901      	adds	r1, r0, r4
 8008f30:	428b      	cmp	r3, r1
 8008f32:	d10c      	bne.n	8008f4e <prvInsertBlockIntoFreeList+0x3e>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8008f34:	4908      	ldr	r1, [pc, #32]	; (8008f58 <prvInsertBlockIntoFreeList+0x48>)
 8008f36:	6809      	ldr	r1, [r1, #0]
 8008f38:	428b      	cmp	r3, r1
 8008f3a:	d003      	beq.n	8008f44 <prvInsertBlockIntoFreeList+0x34>
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8008f3c:	6859      	ldr	r1, [r3, #4]
 8008f3e:	4421      	add	r1, r4
 8008f40:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8008f42:	6819      	ldr	r1, [r3, #0]
		}
		else
		{
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 8008f44:	6001      	str	r1, [r0, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8008f46:	4290      	cmp	r0, r2
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8008f48:	bf18      	it	ne
 8008f4a:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8008f4c:	bd10      	pop	{r4, pc}
 8008f4e:	4619      	mov	r1, r3
 8008f50:	e7f8      	b.n	8008f44 <prvInsertBlockIntoFreeList+0x34>
 8008f52:	bf00      	nop
 8008f54:	20012f2c 	.word	0x20012f2c
 8008f58:	20002f14 	.word	0x20002f14

08008f5c <pvPortMalloc>:
{
 8008f5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008f60:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8008f62:	f001 f9f1 	bl	800a348 <vTaskSuspendAll>
		if( pxEnd == NULL )
 8008f66:	4942      	ldr	r1, [pc, #264]	; (8009070 <pvPortMalloc+0x114>)
 8008f68:	4d42      	ldr	r5, [pc, #264]	; (8009074 <pvPortMalloc+0x118>)
 8008f6a:	680b      	ldr	r3, [r1, #0]
 8008f6c:	bb0b      	cbnz	r3, 8008fb2 <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 8008f6e:	4a42      	ldr	r2, [pc, #264]	; (8009078 <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8008f70:	0756      	lsls	r6, r2, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8008f72:	bf1f      	itttt	ne
 8008f74:	1dd0      	addne	r0, r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008f76:	f020 0007 	bicne.w	r0, r0, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8008f7a:	f502 3280 	addne.w	r2, r2, #65536	; 0x10000
 8008f7e:	1a13      	subne	r3, r2, r0
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8008f80:	bf0c      	ite	eq
 8008f82:	f44f 3380 	moveq.w	r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008f86:	4602      	movne	r2, r0
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8008f88:	4413      	add	r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8008f8a:	4e3c      	ldr	r6, [pc, #240]	; (800907c <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 8008f8c:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008f8e:	f023 0307 	bic.w	r3, r3, #7
	xStart.xBlockSize = ( size_t ) 0;
 8008f92:	2000      	movs	r0, #0
 8008f94:	6070      	str	r0, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8008f96:	6032      	str	r2, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 8008f98:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8008f9c:	1a98      	subs	r0, r3, r2
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8008f9e:	e9c2 3000 	strd	r3, r0, [r2]
	pxEnd = ( void * ) uxAddress;
 8008fa2:	600b      	str	r3, [r1, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8008fa4:	4b36      	ldr	r3, [pc, #216]	; (8009080 <pvPortMalloc+0x124>)
 8008fa6:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8008fa8:	4b36      	ldr	r3, [pc, #216]	; (8009084 <pvPortMalloc+0x128>)
 8008faa:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8008fac:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8008fb0:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8008fb2:	682e      	ldr	r6, [r5, #0]
 8008fb4:	4226      	tst	r6, r4
 8008fb6:	d155      	bne.n	8009064 <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 8008fb8:	2c00      	cmp	r4, #0
 8008fba:	d046      	beq.n	800904a <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 8008fbc:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8008fc0:	0760      	lsls	r0, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8008fc2:	bf1c      	itt	ne
 8008fc4:	f023 0307 	bicne.w	r3, r3, #7
 8008fc8:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8008fca:	2b00      	cmp	r3, #0
 8008fcc:	d04a      	beq.n	8009064 <pvPortMalloc+0x108>
 8008fce:	4f2d      	ldr	r7, [pc, #180]	; (8009084 <pvPortMalloc+0x128>)
 8008fd0:	683c      	ldr	r4, [r7, #0]
 8008fd2:	429c      	cmp	r4, r3
 8008fd4:	d346      	bcc.n	8009064 <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 8008fd6:	4a29      	ldr	r2, [pc, #164]	; (800907c <pvPortMalloc+0x120>)
 8008fd8:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8008fda:	6868      	ldr	r0, [r5, #4]
 8008fdc:	4298      	cmp	r0, r3
 8008fde:	d204      	bcs.n	8008fea <pvPortMalloc+0x8e>
 8008fe0:	f8d5 c000 	ldr.w	ip, [r5]
 8008fe4:	f1bc 0f00 	cmp.w	ip, #0
 8008fe8:	d115      	bne.n	8009016 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 8008fea:	6809      	ldr	r1, [r1, #0]
 8008fec:	42a9      	cmp	r1, r5
 8008fee:	d039      	beq.n	8009064 <pvPortMalloc+0x108>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8008ff0:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8008ff2:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8008ff6:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8008ff8:	1ac2      	subs	r2, r0, r3
 8008ffa:	2a10      	cmp	r2, #16
 8008ffc:	d912      	bls.n	8009024 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8008ffe:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8009000:	0741      	lsls	r1, r0, #29
 8009002:	d00b      	beq.n	800901c <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8009004:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009008:	f383 8811 	msr	BASEPRI, r3
 800900c:	f3bf 8f6f 	isb	sy
 8009010:	f3bf 8f4f 	dsb	sy
 8009014:	e7fe      	b.n	8009014 <pvPortMalloc+0xb8>
 8009016:	462a      	mov	r2, r5
 8009018:	4665      	mov	r5, ip
 800901a:	e7de      	b.n	8008fda <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800901c:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 800901e:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8009020:	f7ff ff76 	bl	8008f10 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8009024:	686a      	ldr	r2, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8009026:	4916      	ldr	r1, [pc, #88]	; (8009080 <pvPortMalloc+0x124>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8009028:	1aa4      	subs	r4, r4, r2
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800902a:	4316      	orrs	r6, r2
					xNumberOfSuccessfulAllocations++;
 800902c:	4a16      	ldr	r2, [pc, #88]	; (8009088 <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800902e:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8009030:	603c      	str	r4, [r7, #0]
					pxBlock->pxNextFreeBlock = NULL;
 8009032:	2300      	movs	r3, #0
 8009034:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 8009036:	6813      	ldr	r3, [r2, #0]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8009038:	606e      	str	r6, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800903a:	4284      	cmp	r4, r0
					xNumberOfSuccessfulAllocations++;
 800903c:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8009040:	bf38      	it	cc
 8009042:	600c      	strcc	r4, [r1, #0]
					xNumberOfSuccessfulAllocations++;
 8009044:	6013      	str	r3, [r2, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8009046:	f108 0408 	add.w	r4, r8, #8
	( void ) xTaskResumeAll();
 800904a:	f001 fa21 	bl	800a490 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800904e:	0763      	lsls	r3, r4, #29
 8009050:	d00a      	beq.n	8009068 <pvPortMalloc+0x10c>
 8009052:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009056:	f383 8811 	msr	BASEPRI, r3
 800905a:	f3bf 8f6f 	isb	sy
 800905e:	f3bf 8f4f 	dsb	sy
 8009062:	e7fe      	b.n	8009062 <pvPortMalloc+0x106>
void *pvReturn = NULL;
 8009064:	2400      	movs	r4, #0
 8009066:	e7f0      	b.n	800904a <pvPortMalloc+0xee>
}
 8009068:	4620      	mov	r0, r4
 800906a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800906e:	bf00      	nop
 8009070:	20002f14 	.word	0x20002f14
 8009074:	20012f18 	.word	0x20012f18
 8009078:	20002f18 	.word	0x20002f18
 800907c:	20012f2c 	.word	0x20012f2c
 8009080:	20012f20 	.word	0x20012f20
 8009084:	20012f1c 	.word	0x20012f1c
 8009088:	20012f24 	.word	0x20012f24

0800908c <vPortFree>:
{
 800908c:	b510      	push	{r4, lr}
	if( pv != NULL )
 800908e:	4604      	mov	r4, r0
 8009090:	b390      	cbz	r0, 80090f8 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8009092:	4a1a      	ldr	r2, [pc, #104]	; (80090fc <vPortFree+0x70>)
 8009094:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8009098:	6812      	ldr	r2, [r2, #0]
 800909a:	4213      	tst	r3, r2
 800909c:	d108      	bne.n	80090b0 <vPortFree+0x24>
 800909e:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090a2:	f383 8811 	msr	BASEPRI, r3
 80090a6:	f3bf 8f6f 	isb	sy
 80090aa:	f3bf 8f4f 	dsb	sy
 80090ae:	e7fe      	b.n	80090ae <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 80090b0:	f850 1c08 	ldr.w	r1, [r0, #-8]
 80090b4:	b141      	cbz	r1, 80090c8 <vPortFree+0x3c>
 80090b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090ba:	f383 8811 	msr	BASEPRI, r3
 80090be:	f3bf 8f6f 	isb	sy
 80090c2:	f3bf 8f4f 	dsb	sy
 80090c6:	e7fe      	b.n	80090c6 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 80090c8:	ea23 0302 	bic.w	r3, r3, r2
 80090cc:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 80090d0:	f001 f93a 	bl	800a348 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 80090d4:	4a0a      	ldr	r2, [pc, #40]	; (8009100 <vPortFree+0x74>)
 80090d6:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80090da:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80090dc:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 80090e0:	440b      	add	r3, r1
 80090e2:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80090e4:	f7ff ff14 	bl	8008f10 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 80090e8:	4a06      	ldr	r2, [pc, #24]	; (8009104 <vPortFree+0x78>)
 80090ea:	6813      	ldr	r3, [r2, #0]
}
 80090ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 80090f0:	3301      	adds	r3, #1
 80090f2:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 80090f4:	f001 b9cc 	b.w	800a490 <xTaskResumeAll>
}
 80090f8:	bd10      	pop	{r4, pc}
 80090fa:	bf00      	nop
 80090fc:	20012f18 	.word	0x20012f18
 8009100:	20012f1c 	.word	0x20012f1c
 8009104:	20012f28 	.word	0x20012f28

08009108 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8009108:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800910c:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8009110:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8009114:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8009116:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8009118:	2300      	movs	r3, #0
 800911a:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800911c:	4770      	bx	lr

0800911e <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800911e:	2300      	movs	r3, #0
 8009120:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8009122:	4770      	bx	lr

08009124 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8009124:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8009126:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8009128:	689a      	ldr	r2, [r3, #8]
 800912a:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800912c:	689a      	ldr	r2, [r3, #8]
 800912e:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8009130:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8009132:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8009134:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8009136:	3301      	adds	r3, #1
 8009138:	6003      	str	r3, [r0, #0]
}
 800913a:	4770      	bx	lr

0800913c <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800913c:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800913e:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8009140:	1c63      	adds	r3, r4, #1
 8009142:	d10a      	bne.n	800915a <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8009144:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8009146:	685a      	ldr	r2, [r3, #4]
 8009148:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800914a:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800914c:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800914e:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8009150:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8009152:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8009154:	3301      	adds	r3, #1
 8009156:	6003      	str	r3, [r0, #0]
}
 8009158:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800915a:	f100 0208 	add.w	r2, r0, #8
 800915e:	4613      	mov	r3, r2
 8009160:	6852      	ldr	r2, [r2, #4]
 8009162:	6815      	ldr	r5, [r2, #0]
 8009164:	42a5      	cmp	r5, r4
 8009166:	d9fa      	bls.n	800915e <vListInsert+0x22>
 8009168:	e7ed      	b.n	8009146 <vListInsert+0xa>

0800916a <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800916a:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 800916e:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8009170:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8009172:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8009174:	6859      	ldr	r1, [r3, #4]
 8009176:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8009178:	bf08      	it	eq
 800917a:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 800917c:	2200      	movs	r2, #0
 800917e:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8009180:	681a      	ldr	r2, [r3, #0]
 8009182:	3a01      	subs	r2, #1
 8009184:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8009186:	6818      	ldr	r0, [r3, #0]
}
 8009188:	4770      	bx	lr
	...

0800918c <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800918c:	4808      	ldr	r0, [pc, #32]	; (80091b0 <prvPortStartFirstTask+0x24>)
 800918e:	6800      	ldr	r0, [r0, #0]
 8009190:	6800      	ldr	r0, [r0, #0]
 8009192:	f380 8808 	msr	MSP, r0
 8009196:	f04f 0000 	mov.w	r0, #0
 800919a:	f380 8814 	msr	CONTROL, r0
 800919e:	b662      	cpsie	i
 80091a0:	b661      	cpsie	f
 80091a2:	f3bf 8f4f 	dsb	sy
 80091a6:	f3bf 8f6f 	isb	sy
 80091aa:	df00      	svc	0
 80091ac:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 80091ae:	0000      	.short	0x0000
 80091b0:	e000ed08 	.word	0xe000ed08

080091b4 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 80091b4:	f8df 000c 	ldr.w	r0, [pc, #12]	; 80091c4 <vPortEnableVFP+0x10>
 80091b8:	6801      	ldr	r1, [r0, #0]
 80091ba:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80091be:	6001      	str	r1, [r0, #0]
 80091c0:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 80091c2:	0000      	.short	0x0000
 80091c4:	e000ed88 	.word	0xe000ed88

080091c8 <prvTaskExitError>:
{
 80091c8:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 80091ca:	2300      	movs	r3, #0
 80091cc:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 80091ce:	4b0d      	ldr	r3, [pc, #52]	; (8009204 <prvTaskExitError+0x3c>)
 80091d0:	681b      	ldr	r3, [r3, #0]
 80091d2:	3301      	adds	r3, #1
 80091d4:	d008      	beq.n	80091e8 <prvTaskExitError+0x20>
 80091d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091da:	f383 8811 	msr	BASEPRI, r3
 80091de:	f3bf 8f6f 	isb	sy
 80091e2:	f3bf 8f4f 	dsb	sy
 80091e6:	e7fe      	b.n	80091e6 <prvTaskExitError+0x1e>
 80091e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091ec:	f383 8811 	msr	BASEPRI, r3
 80091f0:	f3bf 8f6f 	isb	sy
 80091f4:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 80091f8:	9b01      	ldr	r3, [sp, #4]
 80091fa:	2b00      	cmp	r3, #0
 80091fc:	d0fc      	beq.n	80091f8 <prvTaskExitError+0x30>
}
 80091fe:	b002      	add	sp, #8
 8009200:	4770      	bx	lr
 8009202:	bf00      	nop
 8009204:	20000080 	.word	0x20000080

08009208 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8009208:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800920c:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8009210:	4b07      	ldr	r3, [pc, #28]	; (8009230 <pxPortInitialiseStack+0x28>)
 8009212:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8009216:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800921a:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800921e:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8009222:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8009226:	f840 3c24 	str.w	r3, [r0, #-36]
}
 800922a:	3844      	subs	r0, #68	; 0x44
 800922c:	4770      	bx	lr
 800922e:	bf00      	nop
 8009230:	080091c9 	.word	0x080091c9
	...

08009240 <SVC_Handler>:
	__asm volatile (
 8009240:	4b07      	ldr	r3, [pc, #28]	; (8009260 <pxCurrentTCBConst2>)
 8009242:	6819      	ldr	r1, [r3, #0]
 8009244:	6808      	ldr	r0, [r1, #0]
 8009246:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800924a:	f380 8809 	msr	PSP, r0
 800924e:	f3bf 8f6f 	isb	sy
 8009252:	f04f 0000 	mov.w	r0, #0
 8009256:	f380 8811 	msr	BASEPRI, r0
 800925a:	4770      	bx	lr
 800925c:	f3af 8000 	nop.w

08009260 <pxCurrentTCBConst2>:
 8009260:	20012f7c 	.word	0x20012f7c

08009264 <vPortEnterCritical>:
 8009264:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009268:	f383 8811 	msr	BASEPRI, r3
 800926c:	f3bf 8f6f 	isb	sy
 8009270:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8009274:	4a0a      	ldr	r2, [pc, #40]	; (80092a0 <vPortEnterCritical+0x3c>)
 8009276:	6813      	ldr	r3, [r2, #0]
 8009278:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800927a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800927c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800927e:	d10e      	bne.n	800929e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8009280:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009284:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 8009288:	b2db      	uxtb	r3, r3
 800928a:	b143      	cbz	r3, 800929e <vPortEnterCritical+0x3a>
 800928c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009290:	f383 8811 	msr	BASEPRI, r3
 8009294:	f3bf 8f6f 	isb	sy
 8009298:	f3bf 8f4f 	dsb	sy
 800929c:	e7fe      	b.n	800929c <vPortEnterCritical+0x38>
}
 800929e:	4770      	bx	lr
 80092a0:	20000080 	.word	0x20000080

080092a4 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 80092a4:	4a08      	ldr	r2, [pc, #32]	; (80092c8 <vPortExitCritical+0x24>)
 80092a6:	6813      	ldr	r3, [r2, #0]
 80092a8:	b943      	cbnz	r3, 80092bc <vPortExitCritical+0x18>
 80092aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80092ae:	f383 8811 	msr	BASEPRI, r3
 80092b2:	f3bf 8f6f 	isb	sy
 80092b6:	f3bf 8f4f 	dsb	sy
 80092ba:	e7fe      	b.n	80092ba <vPortExitCritical+0x16>
	uxCriticalNesting--;
 80092bc:	3b01      	subs	r3, #1
 80092be:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 80092c0:	b90b      	cbnz	r3, 80092c6 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 80092c2:	f383 8811 	msr	BASEPRI, r3
}
 80092c6:	4770      	bx	lr
 80092c8:	20000080 	.word	0x20000080
 80092cc:	00000000 	.word	0x00000000

080092d0 <PendSV_Handler>:
	__asm volatile
 80092d0:	f3ef 8009 	mrs	r0, PSP
 80092d4:	f3bf 8f6f 	isb	sy
 80092d8:	4b15      	ldr	r3, [pc, #84]	; (8009330 <pxCurrentTCBConst>)
 80092da:	681a      	ldr	r2, [r3, #0]
 80092dc:	f01e 0f10 	tst.w	lr, #16
 80092e0:	bf08      	it	eq
 80092e2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 80092e6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80092ea:	6010      	str	r0, [r2, #0]
 80092ec:	e92d 0009 	stmdb	sp!, {r0, r3}
 80092f0:	f04f 0050 	mov.w	r0, #80	; 0x50
 80092f4:	f380 8811 	msr	BASEPRI, r0
 80092f8:	f3bf 8f4f 	dsb	sy
 80092fc:	f3bf 8f6f 	isb	sy
 8009300:	f001 f95e 	bl	800a5c0 <vTaskSwitchContext>
 8009304:	f04f 0000 	mov.w	r0, #0
 8009308:	f380 8811 	msr	BASEPRI, r0
 800930c:	bc09      	pop	{r0, r3}
 800930e:	6819      	ldr	r1, [r3, #0]
 8009310:	6808      	ldr	r0, [r1, #0]
 8009312:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009316:	f01e 0f10 	tst.w	lr, #16
 800931a:	bf08      	it	eq
 800931c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8009320:	f380 8809 	msr	PSP, r0
 8009324:	f3bf 8f6f 	isb	sy
 8009328:	4770      	bx	lr
 800932a:	bf00      	nop
 800932c:	f3af 8000 	nop.w

08009330 <pxCurrentTCBConst>:
 8009330:	20012f7c 	.word	0x20012f7c

08009334 <xPortSysTickHandler>:
{
 8009334:	b508      	push	{r3, lr}
	__asm volatile
 8009336:	f04f 0350 	mov.w	r3, #80	; 0x50
 800933a:	f383 8811 	msr	BASEPRI, r3
 800933e:	f3bf 8f6f 	isb	sy
 8009342:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8009346:	f001 f80d 	bl	800a364 <xTaskIncrementTick>
 800934a:	b128      	cbz	r0, 8009358 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800934c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009350:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009354:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 8009358:	2300      	movs	r3, #0
 800935a:	f383 8811 	msr	BASEPRI, r3
}
 800935e:	bd08      	pop	{r3, pc}

08009360 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8009360:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8009364:	2300      	movs	r3, #0
 8009366:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8009368:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800936a:	4b05      	ldr	r3, [pc, #20]	; (8009380 <vPortSetupTimerInterrupt+0x20>)
 800936c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8009370:	681b      	ldr	r3, [r3, #0]
 8009372:	fbb3 f3f1 	udiv	r3, r3, r1
 8009376:	3b01      	subs	r3, #1
 8009378:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800937a:	2307      	movs	r3, #7
 800937c:	6113      	str	r3, [r2, #16]
}
 800937e:	4770      	bx	lr
 8009380:	20000074 	.word	0x20000074

08009384 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8009384:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 8009388:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800938a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800938e:	4a3a      	ldr	r2, [pc, #232]	; (8009478 <xPortStartScheduler+0xf4>)
 8009390:	4291      	cmp	r1, r2
 8009392:	d108      	bne.n	80093a6 <xPortStartScheduler+0x22>
	__asm volatile
 8009394:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009398:	f383 8811 	msr	BASEPRI, r3
 800939c:	f3bf 8f6f 	isb	sy
 80093a0:	f3bf 8f4f 	dsb	sy
 80093a4:	e7fe      	b.n	80093a4 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 80093a6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 80093aa:	4b34      	ldr	r3, [pc, #208]	; (800947c <xPortStartScheduler+0xf8>)
 80093ac:	429a      	cmp	r2, r3
 80093ae:	d108      	bne.n	80093c2 <xPortStartScheduler+0x3e>
 80093b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093b4:	f383 8811 	msr	BASEPRI, r3
 80093b8:	f3bf 8f6f 	isb	sy
 80093bc:	f3bf 8f4f 	dsb	sy
 80093c0:	e7fe      	b.n	80093c0 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 80093c2:	4b2f      	ldr	r3, [pc, #188]	; (8009480 <xPortStartScheduler+0xfc>)
 80093c4:	781a      	ldrb	r2, [r3, #0]
 80093c6:	b2d2      	uxtb	r2, r2
 80093c8:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 80093ca:	22ff      	movs	r2, #255	; 0xff
 80093cc:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 80093ce:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80093d0:	4a2c      	ldr	r2, [pc, #176]	; (8009484 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 80093d2:	b2db      	uxtb	r3, r3
 80093d4:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80093d8:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80093dc:	f003 0350 	and.w	r3, r3, #80	; 0x50
 80093e0:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 80093e2:	4a29      	ldr	r2, [pc, #164]	; (8009488 <xPortStartScheduler+0x104>)
 80093e4:	2307      	movs	r3, #7
 80093e6:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 80093e8:	2100      	movs	r1, #0
 80093ea:	f89d 0003 	ldrb.w	r0, [sp, #3]
 80093ee:	0600      	lsls	r0, r0, #24
 80093f0:	f103 34ff 	add.w	r4, r3, #4294967295
 80093f4:	d40c      	bmi.n	8009410 <xPortStartScheduler+0x8c>
 80093f6:	b111      	cbz	r1, 80093fe <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 80093f8:	2b03      	cmp	r3, #3
 80093fa:	6013      	str	r3, [r2, #0]
 80093fc:	d011      	beq.n	8009422 <xPortStartScheduler+0x9e>
 80093fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009402:	f383 8811 	msr	BASEPRI, r3
 8009406:	f3bf 8f6f 	isb	sy
 800940a:	f3bf 8f4f 	dsb	sy
 800940e:	e7fe      	b.n	800940e <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8009410:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8009414:	005b      	lsls	r3, r3, #1
 8009416:	b2db      	uxtb	r3, r3
 8009418:	f88d 3003 	strb.w	r3, [sp, #3]
 800941c:	2101      	movs	r1, #1
 800941e:	4623      	mov	r3, r4
 8009420:	e7e3      	b.n	80093ea <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8009422:	f44f 7340 	mov.w	r3, #768	; 0x300
 8009426:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8009428:	9b01      	ldr	r3, [sp, #4]
 800942a:	4a15      	ldr	r2, [pc, #84]	; (8009480 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800942c:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8009430:	b2db      	uxtb	r3, r3
 8009432:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8009434:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8009438:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800943c:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8009440:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8009444:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8009448:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 800944c:	f7ff ff88 	bl	8009360 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8009450:	4b0e      	ldr	r3, [pc, #56]	; (800948c <xPortStartScheduler+0x108>)
 8009452:	2500      	movs	r5, #0
 8009454:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8009456:	f7ff fead 	bl	80091b4 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800945a:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 800945e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8009462:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 8009466:	f7ff fe91 	bl	800918c <prvPortStartFirstTask>
	vTaskSwitchContext();
 800946a:	f001 f8a9 	bl	800a5c0 <vTaskSwitchContext>
	prvTaskExitError();
 800946e:	f7ff feab 	bl	80091c8 <prvTaskExitError>
}
 8009472:	4628      	mov	r0, r5
 8009474:	b003      	add	sp, #12
 8009476:	bd30      	pop	{r4, r5, pc}
 8009478:	410fc271 	.word	0x410fc271
 800947c:	410fc270 	.word	0x410fc270
 8009480:	e000e400 	.word	0xe000e400
 8009484:	20012f34 	.word	0x20012f34
 8009488:	20012f38 	.word	0x20012f38
 800948c:	20000080 	.word	0x20000080

08009490 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8009490:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8009494:	2b0f      	cmp	r3, #15
 8009496:	d90e      	bls.n	80094b6 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8009498:	4a11      	ldr	r2, [pc, #68]	; (80094e0 <vPortValidateInterruptPriority+0x50>)
 800949a:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800949c:	4a11      	ldr	r2, [pc, #68]	; (80094e4 <vPortValidateInterruptPriority+0x54>)
 800949e:	7812      	ldrb	r2, [r2, #0]
 80094a0:	429a      	cmp	r2, r3
 80094a2:	d908      	bls.n	80094b6 <vPortValidateInterruptPriority+0x26>
 80094a4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80094a8:	f383 8811 	msr	BASEPRI, r3
 80094ac:	f3bf 8f6f 	isb	sy
 80094b0:	f3bf 8f4f 	dsb	sy
 80094b4:	e7fe      	b.n	80094b4 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 80094b6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80094ba:	4a0b      	ldr	r2, [pc, #44]	; (80094e8 <vPortValidateInterruptPriority+0x58>)
 80094bc:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 80094c0:	6812      	ldr	r2, [r2, #0]
 80094c2:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80094c6:	4293      	cmp	r3, r2
 80094c8:	d908      	bls.n	80094dc <vPortValidateInterruptPriority+0x4c>
 80094ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 80094ce:	f383 8811 	msr	BASEPRI, r3
 80094d2:	f3bf 8f6f 	isb	sy
 80094d6:	f3bf 8f4f 	dsb	sy
 80094da:	e7fe      	b.n	80094da <vPortValidateInterruptPriority+0x4a>
	}
 80094dc:	4770      	bx	lr
 80094de:	bf00      	nop
 80094e0:	e000e3f0 	.word	0xe000e3f0
 80094e4:	20012f34 	.word	0x20012f34
 80094e8:	20012f38 	.word	0x20012f38

080094ec <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 80094ec:	b510      	push	{r4, lr}
 80094ee:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80094f0:	f7ff feb8 	bl	8009264 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 80094f4:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80094f6:	f7ff fed5 	bl	80092a4 <vPortExitCritical>

	return xReturn;
}
 80094fa:	fab4 f084 	clz	r0, r4
 80094fe:	0940      	lsrs	r0, r0, #5
 8009500:	bd10      	pop	{r4, pc}

08009502 <prvCopyDataToQueue>:
{
 8009502:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009504:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8009506:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009508:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 800950a:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800950c:	b952      	cbnz	r2, 8009524 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800950e:	6807      	ldr	r7, [r0, #0]
 8009510:	bb47      	cbnz	r7, 8009564 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8009512:	6880      	ldr	r0, [r0, #8]
 8009514:	f001 f9aa 	bl	800a86c <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8009518:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800951a:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800951c:	3601      	adds	r6, #1
 800951e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8009520:	4628      	mov	r0, r5
 8009522:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8009524:	b965      	cbnz	r5, 8009540 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8009526:	6840      	ldr	r0, [r0, #4]
 8009528:	f014 fa29 	bl	801d97e <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800952c:	6863      	ldr	r3, [r4, #4]
 800952e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8009530:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8009532:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8009534:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8009536:	4293      	cmp	r3, r2
 8009538:	d3f0      	bcc.n	800951c <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800953a:	6823      	ldr	r3, [r4, #0]
 800953c:	6063      	str	r3, [r4, #4]
 800953e:	e7ed      	b.n	800951c <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8009540:	68c0      	ldr	r0, [r0, #12]
 8009542:	f014 fa1c 	bl	801d97e <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8009546:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8009548:	68e3      	ldr	r3, [r4, #12]
 800954a:	4251      	negs	r1, r2
 800954c:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800954e:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8009550:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8009552:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8009554:	bf3e      	ittt	cc
 8009556:	68a3      	ldrcc	r3, [r4, #8]
 8009558:	185b      	addcc	r3, r3, r1
 800955a:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800955c:	2d02      	cmp	r5, #2
 800955e:	d101      	bne.n	8009564 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8009560:	b116      	cbz	r6, 8009568 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 8009562:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8009564:	2500      	movs	r5, #0
 8009566:	e7d9      	b.n	800951c <prvCopyDataToQueue+0x1a>
 8009568:	4635      	mov	r5, r6
 800956a:	e7d7      	b.n	800951c <prvCopyDataToQueue+0x1a>

0800956c <prvCopyDataFromQueue>:
{
 800956c:	4603      	mov	r3, r0
 800956e:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8009570:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 8009572:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8009574:	b16a      	cbz	r2, 8009592 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8009576:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8009578:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800957a:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800957c:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800957e:	bf28      	it	cs
 8009580:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8009582:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8009584:	bf28      	it	cs
 8009586:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8009588:	68d9      	ldr	r1, [r3, #12]
}
 800958a:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800958e:	f014 b9f6 	b.w	801d97e <memcpy>
}
 8009592:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009596:	4770      	bx	lr

08009598 <prvUnlockQueue>:
{
 8009598:	b570      	push	{r4, r5, r6, lr}
 800959a:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800959c:	f7ff fe62 	bl	8009264 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 80095a0:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80095a4:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 80095a8:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80095aa:	2d00      	cmp	r5, #0
 80095ac:	dc14      	bgt.n	80095d8 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 80095ae:	23ff      	movs	r3, #255	; 0xff
 80095b0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 80095b4:	f7ff fe76 	bl	80092a4 <vPortExitCritical>
	taskENTER_CRITICAL();
 80095b8:	f7ff fe54 	bl	8009264 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 80095bc:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80095c0:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 80095c4:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80095c6:	2d00      	cmp	r5, #0
 80095c8:	dc12      	bgt.n	80095f0 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 80095ca:	23ff      	movs	r3, #255	; 0xff
 80095cc:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 80095d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 80095d4:	f7ff be66 	b.w	80092a4 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80095d8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80095da:	2b00      	cmp	r3, #0
 80095dc:	d0e7      	beq.n	80095ae <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80095de:	4630      	mov	r0, r6
 80095e0:	f001 f860 	bl	800a6a4 <xTaskRemoveFromEventList>
 80095e4:	b108      	cbz	r0, 80095ea <prvUnlockQueue+0x52>
						vTaskMissedYield();
 80095e6:	f001 f8e9 	bl	800a7bc <vTaskMissedYield>
			--cTxLock;
 80095ea:	3d01      	subs	r5, #1
 80095ec:	b26d      	sxtb	r5, r5
 80095ee:	e7dc      	b.n	80095aa <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80095f0:	6923      	ldr	r3, [r4, #16]
 80095f2:	2b00      	cmp	r3, #0
 80095f4:	d0e9      	beq.n	80095ca <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80095f6:	4630      	mov	r0, r6
 80095f8:	f001 f854 	bl	800a6a4 <xTaskRemoveFromEventList>
 80095fc:	b108      	cbz	r0, 8009602 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 80095fe:	f001 f8dd 	bl	800a7bc <vTaskMissedYield>
				--cRxLock;
 8009602:	3d01      	subs	r5, #1
 8009604:	b26d      	sxtb	r5, r5
 8009606:	e7de      	b.n	80095c6 <prvUnlockQueue+0x2e>

08009608 <xQueueGenericReset>:
{
 8009608:	b538      	push	{r3, r4, r5, lr}
 800960a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800960c:	4604      	mov	r4, r0
 800960e:	b940      	cbnz	r0, 8009622 <xQueueGenericReset+0x1a>
 8009610:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009614:	f383 8811 	msr	BASEPRI, r3
 8009618:	f3bf 8f6f 	isb	sy
 800961c:	f3bf 8f4f 	dsb	sy
 8009620:	e7fe      	b.n	8009620 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8009622:	f7ff fe1f 	bl	8009264 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009626:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 800962a:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800962c:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800962e:	434b      	muls	r3, r1
 8009630:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009632:	1a5b      	subs	r3, r3, r1
 8009634:	441a      	add	r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009636:	60a0      	str	r0, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 8009638:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800963a:	2000      	movs	r0, #0
 800963c:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800963e:	60e2      	str	r2, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
 8009640:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8009644:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8009648:	b9a5      	cbnz	r5, 8009674 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800964a:	6923      	ldr	r3, [r4, #16]
 800964c:	b173      	cbz	r3, 800966c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800964e:	f104 0010 	add.w	r0, r4, #16
 8009652:	f001 f827 	bl	800a6a4 <xTaskRemoveFromEventList>
 8009656:	b148      	cbz	r0, 800966c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8009658:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800965c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009660:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009664:	f3bf 8f4f 	dsb	sy
 8009668:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800966c:	f7ff fe1a 	bl	80092a4 <vPortExitCritical>
}
 8009670:	2001      	movs	r0, #1
 8009672:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8009674:	f104 0010 	add.w	r0, r4, #16
 8009678:	f7ff fd46 	bl	8009108 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800967c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009680:	f7ff fd42 	bl	8009108 <vListInitialise>
 8009684:	e7f2      	b.n	800966c <xQueueGenericReset+0x64>

08009686 <xQueueGenericCreateStatic>:
	{
 8009686:	b513      	push	{r0, r1, r4, lr}
 8009688:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800968a:	b940      	cbnz	r0, 800969e <xQueueGenericCreateStatic+0x18>
 800968c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009690:	f383 8811 	msr	BASEPRI, r3
 8009694:	f3bf 8f6f 	isb	sy
 8009698:	f3bf 8f4f 	dsb	sy
 800969c:	e7fe      	b.n	800969c <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 800969e:	b943      	cbnz	r3, 80096b2 <xQueueGenericCreateStatic+0x2c>
 80096a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80096a4:	f383 8811 	msr	BASEPRI, r3
 80096a8:	f3bf 8f6f 	isb	sy
 80096ac:	f3bf 8f4f 	dsb	sy
 80096b0:	e7fe      	b.n	80096b0 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 80096b2:	b14a      	cbz	r2, 80096c8 <xQueueGenericCreateStatic+0x42>
 80096b4:	b991      	cbnz	r1, 80096dc <xQueueGenericCreateStatic+0x56>
 80096b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80096ba:	f383 8811 	msr	BASEPRI, r3
 80096be:	f3bf 8f6f 	isb	sy
 80096c2:	f3bf 8f4f 	dsb	sy
 80096c6:	e7fe      	b.n	80096c6 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 80096c8:	b141      	cbz	r1, 80096dc <xQueueGenericCreateStatic+0x56>
 80096ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 80096ce:	f383 8811 	msr	BASEPRI, r3
 80096d2:	f3bf 8f6f 	isb	sy
 80096d6:	f3bf 8f4f 	dsb	sy
 80096da:	e7fe      	b.n	80096da <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 80096dc:	2350      	movs	r3, #80	; 0x50
 80096de:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 80096e0:	9b01      	ldr	r3, [sp, #4]
 80096e2:	2b50      	cmp	r3, #80	; 0x50
 80096e4:	d008      	beq.n	80096f8 <xQueueGenericCreateStatic+0x72>
 80096e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80096ea:	f383 8811 	msr	BASEPRI, r3
 80096ee:	f3bf 8f6f 	isb	sy
 80096f2:	f3bf 8f4f 	dsb	sy
 80096f6:	e7fe      	b.n	80096f6 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 80096f8:	2900      	cmp	r1, #0
 80096fa:	bf08      	it	eq
 80096fc:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 80096fe:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8009700:	6022      	str	r2, [r4, #0]
 8009702:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 8009704:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8009708:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800970c:	4619      	mov	r1, r3
 800970e:	4620      	mov	r0, r4
 8009710:	f7ff ff7a 	bl	8009608 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8009714:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8009718:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800971c:	4620      	mov	r0, r4
 800971e:	b002      	add	sp, #8
 8009720:	bd10      	pop	{r4, pc}

08009722 <xQueueGenericCreate>:
	{
 8009722:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009724:	460d      	mov	r5, r1
 8009726:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8009728:	4606      	mov	r6, r0
 800972a:	b940      	cbnz	r0, 800973e <xQueueGenericCreate+0x1c>
 800972c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009730:	f383 8811 	msr	BASEPRI, r3
 8009734:	f3bf 8f6f 	isb	sy
 8009738:	f3bf 8f4f 	dsb	sy
 800973c:	e7fe      	b.n	800973c <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800973e:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8009740:	3050      	adds	r0, #80	; 0x50
 8009742:	f7ff fc0b 	bl	8008f5c <pvPortMalloc>
		if( pxNewQueue != NULL )
 8009746:	4604      	mov	r4, r0
 8009748:	b170      	cbz	r0, 8009768 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800974a:	2300      	movs	r3, #0
 800974c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8009750:	b165      	cbz	r5, 800976c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009752:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8009756:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 800975a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800975c:	2101      	movs	r1, #1
 800975e:	4620      	mov	r0, r4
 8009760:	f7ff ff52 	bl	8009608 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8009764:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8009768:	4620      	mov	r0, r4
 800976a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800976c:	4603      	mov	r3, r0
 800976e:	e7f2      	b.n	8009756 <xQueueGenericCreate+0x34>

08009770 <xQueueCreateCountingSemaphoreStatic>:
	{
 8009770:	b513      	push	{r0, r1, r4, lr}
 8009772:	4613      	mov	r3, r2
 8009774:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8009776:	b940      	cbnz	r0, 800978a <xQueueCreateCountingSemaphoreStatic+0x1a>
 8009778:	f04f 0350 	mov.w	r3, #80	; 0x50
 800977c:	f383 8811 	msr	BASEPRI, r3
 8009780:	f3bf 8f6f 	isb	sy
 8009784:	f3bf 8f4f 	dsb	sy
 8009788:	e7fe      	b.n	8009788 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800978a:	4288      	cmp	r0, r1
 800978c:	d208      	bcs.n	80097a0 <xQueueCreateCountingSemaphoreStatic+0x30>
 800978e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009792:	f383 8811 	msr	BASEPRI, r3
 8009796:	f3bf 8f6f 	isb	sy
 800979a:	f3bf 8f4f 	dsb	sy
 800979e:	e7fe      	b.n	800979e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80097a0:	2202      	movs	r2, #2
 80097a2:	9200      	str	r2, [sp, #0]
 80097a4:	2200      	movs	r2, #0
 80097a6:	4611      	mov	r1, r2
 80097a8:	f7ff ff6d 	bl	8009686 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 80097ac:	b100      	cbz	r0, 80097b0 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80097ae:	6384      	str	r4, [r0, #56]	; 0x38
	}
 80097b0:	b002      	add	sp, #8
 80097b2:	bd10      	pop	{r4, pc}

080097b4 <xQueueCreateCountingSemaphore>:
	{
 80097b4:	b510      	push	{r4, lr}
 80097b6:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 80097b8:	b940      	cbnz	r0, 80097cc <xQueueCreateCountingSemaphore+0x18>
 80097ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 80097be:	f383 8811 	msr	BASEPRI, r3
 80097c2:	f3bf 8f6f 	isb	sy
 80097c6:	f3bf 8f4f 	dsb	sy
 80097ca:	e7fe      	b.n	80097ca <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 80097cc:	4288      	cmp	r0, r1
 80097ce:	d208      	bcs.n	80097e2 <xQueueCreateCountingSemaphore+0x2e>
 80097d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80097d4:	f383 8811 	msr	BASEPRI, r3
 80097d8:	f3bf 8f6f 	isb	sy
 80097dc:	f3bf 8f4f 	dsb	sy
 80097e0:	e7fe      	b.n	80097e0 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80097e2:	2202      	movs	r2, #2
 80097e4:	2100      	movs	r1, #0
 80097e6:	f7ff ff9c 	bl	8009722 <xQueueGenericCreate>
		if( xHandle != NULL )
 80097ea:	b100      	cbz	r0, 80097ee <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80097ec:	6384      	str	r4, [r0, #56]	; 0x38
	}
 80097ee:	bd10      	pop	{r4, pc}

080097f0 <xQueueGenericSend>:
{
 80097f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80097f4:	b085      	sub	sp, #20
 80097f6:	4688      	mov	r8, r1
 80097f8:	9201      	str	r2, [sp, #4]
 80097fa:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 80097fc:	4604      	mov	r4, r0
 80097fe:	b940      	cbnz	r0, 8009812 <xQueueGenericSend+0x22>
 8009800:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009804:	f383 8811 	msr	BASEPRI, r3
 8009808:	f3bf 8f6f 	isb	sy
 800980c:	f3bf 8f4f 	dsb	sy
 8009810:	e7fe      	b.n	8009810 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009812:	b951      	cbnz	r1, 800982a <xQueueGenericSend+0x3a>
 8009814:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009816:	b143      	cbz	r3, 800982a <xQueueGenericSend+0x3a>
 8009818:	f04f 0350 	mov.w	r3, #80	; 0x50
 800981c:	f383 8811 	msr	BASEPRI, r3
 8009820:	f3bf 8f6f 	isb	sy
 8009824:	f3bf 8f4f 	dsb	sy
 8009828:	e7fe      	b.n	8009828 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800982a:	2f02      	cmp	r7, #2
 800982c:	d10b      	bne.n	8009846 <xQueueGenericSend+0x56>
 800982e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009830:	2b01      	cmp	r3, #1
 8009832:	d008      	beq.n	8009846 <xQueueGenericSend+0x56>
 8009834:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009838:	f383 8811 	msr	BASEPRI, r3
 800983c:	f3bf 8f6f 	isb	sy
 8009840:	f3bf 8f4f 	dsb	sy
 8009844:	e7fe      	b.n	8009844 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009846:	f000 ffbf 	bl	800a7c8 <xTaskGetSchedulerState>
 800984a:	4606      	mov	r6, r0
 800984c:	b950      	cbnz	r0, 8009864 <xQueueGenericSend+0x74>
 800984e:	9b01      	ldr	r3, [sp, #4]
 8009850:	b14b      	cbz	r3, 8009866 <xQueueGenericSend+0x76>
 8009852:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009856:	f383 8811 	msr	BASEPRI, r3
 800985a:	f3bf 8f6f 	isb	sy
 800985e:	f3bf 8f4f 	dsb	sy
 8009862:	e7fe      	b.n	8009862 <xQueueGenericSend+0x72>
 8009864:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8009866:	f04f 0900 	mov.w	r9, #0
 800986a:	e037      	b.n	80098dc <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 800986c:	9d01      	ldr	r5, [sp, #4]
 800986e:	b91d      	cbnz	r5, 8009878 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 8009870:	f7ff fd18 	bl	80092a4 <vPortExitCritical>
			return errQUEUE_FULL;
 8009874:	2000      	movs	r0, #0
 8009876:	e052      	b.n	800991e <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 8009878:	b916      	cbnz	r6, 8009880 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800987a:	a802      	add	r0, sp, #8
 800987c:	f000 ff56 	bl	800a72c <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8009880:	f7ff fd10 	bl	80092a4 <vPortExitCritical>
		vTaskSuspendAll();
 8009884:	f000 fd60 	bl	800a348 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009888:	f7ff fcec 	bl	8009264 <vPortEnterCritical>
 800988c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009890:	2bff      	cmp	r3, #255	; 0xff
 8009892:	bf08      	it	eq
 8009894:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 8009898:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800989c:	2bff      	cmp	r3, #255	; 0xff
 800989e:	bf08      	it	eq
 80098a0:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 80098a4:	f7ff fcfe 	bl	80092a4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80098a8:	a901      	add	r1, sp, #4
 80098aa:	a802      	add	r0, sp, #8
 80098ac:	f000 ff4a 	bl	800a744 <xTaskCheckForTimeOut>
 80098b0:	2800      	cmp	r0, #0
 80098b2:	d14a      	bne.n	800994a <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80098b4:	f7ff fcd6 	bl	8009264 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 80098b8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80098ba:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80098bc:	429a      	cmp	r2, r3
 80098be:	d131      	bne.n	8009924 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80098c0:	f7ff fcf0 	bl	80092a4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 80098c4:	9901      	ldr	r1, [sp, #4]
 80098c6:	f104 0010 	add.w	r0, r4, #16
 80098ca:	f000 feb3 	bl	800a634 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80098ce:	4620      	mov	r0, r4
 80098d0:	f7ff fe62 	bl	8009598 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80098d4:	f000 fddc 	bl	800a490 <xTaskResumeAll>
 80098d8:	b360      	cbz	r0, 8009934 <xQueueGenericSend+0x144>
 80098da:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80098dc:	f7ff fcc2 	bl	8009264 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80098e0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80098e2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80098e4:	429a      	cmp	r2, r3
 80098e6:	d301      	bcc.n	80098ec <xQueueGenericSend+0xfc>
 80098e8:	2f02      	cmp	r7, #2
 80098ea:	d1bf      	bne.n	800986c <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80098ec:	463a      	mov	r2, r7
 80098ee:	4641      	mov	r1, r8
 80098f0:	4620      	mov	r0, r4
 80098f2:	f7ff fe06 	bl	8009502 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80098f6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80098f8:	b11b      	cbz	r3, 8009902 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80098fa:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80098fe:	f000 fed1 	bl	800a6a4 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8009902:	b148      	cbz	r0, 8009918 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 8009904:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009908:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800990c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009910:	f3bf 8f4f 	dsb	sy
 8009914:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009918:	f7ff fcc4 	bl	80092a4 <vPortExitCritical>
				return pdPASS;
 800991c:	2001      	movs	r0, #1
}
 800991e:	b005      	add	sp, #20
 8009920:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 8009924:	f7ff fcbe 	bl	80092a4 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8009928:	4620      	mov	r0, r4
 800992a:	f7ff fe35 	bl	8009598 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800992e:	f000 fdaf 	bl	800a490 <xTaskResumeAll>
 8009932:	e7d2      	b.n	80098da <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 8009934:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009938:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800993c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009940:	f3bf 8f4f 	dsb	sy
 8009944:	f3bf 8f6f 	isb	sy
 8009948:	e7c7      	b.n	80098da <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 800994a:	4620      	mov	r0, r4
 800994c:	f7ff fe24 	bl	8009598 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009950:	f000 fd9e 	bl	800a490 <xTaskResumeAll>
 8009954:	e78e      	b.n	8009874 <xQueueGenericSend+0x84>

08009956 <xQueueGenericSendFromISR>:
{
 8009956:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800995a:	4689      	mov	r9, r1
 800995c:	4690      	mov	r8, r2
 800995e:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8009960:	4604      	mov	r4, r0
 8009962:	b940      	cbnz	r0, 8009976 <xQueueGenericSendFromISR+0x20>
 8009964:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009968:	f383 8811 	msr	BASEPRI, r3
 800996c:	f3bf 8f6f 	isb	sy
 8009970:	f3bf 8f4f 	dsb	sy
 8009974:	e7fe      	b.n	8009974 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009976:	b951      	cbnz	r1, 800998e <xQueueGenericSendFromISR+0x38>
 8009978:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800997a:	b143      	cbz	r3, 800998e <xQueueGenericSendFromISR+0x38>
 800997c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009980:	f383 8811 	msr	BASEPRI, r3
 8009984:	f3bf 8f6f 	isb	sy
 8009988:	f3bf 8f4f 	dsb	sy
 800998c:	e7fe      	b.n	800998c <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800998e:	2f02      	cmp	r7, #2
 8009990:	d10b      	bne.n	80099aa <xQueueGenericSendFromISR+0x54>
 8009992:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009994:	2b01      	cmp	r3, #1
 8009996:	d008      	beq.n	80099aa <xQueueGenericSendFromISR+0x54>
 8009998:	f04f 0350 	mov.w	r3, #80	; 0x50
 800999c:	f383 8811 	msr	BASEPRI, r3
 80099a0:	f3bf 8f6f 	isb	sy
 80099a4:	f3bf 8f4f 	dsb	sy
 80099a8:	e7fe      	b.n	80099a8 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80099aa:	f7ff fd71 	bl	8009490 <vPortValidateInterruptPriority>
	__asm volatile
 80099ae:	f3ef 8611 	mrs	r6, BASEPRI
 80099b2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80099b6:	f383 8811 	msr	BASEPRI, r3
 80099ba:	f3bf 8f6f 	isb	sy
 80099be:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80099c2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80099c4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80099c6:	429a      	cmp	r2, r3
 80099c8:	d301      	bcc.n	80099ce <xQueueGenericSendFromISR+0x78>
 80099ca:	2f02      	cmp	r7, #2
 80099cc:	d123      	bne.n	8009a16 <xQueueGenericSendFromISR+0xc0>
			const int8_t cTxLock = pxQueue->cTxLock;
 80099ce:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 80099d2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 80099d4:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80099d6:	463a      	mov	r2, r7
 80099d8:	4649      	mov	r1, r9
 80099da:	4620      	mov	r0, r4
 80099dc:	f7ff fd91 	bl	8009502 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 80099e0:	1c6b      	adds	r3, r5, #1
 80099e2:	d113      	bne.n	8009a0c <xQueueGenericSendFromISR+0xb6>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80099e4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80099e6:	b90b      	cbnz	r3, 80099ec <xQueueGenericSendFromISR+0x96>
			xReturn = pdPASS;
 80099e8:	2001      	movs	r0, #1
 80099ea:	e00b      	b.n	8009a04 <xQueueGenericSendFromISR+0xae>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80099ec:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80099f0:	f000 fe58 	bl	800a6a4 <xTaskRemoveFromEventList>
 80099f4:	2800      	cmp	r0, #0
 80099f6:	d0f7      	beq.n	80099e8 <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 80099f8:	f1b8 0f00 	cmp.w	r8, #0
 80099fc:	d0f4      	beq.n	80099e8 <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 80099fe:	2001      	movs	r0, #1
 8009a00:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8009a04:	f386 8811 	msr	BASEPRI, r6
}
 8009a08:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8009a0c:	3501      	adds	r5, #1
 8009a0e:	b26d      	sxtb	r5, r5
 8009a10:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8009a14:	e7e8      	b.n	80099e8 <xQueueGenericSendFromISR+0x92>
			xReturn = errQUEUE_FULL;
 8009a16:	2000      	movs	r0, #0
 8009a18:	e7f4      	b.n	8009a04 <xQueueGenericSendFromISR+0xae>

08009a1a <xQueueGiveFromISR>:
{
 8009a1a:	b570      	push	{r4, r5, r6, lr}
 8009a1c:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8009a1e:	4604      	mov	r4, r0
 8009a20:	b940      	cbnz	r0, 8009a34 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8009a22:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a26:	f383 8811 	msr	BASEPRI, r3
 8009a2a:	f3bf 8f6f 	isb	sy
 8009a2e:	f3bf 8f4f 	dsb	sy
 8009a32:	e7fe      	b.n	8009a32 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8009a34:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009a36:	b143      	cbz	r3, 8009a4a <xQueueGiveFromISR+0x30>
 8009a38:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a3c:	f383 8811 	msr	BASEPRI, r3
 8009a40:	f3bf 8f6f 	isb	sy
 8009a44:	f3bf 8f4f 	dsb	sy
 8009a48:	e7fe      	b.n	8009a48 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8009a4a:	6803      	ldr	r3, [r0, #0]
 8009a4c:	b953      	cbnz	r3, 8009a64 <xQueueGiveFromISR+0x4a>
 8009a4e:	6883      	ldr	r3, [r0, #8]
 8009a50:	b143      	cbz	r3, 8009a64 <xQueueGiveFromISR+0x4a>
 8009a52:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a56:	f383 8811 	msr	BASEPRI, r3
 8009a5a:	f3bf 8f6f 	isb	sy
 8009a5e:	f3bf 8f4f 	dsb	sy
 8009a62:	e7fe      	b.n	8009a62 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8009a64:	f7ff fd14 	bl	8009490 <vPortValidateInterruptPriority>
	__asm volatile
 8009a68:	f3ef 8611 	mrs	r6, BASEPRI
 8009a6c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a70:	f383 8811 	msr	BASEPRI, r3
 8009a74:	f3bf 8f6f 	isb	sy
 8009a78:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009a7c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8009a7e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009a80:	4293      	cmp	r3, r2
 8009a82:	d91c      	bls.n	8009abe <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8009a84:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8009a88:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8009a8a:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 8009a8c:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8009a8e:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 8009a90:	d110      	bne.n	8009ab4 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009a92:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009a94:	b90b      	cbnz	r3, 8009a9a <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8009a96:	2001      	movs	r0, #1
 8009a98:	e009      	b.n	8009aae <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009a9a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009a9e:	f000 fe01 	bl	800a6a4 <xTaskRemoveFromEventList>
 8009aa2:	2800      	cmp	r0, #0
 8009aa4:	d0f7      	beq.n	8009a96 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 8009aa6:	2d00      	cmp	r5, #0
 8009aa8:	d0f5      	beq.n	8009a96 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8009aaa:	2001      	movs	r0, #1
 8009aac:	6028      	str	r0, [r5, #0]
	__asm volatile
 8009aae:	f386 8811 	msr	BASEPRI, r6
}
 8009ab2:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8009ab4:	3301      	adds	r3, #1
 8009ab6:	b25b      	sxtb	r3, r3
 8009ab8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8009abc:	e7eb      	b.n	8009a96 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 8009abe:	2000      	movs	r0, #0
 8009ac0:	e7f5      	b.n	8009aae <xQueueGiveFromISR+0x94>

08009ac2 <xQueueReceive>:
{
 8009ac2:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8009ac6:	460f      	mov	r7, r1
 8009ac8:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8009aca:	4604      	mov	r4, r0
 8009acc:	b940      	cbnz	r0, 8009ae0 <xQueueReceive+0x1e>
	__asm volatile
 8009ace:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009ad2:	f383 8811 	msr	BASEPRI, r3
 8009ad6:	f3bf 8f6f 	isb	sy
 8009ada:	f3bf 8f4f 	dsb	sy
 8009ade:	e7fe      	b.n	8009ade <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009ae0:	b951      	cbnz	r1, 8009af8 <xQueueReceive+0x36>
 8009ae2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009ae4:	b143      	cbz	r3, 8009af8 <xQueueReceive+0x36>
 8009ae6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009aea:	f383 8811 	msr	BASEPRI, r3
 8009aee:	f3bf 8f6f 	isb	sy
 8009af2:	f3bf 8f4f 	dsb	sy
 8009af6:	e7fe      	b.n	8009af6 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009af8:	f000 fe66 	bl	800a7c8 <xTaskGetSchedulerState>
 8009afc:	4606      	mov	r6, r0
 8009afe:	b950      	cbnz	r0, 8009b16 <xQueueReceive+0x54>
 8009b00:	9b01      	ldr	r3, [sp, #4]
 8009b02:	b14b      	cbz	r3, 8009b18 <xQueueReceive+0x56>
 8009b04:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009b08:	f383 8811 	msr	BASEPRI, r3
 8009b0c:	f3bf 8f6f 	isb	sy
 8009b10:	f3bf 8f4f 	dsb	sy
 8009b14:	e7fe      	b.n	8009b14 <xQueueReceive+0x52>
 8009b16:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8009b18:	f04f 0800 	mov.w	r8, #0
 8009b1c:	e03d      	b.n	8009b9a <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 8009b1e:	9d01      	ldr	r5, [sp, #4]
 8009b20:	b91d      	cbnz	r5, 8009b2a <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 8009b22:	f7ff fbbf 	bl	80092a4 <vPortExitCritical>
				return errQUEUE_EMPTY;
 8009b26:	2000      	movs	r0, #0
 8009b28:	e056      	b.n	8009bd8 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 8009b2a:	b916      	cbnz	r6, 8009b32 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8009b2c:	a802      	add	r0, sp, #8
 8009b2e:	f000 fdfd 	bl	800a72c <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8009b32:	f7ff fbb7 	bl	80092a4 <vPortExitCritical>
		vTaskSuspendAll();
 8009b36:	f000 fc07 	bl	800a348 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009b3a:	f7ff fb93 	bl	8009264 <vPortEnterCritical>
 8009b3e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009b42:	2bff      	cmp	r3, #255	; 0xff
 8009b44:	bf08      	it	eq
 8009b46:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 8009b4a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8009b4e:	2bff      	cmp	r3, #255	; 0xff
 8009b50:	bf08      	it	eq
 8009b52:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8009b56:	f7ff fba5 	bl	80092a4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009b5a:	a901      	add	r1, sp, #4
 8009b5c:	a802      	add	r0, sp, #8
 8009b5e:	f000 fdf1 	bl	800a744 <xTaskCheckForTimeOut>
 8009b62:	2800      	cmp	r0, #0
 8009b64:	d141      	bne.n	8009bea <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009b66:	4620      	mov	r0, r4
 8009b68:	f7ff fcc0 	bl	80094ec <prvIsQueueEmpty>
 8009b6c:	b3b8      	cbz	r0, 8009bde <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8009b6e:	9901      	ldr	r1, [sp, #4]
 8009b70:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009b74:	f000 fd5e 	bl	800a634 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8009b78:	4620      	mov	r0, r4
 8009b7a:	f7ff fd0d 	bl	8009598 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8009b7e:	f000 fc87 	bl	800a490 <xTaskResumeAll>
 8009b82:	b948      	cbnz	r0, 8009b98 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 8009b84:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009b88:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009b8c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009b90:	f3bf 8f4f 	dsb	sy
 8009b94:	f3bf 8f6f 	isb	sy
 8009b98:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8009b9a:	f7ff fb63 	bl	8009264 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009b9e:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8009ba0:	2d00      	cmp	r5, #0
 8009ba2:	d0bc      	beq.n	8009b1e <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009ba4:	4639      	mov	r1, r7
 8009ba6:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009ba8:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009baa:	f7ff fcdf 	bl	800956c <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009bae:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009bb0:	6923      	ldr	r3, [r4, #16]
 8009bb2:	b173      	cbz	r3, 8009bd2 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009bb4:	f104 0010 	add.w	r0, r4, #16
 8009bb8:	f000 fd74 	bl	800a6a4 <xTaskRemoveFromEventList>
 8009bbc:	b148      	cbz	r0, 8009bd2 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 8009bbe:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009bc2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009bc6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009bca:	f3bf 8f4f 	dsb	sy
 8009bce:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009bd2:	f7ff fb67 	bl	80092a4 <vPortExitCritical>
				return pdPASS;
 8009bd6:	2001      	movs	r0, #1
}
 8009bd8:	b004      	add	sp, #16
 8009bda:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 8009bde:	4620      	mov	r0, r4
 8009be0:	f7ff fcda 	bl	8009598 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8009be4:	f000 fc54 	bl	800a490 <xTaskResumeAll>
 8009be8:	e7d6      	b.n	8009b98 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 8009bea:	4620      	mov	r0, r4
 8009bec:	f7ff fcd4 	bl	8009598 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009bf0:	f000 fc4e 	bl	800a490 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009bf4:	4620      	mov	r0, r4
 8009bf6:	f7ff fc79 	bl	80094ec <prvIsQueueEmpty>
 8009bfa:	2800      	cmp	r0, #0
 8009bfc:	d0cc      	beq.n	8009b98 <xQueueReceive+0xd6>
 8009bfe:	e792      	b.n	8009b26 <xQueueReceive+0x64>

08009c00 <xQueueSemaphoreTake>:
{
 8009c00:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009c02:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8009c04:	4604      	mov	r4, r0
{
 8009c06:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8009c08:	b940      	cbnz	r0, 8009c1c <xQueueSemaphoreTake+0x1c>
 8009c0a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c0e:	f383 8811 	msr	BASEPRI, r3
 8009c12:	f3bf 8f6f 	isb	sy
 8009c16:	f3bf 8f4f 	dsb	sy
 8009c1a:	e7fe      	b.n	8009c1a <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 8009c1c:	6c05      	ldr	r5, [r0, #64]	; 0x40
 8009c1e:	b145      	cbz	r5, 8009c32 <xQueueSemaphoreTake+0x32>
 8009c20:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c24:	f383 8811 	msr	BASEPRI, r3
 8009c28:	f3bf 8f6f 	isb	sy
 8009c2c:	f3bf 8f4f 	dsb	sy
 8009c30:	e7fe      	b.n	8009c30 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009c32:	f000 fdc9 	bl	800a7c8 <xTaskGetSchedulerState>
 8009c36:	4606      	mov	r6, r0
 8009c38:	b950      	cbnz	r0, 8009c50 <xQueueSemaphoreTake+0x50>
 8009c3a:	9b01      	ldr	r3, [sp, #4]
 8009c3c:	b15b      	cbz	r3, 8009c56 <xQueueSemaphoreTake+0x56>
 8009c3e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c42:	f383 8811 	msr	BASEPRI, r3
 8009c46:	f3bf 8f6f 	isb	sy
 8009c4a:	f3bf 8f4f 	dsb	sy
 8009c4e:	e7fe      	b.n	8009c4e <xQueueSemaphoreTake+0x4e>
 8009c50:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8009c52:	2700      	movs	r7, #0
 8009c54:	e053      	b.n	8009cfe <xQueueSemaphoreTake+0xfe>
 8009c56:	4605      	mov	r5, r0
 8009c58:	e7fb      	b.n	8009c52 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 8009c5a:	9b01      	ldr	r3, [sp, #4]
 8009c5c:	b963      	cbnz	r3, 8009c78 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 8009c5e:	b145      	cbz	r5, 8009c72 <xQueueSemaphoreTake+0x72>
 8009c60:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c64:	f383 8811 	msr	BASEPRI, r3
 8009c68:	f3bf 8f6f 	isb	sy
 8009c6c:	f3bf 8f4f 	dsb	sy
 8009c70:	e7fe      	b.n	8009c70 <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 8009c72:	f7ff fb17 	bl	80092a4 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8009c76:	e062      	b.n	8009d3e <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 8009c78:	b916      	cbnz	r6, 8009c80 <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8009c7a:	a802      	add	r0, sp, #8
 8009c7c:	f000 fd56 	bl	800a72c <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8009c80:	f7ff fb10 	bl	80092a4 <vPortExitCritical>
		vTaskSuspendAll();
 8009c84:	f000 fb60 	bl	800a348 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009c88:	f7ff faec 	bl	8009264 <vPortEnterCritical>
 8009c8c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009c90:	2bff      	cmp	r3, #255	; 0xff
 8009c92:	bf08      	it	eq
 8009c94:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 8009c98:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8009c9c:	2bff      	cmp	r3, #255	; 0xff
 8009c9e:	bf08      	it	eq
 8009ca0:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 8009ca4:	f7ff fafe 	bl	80092a4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009ca8:	a901      	add	r1, sp, #4
 8009caa:	a802      	add	r0, sp, #8
 8009cac:	f000 fd4a 	bl	800a744 <xTaskCheckForTimeOut>
 8009cb0:	2800      	cmp	r0, #0
 8009cb2:	d14d      	bne.n	8009d50 <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009cb4:	4620      	mov	r0, r4
 8009cb6:	f7ff fc19 	bl	80094ec <prvIsQueueEmpty>
 8009cba:	2800      	cmp	r0, #0
 8009cbc:	d042      	beq.n	8009d44 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8009cbe:	6823      	ldr	r3, [r4, #0]
 8009cc0:	b93b      	cbnz	r3, 8009cd2 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 8009cc2:	f7ff facf 	bl	8009264 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8009cc6:	68a0      	ldr	r0, [r4, #8]
 8009cc8:	f000 fd8e 	bl	800a7e8 <xTaskPriorityInherit>
 8009ccc:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 8009cce:	f7ff fae9 	bl	80092a4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8009cd2:	9901      	ldr	r1, [sp, #4]
 8009cd4:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009cd8:	f000 fcac 	bl	800a634 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8009cdc:	4620      	mov	r0, r4
 8009cde:	f7ff fc5b 	bl	8009598 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8009ce2:	f000 fbd5 	bl	800a490 <xTaskResumeAll>
 8009ce6:	b948      	cbnz	r0, 8009cfc <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 8009ce8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009cec:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009cf0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009cf4:	f3bf 8f4f 	dsb	sy
 8009cf8:	f3bf 8f6f 	isb	sy
 8009cfc:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8009cfe:	f7ff fab1 	bl	8009264 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8009d02:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8009d04:	2b00      	cmp	r3, #0
 8009d06:	d0a8      	beq.n	8009c5a <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8009d08:	3b01      	subs	r3, #1
 8009d0a:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8009d0c:	6823      	ldr	r3, [r4, #0]
 8009d0e:	b913      	cbnz	r3, 8009d16 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 8009d10:	f000 fe42 	bl	800a998 <pvTaskIncrementMutexHeldCount>
 8009d14:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009d16:	6923      	ldr	r3, [r4, #16]
 8009d18:	b173      	cbz	r3, 8009d38 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009d1a:	f104 0010 	add.w	r0, r4, #16
 8009d1e:	f000 fcc1 	bl	800a6a4 <xTaskRemoveFromEventList>
 8009d22:	b148      	cbz	r0, 8009d38 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 8009d24:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009d28:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009d2c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009d30:	f3bf 8f4f 	dsb	sy
 8009d34:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009d38:	f7ff fab4 	bl	80092a4 <vPortExitCritical>
				return pdPASS;
 8009d3c:	2501      	movs	r5, #1
}
 8009d3e:	4628      	mov	r0, r5
 8009d40:	b005      	add	sp, #20
 8009d42:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 8009d44:	4620      	mov	r0, r4
 8009d46:	f7ff fc27 	bl	8009598 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8009d4a:	f000 fba1 	bl	800a490 <xTaskResumeAll>
 8009d4e:	e7d5      	b.n	8009cfc <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 8009d50:	4620      	mov	r0, r4
 8009d52:	f7ff fc21 	bl	8009598 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009d56:	f000 fb9b 	bl	800a490 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009d5a:	4620      	mov	r0, r4
 8009d5c:	f7ff fbc6 	bl	80094ec <prvIsQueueEmpty>
 8009d60:	2800      	cmp	r0, #0
 8009d62:	d0cb      	beq.n	8009cfc <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 8009d64:	2d00      	cmp	r5, #0
 8009d66:	d0ea      	beq.n	8009d3e <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 8009d68:	f7ff fa7c 	bl	8009264 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 8009d6c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8009d6e:	b119      	cbz	r1, 8009d78 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8009d70:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8009d72:	6819      	ldr	r1, [r3, #0]
 8009d74:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8009d78:	68a0      	ldr	r0, [r4, #8]
 8009d7a:	f000 fdbb 	bl	800a8f4 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 8009d7e:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 8009d80:	f7ff fa90 	bl	80092a4 <vPortExitCritical>
 8009d84:	e7db      	b.n	8009d3e <xQueueSemaphoreTake+0x13e>

08009d86 <xQueueReceiveFromISR>:
{
 8009d86:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009d8a:	4689      	mov	r9, r1
 8009d8c:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 8009d8e:	4605      	mov	r5, r0
 8009d90:	b940      	cbnz	r0, 8009da4 <xQueueReceiveFromISR+0x1e>
 8009d92:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d96:	f383 8811 	msr	BASEPRI, r3
 8009d9a:	f3bf 8f6f 	isb	sy
 8009d9e:	f3bf 8f4f 	dsb	sy
 8009da2:	e7fe      	b.n	8009da2 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009da4:	b951      	cbnz	r1, 8009dbc <xQueueReceiveFromISR+0x36>
 8009da6:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009da8:	b143      	cbz	r3, 8009dbc <xQueueReceiveFromISR+0x36>
 8009daa:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009dae:	f383 8811 	msr	BASEPRI, r3
 8009db2:	f3bf 8f6f 	isb	sy
 8009db6:	f3bf 8f4f 	dsb	sy
 8009dba:	e7fe      	b.n	8009dba <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8009dbc:	f7ff fb68 	bl	8009490 <vPortValidateInterruptPriority>
	__asm volatile
 8009dc0:	f3ef 8711 	mrs	r7, BASEPRI
 8009dc4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009dc8:	f383 8811 	msr	BASEPRI, r3
 8009dcc:	f3bf 8f6f 	isb	sy
 8009dd0:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009dd4:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8009dd6:	b31c      	cbz	r4, 8009e20 <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 8009dd8:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009ddc:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 8009dde:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009de0:	4628      	mov	r0, r5
 8009de2:	f7ff fbc3 	bl	800956c <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009de6:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 8009de8:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009dea:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 8009dec:	d113      	bne.n	8009e16 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009dee:	692b      	ldr	r3, [r5, #16]
 8009df0:	b90b      	cbnz	r3, 8009df6 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 8009df2:	2001      	movs	r0, #1
 8009df4:	e00b      	b.n	8009e0e <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009df6:	f105 0010 	add.w	r0, r5, #16
 8009dfa:	f000 fc53 	bl	800a6a4 <xTaskRemoveFromEventList>
 8009dfe:	2800      	cmp	r0, #0
 8009e00:	d0f7      	beq.n	8009df2 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 8009e02:	f1b8 0f00 	cmp.w	r8, #0
 8009e06:	d0f4      	beq.n	8009df2 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8009e08:	2001      	movs	r0, #1
 8009e0a:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8009e0e:	f387 8811 	msr	BASEPRI, r7
}
 8009e12:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8009e16:	3601      	adds	r6, #1
 8009e18:	b276      	sxtb	r6, r6
 8009e1a:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 8009e1e:	e7e8      	b.n	8009df2 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 8009e20:	4620      	mov	r0, r4
 8009e22:	e7f4      	b.n	8009e0e <xQueueReceiveFromISR+0x88>

08009e24 <uxQueueMessagesWaiting>:
{
 8009e24:	b513      	push	{r0, r1, r4, lr}
	configASSERT( xQueue );
 8009e26:	4604      	mov	r4, r0
 8009e28:	b940      	cbnz	r0, 8009e3c <uxQueueMessagesWaiting+0x18>
	__asm volatile
 8009e2a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009e2e:	f383 8811 	msr	BASEPRI, r3
 8009e32:	f3bf 8f6f 	isb	sy
 8009e36:	f3bf 8f4f 	dsb	sy
 8009e3a:	e7fe      	b.n	8009e3a <uxQueueMessagesWaiting+0x16>
	taskENTER_CRITICAL();
 8009e3c:	f7ff fa12 	bl	8009264 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 8009e40:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8009e42:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 8009e44:	f7ff fa2e 	bl	80092a4 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 8009e48:	9801      	ldr	r0, [sp, #4]
 8009e4a:	b002      	add	sp, #8
 8009e4c:	bd10      	pop	{r4, pc}

08009e4e <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 8009e4e:	b940      	cbnz	r0, 8009e62 <uxQueueMessagesWaitingFromISR+0x14>
 8009e50:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009e54:	f383 8811 	msr	BASEPRI, r3
 8009e58:	f3bf 8f6f 	isb	sy
 8009e5c:	f3bf 8f4f 	dsb	sy
 8009e60:	e7fe      	b.n	8009e60 <uxQueueMessagesWaitingFromISR+0x12>
	uxReturn = pxQueue->uxMessagesWaiting;
 8009e62:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 8009e64:	4770      	bx	lr
	...

08009e68 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8009e68:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8009e6a:	4a07      	ldr	r2, [pc, #28]	; (8009e88 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009e6c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8009e6e:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 8009e72:	b92c      	cbnz	r4, 8009e80 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8009e74:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8009e78:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 8009e7c:	6050      	str	r0, [r2, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 8009e7e:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009e80:	3301      	adds	r3, #1
 8009e82:	2b08      	cmp	r3, #8
 8009e84:	d1f3      	bne.n	8009e6e <vQueueAddToRegistry+0x6>
 8009e86:	e7fa      	b.n	8009e7e <vQueueAddToRegistry+0x16>
 8009e88:	20012f3c 	.word	0x20012f3c

08009e8c <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8009e8c:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8009e8e:	4a08      	ldr	r2, [pc, #32]	; (8009eb0 <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009e90:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8009e92:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8009e96:	684c      	ldr	r4, [r1, #4]
 8009e98:	4284      	cmp	r4, r0
 8009e9a:	d104      	bne.n	8009ea6 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8009e9c:	2000      	movs	r0, #0
 8009e9e:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 8009ea2:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8009ea4:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009ea6:	3301      	adds	r3, #1
 8009ea8:	2b08      	cmp	r3, #8
 8009eaa:	d1f2      	bne.n	8009e92 <vQueueUnregisterQueue+0x6>
 8009eac:	e7fa      	b.n	8009ea4 <vQueueUnregisterQueue+0x18>
 8009eae:	bf00      	nop
 8009eb0:	20012f3c 	.word	0x20012f3c

08009eb4 <vQueueDelete>:
{
 8009eb4:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8009eb6:	4604      	mov	r4, r0
 8009eb8:	b940      	cbnz	r0, 8009ecc <vQueueDelete+0x18>
 8009eba:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009ebe:	f383 8811 	msr	BASEPRI, r3
 8009ec2:	f3bf 8f6f 	isb	sy
 8009ec6:	f3bf 8f4f 	dsb	sy
 8009eca:	e7fe      	b.n	8009eca <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 8009ecc:	f7ff ffde 	bl	8009e8c <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8009ed0:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8009ed4:	b923      	cbnz	r3, 8009ee0 <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 8009ed6:	4620      	mov	r0, r4
}
 8009ed8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8009edc:	f7ff b8d6 	b.w	800908c <vPortFree>
}
 8009ee0:	bd10      	pop	{r4, pc}

08009ee2 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8009ee2:	b570      	push	{r4, r5, r6, lr}
 8009ee4:	4604      	mov	r4, r0
 8009ee6:	460d      	mov	r5, r1
 8009ee8:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8009eea:	f7ff f9bb 	bl	8009264 <vPortEnterCritical>
 8009eee:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009ef2:	2bff      	cmp	r3, #255	; 0xff
 8009ef4:	bf04      	itt	eq
 8009ef6:	2300      	moveq	r3, #0
 8009ef8:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8009efc:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8009f00:	2bff      	cmp	r3, #255	; 0xff
 8009f02:	bf04      	itt	eq
 8009f04:	2300      	moveq	r3, #0
 8009f06:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 8009f0a:	f7ff f9cb 	bl	80092a4 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 8009f0e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8009f10:	b92b      	cbnz	r3, 8009f1e <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 8009f12:	4632      	mov	r2, r6
 8009f14:	4629      	mov	r1, r5
 8009f16:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009f1a:	f000 fba5 	bl	800a668 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 8009f1e:	4620      	mov	r0, r4
	}
 8009f20:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8009f24:	f7ff bb38 	b.w	8009598 <prvUnlockQueue>

08009f28 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8009f28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009f2c:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 8009f2e:	f7ff f999 	bl	8009264 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 8009f32:	4b30      	ldr	r3, [pc, #192]	; (8009ff4 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 8009f34:	4e30      	ldr	r6, [pc, #192]	; (8009ff8 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 8009f36:	681a      	ldr	r2, [r3, #0]
 8009f38:	4f30      	ldr	r7, [pc, #192]	; (8009ffc <prvAddNewTaskToReadyList+0xd4>)
 8009f3a:	3201      	adds	r2, #1
 8009f3c:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 8009f3e:	6835      	ldr	r5, [r6, #0]
 8009f40:	2d00      	cmp	r5, #0
 8009f42:	d14b      	bne.n	8009fdc <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8009f44:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8009f46:	681b      	ldr	r3, [r3, #0]
 8009f48:	2b01      	cmp	r3, #1
 8009f4a:	d11f      	bne.n	8009f8c <prvAddNewTaskToReadyList+0x64>
 8009f4c:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8009f4e:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8009f50:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8009f52:	f7ff f8d9 	bl	8009108 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8009f56:	2d38      	cmp	r5, #56	; 0x38
 8009f58:	f108 0814 	add.w	r8, r8, #20
 8009f5c:	d1f7      	bne.n	8009f4e <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 8009f5e:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800a024 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 8009f62:	4d27      	ldr	r5, [pc, #156]	; (800a000 <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 8009f64:	4640      	mov	r0, r8
 8009f66:	f7ff f8cf 	bl	8009108 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8009f6a:	4628      	mov	r0, r5
 8009f6c:	f7ff f8cc 	bl	8009108 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 8009f70:	4824      	ldr	r0, [pc, #144]	; (800a004 <prvAddNewTaskToReadyList+0xdc>)
 8009f72:	f7ff f8c9 	bl	8009108 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8009f76:	4824      	ldr	r0, [pc, #144]	; (800a008 <prvAddNewTaskToReadyList+0xe0>)
 8009f78:	f7ff f8c6 	bl	8009108 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8009f7c:	4823      	ldr	r0, [pc, #140]	; (800a00c <prvAddNewTaskToReadyList+0xe4>)
 8009f7e:	f7ff f8c3 	bl	8009108 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 8009f82:	4b23      	ldr	r3, [pc, #140]	; (800a010 <prvAddNewTaskToReadyList+0xe8>)
 8009f84:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8009f88:	4b22      	ldr	r3, [pc, #136]	; (800a014 <prvAddNewTaskToReadyList+0xec>)
 8009f8a:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8009f8c:	4a22      	ldr	r2, [pc, #136]	; (800a018 <prvAddNewTaskToReadyList+0xf0>)
 8009f8e:	6813      	ldr	r3, [r2, #0]
 8009f90:	3301      	adds	r3, #1
 8009f92:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8009f94:	4a21      	ldr	r2, [pc, #132]	; (800a01c <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8009f96:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8009f98:	6811      	ldr	r1, [r2, #0]
 8009f9a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009f9c:	2014      	movs	r0, #20
 8009f9e:	428b      	cmp	r3, r1
 8009fa0:	fb00 7003 	mla	r0, r0, r3, r7
 8009fa4:	f104 0104 	add.w	r1, r4, #4
 8009fa8:	bf88      	it	hi
 8009faa:	6013      	strhi	r3, [r2, #0]
 8009fac:	f7ff f8ba 	bl	8009124 <vListInsertEnd>
	taskEXIT_CRITICAL();
 8009fb0:	f7ff f978 	bl	80092a4 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8009fb4:	4b1a      	ldr	r3, [pc, #104]	; (800a020 <prvAddNewTaskToReadyList+0xf8>)
 8009fb6:	681b      	ldr	r3, [r3, #0]
 8009fb8:	b173      	cbz	r3, 8009fd8 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8009fba:	6833      	ldr	r3, [r6, #0]
 8009fbc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009fbe:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009fc0:	429a      	cmp	r2, r3
 8009fc2:	d209      	bcs.n	8009fd8 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 8009fc4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009fc8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009fcc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009fd0:	f3bf 8f4f 	dsb	sy
 8009fd4:	f3bf 8f6f 	isb	sy
}
 8009fd8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8009fdc:	4b10      	ldr	r3, [pc, #64]	; (800a020 <prvAddNewTaskToReadyList+0xf8>)
 8009fde:	681a      	ldr	r2, [r3, #0]
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8009fe0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
			if( xSchedulerRunning == pdFALSE )
 8009fe2:	2a00      	cmp	r2, #0
 8009fe4:	d1d2      	bne.n	8009f8c <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8009fe6:	6832      	ldr	r2, [r6, #0]
 8009fe8:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8009fea:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8009fec:	bf98      	it	ls
 8009fee:	6034      	strls	r4, [r6, #0]
 8009ff0:	e7cc      	b.n	8009f8c <prvAddNewTaskToReadyList+0x64>
 8009ff2:	bf00      	nop
 8009ff4:	200133e8 	.word	0x200133e8
 8009ff8:	20012f7c 	.word	0x20012f7c
 8009ffc:	20012f88 	.word	0x20012f88
 800a000:	20013410 	.word	0x20013410
 800a004:	20013430 	.word	0x20013430
 800a008:	2001345c 	.word	0x2001345c
 800a00c:	20013448 	.word	0x20013448
 800a010:	20012f80 	.word	0x20012f80
 800a014:	20012f84 	.word	0x20012f84
 800a018:	200133f4 	.word	0x200133f4
 800a01c:	200133f8 	.word	0x200133f8
 800a020:	20013444 	.word	0x20013444
 800a024:	200133fc 	.word	0x200133fc

0800a028 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 800a028:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800a02a:	4b15      	ldr	r3, [pc, #84]	; (800a080 <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a02c:	4d15      	ldr	r5, [pc, #84]	; (800a084 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 800a02e:	681c      	ldr	r4, [r3, #0]
{
 800a030:	4606      	mov	r6, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a032:	6828      	ldr	r0, [r5, #0]
 800a034:	3004      	adds	r0, #4
{
 800a036:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a038:	f7ff f897 	bl	800916a <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800a03c:	1c73      	adds	r3, r6, #1
 800a03e:	d107      	bne.n	800a050 <prvAddCurrentTaskToDelayedList+0x28>
 800a040:	b137      	cbz	r7, 800a050 <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800a042:	6829      	ldr	r1, [r5, #0]
 800a044:	4810      	ldr	r0, [pc, #64]	; (800a088 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 800a046:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800a04a:	3104      	adds	r1, #4
 800a04c:	f7ff b86a 	b.w	8009124 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800a050:	682b      	ldr	r3, [r5, #0]
 800a052:	19a4      	adds	r4, r4, r6
 800a054:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800a056:	d307      	bcc.n	800a068 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800a058:	4b0c      	ldr	r3, [pc, #48]	; (800a08c <prvAddCurrentTaskToDelayedList+0x64>)
 800a05a:	6818      	ldr	r0, [r3, #0]
 800a05c:	6829      	ldr	r1, [r5, #0]
}
 800a05e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800a062:	3104      	adds	r1, #4
 800a064:	f7ff b86a 	b.w	800913c <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800a068:	4b09      	ldr	r3, [pc, #36]	; (800a090 <prvAddCurrentTaskToDelayedList+0x68>)
 800a06a:	6818      	ldr	r0, [r3, #0]
 800a06c:	6829      	ldr	r1, [r5, #0]
 800a06e:	3104      	adds	r1, #4
 800a070:	f7ff f864 	bl	800913c <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800a074:	4b07      	ldr	r3, [pc, #28]	; (800a094 <prvAddCurrentTaskToDelayedList+0x6c>)
 800a076:	681a      	ldr	r2, [r3, #0]
 800a078:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 800a07a:	bf88      	it	hi
 800a07c:	601c      	strhi	r4, [r3, #0]
}
 800a07e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a080:	20013470 	.word	0x20013470
 800a084:	20012f7c 	.word	0x20012f7c
 800a088:	20013448 	.word	0x20013448
 800a08c:	20012f84 	.word	0x20012f84
 800a090:	20012f80 	.word	0x20012f80
 800a094:	20013424 	.word	0x20013424

0800a098 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800a098:	4a06      	ldr	r2, [pc, #24]	; (800a0b4 <prvResetNextTaskUnblockTime+0x1c>)
 800a09a:	6813      	ldr	r3, [r2, #0]
 800a09c:	6819      	ldr	r1, [r3, #0]
 800a09e:	4b06      	ldr	r3, [pc, #24]	; (800a0b8 <prvResetNextTaskUnblockTime+0x20>)
 800a0a0:	b919      	cbnz	r1, 800a0aa <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 800a0a2:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800a0a6:	601a      	str	r2, [r3, #0]
}
 800a0a8:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a0aa:	6812      	ldr	r2, [r2, #0]
 800a0ac:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800a0ae:	68d2      	ldr	r2, [r2, #12]
 800a0b0:	6852      	ldr	r2, [r2, #4]
 800a0b2:	e7f8      	b.n	800a0a6 <prvResetNextTaskUnblockTime+0xe>
 800a0b4:	20012f80 	.word	0x20012f80
 800a0b8:	20013424 	.word	0x20013424

0800a0bc <prvDeleteTCB>:
	{
 800a0bc:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800a0be:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 800a0c2:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800a0c4:	b93b      	cbnz	r3, 800a0d6 <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 800a0c6:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800a0c8:	f7fe ffe0 	bl	800908c <vPortFree>
				vPortFree( pxTCB );
 800a0cc:	4620      	mov	r0, r4
	}
 800a0ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 800a0d2:	f7fe bfdb 	b.w	800908c <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800a0d6:	2b01      	cmp	r3, #1
 800a0d8:	d0f9      	beq.n	800a0ce <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800a0da:	2b02      	cmp	r3, #2
 800a0dc:	d008      	beq.n	800a0f0 <prvDeleteTCB+0x34>
 800a0de:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a0e2:	f383 8811 	msr	BASEPRI, r3
 800a0e6:	f3bf 8f6f 	isb	sy
 800a0ea:	f3bf 8f4f 	dsb	sy
 800a0ee:	e7fe      	b.n	800a0ee <prvDeleteTCB+0x32>
	}
 800a0f0:	bd10      	pop	{r4, pc}
	...

0800a0f4 <prvIdleTask>:
{
 800a0f4:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800a0f6:	4c13      	ldr	r4, [pc, #76]	; (800a144 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a0f8:	4f13      	ldr	r7, [pc, #76]	; (800a148 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 800a0fa:	4d14      	ldr	r5, [pc, #80]	; (800a14c <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800a0fc:	6823      	ldr	r3, [r4, #0]
 800a0fe:	b973      	cbnz	r3, 800a11e <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800a100:	4b13      	ldr	r3, [pc, #76]	; (800a150 <prvIdleTask+0x5c>)
 800a102:	681b      	ldr	r3, [r3, #0]
 800a104:	2b01      	cmp	r3, #1
 800a106:	d9f8      	bls.n	800a0fa <prvIdleTask+0x6>
				taskYIELD();
 800a108:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a10c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a110:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a114:	f3bf 8f4f 	dsb	sy
 800a118:	f3bf 8f6f 	isb	sy
 800a11c:	e7ed      	b.n	800a0fa <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 800a11e:	f7ff f8a1 	bl	8009264 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a122:	68fb      	ldr	r3, [r7, #12]
 800a124:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800a126:	1d30      	adds	r0, r6, #4
 800a128:	f7ff f81f 	bl	800916a <uxListRemove>
				--uxCurrentNumberOfTasks;
 800a12c:	682b      	ldr	r3, [r5, #0]
 800a12e:	3b01      	subs	r3, #1
 800a130:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 800a132:	6823      	ldr	r3, [r4, #0]
 800a134:	3b01      	subs	r3, #1
 800a136:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 800a138:	f7ff f8b4 	bl	80092a4 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 800a13c:	4630      	mov	r0, r6
 800a13e:	f7ff ffbd 	bl	800a0bc <prvDeleteTCB>
 800a142:	e7db      	b.n	800a0fc <prvIdleTask+0x8>
 800a144:	200133ec 	.word	0x200133ec
 800a148:	2001345c 	.word	0x2001345c
 800a14c:	200133e8 	.word	0x200133e8
 800a150:	20012f88 	.word	0x20012f88

0800a154 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800a154:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a158:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800a15c:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800a160:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800a162:	4606      	mov	r6, r0
 800a164:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800a166:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800a168:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800a16a:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800a16c:	f013 fb37 	bl	801d7de <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800a170:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800a172:	f1a9 0904 	sub.w	r9, r9, #4
 800a176:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800a178:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 800a17c:	b3b5      	cbz	r5, 800a1ec <prvInitialiseNewTask.constprop.0+0x98>
 800a17e:	1e6b      	subs	r3, r5, #1
 800a180:	f104 0233 	add.w	r2, r4, #51	; 0x33
 800a184:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800a186:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800a18a:	f802 1f01 	strb.w	r1, [r2, #1]!
			if( pcName[ x ] == ( char ) 0x00 )
 800a18e:	b109      	cbz	r1, 800a194 <prvInitialiseNewTask.constprop.0+0x40>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 800a190:	42ab      	cmp	r3, r5
 800a192:	d1f8      	bne.n	800a186 <prvInitialiseNewTask.constprop.0+0x32>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800a194:	2300      	movs	r3, #0
 800a196:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800a19a:	9d08      	ldr	r5, [sp, #32]
 800a19c:	2d37      	cmp	r5, #55	; 0x37
 800a19e:	bf28      	it	cs
 800a1a0:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800a1a2:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800a1a6:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800a1a8:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800a1aa:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800a1ac:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800a1b0:	f7fe ffb5 	bl	800911e <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a1b4:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800a1b8:	f104 0018 	add.w	r0, r4, #24
 800a1bc:	f7fe ffaf 	bl	800911e <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 800a1c0:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800a1c4:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a1c6:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800a1c8:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800a1ca:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800a1ce:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800a1d2:	463a      	mov	r2, r7
 800a1d4:	4631      	mov	r1, r6
 800a1d6:	4648      	mov	r0, r9
 800a1d8:	f7ff f816 	bl	8009208 <pxPortInitialiseStack>
 800a1dc:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800a1de:	f1b8 0f00 	cmp.w	r8, #0
 800a1e2:	d001      	beq.n	800a1e8 <prvInitialiseNewTask.constprop.0+0x94>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800a1e4:	f8c8 4000 	str.w	r4, [r8]
}
 800a1e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800a1ec:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800a1f0:	e7d3      	b.n	800a19a <prvInitialiseNewTask.constprop.0+0x46>

0800a1f2 <xTaskCreateStatic>:
	{
 800a1f2:	b570      	push	{r4, r5, r6, lr}
 800a1f4:	b086      	sub	sp, #24
 800a1f6:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800a1fa:	b945      	cbnz	r5, 800a20e <xTaskCreateStatic+0x1c>
 800a1fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a200:	f383 8811 	msr	BASEPRI, r3
 800a204:	f3bf 8f6f 	isb	sy
 800a208:	f3bf 8f4f 	dsb	sy
 800a20c:	e7fe      	b.n	800a20c <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 800a20e:	b944      	cbnz	r4, 800a222 <xTaskCreateStatic+0x30>
 800a210:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a214:	f383 8811 	msr	BASEPRI, r3
 800a218:	f3bf 8f6f 	isb	sy
 800a21c:	f3bf 8f4f 	dsb	sy
 800a220:	e7fe      	b.n	800a220 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 800a222:	2660      	movs	r6, #96	; 0x60
 800a224:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800a226:	9e05      	ldr	r6, [sp, #20]
 800a228:	2e60      	cmp	r6, #96	; 0x60
 800a22a:	d008      	beq.n	800a23e <xTaskCreateStatic+0x4c>
 800a22c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a230:	f383 8811 	msr	BASEPRI, r3
 800a234:	f3bf 8f6f 	isb	sy
 800a238:	f3bf 8f4f 	dsb	sy
 800a23c:	e7fe      	b.n	800a23c <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800a23e:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800a240:	2502      	movs	r5, #2
 800a242:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800a246:	ad04      	add	r5, sp, #16
 800a248:	9501      	str	r5, [sp, #4]
 800a24a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800a24c:	9402      	str	r4, [sp, #8]
 800a24e:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800a250:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800a252:	f7ff ff7f 	bl	800a154 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800a256:	4620      	mov	r0, r4
 800a258:	f7ff fe66 	bl	8009f28 <prvAddNewTaskToReadyList>
	}
 800a25c:	9804      	ldr	r0, [sp, #16]
 800a25e:	b006      	add	sp, #24
 800a260:	bd70      	pop	{r4, r5, r6, pc}

0800a262 <xTaskCreate>:
	{
 800a262:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a266:	4607      	mov	r7, r0
 800a268:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800a26a:	0090      	lsls	r0, r2, #2
	{
 800a26c:	4688      	mov	r8, r1
 800a26e:	4616      	mov	r6, r2
 800a270:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800a272:	f7fe fe73 	bl	8008f5c <pvPortMalloc>
			if( pxStack != NULL )
 800a276:	4605      	mov	r5, r0
 800a278:	b1e8      	cbz	r0, 800a2b6 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800a27a:	2060      	movs	r0, #96	; 0x60
 800a27c:	f7fe fe6e 	bl	8008f5c <pvPortMalloc>
				if( pxNewTCB != NULL )
 800a280:	4604      	mov	r4, r0
 800a282:	b1a8      	cbz	r0, 800a2b0 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800a284:	2300      	movs	r3, #0
 800a286:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800a28a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 800a28c:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800a28e:	9301      	str	r3, [sp, #4]
 800a290:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800a292:	9002      	str	r0, [sp, #8]
 800a294:	9300      	str	r3, [sp, #0]
 800a296:	4632      	mov	r2, r6
 800a298:	464b      	mov	r3, r9
 800a29a:	4641      	mov	r1, r8
 800a29c:	4638      	mov	r0, r7
 800a29e:	f7ff ff59 	bl	800a154 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800a2a2:	4620      	mov	r0, r4
 800a2a4:	f7ff fe40 	bl	8009f28 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800a2a8:	2001      	movs	r0, #1
	}
 800a2aa:	b005      	add	sp, #20
 800a2ac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800a2b0:	4628      	mov	r0, r5
 800a2b2:	f7fe feeb 	bl	800908c <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800a2b6:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 800a2ba:	e7f6      	b.n	800a2aa <xTaskCreate+0x48>

0800a2bc <vTaskStartScheduler>:
{
 800a2bc:	b510      	push	{r4, lr}
 800a2be:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800a2c0:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800a2c2:	aa07      	add	r2, sp, #28
 800a2c4:	a906      	add	r1, sp, #24
 800a2c6:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800a2c8:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800a2cc:	f7fe fe08 	bl	8008ee0 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800a2d0:	9b05      	ldr	r3, [sp, #20]
 800a2d2:	9302      	str	r3, [sp, #8]
 800a2d4:	9b06      	ldr	r3, [sp, #24]
 800a2d6:	9a07      	ldr	r2, [sp, #28]
 800a2d8:	4916      	ldr	r1, [pc, #88]	; (800a334 <vTaskStartScheduler+0x78>)
 800a2da:	4817      	ldr	r0, [pc, #92]	; (800a338 <vTaskStartScheduler+0x7c>)
 800a2dc:	e9cd 4300 	strd	r4, r3, [sp]
 800a2e0:	4623      	mov	r3, r4
 800a2e2:	f7ff ff86 	bl	800a1f2 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 800a2e6:	b318      	cbz	r0, 800a330 <vTaskStartScheduler+0x74>
			xReturn = xTimerCreateTimerTask();
 800a2e8:	f000 fbb4 	bl	800aa54 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800a2ec:	2801      	cmp	r0, #1
 800a2ee:	d114      	bne.n	800a31a <vTaskStartScheduler+0x5e>
 800a2f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a2f4:	f383 8811 	msr	BASEPRI, r3
 800a2f8:	f3bf 8f6f 	isb	sy
 800a2fc:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 800a300:	4b0e      	ldr	r3, [pc, #56]	; (800a33c <vTaskStartScheduler+0x80>)
 800a302:	f04f 32ff 	mov.w	r2, #4294967295
 800a306:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 800a308:	4b0d      	ldr	r3, [pc, #52]	; (800a340 <vTaskStartScheduler+0x84>)
 800a30a:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800a30c:	4b0d      	ldr	r3, [pc, #52]	; (800a344 <vTaskStartScheduler+0x88>)
 800a30e:	601c      	str	r4, [r3, #0]
}
 800a310:	b008      	add	sp, #32
 800a312:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 800a316:	f7ff b835 	b.w	8009384 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800a31a:	3001      	adds	r0, #1
 800a31c:	d108      	bne.n	800a330 <vTaskStartScheduler+0x74>
 800a31e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a322:	f383 8811 	msr	BASEPRI, r3
 800a326:	f3bf 8f6f 	isb	sy
 800a32a:	f3bf 8f4f 	dsb	sy
 800a32e:	e7fe      	b.n	800a32e <vTaskStartScheduler+0x72>
}
 800a330:	b008      	add	sp, #32
 800a332:	bd10      	pop	{r4, pc}
 800a334:	08020393 	.word	0x08020393
 800a338:	0800a0f5 	.word	0x0800a0f5
 800a33c:	20013424 	.word	0x20013424
 800a340:	20013444 	.word	0x20013444
 800a344:	20013470 	.word	0x20013470

0800a348 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800a348:	4a02      	ldr	r2, [pc, #8]	; (800a354 <vTaskSuspendAll+0xc>)
 800a34a:	6813      	ldr	r3, [r2, #0]
 800a34c:	3301      	adds	r3, #1
 800a34e:	6013      	str	r3, [r2, #0]
}
 800a350:	4770      	bx	lr
 800a352:	bf00      	nop
 800a354:	200133f0 	.word	0x200133f0

0800a358 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800a358:	4b01      	ldr	r3, [pc, #4]	; (800a360 <xTaskGetTickCount+0x8>)
 800a35a:	6818      	ldr	r0, [r3, #0]
}
 800a35c:	4770      	bx	lr
 800a35e:	bf00      	nop
 800a360:	20013470 	.word	0x20013470

0800a364 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a364:	4b3f      	ldr	r3, [pc, #252]	; (800a464 <xTaskIncrementTick+0x100>)
 800a366:	681b      	ldr	r3, [r3, #0]
{
 800a368:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a36c:	2b00      	cmp	r3, #0
 800a36e:	d173      	bne.n	800a458 <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800a370:	4b3d      	ldr	r3, [pc, #244]	; (800a468 <xTaskIncrementTick+0x104>)
 800a372:	681d      	ldr	r5, [r3, #0]
 800a374:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 800a376:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800a378:	b9bd      	cbnz	r5, 800a3aa <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 800a37a:	4b3c      	ldr	r3, [pc, #240]	; (800a46c <xTaskIncrementTick+0x108>)
 800a37c:	681a      	ldr	r2, [r3, #0]
 800a37e:	6812      	ldr	r2, [r2, #0]
 800a380:	b142      	cbz	r2, 800a394 <xTaskIncrementTick+0x30>
 800a382:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a386:	f383 8811 	msr	BASEPRI, r3
 800a38a:	f3bf 8f6f 	isb	sy
 800a38e:	f3bf 8f4f 	dsb	sy
 800a392:	e7fe      	b.n	800a392 <xTaskIncrementTick+0x2e>
 800a394:	4a36      	ldr	r2, [pc, #216]	; (800a470 <xTaskIncrementTick+0x10c>)
 800a396:	6819      	ldr	r1, [r3, #0]
 800a398:	6810      	ldr	r0, [r2, #0]
 800a39a:	6018      	str	r0, [r3, #0]
 800a39c:	6011      	str	r1, [r2, #0]
 800a39e:	4a35      	ldr	r2, [pc, #212]	; (800a474 <xTaskIncrementTick+0x110>)
 800a3a0:	6813      	ldr	r3, [r2, #0]
 800a3a2:	3301      	adds	r3, #1
 800a3a4:	6013      	str	r3, [r2, #0]
 800a3a6:	f7ff fe77 	bl	800a098 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800a3aa:	4e33      	ldr	r6, [pc, #204]	; (800a478 <xTaskIncrementTick+0x114>)
 800a3ac:	4f33      	ldr	r7, [pc, #204]	; (800a47c <xTaskIncrementTick+0x118>)
 800a3ae:	6833      	ldr	r3, [r6, #0]
 800a3b0:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 800a488 <xTaskIncrementTick+0x124>
 800a3b4:	429d      	cmp	r5, r3
BaseType_t xSwitchRequired = pdFALSE;
 800a3b6:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 800a3ba:	d211      	bcs.n	800a3e0 <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800a3bc:	f8d8 3000 	ldr.w	r3, [r8]
 800a3c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a3c2:	2214      	movs	r2, #20
 800a3c4:	4353      	muls	r3, r2
 800a3c6:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 800a3c8:	2b02      	cmp	r3, #2
			if( xYieldPending != pdFALSE )
 800a3ca:	4b2d      	ldr	r3, [pc, #180]	; (800a480 <xTaskIncrementTick+0x11c>)
 800a3cc:	681b      	ldr	r3, [r3, #0]
				xSwitchRequired = pdTRUE;
 800a3ce:	bf28      	it	cs
 800a3d0:	2401      	movcs	r4, #1
				xSwitchRequired = pdTRUE;
 800a3d2:	2b00      	cmp	r3, #0
 800a3d4:	bf18      	it	ne
 800a3d6:	2401      	movne	r4, #1
}
 800a3d8:	4620      	mov	r0, r4
 800a3da:	b003      	add	sp, #12
 800a3dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800a3e0:	f8df 9088 	ldr.w	r9, [pc, #136]	; 800a46c <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 800a3e4:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 800a48c <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800a3e8:	f8d9 3000 	ldr.w	r3, [r9]
 800a3ec:	681b      	ldr	r3, [r3, #0]
 800a3ee:	b91b      	cbnz	r3, 800a3f8 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a3f0:	f04f 33ff 	mov.w	r3, #4294967295
 800a3f4:	6033      	str	r3, [r6, #0]
					break;
 800a3f6:	e7e1      	b.n	800a3bc <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a3f8:	f8d9 3000 	ldr.w	r3, [r9]
 800a3fc:	68db      	ldr	r3, [r3, #12]
 800a3fe:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800a402:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 800a406:	4295      	cmp	r5, r2
 800a408:	d201      	bcs.n	800a40e <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 800a40a:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800a40c:	e7d6      	b.n	800a3bc <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800a40e:	f10b 0104 	add.w	r1, fp, #4
 800a412:	4608      	mov	r0, r1
 800a414:	9101      	str	r1, [sp, #4]
 800a416:	f7fe fea8 	bl	800916a <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800a41a:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 800a41e:	9901      	ldr	r1, [sp, #4]
 800a420:	b122      	cbz	r2, 800a42c <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800a422:	f10b 0018 	add.w	r0, fp, #24
 800a426:	f7fe fea0 	bl	800916a <uxListRemove>
 800a42a:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800a42c:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 800a430:	f8da 2000 	ldr.w	r2, [sl]
 800a434:	2314      	movs	r3, #20
 800a436:	4290      	cmp	r0, r2
 800a438:	bf88      	it	hi
 800a43a:	f8ca 0000 	strhi.w	r0, [sl]
 800a43e:	fb03 7000 	mla	r0, r3, r0, r7
 800a442:	f7fe fe6f 	bl	8009124 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800a446:	f8d8 1000 	ldr.w	r1, [r8]
 800a44a:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 800a44e:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 800a450:	429a      	cmp	r2, r3
 800a452:	bf28      	it	cs
 800a454:	2401      	movcs	r4, #1
 800a456:	e7c7      	b.n	800a3e8 <xTaskIncrementTick+0x84>
		++xPendedTicks;
 800a458:	4a0a      	ldr	r2, [pc, #40]	; (800a484 <xTaskIncrementTick+0x120>)
 800a45a:	6813      	ldr	r3, [r2, #0]
 800a45c:	3301      	adds	r3, #1
 800a45e:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 800a460:	2400      	movs	r4, #0
	return xSwitchRequired;
 800a462:	e7b9      	b.n	800a3d8 <xTaskIncrementTick+0x74>
 800a464:	200133f0 	.word	0x200133f0
 800a468:	20013470 	.word	0x20013470
 800a46c:	20012f80 	.word	0x20012f80
 800a470:	20012f84 	.word	0x20012f84
 800a474:	20013428 	.word	0x20013428
 800a478:	20013424 	.word	0x20013424
 800a47c:	20012f88 	.word	0x20012f88
 800a480:	20013474 	.word	0x20013474
 800a484:	2001342c 	.word	0x2001342c
 800a488:	20012f7c 	.word	0x20012f7c
 800a48c:	200133f8 	.word	0x200133f8

0800a490 <xTaskResumeAll>:
{
 800a490:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 800a492:	4c31      	ldr	r4, [pc, #196]	; (800a558 <xTaskResumeAll+0xc8>)
 800a494:	6823      	ldr	r3, [r4, #0]
 800a496:	b943      	cbnz	r3, 800a4aa <xTaskResumeAll+0x1a>
 800a498:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a49c:	f383 8811 	msr	BASEPRI, r3
 800a4a0:	f3bf 8f6f 	isb	sy
 800a4a4:	f3bf 8f4f 	dsb	sy
 800a4a8:	e7fe      	b.n	800a4a8 <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 800a4aa:	f7fe fedb 	bl	8009264 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800a4ae:	6823      	ldr	r3, [r4, #0]
 800a4b0:	3b01      	subs	r3, #1
 800a4b2:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a4b4:	6824      	ldr	r4, [r4, #0]
 800a4b6:	b12c      	cbz	r4, 800a4c4 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 800a4b8:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800a4ba:	f7fe fef3 	bl	80092a4 <vPortExitCritical>
}
 800a4be:	4620      	mov	r0, r4
 800a4c0:	b003      	add	sp, #12
 800a4c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800a4c4:	4b25      	ldr	r3, [pc, #148]	; (800a55c <xTaskResumeAll+0xcc>)
 800a4c6:	681b      	ldr	r3, [r3, #0]
 800a4c8:	2b00      	cmp	r3, #0
 800a4ca:	d0f5      	beq.n	800a4b8 <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800a4cc:	4d24      	ldr	r5, [pc, #144]	; (800a560 <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 800a4ce:	4e25      	ldr	r6, [pc, #148]	; (800a564 <xTaskResumeAll+0xd4>)
 800a4d0:	4f25      	ldr	r7, [pc, #148]	; (800a568 <xTaskResumeAll+0xd8>)
 800a4d2:	e01e      	b.n	800a512 <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a4d4:	68eb      	ldr	r3, [r5, #12]
 800a4d6:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800a4d8:	f104 0018 	add.w	r0, r4, #24
 800a4dc:	f7fe fe45 	bl	800916a <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800a4e0:	1d21      	adds	r1, r4, #4
 800a4e2:	4608      	mov	r0, r1
 800a4e4:	9101      	str	r1, [sp, #4]
 800a4e6:	f7fe fe40 	bl	800916a <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800a4ea:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a4ec:	6832      	ldr	r2, [r6, #0]
 800a4ee:	9901      	ldr	r1, [sp, #4]
 800a4f0:	2014      	movs	r0, #20
 800a4f2:	4293      	cmp	r3, r2
 800a4f4:	fb00 7003 	mla	r0, r0, r3, r7
 800a4f8:	bf88      	it	hi
 800a4fa:	6033      	strhi	r3, [r6, #0]
 800a4fc:	f7fe fe12 	bl	8009124 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800a500:	4b1a      	ldr	r3, [pc, #104]	; (800a56c <xTaskResumeAll+0xdc>)
 800a502:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a504:	681b      	ldr	r3, [r3, #0]
 800a506:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a508:	429a      	cmp	r2, r3
 800a50a:	d302      	bcc.n	800a512 <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 800a50c:	4b18      	ldr	r3, [pc, #96]	; (800a570 <xTaskResumeAll+0xe0>)
 800a50e:	2201      	movs	r2, #1
 800a510:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800a512:	682b      	ldr	r3, [r5, #0]
 800a514:	2b00      	cmp	r3, #0
 800a516:	d1dd      	bne.n	800a4d4 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 800a518:	b10c      	cbz	r4, 800a51e <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 800a51a:	f7ff fdbd 	bl	800a098 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800a51e:	4d15      	ldr	r5, [pc, #84]	; (800a574 <xTaskResumeAll+0xe4>)
 800a520:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800a522:	b144      	cbz	r4, 800a536 <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 800a524:	4e12      	ldr	r6, [pc, #72]	; (800a570 <xTaskResumeAll+0xe0>)
 800a526:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800a528:	f7ff ff1c 	bl	800a364 <xTaskIncrementTick>
 800a52c:	b100      	cbz	r0, 800a530 <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 800a52e:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800a530:	3c01      	subs	r4, #1
 800a532:	d1f9      	bne.n	800a528 <xTaskResumeAll+0x98>
						xPendedTicks = 0;
 800a534:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800a536:	4b0e      	ldr	r3, [pc, #56]	; (800a570 <xTaskResumeAll+0xe0>)
 800a538:	681b      	ldr	r3, [r3, #0]
 800a53a:	2b00      	cmp	r3, #0
 800a53c:	d0bc      	beq.n	800a4b8 <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 800a53e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a542:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a546:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a54a:	f3bf 8f4f 	dsb	sy
 800a54e:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800a552:	2401      	movs	r4, #1
 800a554:	e7b1      	b.n	800a4ba <xTaskResumeAll+0x2a>
 800a556:	bf00      	nop
 800a558:	200133f0 	.word	0x200133f0
 800a55c:	200133e8 	.word	0x200133e8
 800a560:	20013430 	.word	0x20013430
 800a564:	200133f8 	.word	0x200133f8
 800a568:	20012f88 	.word	0x20012f88
 800a56c:	20012f7c 	.word	0x20012f7c
 800a570:	20013474 	.word	0x20013474
 800a574:	2001342c 	.word	0x2001342c

0800a578 <vTaskDelay>:
	{
 800a578:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800a57a:	b950      	cbnz	r0, 800a592 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800a57c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a580:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a584:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a588:	f3bf 8f4f 	dsb	sy
 800a58c:	f3bf 8f6f 	isb	sy
	}
 800a590:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800a592:	4b0a      	ldr	r3, [pc, #40]	; (800a5bc <vTaskDelay+0x44>)
 800a594:	6819      	ldr	r1, [r3, #0]
 800a596:	b141      	cbz	r1, 800a5aa <vTaskDelay+0x32>
 800a598:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a59c:	f383 8811 	msr	BASEPRI, r3
 800a5a0:	f3bf 8f6f 	isb	sy
 800a5a4:	f3bf 8f4f 	dsb	sy
 800a5a8:	e7fe      	b.n	800a5a8 <vTaskDelay+0x30>
			vTaskSuspendAll();
 800a5aa:	f7ff fecd 	bl	800a348 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 800a5ae:	f7ff fd3b 	bl	800a028 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 800a5b2:	f7ff ff6d 	bl	800a490 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 800a5b6:	2800      	cmp	r0, #0
 800a5b8:	d0e0      	beq.n	800a57c <vTaskDelay+0x4>
 800a5ba:	e7e9      	b.n	800a590 <vTaskDelay+0x18>
 800a5bc:	200133f0 	.word	0x200133f0

0800a5c0 <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800a5c0:	4b17      	ldr	r3, [pc, #92]	; (800a620 <vTaskSwitchContext+0x60>)
 800a5c2:	681a      	ldr	r2, [r3, #0]
 800a5c4:	4b17      	ldr	r3, [pc, #92]	; (800a624 <vTaskSwitchContext+0x64>)
{
 800a5c6:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800a5c8:	b112      	cbz	r2, 800a5d0 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 800a5ca:	2201      	movs	r2, #1
 800a5cc:	601a      	str	r2, [r3, #0]
}
 800a5ce:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a5d0:	4d15      	ldr	r5, [pc, #84]	; (800a628 <vTaskSwitchContext+0x68>)
		xYieldPending = pdFALSE;
 800a5d2:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a5d4:	682a      	ldr	r2, [r5, #0]
 800a5d6:	4915      	ldr	r1, [pc, #84]	; (800a62c <vTaskSwitchContext+0x6c>)
 800a5d8:	2614      	movs	r6, #20
 800a5da:	fb06 f302 	mul.w	r3, r6, r2
 800a5de:	18c8      	adds	r0, r1, r3
 800a5e0:	58cc      	ldr	r4, [r1, r3]
 800a5e2:	b18c      	cbz	r4, 800a608 <vTaskSwitchContext+0x48>
 800a5e4:	6844      	ldr	r4, [r0, #4]
 800a5e6:	3308      	adds	r3, #8
 800a5e8:	6864      	ldr	r4, [r4, #4]
 800a5ea:	6044      	str	r4, [r0, #4]
 800a5ec:	440b      	add	r3, r1
 800a5ee:	429c      	cmp	r4, r3
 800a5f0:	bf04      	itt	eq
 800a5f2:	6863      	ldreq	r3, [r4, #4]
 800a5f4:	6043      	streq	r3, [r0, #4]
 800a5f6:	2314      	movs	r3, #20
 800a5f8:	fb03 1102 	mla	r1, r3, r2, r1
 800a5fc:	684b      	ldr	r3, [r1, #4]
 800a5fe:	68d9      	ldr	r1, [r3, #12]
 800a600:	4b0b      	ldr	r3, [pc, #44]	; (800a630 <vTaskSwitchContext+0x70>)
 800a602:	6019      	str	r1, [r3, #0]
 800a604:	602a      	str	r2, [r5, #0]
}
 800a606:	e7e2      	b.n	800a5ce <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a608:	b942      	cbnz	r2, 800a61c <vTaskSwitchContext+0x5c>
 800a60a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a60e:	f383 8811 	msr	BASEPRI, r3
 800a612:	f3bf 8f6f 	isb	sy
 800a616:	f3bf 8f4f 	dsb	sy
 800a61a:	e7fe      	b.n	800a61a <vTaskSwitchContext+0x5a>
 800a61c:	3a01      	subs	r2, #1
 800a61e:	e7dc      	b.n	800a5da <vTaskSwitchContext+0x1a>
 800a620:	200133f0 	.word	0x200133f0
 800a624:	20013474 	.word	0x20013474
 800a628:	200133f8 	.word	0x200133f8
 800a62c:	20012f88 	.word	0x20012f88
 800a630:	20012f7c 	.word	0x20012f7c

0800a634 <vTaskPlaceOnEventList>:
{
 800a634:	b510      	push	{r4, lr}
 800a636:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 800a638:	b940      	cbnz	r0, 800a64c <vTaskPlaceOnEventList+0x18>
 800a63a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a63e:	f383 8811 	msr	BASEPRI, r3
 800a642:	f3bf 8f6f 	isb	sy
 800a646:	f3bf 8f4f 	dsb	sy
 800a64a:	e7fe      	b.n	800a64a <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a64c:	4b05      	ldr	r3, [pc, #20]	; (800a664 <vTaskPlaceOnEventList+0x30>)
 800a64e:	6819      	ldr	r1, [r3, #0]
 800a650:	3118      	adds	r1, #24
 800a652:	f7fe fd73 	bl	800913c <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a656:	4620      	mov	r0, r4
 800a658:	2101      	movs	r1, #1
}
 800a65a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a65e:	f7ff bce3 	b.w	800a028 <prvAddCurrentTaskToDelayedList>
 800a662:	bf00      	nop
 800a664:	20012f7c 	.word	0x20012f7c

0800a668 <vTaskPlaceOnEventListRestricted>:
	{
 800a668:	b538      	push	{r3, r4, r5, lr}
 800a66a:	460d      	mov	r5, r1
 800a66c:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800a66e:	b940      	cbnz	r0, 800a682 <vTaskPlaceOnEventListRestricted+0x1a>
 800a670:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a674:	f383 8811 	msr	BASEPRI, r3
 800a678:	f3bf 8f6f 	isb	sy
 800a67c:	f3bf 8f4f 	dsb	sy
 800a680:	e7fe      	b.n	800a680 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a682:	4b07      	ldr	r3, [pc, #28]	; (800a6a0 <vTaskPlaceOnEventListRestricted+0x38>)
 800a684:	6819      	ldr	r1, [r3, #0]
 800a686:	3118      	adds	r1, #24
 800a688:	f7fe fd4c 	bl	8009124 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800a68c:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a68e:	4621      	mov	r1, r4
 800a690:	bf0c      	ite	eq
 800a692:	4628      	moveq	r0, r5
 800a694:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800a698:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a69c:	f7ff bcc4 	b.w	800a028 <prvAddCurrentTaskToDelayedList>
 800a6a0:	20012f7c 	.word	0x20012f7c

0800a6a4 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a6a4:	68c3      	ldr	r3, [r0, #12]
{
 800a6a6:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a6a8:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800a6aa:	b944      	cbnz	r4, 800a6be <xTaskRemoveFromEventList+0x1a>
 800a6ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a6b0:	f383 8811 	msr	BASEPRI, r3
 800a6b4:	f3bf 8f6f 	isb	sy
 800a6b8:	f3bf 8f4f 	dsb	sy
 800a6bc:	e7fe      	b.n	800a6bc <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800a6be:	f104 0118 	add.w	r1, r4, #24
 800a6c2:	4608      	mov	r0, r1
 800a6c4:	9101      	str	r1, [sp, #4]
 800a6c6:	f7fe fd50 	bl	800916a <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a6ca:	4b12      	ldr	r3, [pc, #72]	; (800a714 <xTaskRemoveFromEventList+0x70>)
 800a6cc:	9901      	ldr	r1, [sp, #4]
 800a6ce:	681b      	ldr	r3, [r3, #0]
 800a6d0:	b9eb      	cbnz	r3, 800a70e <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800a6d2:	1d21      	adds	r1, r4, #4
 800a6d4:	4608      	mov	r0, r1
 800a6d6:	9101      	str	r1, [sp, #4]
 800a6d8:	f7fe fd47 	bl	800916a <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800a6dc:	4a0e      	ldr	r2, [pc, #56]	; (800a718 <xTaskRemoveFromEventList+0x74>)
 800a6de:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a6e0:	6810      	ldr	r0, [r2, #0]
 800a6e2:	9901      	ldr	r1, [sp, #4]
 800a6e4:	4283      	cmp	r3, r0
 800a6e6:	bf88      	it	hi
 800a6e8:	6013      	strhi	r3, [r2, #0]
 800a6ea:	4a0c      	ldr	r2, [pc, #48]	; (800a71c <xTaskRemoveFromEventList+0x78>)
 800a6ec:	2014      	movs	r0, #20
 800a6ee:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a6f2:	f7fe fd17 	bl	8009124 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800a6f6:	4b0a      	ldr	r3, [pc, #40]	; (800a720 <xTaskRemoveFromEventList+0x7c>)
 800a6f8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a6fa:	681b      	ldr	r3, [r3, #0]
 800a6fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a6fe:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800a700:	bf85      	ittet	hi
 800a702:	4b08      	ldrhi	r3, [pc, #32]	; (800a724 <xTaskRemoveFromEventList+0x80>)
 800a704:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800a706:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800a708:	6018      	strhi	r0, [r3, #0]
}
 800a70a:	b002      	add	sp, #8
 800a70c:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a70e:	4806      	ldr	r0, [pc, #24]	; (800a728 <xTaskRemoveFromEventList+0x84>)
 800a710:	e7ef      	b.n	800a6f2 <xTaskRemoveFromEventList+0x4e>
 800a712:	bf00      	nop
 800a714:	200133f0 	.word	0x200133f0
 800a718:	200133f8 	.word	0x200133f8
 800a71c:	20012f88 	.word	0x20012f88
 800a720:	20012f7c 	.word	0x20012f7c
 800a724:	20013474 	.word	0x20013474
 800a728:	20013430 	.word	0x20013430

0800a72c <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800a72c:	4b03      	ldr	r3, [pc, #12]	; (800a73c <vTaskInternalSetTimeOutState+0x10>)
 800a72e:	681b      	ldr	r3, [r3, #0]
 800a730:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800a732:	4b03      	ldr	r3, [pc, #12]	; (800a740 <vTaskInternalSetTimeOutState+0x14>)
 800a734:	681b      	ldr	r3, [r3, #0]
 800a736:	6043      	str	r3, [r0, #4]
}
 800a738:	4770      	bx	lr
 800a73a:	bf00      	nop
 800a73c:	20013428 	.word	0x20013428
 800a740:	20013470 	.word	0x20013470

0800a744 <xTaskCheckForTimeOut>:
{
 800a744:	b570      	push	{r4, r5, r6, lr}
 800a746:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800a748:	4605      	mov	r5, r0
 800a74a:	b940      	cbnz	r0, 800a75e <xTaskCheckForTimeOut+0x1a>
 800a74c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a750:	f383 8811 	msr	BASEPRI, r3
 800a754:	f3bf 8f6f 	isb	sy
 800a758:	f3bf 8f4f 	dsb	sy
 800a75c:	e7fe      	b.n	800a75c <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800a75e:	b941      	cbnz	r1, 800a772 <xTaskCheckForTimeOut+0x2e>
 800a760:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a764:	f383 8811 	msr	BASEPRI, r3
 800a768:	f3bf 8f6f 	isb	sy
 800a76c:	f3bf 8f4f 	dsb	sy
 800a770:	e7fe      	b.n	800a770 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800a772:	f7fe fd77 	bl	8009264 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800a776:	4b0f      	ldr	r3, [pc, #60]	; (800a7b4 <xTaskCheckForTimeOut+0x70>)
 800a778:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800a77a:	6823      	ldr	r3, [r4, #0]
 800a77c:	1c5a      	adds	r2, r3, #1
 800a77e:	d010      	beq.n	800a7a2 <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a780:	480d      	ldr	r0, [pc, #52]	; (800a7b8 <xTaskCheckForTimeOut+0x74>)
 800a782:	682e      	ldr	r6, [r5, #0]
 800a784:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a786:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a788:	4286      	cmp	r6, r0
 800a78a:	d001      	beq.n	800a790 <xTaskCheckForTimeOut+0x4c>
 800a78c:	428a      	cmp	r2, r1
 800a78e:	d90f      	bls.n	800a7b0 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a790:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800a792:	4283      	cmp	r3, r0
 800a794:	d90a      	bls.n	800a7ac <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800a796:	1a5b      	subs	r3, r3, r1
 800a798:	4413      	add	r3, r2
 800a79a:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800a79c:	4628      	mov	r0, r5
 800a79e:	f7ff ffc5 	bl	800a72c <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800a7a2:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800a7a4:	f7fe fd7e 	bl	80092a4 <vPortExitCritical>
}
 800a7a8:	4620      	mov	r0, r4
 800a7aa:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 800a7ac:	2300      	movs	r3, #0
 800a7ae:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800a7b0:	2401      	movs	r4, #1
 800a7b2:	e7f7      	b.n	800a7a4 <xTaskCheckForTimeOut+0x60>
 800a7b4:	20013470 	.word	0x20013470
 800a7b8:	20013428 	.word	0x20013428

0800a7bc <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800a7bc:	4b01      	ldr	r3, [pc, #4]	; (800a7c4 <vTaskMissedYield+0x8>)
 800a7be:	2201      	movs	r2, #1
 800a7c0:	601a      	str	r2, [r3, #0]
}
 800a7c2:	4770      	bx	lr
 800a7c4:	20013474 	.word	0x20013474

0800a7c8 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800a7c8:	4b05      	ldr	r3, [pc, #20]	; (800a7e0 <xTaskGetSchedulerState+0x18>)
 800a7ca:	681b      	ldr	r3, [r3, #0]
 800a7cc:	b133      	cbz	r3, 800a7dc <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a7ce:	4b05      	ldr	r3, [pc, #20]	; (800a7e4 <xTaskGetSchedulerState+0x1c>)
 800a7d0:	6818      	ldr	r0, [r3, #0]
 800a7d2:	fab0 f080 	clz	r0, r0
 800a7d6:	0940      	lsrs	r0, r0, #5
 800a7d8:	0040      	lsls	r0, r0, #1
 800a7da:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800a7dc:	2001      	movs	r0, #1
	}
 800a7de:	4770      	bx	lr
 800a7e0:	20013444 	.word	0x20013444
 800a7e4:	200133f0 	.word	0x200133f0

0800a7e8 <xTaskPriorityInherit>:
	{
 800a7e8:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800a7ea:	4604      	mov	r4, r0
 800a7ec:	b348      	cbz	r0, 800a842 <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800a7ee:	4d1c      	ldr	r5, [pc, #112]	; (800a860 <xTaskPriorityInherit+0x78>)
 800a7f0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800a7f2:	682a      	ldr	r2, [r5, #0]
 800a7f4:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800a7f6:	4293      	cmp	r3, r2
 800a7f8:	d229      	bcs.n	800a84e <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a7fa:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a7fc:	4e19      	ldr	r6, [pc, #100]	; (800a864 <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a7fe:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a800:	bfa1      	itttt	ge
 800a802:	682a      	ldrge	r2, [r5, #0]
 800a804:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 800a806:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 800a80a:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a80c:	2214      	movs	r2, #20
 800a80e:	fb02 6303 	mla	r3, r2, r3, r6
 800a812:	6942      	ldr	r2, [r0, #20]
 800a814:	429a      	cmp	r2, r3
 800a816:	d116      	bne.n	800a846 <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a818:	1d01      	adds	r1, r0, #4
 800a81a:	4608      	mov	r0, r1
 800a81c:	9101      	str	r1, [sp, #4]
 800a81e:	f7fe fca4 	bl	800916a <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a822:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a824:	4a10      	ldr	r2, [pc, #64]	; (800a868 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a826:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a828:	6810      	ldr	r0, [r2, #0]
 800a82a:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a82c:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a82e:	4283      	cmp	r3, r0
 800a830:	f04f 0014 	mov.w	r0, #20
 800a834:	fb00 6003 	mla	r0, r0, r3, r6
 800a838:	bf88      	it	hi
 800a83a:	6013      	strhi	r3, [r2, #0]
 800a83c:	f7fe fc72 	bl	8009124 <vListInsertEnd>
				xReturn = pdTRUE;
 800a840:	2001      	movs	r0, #1
	}
 800a842:	b002      	add	sp, #8
 800a844:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a846:	682b      	ldr	r3, [r5, #0]
 800a848:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a84a:	62c3      	str	r3, [r0, #44]	; 0x2c
 800a84c:	e7f8      	b.n	800a840 <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800a84e:	682b      	ldr	r3, [r5, #0]
 800a850:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800a852:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a854:	4298      	cmp	r0, r3
 800a856:	bf2c      	ite	cs
 800a858:	2000      	movcs	r0, #0
 800a85a:	2001      	movcc	r0, #1
 800a85c:	e7f1      	b.n	800a842 <xTaskPriorityInherit+0x5a>
 800a85e:	bf00      	nop
 800a860:	20012f7c 	.word	0x20012f7c
 800a864:	20012f88 	.word	0x20012f88
 800a868:	200133f8 	.word	0x200133f8

0800a86c <xTaskPriorityDisinherit>:
	{
 800a86c:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 800a86e:	b910      	cbnz	r0, 800a876 <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 800a870:	2000      	movs	r0, #0
	}
 800a872:	b002      	add	sp, #8
 800a874:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800a876:	4b1c      	ldr	r3, [pc, #112]	; (800a8e8 <xTaskPriorityDisinherit+0x7c>)
 800a878:	681c      	ldr	r4, [r3, #0]
 800a87a:	4284      	cmp	r4, r0
 800a87c:	d008      	beq.n	800a890 <xTaskPriorityDisinherit+0x24>
 800a87e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a882:	f383 8811 	msr	BASEPRI, r3
 800a886:	f3bf 8f6f 	isb	sy
 800a88a:	f3bf 8f4f 	dsb	sy
 800a88e:	e7fe      	b.n	800a88e <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 800a890:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800a892:	b943      	cbnz	r3, 800a8a6 <xTaskPriorityDisinherit+0x3a>
 800a894:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a898:	f383 8811 	msr	BASEPRI, r3
 800a89c:	f3bf 8f6f 	isb	sy
 800a8a0:	f3bf 8f4f 	dsb	sy
 800a8a4:	e7fe      	b.n	800a8a4 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a8a6:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800a8a8:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800a8aa:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a8ac:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800a8ae:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a8b0:	d0de      	beq.n	800a870 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800a8b2:	2b00      	cmp	r3, #0
 800a8b4:	d1dc      	bne.n	800a870 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a8b6:	1d21      	adds	r1, r4, #4
 800a8b8:	4608      	mov	r0, r1
 800a8ba:	9101      	str	r1, [sp, #4]
 800a8bc:	f7fe fc55 	bl	800916a <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a8c0:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800a8c2:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a8c4:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a8c6:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800a8ca:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800a8cc:	4a07      	ldr	r2, [pc, #28]	; (800a8ec <xTaskPriorityDisinherit+0x80>)
 800a8ce:	6810      	ldr	r0, [r2, #0]
 800a8d0:	4283      	cmp	r3, r0
 800a8d2:	bf88      	it	hi
 800a8d4:	6013      	strhi	r3, [r2, #0]
 800a8d6:	4a06      	ldr	r2, [pc, #24]	; (800a8f0 <xTaskPriorityDisinherit+0x84>)
 800a8d8:	2014      	movs	r0, #20
 800a8da:	fb00 2003 	mla	r0, r0, r3, r2
 800a8de:	f7fe fc21 	bl	8009124 <vListInsertEnd>
					xReturn = pdTRUE;
 800a8e2:	2001      	movs	r0, #1
		return xReturn;
 800a8e4:	e7c5      	b.n	800a872 <xTaskPriorityDisinherit+0x6>
 800a8e6:	bf00      	nop
 800a8e8:	20012f7c 	.word	0x20012f7c
 800a8ec:	200133f8 	.word	0x200133f8
 800a8f0:	20012f88 	.word	0x20012f88

0800a8f4 <vTaskPriorityDisinheritAfterTimeout>:
	{
 800a8f4:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800a8f6:	4604      	mov	r4, r0
 800a8f8:	2800      	cmp	r0, #0
 800a8fa:	d044      	beq.n	800a986 <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 800a8fc:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a8fe:	b942      	cbnz	r2, 800a912 <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800a900:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a904:	f383 8811 	msr	BASEPRI, r3
 800a908:	f3bf 8f6f 	isb	sy
 800a90c:	f3bf 8f4f 	dsb	sy
 800a910:	e7fe      	b.n	800a910 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800a912:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800a914:	4299      	cmp	r1, r3
 800a916:	bf38      	it	cc
 800a918:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800a91a:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800a91c:	428b      	cmp	r3, r1
 800a91e:	d032      	beq.n	800a986 <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800a920:	2a01      	cmp	r2, #1
 800a922:	d130      	bne.n	800a986 <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 800a924:	4a19      	ldr	r2, [pc, #100]	; (800a98c <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800a926:	6812      	ldr	r2, [r2, #0]
 800a928:	4282      	cmp	r2, r0
 800a92a:	d108      	bne.n	800a93e <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800a92c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a930:	f383 8811 	msr	BASEPRI, r3
 800a934:	f3bf 8f6f 	isb	sy
 800a938:	f3bf 8f4f 	dsb	sy
 800a93c:	e7fe      	b.n	800a93c <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a93e:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a940:	4d13      	ldr	r5, [pc, #76]	; (800a990 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 800a942:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a944:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a946:	f04f 0214 	mov.w	r2, #20
 800a94a:	fb02 5303 	mla	r3, r2, r3, r5
 800a94e:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a950:	bfa4      	itt	ge
 800a952:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 800a956:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a958:	429a      	cmp	r2, r3
 800a95a:	d114      	bne.n	800a986 <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a95c:	1d01      	adds	r1, r0, #4
 800a95e:	4608      	mov	r0, r1
 800a960:	9101      	str	r1, [sp, #4]
 800a962:	f7fe fc02 	bl	800916a <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800a966:	4a0b      	ldr	r2, [pc, #44]	; (800a994 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 800a968:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a96a:	6810      	ldr	r0, [r2, #0]
 800a96c:	9901      	ldr	r1, [sp, #4]
 800a96e:	4283      	cmp	r3, r0
 800a970:	f04f 0014 	mov.w	r0, #20
 800a974:	fb00 5003 	mla	r0, r0, r3, r5
 800a978:	bf88      	it	hi
 800a97a:	6013      	strhi	r3, [r2, #0]
	}
 800a97c:	b003      	add	sp, #12
 800a97e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800a982:	f7fe bbcf 	b.w	8009124 <vListInsertEnd>
	}
 800a986:	b003      	add	sp, #12
 800a988:	bd30      	pop	{r4, r5, pc}
 800a98a:	bf00      	nop
 800a98c:	20012f7c 	.word	0x20012f7c
 800a990:	20012f88 	.word	0x20012f88
 800a994:	200133f8 	.word	0x200133f8

0800a998 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800a998:	4b04      	ldr	r3, [pc, #16]	; (800a9ac <pvTaskIncrementMutexHeldCount+0x14>)
 800a99a:	681a      	ldr	r2, [r3, #0]
 800a99c:	b11a      	cbz	r2, 800a9a6 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800a99e:	6819      	ldr	r1, [r3, #0]
 800a9a0:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800a9a2:	3201      	adds	r2, #1
 800a9a4:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800a9a6:	6818      	ldr	r0, [r3, #0]
	}
 800a9a8:	4770      	bx	lr
 800a9aa:	bf00      	nop
 800a9ac:	20012f7c 	.word	0x20012f7c

0800a9b0 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800a9b0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800a9b2:	4c11      	ldr	r4, [pc, #68]	; (800a9f8 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800a9b4:	f7fe fc56 	bl	8009264 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800a9b8:	6825      	ldr	r5, [r4, #0]
 800a9ba:	b9bd      	cbnz	r5, 800a9ec <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800a9bc:	4f0f      	ldr	r7, [pc, #60]	; (800a9fc <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800a9be:	4e10      	ldr	r6, [pc, #64]	; (800aa00 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800a9c0:	4638      	mov	r0, r7
 800a9c2:	f7fe fba1 	bl	8009108 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800a9c6:	4630      	mov	r0, r6
 800a9c8:	f7fe fb9e 	bl	8009108 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800a9cc:	4b0d      	ldr	r3, [pc, #52]	; (800aa04 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a9ce:	4a0e      	ldr	r2, [pc, #56]	; (800aa08 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 800a9d0:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800a9d2:	4b0e      	ldr	r3, [pc, #56]	; (800aa0c <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a9d4:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800a9d6:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a9d8:	200a      	movs	r0, #10
 800a9da:	4b0d      	ldr	r3, [pc, #52]	; (800aa10 <prvCheckForValidListAndQueue+0x60>)
 800a9dc:	9500      	str	r5, [sp, #0]
 800a9de:	f7fe fe52 	bl	8009686 <xQueueGenericCreateStatic>
 800a9e2:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800a9e4:	b110      	cbz	r0, 800a9ec <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800a9e6:	490b      	ldr	r1, [pc, #44]	; (800aa14 <prvCheckForValidListAndQueue+0x64>)
 800a9e8:	f7ff fa3e 	bl	8009e68 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800a9ec:	b003      	add	sp, #12
 800a9ee:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800a9f2:	f7fe bc57 	b.w	80092a4 <vPortExitCritical>
 800a9f6:	bf00      	nop
 800a9f8:	2001359c 	.word	0x2001359c
 800a9fc:	20013520 	.word	0x20013520
 800aa00:	20013534 	.word	0x20013534
 800aa04:	20013478 	.word	0x20013478
 800aa08:	20013480 	.word	0x20013480
 800aa0c:	2001347c 	.word	0x2001347c
 800aa10:	2001354c 	.word	0x2001354c
 800aa14:	08020398 	.word	0x08020398

0800aa18 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 800aa18:	4291      	cmp	r1, r2
{
 800aa1a:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800aa1c:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800aa1e:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800aa20:	d80a      	bhi.n	800aa38 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800aa22:	1ad3      	subs	r3, r2, r3
 800aa24:	6982      	ldr	r2, [r0, #24]
 800aa26:	4293      	cmp	r3, r2
 800aa28:	d20d      	bcs.n	800aa46 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800aa2a:	4b08      	ldr	r3, [pc, #32]	; (800aa4c <prvInsertTimerInActiveList+0x34>)
 800aa2c:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800aa2e:	6818      	ldr	r0, [r3, #0]
 800aa30:	f7fe fb84 	bl	800913c <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800aa34:	2000      	movs	r0, #0
}
 800aa36:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800aa38:	429a      	cmp	r2, r3
 800aa3a:	d201      	bcs.n	800aa40 <prvInsertTimerInActiveList+0x28>
 800aa3c:	4299      	cmp	r1, r3
 800aa3e:	d202      	bcs.n	800aa46 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800aa40:	4b03      	ldr	r3, [pc, #12]	; (800aa50 <prvInsertTimerInActiveList+0x38>)
 800aa42:	1d01      	adds	r1, r0, #4
 800aa44:	e7f3      	b.n	800aa2e <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800aa46:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800aa48:	e7f5      	b.n	800aa36 <prvInsertTimerInActiveList+0x1e>
 800aa4a:	bf00      	nop
 800aa4c:	2001347c 	.word	0x2001347c
 800aa50:	20013478 	.word	0x20013478

0800aa54 <xTimerCreateTimerTask>:
{
 800aa54:	b510      	push	{r4, lr}
 800aa56:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800aa58:	f7ff ffaa 	bl	800a9b0 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800aa5c:	4b12      	ldr	r3, [pc, #72]	; (800aaa8 <xTimerCreateTimerTask+0x54>)
 800aa5e:	681b      	ldr	r3, [r3, #0]
 800aa60:	b1b3      	cbz	r3, 800aa90 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800aa62:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800aa64:	aa07      	add	r2, sp, #28
 800aa66:	a906      	add	r1, sp, #24
 800aa68:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800aa6a:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800aa6e:	f7fe fa43 	bl	8008ef8 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800aa72:	9b05      	ldr	r3, [sp, #20]
 800aa74:	9302      	str	r3, [sp, #8]
 800aa76:	9b06      	ldr	r3, [sp, #24]
 800aa78:	9301      	str	r3, [sp, #4]
 800aa7a:	2302      	movs	r3, #2
 800aa7c:	9300      	str	r3, [sp, #0]
 800aa7e:	9a07      	ldr	r2, [sp, #28]
 800aa80:	490a      	ldr	r1, [pc, #40]	; (800aaac <xTimerCreateTimerTask+0x58>)
 800aa82:	480b      	ldr	r0, [pc, #44]	; (800aab0 <xTimerCreateTimerTask+0x5c>)
 800aa84:	4623      	mov	r3, r4
 800aa86:	f7ff fbb4 	bl	800a1f2 <xTaskCreateStatic>
 800aa8a:	4b0a      	ldr	r3, [pc, #40]	; (800aab4 <xTimerCreateTimerTask+0x60>)
 800aa8c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800aa8e:	b940      	cbnz	r0, 800aaa2 <xTimerCreateTimerTask+0x4e>
 800aa90:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aa94:	f383 8811 	msr	BASEPRI, r3
 800aa98:	f3bf 8f6f 	isb	sy
 800aa9c:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800aaa0:	e7fe      	b.n	800aaa0 <xTimerCreateTimerTask+0x4c>
}
 800aaa2:	2001      	movs	r0, #1
 800aaa4:	b008      	add	sp, #32
 800aaa6:	bd10      	pop	{r4, pc}
 800aaa8:	2001359c 	.word	0x2001359c
 800aaac:	0802039d 	.word	0x0802039d
 800aab0:	0800abbd 	.word	0x0800abbd
 800aab4:	200135a0 	.word	0x200135a0

0800aab8 <xTimerGenericCommand>:
{
 800aab8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800aaba:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800aabc:	4604      	mov	r4, r0
{
 800aabe:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800aac0:	b940      	cbnz	r0, 800aad4 <xTimerGenericCommand+0x1c>
 800aac2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aac6:	f383 8811 	msr	BASEPRI, r3
 800aaca:	f3bf 8f6f 	isb	sy
 800aace:	f3bf 8f4f 	dsb	sy
 800aad2:	e7fe      	b.n	800aad2 <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800aad4:	4d0d      	ldr	r5, [pc, #52]	; (800ab0c <xTimerGenericCommand+0x54>)
 800aad6:	6828      	ldr	r0, [r5, #0]
 800aad8:	b180      	cbz	r0, 800aafc <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800aada:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800aadc:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800aae0:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800aae2:	dc0d      	bgt.n	800ab00 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800aae4:	f7ff fe70 	bl	800a7c8 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800aae8:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800aaea:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800aaec:	bf08      	it	eq
 800aaee:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800aaf0:	6828      	ldr	r0, [r5, #0]
 800aaf2:	bf18      	it	ne
 800aaf4:	461a      	movne	r2, r3
 800aaf6:	4669      	mov	r1, sp
 800aaf8:	f7fe fe7a 	bl	80097f0 <xQueueGenericSend>
}
 800aafc:	b004      	add	sp, #16
 800aafe:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800ab00:	2300      	movs	r3, #0
 800ab02:	4669      	mov	r1, sp
 800ab04:	f7fe ff27 	bl	8009956 <xQueueGenericSendFromISR>
 800ab08:	e7f8      	b.n	800aafc <xTimerGenericCommand+0x44>
 800ab0a:	bf00      	nop
 800ab0c:	2001359c 	.word	0x2001359c

0800ab10 <prvSampleTimeNow>:
{
 800ab10:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800ab14:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800abb8 <prvSampleTimeNow+0xa8>
{
 800ab18:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800ab1a:	f7ff fc1d 	bl	800a358 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800ab1e:	f8d8 3000 	ldr.w	r3, [r8]
 800ab22:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 800ab24:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800ab26:	d90b      	bls.n	800ab40 <prvSampleTimeNow+0x30>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800ab28:	4f21      	ldr	r7, [pc, #132]	; (800abb0 <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800ab2a:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800ab2e:	683b      	ldr	r3, [r7, #0]
 800ab30:	681a      	ldr	r2, [r3, #0]
 800ab32:	b96a      	cbnz	r2, 800ab50 <prvSampleTimeNow+0x40>
	pxCurrentTimerList = pxOverflowTimerList;
 800ab34:	4a1f      	ldr	r2, [pc, #124]	; (800abb4 <prvSampleTimeNow+0xa4>)
 800ab36:	6811      	ldr	r1, [r2, #0]
 800ab38:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 800ab3a:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800ab3c:	2301      	movs	r3, #1
 800ab3e:	e000      	b.n	800ab42 <prvSampleTimeNow+0x32>
 800ab40:	2300      	movs	r3, #0
}
 800ab42:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdTRUE;
 800ab44:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800ab46:	f8c8 5000 	str.w	r5, [r8]
}
 800ab4a:	b004      	add	sp, #16
 800ab4c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800ab50:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ab52:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800ab54:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800ab58:	1d21      	adds	r1, r4, #4
 800ab5a:	4608      	mov	r0, r1
 800ab5c:	9103      	str	r1, [sp, #12]
 800ab5e:	f7fe fb04 	bl	800916a <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800ab62:	6a23      	ldr	r3, [r4, #32]
 800ab64:	4620      	mov	r0, r4
 800ab66:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800ab68:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800ab6c:	9903      	ldr	r1, [sp, #12]
 800ab6e:	f013 0f04 	tst.w	r3, #4
 800ab72:	d0dc      	beq.n	800ab2e <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800ab74:	69a3      	ldr	r3, [r4, #24]
 800ab76:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 800ab78:	459a      	cmp	sl, r3
 800ab7a:	d205      	bcs.n	800ab88 <prvSampleTimeNow+0x78>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ab7c:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800ab7e:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800ab80:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ab82:	f7fe fadb 	bl	800913c <vListInsert>
 800ab86:	e7d2      	b.n	800ab2e <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800ab88:	2300      	movs	r3, #0
 800ab8a:	f8cd 9000 	str.w	r9, [sp]
 800ab8e:	4652      	mov	r2, sl
 800ab90:	4619      	mov	r1, r3
 800ab92:	4620      	mov	r0, r4
 800ab94:	f7ff ff90 	bl	800aab8 <xTimerGenericCommand>
				configASSERT( xResult );
 800ab98:	2800      	cmp	r0, #0
 800ab9a:	d1c8      	bne.n	800ab2e <prvSampleTimeNow+0x1e>
 800ab9c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aba0:	f383 8811 	msr	BASEPRI, r3
 800aba4:	f3bf 8f6f 	isb	sy
 800aba8:	f3bf 8f4f 	dsb	sy
 800abac:	e7fe      	b.n	800abac <prvSampleTimeNow+0x9c>
 800abae:	bf00      	nop
 800abb0:	20013478 	.word	0x20013478
 800abb4:	2001347c 	.word	0x2001347c
 800abb8:	20013548 	.word	0x20013548

0800abbc <prvTimerTask>:
{
 800abbc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800abc0:	4d6e      	ldr	r5, [pc, #440]	; (800ad7c <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800abc2:	4e6f      	ldr	r6, [pc, #444]	; (800ad80 <prvTimerTask+0x1c4>)
{
 800abc4:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800abc6:	682b      	ldr	r3, [r5, #0]
 800abc8:	f8d3 8000 	ldr.w	r8, [r3]
 800abcc:	f1b8 0f00 	cmp.w	r8, #0
 800abd0:	d035      	beq.n	800ac3e <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800abd2:	68db      	ldr	r3, [r3, #12]
 800abd4:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800abd8:	2400      	movs	r4, #0
	vTaskSuspendAll();
 800abda:	f7ff fbb5 	bl	800a348 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800abde:	a804      	add	r0, sp, #16
 800abe0:	f7ff ff96 	bl	800ab10 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800abe4:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800abe6:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800abe8:	2b00      	cmp	r3, #0
 800abea:	d169      	bne.n	800acc0 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800abec:	2c00      	cmp	r4, #0
 800abee:	d14c      	bne.n	800ac8a <prvTimerTask+0xce>
 800abf0:	4540      	cmp	r0, r8
 800abf2:	d350      	bcc.n	800ac96 <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800abf4:	f7ff fc4c 	bl	800a490 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800abf8:	682b      	ldr	r3, [r5, #0]
 800abfa:	68db      	ldr	r3, [r3, #12]
 800abfc:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800abfe:	1d38      	adds	r0, r7, #4
 800ac00:	f7fe fab3 	bl	800916a <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800ac04:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800ac08:	0758      	lsls	r0, r3, #29
 800ac0a:	d51a      	bpl.n	800ac42 <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800ac0c:	69b9      	ldr	r1, [r7, #24]
 800ac0e:	4643      	mov	r3, r8
 800ac10:	464a      	mov	r2, r9
 800ac12:	4441      	add	r1, r8
 800ac14:	4638      	mov	r0, r7
 800ac16:	f7ff feff 	bl	800aa18 <prvInsertTimerInActiveList>
 800ac1a:	b1b0      	cbz	r0, 800ac4a <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800ac1c:	9400      	str	r4, [sp, #0]
 800ac1e:	4623      	mov	r3, r4
 800ac20:	4642      	mov	r2, r8
 800ac22:	4621      	mov	r1, r4
 800ac24:	4638      	mov	r0, r7
 800ac26:	f7ff ff47 	bl	800aab8 <xTimerGenericCommand>
			configASSERT( xResult );
 800ac2a:	b970      	cbnz	r0, 800ac4a <prvTimerTask+0x8e>
 800ac2c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ac30:	f383 8811 	msr	BASEPRI, r3
 800ac34:	f3bf 8f6f 	isb	sy
 800ac38:	f3bf 8f4f 	dsb	sy
 800ac3c:	e7fe      	b.n	800ac3c <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800ac3e:	2401      	movs	r4, #1
 800ac40:	e7cb      	b.n	800abda <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800ac42:	f023 0301 	bic.w	r3, r3, #1
 800ac46:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800ac4a:	6a3b      	ldr	r3, [r7, #32]
 800ac4c:	4638      	mov	r0, r7
 800ac4e:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800ac50:	6830      	ldr	r0, [r6, #0]
 800ac52:	2200      	movs	r2, #0
 800ac54:	a904      	add	r1, sp, #16
 800ac56:	f7fe ff34 	bl	8009ac2 <xQueueReceive>
 800ac5a:	2800      	cmp	r0, #0
 800ac5c:	d0b3      	beq.n	800abc6 <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800ac5e:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800ac60:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800ac62:	2b00      	cmp	r3, #0
 800ac64:	db2f      	blt.n	800acc6 <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800ac66:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800ac68:	6963      	ldr	r3, [r4, #20]
 800ac6a:	2b00      	cmp	r3, #0
 800ac6c:	d132      	bne.n	800acd4 <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800ac6e:	a803      	add	r0, sp, #12
 800ac70:	f7ff ff4e 	bl	800ab10 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800ac74:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800ac76:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800ac78:	2b09      	cmp	r3, #9
 800ac7a:	d8e9      	bhi.n	800ac50 <prvTimerTask+0x94>
 800ac7c:	e8df f003 	tbb	[pc, r3]
 800ac80:	572e2e2e 	.word	0x572e2e2e
 800ac84:	2e2e765e 	.word	0x2e2e765e
 800ac88:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800ac8a:	4b3e      	ldr	r3, [pc, #248]	; (800ad84 <prvTimerTask+0x1c8>)
 800ac8c:	681b      	ldr	r3, [r3, #0]
 800ac8e:	681c      	ldr	r4, [r3, #0]
 800ac90:	fab4 f484 	clz	r4, r4
 800ac94:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800ac96:	6830      	ldr	r0, [r6, #0]
 800ac98:	4622      	mov	r2, r4
 800ac9a:	eba8 0109 	sub.w	r1, r8, r9
 800ac9e:	f7ff f920 	bl	8009ee2 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800aca2:	f7ff fbf5 	bl	800a490 <xTaskResumeAll>
 800aca6:	2800      	cmp	r0, #0
 800aca8:	d1d2      	bne.n	800ac50 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 800acaa:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800acae:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800acb2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800acb6:	f3bf 8f4f 	dsb	sy
 800acba:	f3bf 8f6f 	isb	sy
 800acbe:	e7c7      	b.n	800ac50 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800acc0:	f7ff fbe6 	bl	800a490 <xTaskResumeAll>
}
 800acc4:	e7c4      	b.n	800ac50 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800acc6:	9b05      	ldr	r3, [sp, #20]
 800acc8:	9907      	ldr	r1, [sp, #28]
 800acca:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800accc:	9b04      	ldr	r3, [sp, #16]
 800acce:	2b00      	cmp	r3, #0
 800acd0:	dbbe      	blt.n	800ac50 <prvTimerTask+0x94>
 800acd2:	e7c8      	b.n	800ac66 <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800acd4:	1d20      	adds	r0, r4, #4
 800acd6:	f7fe fa48 	bl	800916a <uxListRemove>
 800acda:	e7c8      	b.n	800ac6e <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800acdc:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800ace0:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800ace2:	f043 0301 	orr.w	r3, r3, #1
 800ace6:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800acea:	9b05      	ldr	r3, [sp, #20]
 800acec:	4620      	mov	r0, r4
 800acee:	4419      	add	r1, r3
 800acf0:	f7ff fe92 	bl	800aa18 <prvInsertTimerInActiveList>
 800acf4:	2800      	cmp	r0, #0
 800acf6:	d0ab      	beq.n	800ac50 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800acf8:	6a23      	ldr	r3, [r4, #32]
 800acfa:	4620      	mov	r0, r4
 800acfc:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800acfe:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800ad02:	0759      	lsls	r1, r3, #29
 800ad04:	d5a4      	bpl.n	800ac50 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800ad06:	69a2      	ldr	r2, [r4, #24]
 800ad08:	9905      	ldr	r1, [sp, #20]
 800ad0a:	2300      	movs	r3, #0
 800ad0c:	440a      	add	r2, r1
 800ad0e:	9300      	str	r3, [sp, #0]
 800ad10:	4619      	mov	r1, r3
 800ad12:	4620      	mov	r0, r4
 800ad14:	f7ff fed0 	bl	800aab8 <xTimerGenericCommand>
							configASSERT( xResult );
 800ad18:	2800      	cmp	r0, #0
 800ad1a:	d199      	bne.n	800ac50 <prvTimerTask+0x94>
 800ad1c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ad20:	f383 8811 	msr	BASEPRI, r3
 800ad24:	f3bf 8f6f 	isb	sy
 800ad28:	f3bf 8f4f 	dsb	sy
 800ad2c:	e7fe      	b.n	800ad2c <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800ad2e:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800ad32:	f023 0301 	bic.w	r3, r3, #1
 800ad36:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 800ad3a:	e789      	b.n	800ac50 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800ad3c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800ad40:	f043 0301 	orr.w	r3, r3, #1
 800ad44:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800ad48:	9905      	ldr	r1, [sp, #20]
 800ad4a:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800ad4c:	b941      	cbnz	r1, 800ad60 <prvTimerTask+0x1a4>
 800ad4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ad52:	f383 8811 	msr	BASEPRI, r3
 800ad56:	f3bf 8f6f 	isb	sy
 800ad5a:	f3bf 8f4f 	dsb	sy
 800ad5e:	e7fe      	b.n	800ad5e <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800ad60:	4603      	mov	r3, r0
 800ad62:	4401      	add	r1, r0
 800ad64:	4620      	mov	r0, r4
 800ad66:	f7ff fe57 	bl	800aa18 <prvInsertTimerInActiveList>
					break;
 800ad6a:	e771      	b.n	800ac50 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800ad6c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800ad70:	079a      	lsls	r2, r3, #30
 800ad72:	d4de      	bmi.n	800ad32 <prvTimerTask+0x176>
							vPortFree( pxTimer );
 800ad74:	4620      	mov	r0, r4
 800ad76:	f7fe f989 	bl	800908c <vPortFree>
 800ad7a:	e769      	b.n	800ac50 <prvTimerTask+0x94>
 800ad7c:	20013478 	.word	0x20013478
 800ad80:	2001359c 	.word	0x2001359c
 800ad84:	2001347c 	.word	0x2001347c

0800ad88 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800ad88:	8880      	ldrh	r0, [r0, #4]
 800ad8a:	4770      	bx	lr

0800ad8c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800ad8c:	b570      	push	{r4, r5, r6, lr}
 800ad8e:	6803      	ldr	r3, [r0, #0]
 800ad90:	4605      	mov	r5, r0
 800ad92:	460c      	mov	r4, r1
 800ad94:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ad96:	2100      	movs	r1, #0
 800ad98:	4798      	blx	r3
 800ad9a:	682b      	ldr	r3, [r5, #0]
 800ad9c:	4606      	mov	r6, r0
 800ad9e:	6a1b      	ldr	r3, [r3, #32]
 800ada0:	4628      	mov	r0, r5
 800ada2:	4798      	blx	r3
 800ada4:	1ba4      	subs	r4, r4, r6
 800ada6:	b2a4      	uxth	r4, r4
 800ada8:	fbb4 f0f0 	udiv	r0, r4, r0
 800adac:	bd70      	pop	{r4, r5, r6, pc}

0800adae <_ZN8touchgfx17AbstractPartition5clearEv>:
 800adae:	2300      	movs	r3, #0
 800adb0:	8083      	strh	r3, [r0, #4]
 800adb2:	4770      	bx	lr

0800adb4 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800adb4:	b510      	push	{r4, lr}
 800adb6:	6803      	ldr	r3, [r0, #0]
 800adb8:	8881      	ldrh	r1, [r0, #4]
 800adba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800adbc:	4604      	mov	r4, r0
 800adbe:	4798      	blx	r3
 800adc0:	88a3      	ldrh	r3, [r4, #4]
 800adc2:	3301      	adds	r3, #1
 800adc4:	80a3      	strh	r3, [r4, #4]
 800adc6:	bd10      	pop	{r4, pc}

0800adc8 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800adc8:	6803      	ldr	r3, [r0, #0]
 800adca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800adcc:	4718      	bx	r3

0800adce <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800adce:	4770      	bx	lr

0800add0 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800add0:	4a02      	ldr	r2, [pc, #8]	; (800addc <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800add2:	6002      	str	r2, [r0, #0]
 800add4:	2200      	movs	r2, #0
 800add6:	8082      	strh	r2, [r0, #4]
 800add8:	4770      	bx	lr
 800adda:	bf00      	nop
 800addc:	080203b0 	.word	0x080203b0

0800ade0 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800ade0:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800ade2:	2000      	movs	r0, #0
 800ade4:	b12b      	cbz	r3, 800adf2 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800ade6:	b920      	cbnz	r0, 800adf2 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800ade8:	1a5a      	subs	r2, r3, r1
 800adea:	4250      	negs	r0, r2
 800adec:	4150      	adcs	r0, r2
 800adee:	699b      	ldr	r3, [r3, #24]
 800adf0:	e7f8      	b.n	800ade4 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800adf2:	4770      	bx	lr

0800adf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800adf4:	2300      	movs	r3, #0
 800adf6:	6148      	str	r0, [r1, #20]
 800adf8:	618b      	str	r3, [r1, #24]
 800adfa:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800adfc:	b913      	cbnz	r3, 800ae04 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800adfe:	6281      	str	r1, [r0, #40]	; 0x28
 800ae00:	4770      	bx	lr
 800ae02:	4613      	mov	r3, r2
 800ae04:	699a      	ldr	r2, [r3, #24]
 800ae06:	2a00      	cmp	r2, #0
 800ae08:	d1fb      	bne.n	800ae02 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800ae0a:	6199      	str	r1, [r3, #24]
 800ae0c:	4770      	bx	lr

0800ae0e <_ZN8touchgfx9Container9removeAllEv>:
 800ae0e:	2200      	movs	r2, #0
 800ae10:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800ae12:	b123      	cbz	r3, 800ae1e <_ZN8touchgfx9Container9removeAllEv+0x10>
 800ae14:	6999      	ldr	r1, [r3, #24]
 800ae16:	6281      	str	r1, [r0, #40]	; 0x28
 800ae18:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800ae1c:	e7f8      	b.n	800ae10 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800ae1e:	4770      	bx	lr

0800ae20 <_ZN8touchgfx9Container6unlinkEv>:
 800ae20:	2300      	movs	r3, #0
 800ae22:	6283      	str	r3, [r0, #40]	; 0x28
 800ae24:	4770      	bx	lr

0800ae26 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800ae26:	2200      	movs	r2, #0
 800ae28:	8002      	strh	r2, [r0, #0]
 800ae2a:	8042      	strh	r2, [r0, #2]
 800ae2c:	8082      	strh	r2, [r0, #4]
 800ae2e:	80c2      	strh	r2, [r0, #6]
 800ae30:	4770      	bx	lr

0800ae32 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800ae32:	b570      	push	{r4, r5, r6, lr}
 800ae34:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ae36:	460d      	mov	r5, r1
 800ae38:	4616      	mov	r6, r2
 800ae3a:	b13c      	cbz	r4, 800ae4c <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800ae3c:	6823      	ldr	r3, [r4, #0]
 800ae3e:	4620      	mov	r0, r4
 800ae40:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800ae42:	4632      	mov	r2, r6
 800ae44:	4629      	mov	r1, r5
 800ae46:	4798      	blx	r3
 800ae48:	69a4      	ldr	r4, [r4, #24]
 800ae4a:	e7f6      	b.n	800ae3a <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800ae4c:	bd70      	pop	{r4, r5, r6, pc}

0800ae4e <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800ae4e:	b538      	push	{r3, r4, r5, lr}
 800ae50:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ae52:	460d      	mov	r5, r1
 800ae54:	b134      	cbz	r4, 800ae64 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800ae56:	682b      	ldr	r3, [r5, #0]
 800ae58:	4621      	mov	r1, r4
 800ae5a:	689b      	ldr	r3, [r3, #8]
 800ae5c:	4628      	mov	r0, r5
 800ae5e:	4798      	blx	r3
 800ae60:	69a4      	ldr	r4, [r4, #24]
 800ae62:	e7f7      	b.n	800ae54 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800ae64:	bd38      	pop	{r3, r4, r5, pc}

0800ae66 <_ZNK8touchgfx9Container17invalidateContentEv>:
 800ae66:	b510      	push	{r4, lr}
 800ae68:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ae6a:	b12c      	cbz	r4, 800ae78 <_ZNK8touchgfx9Container17invalidateContentEv+0x12>
 800ae6c:	6823      	ldr	r3, [r4, #0]
 800ae6e:	4620      	mov	r0, r4
 800ae70:	699b      	ldr	r3, [r3, #24]
 800ae72:	4798      	blx	r3
 800ae74:	69a4      	ldr	r4, [r4, #24]
 800ae76:	e7f8      	b.n	800ae6a <_ZNK8touchgfx9Container17invalidateContentEv+0x4>
 800ae78:	bd10      	pop	{r4, pc}

0800ae7a <_ZN8touchgfx9ContainerD1Ev>:
 800ae7a:	4770      	bx	lr

0800ae7c <_ZN8touchgfx9ContainerD0Ev>:
 800ae7c:	b510      	push	{r4, lr}
 800ae7e:	212c      	movs	r1, #44	; 0x2c
 800ae80:	4604      	mov	r4, r0
 800ae82:	f012 fa79 	bl	801d378 <_ZdlPvj>
 800ae86:	4620      	mov	r0, r4
 800ae88:	bd10      	pop	{r4, pc}

0800ae8a <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800ae8a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800ae8c:	b19b      	cbz	r3, 800aeb6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800ae8e:	428b      	cmp	r3, r1
 800ae90:	d109      	bne.n	800aea6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800ae92:	699a      	ldr	r2, [r3, #24]
 800ae94:	2100      	movs	r1, #0
 800ae96:	6159      	str	r1, [r3, #20]
 800ae98:	6282      	str	r2, [r0, #40]	; 0x28
 800ae9a:	b902      	cbnz	r2, 800ae9e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800ae9c:	4770      	bx	lr
 800ae9e:	6199      	str	r1, [r3, #24]
 800aea0:	4770      	bx	lr
 800aea2:	4613      	mov	r3, r2
 800aea4:	b13a      	cbz	r2, 800aeb6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800aea6:	699a      	ldr	r2, [r3, #24]
 800aea8:	428a      	cmp	r2, r1
 800aeaa:	d1fa      	bne.n	800aea2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800aeac:	698a      	ldr	r2, [r1, #24]
 800aeae:	619a      	str	r2, [r3, #24]
 800aeb0:	2300      	movs	r3, #0
 800aeb2:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800aeb6:	4770      	bx	lr

0800aeb8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800aeb8:	b410      	push	{r4}
 800aeba:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800aebc:	4604      	mov	r4, r0
 800aebe:	b92b      	cbnz	r3, 800aecc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800aec0:	6803      	ldr	r3, [r0, #0]
 800aec2:	f85d 4b04 	ldr.w	r4, [sp], #4
 800aec6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800aec8:	4611      	mov	r1, r2
 800aeca:	4718      	bx	r3
 800aecc:	b941      	cbnz	r1, 800aee0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800aece:	6193      	str	r3, [r2, #24]
 800aed0:	6282      	str	r2, [r0, #40]	; 0x28
 800aed2:	6154      	str	r4, [r2, #20]
 800aed4:	f85d 4b04 	ldr.w	r4, [sp], #4
 800aed8:	4770      	bx	lr
 800aeda:	4603      	mov	r3, r0
 800aedc:	2800      	cmp	r0, #0
 800aede:	d0f9      	beq.n	800aed4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800aee0:	4299      	cmp	r1, r3
 800aee2:	6998      	ldr	r0, [r3, #24]
 800aee4:	d1f9      	bne.n	800aeda <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800aee6:	6190      	str	r0, [r2, #24]
 800aee8:	618a      	str	r2, [r1, #24]
 800aeea:	e7f2      	b.n	800aed2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800aeec <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800aeec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800aef0:	461f      	mov	r7, r3
 800aef2:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800aef6:	460d      	mov	r5, r1
 800aef8:	4616      	mov	r6, r2
 800aefa:	b103      	cbz	r3, 800aefe <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800aefc:	6038      	str	r0, [r7, #0]
 800aefe:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800af00:	b314      	cbz	r4, 800af48 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800af02:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800af06:	b1eb      	cbz	r3, 800af44 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800af08:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800af0c:	428d      	cmp	r5, r1
 800af0e:	db19      	blt.n	800af44 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800af10:	8923      	ldrh	r3, [r4, #8]
 800af12:	b289      	uxth	r1, r1
 800af14:	440b      	add	r3, r1
 800af16:	b21b      	sxth	r3, r3
 800af18:	429d      	cmp	r5, r3
 800af1a:	da13      	bge.n	800af44 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800af1c:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800af20:	4296      	cmp	r6, r2
 800af22:	db0f      	blt.n	800af44 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800af24:	8963      	ldrh	r3, [r4, #10]
 800af26:	b292      	uxth	r2, r2
 800af28:	4413      	add	r3, r2
 800af2a:	b21b      	sxth	r3, r3
 800af2c:	429e      	cmp	r6, r3
 800af2e:	da09      	bge.n	800af44 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800af30:	6823      	ldr	r3, [r4, #0]
 800af32:	1ab2      	subs	r2, r6, r2
 800af34:	1a69      	subs	r1, r5, r1
 800af36:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800af3a:	b212      	sxth	r2, r2
 800af3c:	463b      	mov	r3, r7
 800af3e:	b209      	sxth	r1, r1
 800af40:	4620      	mov	r0, r4
 800af42:	47c0      	blx	r8
 800af44:	69a4      	ldr	r4, [r4, #24]
 800af46:	e7db      	b.n	800af00 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800af48:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800af4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800af4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800af50:	4c6e      	ldr	r4, [pc, #440]	; (800b10c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800af52:	b0a1      	sub	sp, #132	; 0x84
 800af54:	6824      	ldr	r4, [r4, #0]
 800af56:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800af58:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800af5c:	9303      	str	r3, [sp, #12]
 800af5e:	2400      	movs	r4, #0
 800af60:	802c      	strh	r4, [r5, #0]
 800af62:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800af64:	802c      	strh	r4, [r5, #0]
 800af66:	601c      	str	r4, [r3, #0]
 800af68:	4606      	mov	r6, r0
 800af6a:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800af6e:	f7ff ffbd 	bl	800aeec <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800af72:	f1b9 0f03 	cmp.w	r9, #3
 800af76:	f340 80c2 	ble.w	800b0fe <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800af7a:	4631      	mov	r1, r6
 800af7c:	a80c      	add	r0, sp, #48	; 0x30
 800af7e:	f004 ffe7 	bl	800ff50 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800af82:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800af86:	9306      	str	r3, [sp, #24]
 800af88:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800af8c:	9307      	str	r3, [sp, #28]
 800af8e:	9b03      	ldr	r3, [sp, #12]
 800af90:	f8d3 a000 	ldr.w	sl, [r3]
 800af94:	f1ba 0f00 	cmp.w	sl, #0
 800af98:	f000 80b4 	beq.w	800b104 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800af9c:	4651      	mov	r1, sl
 800af9e:	a810      	add	r0, sp, #64	; 0x40
 800afa0:	f004 ffd6 	bl	800ff50 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800afa4:	9b01      	ldr	r3, [sp, #4]
 800afa6:	9a06      	ldr	r2, [sp, #24]
 800afa8:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800afac:	189d      	adds	r5, r3, r2
 800afae:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800afb2:	9a07      	ldr	r2, [sp, #28]
 800afb4:	2002      	movs	r0, #2
 800afb6:	fb91 f1f0 	sdiv	r1, r1, r0
 800afba:	4419      	add	r1, r3
 800afbc:	1a6d      	subs	r5, r5, r1
 800afbe:	9b02      	ldr	r3, [sp, #8]
 800afc0:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800afc4:	4413      	add	r3, r2
 800afc6:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800afca:	fb92 f2f0 	sdiv	r2, r2, r0
 800afce:	440a      	add	r2, r1
 800afd0:	1a9b      	subs	r3, r3, r2
 800afd2:	435b      	muls	r3, r3
 800afd4:	fb05 3505 	mla	r5, r5, r5, r3
 800afd8:	4f4d      	ldr	r7, [pc, #308]	; (800b110 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800afda:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800afdc:	ac10      	add	r4, sp, #64	; 0x40
 800afde:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800afe0:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800afe2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800afe4:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800afe6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800afe8:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800afec:	f1b9 0f0c 	cmp.w	r9, #12
 800aff0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800aff4:	f04f 0303 	mov.w	r3, #3
 800aff8:	bfc8      	it	gt
 800affa:	4698      	movgt	r8, r3
 800affc:	f8cd 9000 	str.w	r9, [sp]
 800b000:	f04f 0400 	mov.w	r4, #0
 800b004:	bfdc      	itt	le
 800b006:	f109 32ff 	addle.w	r2, r9, #4294967295
 800b00a:	fb92 f8f3 	sdivle	r8, r2, r3
 800b00e:	1c63      	adds	r3, r4, #1
 800b010:	aa10      	add	r2, sp, #64	; 0x40
 800b012:	f004 0401 	and.w	r4, r4, #1
 800b016:	9308      	str	r3, [sp, #32]
 800b018:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800b01c:	9b00      	ldr	r3, [sp, #0]
 800b01e:	fb93 f3f8 	sdiv	r3, r3, r8
 800b022:	b29b      	uxth	r3, r3
 800b024:	3404      	adds	r4, #4
 800b026:	f04f 0b00 	mov.w	fp, #0
 800b02a:	9304      	str	r3, [sp, #16]
 800b02c:	9a04      	ldr	r2, [sp, #16]
 800b02e:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800b032:	fb13 f302 	smulbb	r3, r3, r2
 800b036:	9a01      	ldr	r2, [sp, #4]
 800b038:	b29b      	uxth	r3, r3
 800b03a:	1899      	adds	r1, r3, r2
 800b03c:	9305      	str	r3, [sp, #20]
 800b03e:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800b042:	b209      	sxth	r1, r1
 800b044:	4299      	cmp	r1, r3
 800b046:	db4d      	blt.n	800b0e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800b048:	8932      	ldrh	r2, [r6, #8]
 800b04a:	4413      	add	r3, r2
 800b04c:	b21b      	sxth	r3, r3
 800b04e:	4299      	cmp	r1, r3
 800b050:	da48      	bge.n	800b0e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800b052:	9b04      	ldr	r3, [sp, #16]
 800b054:	6827      	ldr	r7, [r4, #0]
 800b056:	fb17 f703 	smulbb	r7, r7, r3
 800b05a:	9b02      	ldr	r3, [sp, #8]
 800b05c:	b2bf      	uxth	r7, r7
 800b05e:	18fa      	adds	r2, r7, r3
 800b060:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800b064:	b212      	sxth	r2, r2
 800b066:	429a      	cmp	r2, r3
 800b068:	db3c      	blt.n	800b0e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800b06a:	8970      	ldrh	r0, [r6, #10]
 800b06c:	4403      	add	r3, r0
 800b06e:	b21b      	sxth	r3, r3
 800b070:	429a      	cmp	r2, r3
 800b072:	da37      	bge.n	800b0e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800b074:	2300      	movs	r3, #0
 800b076:	930b      	str	r3, [sp, #44]	; 0x2c
 800b078:	4630      	mov	r0, r6
 800b07a:	ab0b      	add	r3, sp, #44	; 0x2c
 800b07c:	f7ff ff36 	bl	800aeec <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800b080:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b082:	b37a      	cbz	r2, 800b0e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800b084:	4552      	cmp	r2, sl
 800b086:	d02d      	beq.n	800b0e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800b088:	4611      	mov	r1, r2
 800b08a:	a80e      	add	r0, sp, #56	; 0x38
 800b08c:	9209      	str	r2, [sp, #36]	; 0x24
 800b08e:	f004 ff5f 	bl	800ff50 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800b092:	9a06      	ldr	r2, [sp, #24]
 800b094:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800b098:	9b01      	ldr	r3, [sp, #4]
 800b09a:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800b09e:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800b0a2:	4413      	add	r3, r2
 800b0a4:	f04f 0e02 	mov.w	lr, #2
 800b0a8:	fb91 f1fe 	sdiv	r1, r1, lr
 800b0ac:	4401      	add	r1, r0
 800b0ae:	1a58      	subs	r0, r3, r1
 800b0b0:	9a07      	ldr	r2, [sp, #28]
 800b0b2:	9b02      	ldr	r3, [sp, #8]
 800b0b4:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800b0b8:	fb9c fcfe 	sdiv	ip, ip, lr
 800b0bc:	4413      	add	r3, r2
 800b0be:	448c      	add	ip, r1
 800b0c0:	eba3 030c 	sub.w	r3, r3, ip
 800b0c4:	435b      	muls	r3, r3
 800b0c6:	fb00 3300 	mla	r3, r0, r0, r3
 800b0ca:	42ab      	cmp	r3, r5
 800b0cc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800b0ce:	d208      	bcs.n	800b0e2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800b0d0:	9803      	ldr	r0, [sp, #12]
 800b0d2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800b0d4:	6001      	str	r1, [r0, #0]
 800b0d6:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800b0d8:	9805      	ldr	r0, [sp, #20]
 800b0da:	8008      	strh	r0, [r1, #0]
 800b0dc:	992b      	ldr	r1, [sp, #172]	; 0xac
 800b0de:	461d      	mov	r5, r3
 800b0e0:	800f      	strh	r7, [r1, #0]
 800b0e2:	4692      	mov	sl, r2
 800b0e4:	f10b 0b01 	add.w	fp, fp, #1
 800b0e8:	f1bb 0f04 	cmp.w	fp, #4
 800b0ec:	f104 0408 	add.w	r4, r4, #8
 800b0f0:	d19c      	bne.n	800b02c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800b0f2:	9b00      	ldr	r3, [sp, #0]
 800b0f4:	9c08      	ldr	r4, [sp, #32]
 800b0f6:	444b      	add	r3, r9
 800b0f8:	4544      	cmp	r4, r8
 800b0fa:	9300      	str	r3, [sp, #0]
 800b0fc:	d187      	bne.n	800b00e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800b0fe:	b021      	add	sp, #132	; 0x84
 800b100:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b104:	f04f 35ff 	mov.w	r5, #4294967295
 800b108:	e766      	b.n	800afd8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800b10a:	bf00      	nop
 800b10c:	200135b0 	.word	0x200135b0
 800b110:	0801e440 	.word	0x0801e440

0800b114 <_ZN8touchgfx4RectaNERKS0_>:
 800b114:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b118:	f9b1 7000 	ldrsh.w	r7, [r1]
 800b11c:	888c      	ldrh	r4, [r1, #4]
 800b11e:	f9b0 9000 	ldrsh.w	r9, [r0]
 800b122:	443c      	add	r4, r7
 800b124:	b2a4      	uxth	r4, r4
 800b126:	fa0f f884 	sxth.w	r8, r4
 800b12a:	45c1      	cmp	r9, r8
 800b12c:	da2f      	bge.n	800b18e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800b12e:	8882      	ldrh	r2, [r0, #4]
 800b130:	444a      	add	r2, r9
 800b132:	b292      	uxth	r2, r2
 800b134:	fa0f fe82 	sxth.w	lr, r2
 800b138:	4577      	cmp	r7, lr
 800b13a:	da28      	bge.n	800b18e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800b13c:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800b140:	88cb      	ldrh	r3, [r1, #6]
 800b142:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800b146:	442b      	add	r3, r5
 800b148:	b21b      	sxth	r3, r3
 800b14a:	429e      	cmp	r6, r3
 800b14c:	da1f      	bge.n	800b18e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800b14e:	88c3      	ldrh	r3, [r0, #6]
 800b150:	4433      	add	r3, r6
 800b152:	b29b      	uxth	r3, r3
 800b154:	fa0f fc83 	sxth.w	ip, r3
 800b158:	4565      	cmp	r5, ip
 800b15a:	da18      	bge.n	800b18e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800b15c:	454f      	cmp	r7, r9
 800b15e:	bfb8      	it	lt
 800b160:	464f      	movlt	r7, r9
 800b162:	42b5      	cmp	r5, r6
 800b164:	bfb8      	it	lt
 800b166:	4635      	movlt	r5, r6
 800b168:	45f0      	cmp	r8, lr
 800b16a:	bfd8      	it	le
 800b16c:	4622      	movle	r2, r4
 800b16e:	1bd2      	subs	r2, r2, r7
 800b170:	8082      	strh	r2, [r0, #4]
 800b172:	884a      	ldrh	r2, [r1, #2]
 800b174:	88c9      	ldrh	r1, [r1, #6]
 800b176:	8007      	strh	r7, [r0, #0]
 800b178:	440a      	add	r2, r1
 800b17a:	b292      	uxth	r2, r2
 800b17c:	b211      	sxth	r1, r2
 800b17e:	458c      	cmp	ip, r1
 800b180:	bfa8      	it	ge
 800b182:	4613      	movge	r3, r2
 800b184:	1b5b      	subs	r3, r3, r5
 800b186:	80c3      	strh	r3, [r0, #6]
 800b188:	8045      	strh	r5, [r0, #2]
 800b18a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b18e:	2300      	movs	r3, #0
 800b190:	8003      	strh	r3, [r0, #0]
 800b192:	8043      	strh	r3, [r0, #2]
 800b194:	8083      	strh	r3, [r0, #4]
 800b196:	80c3      	strh	r3, [r0, #6]
 800b198:	e7f7      	b.n	800b18a <_ZN8touchgfx4RectaNERKS0_+0x76>

0800b19a <_ZNK8touchgfx4Rect7isEmptyEv>:
 800b19a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800b19e:	2b00      	cmp	r3, #0
 800b1a0:	dd06      	ble.n	800b1b0 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800b1a2:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800b1a6:	2800      	cmp	r0, #0
 800b1a8:	bfcc      	ite	gt
 800b1aa:	2000      	movgt	r0, #0
 800b1ac:	2001      	movle	r0, #1
 800b1ae:	4770      	bx	lr
 800b1b0:	2001      	movs	r0, #1
 800b1b2:	4770      	bx	lr

0800b1b4 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800b1b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b1b8:	2300      	movs	r3, #0
 800b1ba:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800b1bc:	8003      	strh	r3, [r0, #0]
 800b1be:	4604      	mov	r4, r0
 800b1c0:	8043      	strh	r3, [r0, #2]
 800b1c2:	8083      	strh	r3, [r0, #4]
 800b1c4:	80c3      	strh	r3, [r0, #6]
 800b1c6:	2d00      	cmp	r5, #0
 800b1c8:	d040      	beq.n	800b24c <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800b1ca:	1d28      	adds	r0, r5, #4
 800b1cc:	f7ff ffe5 	bl	800b19a <_ZNK8touchgfx4Rect7isEmptyEv>
 800b1d0:	b988      	cbnz	r0, 800b1f6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800b1d2:	4620      	mov	r0, r4
 800b1d4:	f7ff ffe1 	bl	800b19a <_ZNK8touchgfx4Rect7isEmptyEv>
 800b1d8:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800b1dc:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800b1e0:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800b1e4:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800b1e8:	b138      	cbz	r0, 800b1fa <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800b1ea:	8022      	strh	r2, [r4, #0]
 800b1ec:	8063      	strh	r3, [r4, #2]
 800b1ee:	f8a4 e004 	strh.w	lr, [r4, #4]
 800b1f2:	f8a4 c006 	strh.w	ip, [r4, #6]
 800b1f6:	69ad      	ldr	r5, [r5, #24]
 800b1f8:	e7e5      	b.n	800b1c6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800b1fa:	f9b4 0000 	ldrsh.w	r0, [r4]
 800b1fe:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800b202:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800b206:	4290      	cmp	r0, r2
 800b208:	4607      	mov	r7, r0
 800b20a:	bfa8      	it	ge
 800b20c:	4617      	movge	r7, r2
 800b20e:	4472      	add	r2, lr
 800b210:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800b214:	8027      	strh	r7, [r4, #0]
 800b216:	4299      	cmp	r1, r3
 800b218:	460e      	mov	r6, r1
 800b21a:	4440      	add	r0, r8
 800b21c:	bfa8      	it	ge
 800b21e:	461e      	movge	r6, r3
 800b220:	4471      	add	r1, lr
 800b222:	4463      	add	r3, ip
 800b224:	b200      	sxth	r0, r0
 800b226:	b212      	sxth	r2, r2
 800b228:	b209      	sxth	r1, r1
 800b22a:	b21b      	sxth	r3, r3
 800b22c:	4290      	cmp	r0, r2
 800b22e:	bfac      	ite	ge
 800b230:	ebc7 0200 	rsbge	r2, r7, r0
 800b234:	ebc7 0202 	rsblt	r2, r7, r2
 800b238:	4299      	cmp	r1, r3
 800b23a:	bfac      	ite	ge
 800b23c:	ebc6 0301 	rsbge	r3, r6, r1
 800b240:	ebc6 0303 	rsblt	r3, r6, r3
 800b244:	8066      	strh	r6, [r4, #2]
 800b246:	80a2      	strh	r2, [r4, #4]
 800b248:	80e3      	strh	r3, [r4, #6]
 800b24a:	e7d4      	b.n	800b1f6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800b24c:	4620      	mov	r0, r4
 800b24e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b252 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800b252:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800b256:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800b25a:	b383      	cbz	r3, 800b2be <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800b25c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800b25e:	b374      	cbz	r4, 800b2be <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800b260:	f9b1 5000 	ldrsh.w	r5, [r1]
 800b264:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800b268:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800b26c:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800b270:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800b274:	b303      	cbz	r3, 800b2b8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800b276:	4668      	mov	r0, sp
 800b278:	1d21      	adds	r1, r4, #4
 800b27a:	f8ad 5000 	strh.w	r5, [sp]
 800b27e:	f8ad 6002 	strh.w	r6, [sp, #2]
 800b282:	f8ad 7004 	strh.w	r7, [sp, #4]
 800b286:	f8ad 8006 	strh.w	r8, [sp, #6]
 800b28a:	f7ff ff43 	bl	800b114 <_ZN8touchgfx4RectaNERKS0_>
 800b28e:	4668      	mov	r0, sp
 800b290:	f7ff ff83 	bl	800b19a <_ZNK8touchgfx4Rect7isEmptyEv>
 800b294:	b980      	cbnz	r0, 800b2b8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800b296:	f8bd 3000 	ldrh.w	r3, [sp]
 800b29a:	88a2      	ldrh	r2, [r4, #4]
 800b29c:	1a9b      	subs	r3, r3, r2
 800b29e:	f8ad 3000 	strh.w	r3, [sp]
 800b2a2:	88e2      	ldrh	r2, [r4, #6]
 800b2a4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800b2a8:	1a9b      	subs	r3, r3, r2
 800b2aa:	f8ad 3002 	strh.w	r3, [sp, #2]
 800b2ae:	6823      	ldr	r3, [r4, #0]
 800b2b0:	4669      	mov	r1, sp
 800b2b2:	689b      	ldr	r3, [r3, #8]
 800b2b4:	4620      	mov	r0, r4
 800b2b6:	4798      	blx	r3
 800b2b8:	69a4      	ldr	r4, [r4, #24]
 800b2ba:	2c00      	cmp	r4, #0
 800b2bc:	d1d8      	bne.n	800b270 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800b2be:	b002      	add	sp, #8
 800b2c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b2c4 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800b2c4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b2c6:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800b2ca:	460d      	mov	r5, r1
 800b2cc:	4616      	mov	r6, r2
 800b2ce:	b323      	cbz	r3, 800b31a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800b2d0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800b2d2:	b314      	cbz	r4, 800b31a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800b2d4:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800b2d8:	b1eb      	cbz	r3, 800b316 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800b2da:	6828      	ldr	r0, [r5, #0]
 800b2dc:	6869      	ldr	r1, [r5, #4]
 800b2de:	466b      	mov	r3, sp
 800b2e0:	c303      	stmia	r3!, {r0, r1}
 800b2e2:	4668      	mov	r0, sp
 800b2e4:	1d21      	adds	r1, r4, #4
 800b2e6:	f7ff ff15 	bl	800b114 <_ZN8touchgfx4RectaNERKS0_>
 800b2ea:	4668      	mov	r0, sp
 800b2ec:	f7ff ff55 	bl	800b19a <_ZNK8touchgfx4Rect7isEmptyEv>
 800b2f0:	b988      	cbnz	r0, 800b316 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800b2f2:	f8bd 3000 	ldrh.w	r3, [sp]
 800b2f6:	88a2      	ldrh	r2, [r4, #4]
 800b2f8:	1a9b      	subs	r3, r3, r2
 800b2fa:	f8ad 3000 	strh.w	r3, [sp]
 800b2fe:	88e2      	ldrh	r2, [r4, #6]
 800b300:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800b304:	1a9b      	subs	r3, r3, r2
 800b306:	f8ad 3002 	strh.w	r3, [sp, #2]
 800b30a:	6823      	ldr	r3, [r4, #0]
 800b30c:	4632      	mov	r2, r6
 800b30e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800b310:	4669      	mov	r1, sp
 800b312:	4620      	mov	r0, r4
 800b314:	4798      	blx	r3
 800b316:	69a4      	ldr	r4, [r4, #24]
 800b318:	e7db      	b.n	800b2d2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800b31a:	b002      	add	sp, #8
 800b31c:	bd70      	pop	{r4, r5, r6, pc}

0800b31e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800b31e:	b513      	push	{r0, r1, r4, lr}
 800b320:	6803      	ldr	r3, [r0, #0]
 800b322:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800b326:	2300      	movs	r3, #0
 800b328:	e9cd 3300 	strd	r3, r3, [sp]
 800b32c:	466b      	mov	r3, sp
 800b32e:	47a0      	blx	r4
 800b330:	b002      	add	sp, #8
 800b332:	bd10      	pop	{r4, pc}

0800b334 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800b334:	2301      	movs	r3, #1
 800b336:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800b33a:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800b33e:	4770      	bx	lr

0800b340 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800b340:	2301      	movs	r3, #1
 800b342:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800b346:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800b34a:	4770      	bx	lr

0800b34c <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800b34c:	6843      	ldr	r3, [r0, #4]
 800b34e:	2201      	movs	r2, #1
 800b350:	725a      	strb	r2, [r3, #9]
 800b352:	6840      	ldr	r0, [r0, #4]
 800b354:	6803      	ldr	r3, [r0, #0]
 800b356:	691b      	ldr	r3, [r3, #16]
 800b358:	4718      	bx	r3

0800b35a <_ZN8touchgfx3HAL8flushDMAEv>:
 800b35a:	6840      	ldr	r0, [r0, #4]
 800b35c:	6803      	ldr	r3, [r0, #0]
 800b35e:	689b      	ldr	r3, [r3, #8]
 800b360:	4718      	bx	r3

0800b362 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800b362:	b530      	push	{r4, r5, lr}
 800b364:	b08b      	sub	sp, #44	; 0x2c
 800b366:	6804      	ldr	r4, [r0, #0]
 800b368:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800b36c:	9509      	str	r5, [sp, #36]	; 0x24
 800b36e:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800b372:	9508      	str	r5, [sp, #32]
 800b374:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800b378:	9507      	str	r5, [sp, #28]
 800b37a:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800b37e:	9506      	str	r5, [sp, #24]
 800b380:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800b384:	9505      	str	r5, [sp, #20]
 800b386:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800b38a:	9504      	str	r5, [sp, #16]
 800b38c:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800b390:	9503      	str	r5, [sp, #12]
 800b392:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800b396:	9502      	str	r5, [sp, #8]
 800b398:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800b39c:	e9cd 3500 	strd	r3, r5, [sp]
 800b3a0:	4613      	mov	r3, r2
 800b3a2:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800b3a4:	2200      	movs	r2, #0
 800b3a6:	47a0      	blx	r4
 800b3a8:	b00b      	add	sp, #44	; 0x2c
 800b3aa:	bd30      	pop	{r4, r5, pc}

0800b3ac <_ZN8touchgfx3HAL10beginFrameEv>:
 800b3ac:	4b04      	ldr	r3, [pc, #16]	; (800b3c0 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800b3ae:	781b      	ldrb	r3, [r3, #0]
 800b3b0:	b123      	cbz	r3, 800b3bc <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800b3b2:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800b3b6:	f080 0001 	eor.w	r0, r0, #1
 800b3ba:	4770      	bx	lr
 800b3bc:	2001      	movs	r0, #1
 800b3be:	4770      	bx	lr
 800b3c0:	200135ae 	.word	0x200135ae

0800b3c4 <_ZN8touchgfx3HAL8endFrameEv>:
 800b3c4:	b510      	push	{r4, lr}
 800b3c6:	4604      	mov	r4, r0
 800b3c8:	6840      	ldr	r0, [r0, #4]
 800b3ca:	6803      	ldr	r3, [r0, #0]
 800b3cc:	689b      	ldr	r3, [r3, #8]
 800b3ce:	4798      	blx	r3
 800b3d0:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800b3d4:	b113      	cbz	r3, 800b3dc <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800b3d6:	2301      	movs	r3, #1
 800b3d8:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800b3dc:	bd10      	pop	{r4, pc}

0800b3de <_ZN8touchgfx3HAL10initializeEv>:
 800b3de:	b510      	push	{r4, lr}
 800b3e0:	4604      	mov	r4, r0
 800b3e2:	f7f5 fe0d 	bl	8001000 <_ZN8touchgfx10OSWrappers10initializeEv>
 800b3e6:	6860      	ldr	r0, [r4, #4]
 800b3e8:	6803      	ldr	r3, [r0, #0]
 800b3ea:	68db      	ldr	r3, [r3, #12]
 800b3ec:	4798      	blx	r3
 800b3ee:	68e0      	ldr	r0, [r4, #12]
 800b3f0:	6803      	ldr	r3, [r0, #0]
 800b3f2:	689b      	ldr	r3, [r3, #8]
 800b3f4:	4798      	blx	r3
 800b3f6:	6823      	ldr	r3, [r4, #0]
 800b3f8:	4620      	mov	r0, r4
 800b3fa:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800b3fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b400:	4718      	bx	r3
	...

0800b404 <_ZN8touchgfx3HAL4tickEv>:
 800b404:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b406:	6803      	ldr	r3, [r0, #0]
 800b408:	4d5b      	ldr	r5, [pc, #364]	; (800b578 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800b40a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800b40e:	4604      	mov	r4, r0
 800b410:	4798      	blx	r3
 800b412:	2800      	cmp	r0, #0
 800b414:	f000 8095 	beq.w	800b542 <_ZN8touchgfx3HAL4tickEv+0x13e>
 800b418:	2001      	movs	r0, #1
 800b41a:	f7f5 fca7 	bl	8000d6c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800b41e:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800b422:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800b426:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800b42a:	2600      	movs	r6, #0
 800b42c:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800b430:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800b434:	b133      	cbz	r3, 800b444 <_ZN8touchgfx3HAL4tickEv+0x40>
 800b436:	6823      	ldr	r3, [r4, #0]
 800b438:	4620      	mov	r0, r4
 800b43a:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800b43e:	4798      	blx	r3
 800b440:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 800b444:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800b448:	6862      	ldr	r2, [r4, #4]
 800b44a:	f083 0301 	eor.w	r3, r3, #1
 800b44e:	7253      	strb	r3, [r2, #9]
 800b450:	2601      	movs	r6, #1
 800b452:	702e      	strb	r6, [r5, #0]
 800b454:	f003 fd0e 	bl	800ee74 <_ZN8touchgfx11Application11getInstanceEv>
 800b458:	6803      	ldr	r3, [r0, #0]
 800b45a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b45c:	4798      	blx	r3
 800b45e:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800b462:	b90b      	cbnz	r3, 800b468 <_ZN8touchgfx3HAL4tickEv+0x64>
 800b464:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800b468:	f003 fd04 	bl	800ee74 <_ZN8touchgfx11Application11getInstanceEv>
 800b46c:	6803      	ldr	r3, [r0, #0]
 800b46e:	695b      	ldr	r3, [r3, #20]
 800b470:	4798      	blx	r3
 800b472:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800b474:	6803      	ldr	r3, [r0, #0]
 800b476:	691b      	ldr	r3, [r3, #16]
 800b478:	4798      	blx	r3
 800b47a:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800b47e:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800b482:	3b01      	subs	r3, #1
 800b484:	b2db      	uxtb	r3, r3
 800b486:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800b48a:	b10a      	cbz	r2, 800b490 <_ZN8touchgfx3HAL4tickEv+0x8c>
 800b48c:	2b00      	cmp	r3, #0
 800b48e:	d1eb      	bne.n	800b468 <_ZN8touchgfx3HAL4tickEv+0x64>
 800b490:	4a3a      	ldr	r2, [pc, #232]	; (800b57c <_ZN8touchgfx3HAL4tickEv+0x178>)
 800b492:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800b496:	7813      	ldrb	r3, [r2, #0]
 800b498:	3301      	adds	r3, #1
 800b49a:	b25b      	sxtb	r3, r3
 800b49c:	4299      	cmp	r1, r3
 800b49e:	7013      	strb	r3, [r2, #0]
 800b4a0:	dc10      	bgt.n	800b4c4 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800b4a2:	68e0      	ldr	r0, [r4, #12]
 800b4a4:	2300      	movs	r3, #0
 800b4a6:	7013      	strb	r3, [r2, #0]
 800b4a8:	6803      	ldr	r3, [r0, #0]
 800b4aa:	aa03      	add	r2, sp, #12
 800b4ac:	68db      	ldr	r3, [r3, #12]
 800b4ae:	a902      	add	r1, sp, #8
 800b4b0:	4798      	blx	r3
 800b4b2:	6823      	ldr	r3, [r4, #0]
 800b4b4:	2800      	cmp	r0, #0
 800b4b6:	d050      	beq.n	800b55a <_ZN8touchgfx3HAL4tickEv+0x156>
 800b4b8:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800b4bc:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800b4c0:	4620      	mov	r0, r4
 800b4c2:	4798      	blx	r3
 800b4c4:	6960      	ldr	r0, [r4, #20]
 800b4c6:	2300      	movs	r3, #0
 800b4c8:	f88d 3007 	strb.w	r3, [sp, #7]
 800b4cc:	b158      	cbz	r0, 800b4e6 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800b4ce:	6803      	ldr	r3, [r0, #0]
 800b4d0:	f10d 0107 	add.w	r1, sp, #7
 800b4d4:	68db      	ldr	r3, [r3, #12]
 800b4d6:	4798      	blx	r3
 800b4d8:	b128      	cbz	r0, 800b4e6 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800b4da:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800b4dc:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800b4e0:	6803      	ldr	r3, [r0, #0]
 800b4e2:	68db      	ldr	r3, [r3, #12]
 800b4e4:	4798      	blx	r3
 800b4e6:	f104 001c 	add.w	r0, r4, #28
 800b4ea:	f011 fe71 	bl	801d1d0 <_ZN8touchgfx8Gestures4tickEv>
 800b4ee:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800b4f2:	b30b      	cbz	r3, 800b538 <_ZN8touchgfx3HAL4tickEv+0x134>
 800b4f4:	6920      	ldr	r0, [r4, #16]
 800b4f6:	6803      	ldr	r3, [r0, #0]
 800b4f8:	691b      	ldr	r3, [r3, #16]
 800b4fa:	4798      	blx	r3
 800b4fc:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b4fe:	4606      	mov	r6, r0
 800b500:	b903      	cbnz	r3, 800b504 <_ZN8touchgfx3HAL4tickEv+0x100>
 800b502:	6720      	str	r0, [r4, #112]	; 0x70
 800b504:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b506:	4a1e      	ldr	r2, [pc, #120]	; (800b580 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800b508:	1af3      	subs	r3, r6, r3
 800b50a:	4293      	cmp	r3, r2
 800b50c:	d914      	bls.n	800b538 <_ZN8touchgfx3HAL4tickEv+0x134>
 800b50e:	6920      	ldr	r0, [r4, #16]
 800b510:	6803      	ldr	r3, [r0, #0]
 800b512:	699b      	ldr	r3, [r3, #24]
 800b514:	4798      	blx	r3
 800b516:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b518:	2264      	movs	r2, #100	; 0x64
 800b51a:	1af3      	subs	r3, r6, r3
 800b51c:	fbb3 f3f2 	udiv	r3, r3, r2
 800b520:	fbb0 f0f3 	udiv	r0, r0, r3
 800b524:	2800      	cmp	r0, #0
 800b526:	dc1d      	bgt.n	800b564 <_ZN8touchgfx3HAL4tickEv+0x160>
 800b528:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800b52c:	6920      	ldr	r0, [r4, #16]
 800b52e:	6803      	ldr	r3, [r0, #0]
 800b530:	2100      	movs	r1, #0
 800b532:	69db      	ldr	r3, [r3, #28]
 800b534:	4798      	blx	r3
 800b536:	6726      	str	r6, [r4, #112]	; 0x70
 800b538:	f003 fc9c 	bl	800ee74 <_ZN8touchgfx11Application11getInstanceEv>
 800b53c:	6803      	ldr	r3, [r0, #0]
 800b53e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b540:	4798      	blx	r3
 800b542:	6823      	ldr	r3, [r4, #0]
 800b544:	4620      	mov	r0, r4
 800b546:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800b54a:	4798      	blx	r3
 800b54c:	2001      	movs	r0, #1
 800b54e:	f7f5 fc37 	bl	8000dc0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800b552:	2300      	movs	r3, #0
 800b554:	702b      	strb	r3, [r5, #0]
 800b556:	b004      	add	sp, #16
 800b558:	bd70      	pop	{r4, r5, r6, pc}
 800b55a:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800b55e:	4620      	mov	r0, r4
 800b560:	4798      	blx	r3
 800b562:	e7af      	b.n	800b4c4 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800b564:	2863      	cmp	r0, #99	; 0x63
 800b566:	bfcb      	itete	gt
 800b568:	2300      	movgt	r3, #0
 800b56a:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800b56e:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800b572:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800b576:	e7d9      	b.n	800b52c <_ZN8touchgfx3HAL4tickEv+0x128>
 800b578:	200135b4 	.word	0x200135b4
 800b57c:	200135b5 	.word	0x200135b5
 800b580:	05f5e100 	.word	0x05f5e100

0800b584 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800b584:	f7f5 bd6c 	b.w	8001060 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800b588 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800b588:	6581      	str	r1, [r0, #88]	; 0x58
 800b58a:	301c      	adds	r0, #28
 800b58c:	f011 be1e 	b.w	801d1cc <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800b590 <_ZN8touchgfx3HAL5touchEll>:
 800b590:	b530      	push	{r4, r5, lr}
 800b592:	b087      	sub	sp, #28
 800b594:	4604      	mov	r4, r0
 800b596:	a804      	add	r0, sp, #16
 800b598:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800b59c:	f003 f9ca 	bl	800e934 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800b5a0:	9b04      	ldr	r3, [sp, #16]
 800b5a2:	f8ad 300c 	strh.w	r3, [sp, #12]
 800b5a6:	a906      	add	r1, sp, #24
 800b5a8:	9b05      	ldr	r3, [sp, #20]
 800b5aa:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800b5ae:	a803      	add	r0, sp, #12
 800b5b0:	f003 fa12 	bl	800e9d8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800b5b4:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800b5b8:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800b5bc:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800b5c0:	f104 001c 	add.w	r0, r4, #28
 800b5c4:	b189      	cbz	r1, 800b5ea <_ZN8touchgfx3HAL5touchEll+0x5a>
 800b5c6:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800b5ca:	9300      	str	r3, [sp, #0]
 800b5cc:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800b5d0:	4613      	mov	r3, r2
 800b5d2:	462a      	mov	r2, r5
 800b5d4:	f011 fe0a 	bl	801d1ec <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800b5d8:	b128      	cbz	r0, 800b5e6 <_ZN8touchgfx3HAL5touchEll+0x56>
 800b5da:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800b5de:	65e3      	str	r3, [r4, #92]	; 0x5c
 800b5e0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800b5e4:	6623      	str	r3, [r4, #96]	; 0x60
 800b5e6:	b007      	add	sp, #28
 800b5e8:	bd30      	pop	{r4, r5, pc}
 800b5ea:	f011 fe3f 	bl	801d26c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b5ee:	2301      	movs	r3, #1
 800b5f0:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800b5f4:	e7f1      	b.n	800b5da <_ZN8touchgfx3HAL5touchEll+0x4a>

0800b5f6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800b5f6:	b510      	push	{r4, lr}
 800b5f8:	2b00      	cmp	r3, #0
 800b5fa:	d046      	beq.n	800b68a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b5fc:	ea81 0002 	eor.w	r0, r1, r2
 800b600:	07c4      	lsls	r4, r0, #31
 800b602:	d508      	bpl.n	800b616 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800b604:	440b      	add	r3, r1
 800b606:	3a01      	subs	r2, #1
 800b608:	428b      	cmp	r3, r1
 800b60a:	d93e      	bls.n	800b68a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b60c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b610:	f801 0b01 	strb.w	r0, [r1], #1
 800b614:	e7f8      	b.n	800b608 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800b616:	07d0      	lsls	r0, r2, #31
 800b618:	bf42      	ittt	mi
 800b61a:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800b61e:	f801 0b01 	strbmi.w	r0, [r1], #1
 800b622:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800b626:	2b01      	cmp	r3, #1
 800b628:	d911      	bls.n	800b64e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b62a:	ea81 0402 	eor.w	r4, r1, r2
 800b62e:	07a4      	lsls	r4, r4, #30
 800b630:	4610      	mov	r0, r2
 800b632:	d022      	beq.n	800b67a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800b634:	f023 0401 	bic.w	r4, r3, #1
 800b638:	440c      	add	r4, r1
 800b63a:	428c      	cmp	r4, r1
 800b63c:	4602      	mov	r2, r0
 800b63e:	d904      	bls.n	800b64a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800b640:	8812      	ldrh	r2, [r2, #0]
 800b642:	f821 2b02 	strh.w	r2, [r1], #2
 800b646:	3002      	adds	r0, #2
 800b648:	e7f7      	b.n	800b63a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800b64a:	f003 0301 	and.w	r3, r3, #1
 800b64e:	f023 0003 	bic.w	r0, r3, #3
 800b652:	4408      	add	r0, r1
 800b654:	4288      	cmp	r0, r1
 800b656:	4614      	mov	r4, r2
 800b658:	d904      	bls.n	800b664 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800b65a:	6824      	ldr	r4, [r4, #0]
 800b65c:	f841 4b04 	str.w	r4, [r1], #4
 800b660:	3204      	adds	r2, #4
 800b662:	e7f7      	b.n	800b654 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800b664:	f003 0303 	and.w	r3, r3, #3
 800b668:	440b      	add	r3, r1
 800b66a:	3a01      	subs	r2, #1
 800b66c:	428b      	cmp	r3, r1
 800b66e:	d90c      	bls.n	800b68a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b670:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b674:	f801 0b01 	strb.w	r0, [r1], #1
 800b678:	e7f8      	b.n	800b66c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800b67a:	0790      	lsls	r0, r2, #30
 800b67c:	d0e7      	beq.n	800b64e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b67e:	f832 0b02 	ldrh.w	r0, [r2], #2
 800b682:	f821 0b02 	strh.w	r0, [r1], #2
 800b686:	3b02      	subs	r3, #2
 800b688:	e7e1      	b.n	800b64e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b68a:	2001      	movs	r0, #1
 800b68c:	bd10      	pop	{r4, pc}

0800b68e <_ZN8touchgfx3HAL7noTouchEv>:
 800b68e:	b510      	push	{r4, lr}
 800b690:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800b694:	4604      	mov	r4, r0
 800b696:	b153      	cbz	r3, 800b6ae <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800b698:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800b69c:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800b6a0:	2101      	movs	r1, #1
 800b6a2:	301c      	adds	r0, #28
 800b6a4:	f011 fde2 	bl	801d26c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b6a8:	2300      	movs	r3, #0
 800b6aa:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800b6ae:	bd10      	pop	{r4, pc}

0800b6b0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800b6b0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b6b4:	b085      	sub	sp, #20
 800b6b6:	ad04      	add	r5, sp, #16
 800b6b8:	4604      	mov	r4, r0
 800b6ba:	2000      	movs	r0, #0
 800b6bc:	f845 0d04 	str.w	r0, [r5, #-4]!
 800b6c0:	69a0      	ldr	r0, [r4, #24]
 800b6c2:	6806      	ldr	r6, [r0, #0]
 800b6c4:	9501      	str	r5, [sp, #4]
 800b6c6:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800b6ca:	9500      	str	r5, [sp, #0]
 800b6cc:	6835      	ldr	r5, [r6, #0]
 800b6ce:	4699      	mov	r9, r3
 800b6d0:	460f      	mov	r7, r1
 800b6d2:	4690      	mov	r8, r2
 800b6d4:	47a8      	blx	r5
 800b6d6:	4d10      	ldr	r5, [pc, #64]	; (800b718 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800b6d8:	4606      	mov	r6, r0
 800b6da:	f8a5 9000 	strh.w	r9, [r5]
 800b6de:	f7f7 f9f9 	bl	8002ad4 <_ZN8touchgfx3HAL3lcdEv>
 800b6e2:	6803      	ldr	r3, [r0, #0]
 800b6e4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b6e6:	4798      	blx	r3
 800b6e8:	b128      	cbz	r0, 800b6f6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800b6ea:	2801      	cmp	r0, #1
 800b6ec:	d00b      	beq.n	800b706 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800b6ee:	4630      	mov	r0, r6
 800b6f0:	b005      	add	sp, #20
 800b6f2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b6f6:	882b      	ldrh	r3, [r5, #0]
 800b6f8:	fb08 7203 	mla	r2, r8, r3, r7
 800b6fc:	9b03      	ldr	r3, [sp, #12]
 800b6fe:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800b702:	63e3      	str	r3, [r4, #60]	; 0x3c
 800b704:	e7f3      	b.n	800b6ee <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b706:	882a      	ldrh	r2, [r5, #0]
 800b708:	9b03      	ldr	r3, [sp, #12]
 800b70a:	fb08 7202 	mla	r2, r8, r2, r7
 800b70e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800b712:	1a9a      	subs	r2, r3, r2
 800b714:	63e2      	str	r2, [r4, #60]	; 0x3c
 800b716:	e7ea      	b.n	800b6ee <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b718:	200135aa 	.word	0x200135aa

0800b71c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800b71c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b71e:	b08b      	sub	sp, #44	; 0x2c
 800b720:	4617      	mov	r7, r2
 800b722:	4604      	mov	r4, r0
 800b724:	460e      	mov	r6, r1
 800b726:	461d      	mov	r5, r3
 800b728:	f7f7 f9d4 	bl	8002ad4 <_ZN8touchgfx3HAL3lcdEv>
 800b72c:	6803      	ldr	r3, [r0, #0]
 800b72e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b730:	4798      	blx	r3
 800b732:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800b736:	9007      	str	r0, [sp, #28]
 800b738:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b73c:	4b0d      	ldr	r3, [pc, #52]	; (800b774 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800b73e:	6822      	ldr	r2, [r4, #0]
 800b740:	881b      	ldrh	r3, [r3, #0]
 800b742:	9306      	str	r3, [sp, #24]
 800b744:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800b748:	9305      	str	r3, [sp, #20]
 800b74a:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800b74e:	9304      	str	r3, [sp, #16]
 800b750:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b754:	9303      	str	r3, [sp, #12]
 800b756:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b75a:	9302      	str	r3, [sp, #8]
 800b75c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b760:	e9cd 5300 	strd	r5, r3, [sp]
 800b764:	4631      	mov	r1, r6
 800b766:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800b768:	463b      	mov	r3, r7
 800b76a:	2200      	movs	r2, #0
 800b76c:	4620      	mov	r0, r4
 800b76e:	47a8      	blx	r5
 800b770:	b00b      	add	sp, #44	; 0x2c
 800b772:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b774:	200135aa 	.word	0x200135aa

0800b778 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800b778:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b77c:	4698      	mov	r8, r3
 800b77e:	6803      	ldr	r3, [r0, #0]
 800b780:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800b782:	4b15      	ldr	r3, [pc, #84]	; (800b7d8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800b784:	b08b      	sub	sp, #44	; 0x2c
 800b786:	4617      	mov	r7, r2
 800b788:	f8b3 9000 	ldrh.w	r9, [r3]
 800b78c:	460e      	mov	r6, r1
 800b78e:	4604      	mov	r4, r0
 800b790:	f7f7 f9a0 	bl	8002ad4 <_ZN8touchgfx3HAL3lcdEv>
 800b794:	6803      	ldr	r3, [r0, #0]
 800b796:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b798:	4798      	blx	r3
 800b79a:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800b79e:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b7a2:	2302      	movs	r3, #2
 800b7a4:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800b7a8:	2301      	movs	r3, #1
 800b7aa:	9305      	str	r3, [sp, #20]
 800b7ac:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800b7b0:	9304      	str	r3, [sp, #16]
 800b7b2:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800b7b6:	9303      	str	r3, [sp, #12]
 800b7b8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b7bc:	9302      	str	r3, [sp, #8]
 800b7be:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b7c2:	2200      	movs	r2, #0
 800b7c4:	e9cd 8300 	strd	r8, r3, [sp]
 800b7c8:	4631      	mov	r1, r6
 800b7ca:	463b      	mov	r3, r7
 800b7cc:	4620      	mov	r0, r4
 800b7ce:	47a8      	blx	r5
 800b7d0:	b00b      	add	sp, #44	; 0x2c
 800b7d2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b7d6:	bf00      	nop
 800b7d8:	200135aa 	.word	0x200135aa

0800b7dc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800b7dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b7e0:	4698      	mov	r8, r3
 800b7e2:	6803      	ldr	r3, [r0, #0]
 800b7e4:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800b7e6:	4b11      	ldr	r3, [pc, #68]	; (800b82c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800b7e8:	b087      	sub	sp, #28
 800b7ea:	f8b3 9000 	ldrh.w	r9, [r3]
 800b7ee:	460e      	mov	r6, r1
 800b7f0:	4617      	mov	r7, r2
 800b7f2:	4604      	mov	r4, r0
 800b7f4:	f7f7 f96e 	bl	8002ad4 <_ZN8touchgfx3HAL3lcdEv>
 800b7f8:	6803      	ldr	r3, [r0, #0]
 800b7fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b7fc:	4798      	blx	r3
 800b7fe:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800b802:	f8cd 900c 	str.w	r9, [sp, #12]
 800b806:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800b80a:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800b80e:	9302      	str	r3, [sp, #8]
 800b810:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800b814:	9301      	str	r3, [sp, #4]
 800b816:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800b81a:	9300      	str	r3, [sp, #0]
 800b81c:	463a      	mov	r2, r7
 800b81e:	4643      	mov	r3, r8
 800b820:	4631      	mov	r1, r6
 800b822:	4620      	mov	r0, r4
 800b824:	47a8      	blx	r5
 800b826:	b007      	add	sp, #28
 800b828:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b82c:	200135aa 	.word	0x200135aa

0800b830 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800b830:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b834:	4604      	mov	r4, r0
 800b836:	b08f      	sub	sp, #60	; 0x3c
 800b838:	4610      	mov	r0, r2
 800b83a:	460d      	mov	r5, r1
 800b83c:	4691      	mov	r9, r2
 800b83e:	461e      	mov	r6, r3
 800b840:	f005 ff0e 	bl	8011660 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b844:	2800      	cmp	r0, #0
 800b846:	f000 809d 	beq.w	800b984 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800b84a:	6823      	ldr	r3, [r4, #0]
 800b84c:	f8df b198 	ldr.w	fp, [pc, #408]	; 800b9e8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800b850:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b852:	f8df a198 	ldr.w	sl, [pc, #408]	; 800b9ec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800b856:	4f61      	ldr	r7, [pc, #388]	; (800b9dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b858:	4620      	mov	r0, r4
 800b85a:	4798      	blx	r3
 800b85c:	6823      	ldr	r3, [r4, #0]
 800b85e:	4620      	mov	r0, r4
 800b860:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b862:	4798      	blx	r3
 800b864:	f8bb 3000 	ldrh.w	r3, [fp]
 800b868:	9301      	str	r3, [sp, #4]
 800b86a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800b86e:	f8ba 3000 	ldrh.w	r3, [sl]
 800b872:	9302      	str	r3, [sp, #8]
 800b874:	883b      	ldrh	r3, [r7, #0]
 800b876:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800b87a:	9303      	str	r3, [sp, #12]
 800b87c:	4b58      	ldr	r3, [pc, #352]	; (800b9e0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b87e:	9305      	str	r3, [sp, #20]
 800b880:	881a      	ldrh	r2, [r3, #0]
 800b882:	9204      	str	r2, [sp, #16]
 800b884:	4640      	mov	r0, r8
 800b886:	f005 ff7f 	bl	8011788 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b88a:	8038      	strh	r0, [r7, #0]
 800b88c:	4640      	mov	r0, r8
 800b88e:	f005 ffaf 	bl	80117f0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b892:	9b05      	ldr	r3, [sp, #20]
 800b894:	b280      	uxth	r0, r0
 800b896:	8018      	strh	r0, [r3, #0]
 800b898:	4b52      	ldr	r3, [pc, #328]	; (800b9e4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800b89a:	781b      	ldrb	r3, [r3, #0]
 800b89c:	2b00      	cmp	r3, #0
 800b89e:	d174      	bne.n	800b98a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800b8a0:	883b      	ldrh	r3, [r7, #0]
 800b8a2:	f8ab 3000 	strh.w	r3, [fp]
 800b8a6:	f8aa 0000 	strh.w	r0, [sl]
 800b8aa:	4648      	mov	r0, r9
 800b8ac:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800b8b0:	f005 fed6 	bl	8011660 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b8b4:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800b8b8:	2200      	movs	r2, #0
 800b8ba:	4611      	mov	r1, r2
 800b8bc:	4628      	mov	r0, r5
 800b8be:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800b8c2:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800b8c6:	f7f7 feb0 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
 800b8ca:	2301      	movs	r3, #1
 800b8cc:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800b8d0:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800b8d4:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800b8d8:	2b00      	cmp	r3, #0
 800b8da:	dd5c      	ble.n	800b996 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b8dc:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800b8e0:	2b00      	cmp	r3, #0
 800b8e2:	dd58      	ble.n	800b996 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b8e4:	462a      	mov	r2, r5
 800b8e6:	ab0a      	add	r3, sp, #40	; 0x28
 800b8e8:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b8ec:	6851      	ldr	r1, [r2, #4]
 800b8ee:	c303      	stmia	r3!, {r0, r1}
 800b8f0:	4631      	mov	r1, r6
 800b8f2:	a80a      	add	r0, sp, #40	; 0x28
 800b8f4:	f7ff fc0e 	bl	800b114 <_ZN8touchgfx4RectaNERKS0_>
 800b8f8:	4b38      	ldr	r3, [pc, #224]	; (800b9dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b8fa:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b8fe:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800b902:	2100      	movs	r1, #0
 800b904:	aa0a      	add	r2, sp, #40	; 0x28
 800b906:	4b36      	ldr	r3, [pc, #216]	; (800b9e0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b908:	910c      	str	r1, [sp, #48]	; 0x30
 800b90a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b90e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b912:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800b916:	ab08      	add	r3, sp, #32
 800b918:	e883 0003 	stmia.w	r3, {r0, r1}
 800b91c:	4618      	mov	r0, r3
 800b91e:	a90c      	add	r1, sp, #48	; 0x30
 800b920:	f7ff fbf8 	bl	800b114 <_ZN8touchgfx4RectaNERKS0_>
 800b924:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800b926:	2b00      	cmp	r3, #0
 800b928:	d13c      	bne.n	800b9a4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800b92a:	2000      	movs	r0, #0
 800b92c:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 800b930:	2600      	movs	r6, #0
 800b932:	682a      	ldr	r2, [r5, #0]
 800b934:	696b      	ldr	r3, [r5, #20]
 800b936:	616e      	str	r6, [r5, #20]
 800b938:	9305      	str	r3, [sp, #20]
 800b93a:	6892      	ldr	r2, [r2, #8]
 800b93c:	a908      	add	r1, sp, #32
 800b93e:	4628      	mov	r0, r5
 800b940:	4790      	blx	r2
 800b942:	9b05      	ldr	r3, [sp, #20]
 800b944:	616b      	str	r3, [r5, #20]
 800b946:	4652      	mov	r2, sl
 800b948:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 800b94c:	4649      	mov	r1, r9
 800b94e:	4628      	mov	r0, r5
 800b950:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800b954:	f7f7 fe69 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
 800b958:	4b23      	ldr	r3, [pc, #140]	; (800b9e8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800b95a:	9a01      	ldr	r2, [sp, #4]
 800b95c:	801a      	strh	r2, [r3, #0]
 800b95e:	4b23      	ldr	r3, [pc, #140]	; (800b9ec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800b960:	9a02      	ldr	r2, [sp, #8]
 800b962:	801a      	strh	r2, [r3, #0]
 800b964:	4b1d      	ldr	r3, [pc, #116]	; (800b9dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b966:	9a03      	ldr	r2, [sp, #12]
 800b968:	801a      	strh	r2, [r3, #0]
 800b96a:	4b1d      	ldr	r3, [pc, #116]	; (800b9e0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b96c:	9a04      	ldr	r2, [sp, #16]
 800b96e:	801a      	strh	r2, [r3, #0]
 800b970:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800b974:	6823      	ldr	r3, [r4, #0]
 800b976:	4620      	mov	r0, r4
 800b978:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b97a:	4798      	blx	r3
 800b97c:	6823      	ldr	r3, [r4, #0]
 800b97e:	4620      	mov	r0, r4
 800b980:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b982:	4798      	blx	r3
 800b984:	b00f      	add	sp, #60	; 0x3c
 800b986:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b98a:	883b      	ldrh	r3, [r7, #0]
 800b98c:	f8ab 0000 	strh.w	r0, [fp]
 800b990:	f8aa 3000 	strh.w	r3, [sl]
 800b994:	e789      	b.n	800b8aa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800b996:	462a      	mov	r2, r5
 800b998:	ab0a      	add	r3, sp, #40	; 0x28
 800b99a:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b99e:	6851      	ldr	r1, [r2, #4]
 800b9a0:	c303      	stmia	r3!, {r0, r1}
 800b9a2:	e7a9      	b.n	800b8f8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800b9a4:	a807      	add	r0, sp, #28
 800b9a6:	f006 f85f 	bl	8011a68 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b9aa:	4606      	mov	r6, r0
 800b9ac:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800b9ae:	6803      	ldr	r3, [r0, #0]
 800b9b0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b9b2:	4798      	blx	r3
 800b9b4:	4286      	cmp	r6, r0
 800b9b6:	d1b8      	bne.n	800b92a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800b9b8:	f7f7 f88c 	bl	8002ad4 <_ZN8touchgfx3HAL3lcdEv>
 800b9bc:	6803      	ldr	r3, [r0, #0]
 800b9be:	4606      	mov	r6, r0
 800b9c0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b9c2:	9305      	str	r3, [sp, #20]
 800b9c4:	a807      	add	r0, sp, #28
 800b9c6:	f006 f84f 	bl	8011a68 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b9ca:	9b05      	ldr	r3, [sp, #20]
 800b9cc:	4601      	mov	r1, r0
 800b9ce:	4630      	mov	r0, r6
 800b9d0:	4798      	blx	r3
 800b9d2:	f080 0001 	eor.w	r0, r0, #1
 800b9d6:	b2c0      	uxtb	r0, r0
 800b9d8:	e7a8      	b.n	800b92c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800b9da:	bf00      	nop
 800b9dc:	200135a4 	.word	0x200135a4
 800b9e0:	200135a6 	.word	0x200135a6
 800b9e4:	200135a8 	.word	0x200135a8
 800b9e8:	200135aa 	.word	0x200135aa
 800b9ec:	200135ac 	.word	0x200135ac

0800b9f0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800b9f0:	b510      	push	{r4, lr}
 800b9f2:	4b07      	ldr	r3, [pc, #28]	; (800ba10 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800b9f4:	781b      	ldrb	r3, [r3, #0]
 800b9f6:	4604      	mov	r4, r0
 800b9f8:	b13b      	cbz	r3, 800ba0a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b9fa:	6803      	ldr	r3, [r0, #0]
 800b9fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b9fe:	4798      	blx	r3
 800ba00:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ba02:	4283      	cmp	r3, r0
 800ba04:	d101      	bne.n	800ba0a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800ba06:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800ba08:	bd10      	pop	{r4, pc}
 800ba0a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800ba0c:	e7fc      	b.n	800ba08 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800ba0e:	bf00      	nop
 800ba10:	200135ae 	.word	0x200135ae

0800ba14 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800ba14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ba18:	b08a      	sub	sp, #40	; 0x28
 800ba1a:	461d      	mov	r5, r3
 800ba1c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800ba20:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800ba24:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800ba28:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ba2c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800ba30:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ba34:	2400      	movs	r4, #0
 800ba36:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800ba3a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800ba3e:	f8ad 301c 	strh.w	r3, [sp, #28]
 800ba42:	4690      	mov	r8, r2
 800ba44:	4607      	mov	r7, r0
 800ba46:	9404      	str	r4, [sp, #16]
 800ba48:	f88d 4020 	strb.w	r4, [sp, #32]
 800ba4c:	f7ff ffd0 	bl	800b9f0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ba50:	fb06 8505 	mla	r5, r6, r5, r8
 800ba54:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800ba58:	6878      	ldr	r0, [r7, #4]
 800ba5a:	9505      	str	r5, [sp, #20]
 800ba5c:	f8ad 601e 	strh.w	r6, [sp, #30]
 800ba60:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800ba64:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 800ba68:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800ba6c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800ba70:	6803      	ldr	r3, [r0, #0]
 800ba72:	a901      	add	r1, sp, #4
 800ba74:	685b      	ldr	r3, [r3, #4]
 800ba76:	4798      	blx	r3
 800ba78:	b00a      	add	sp, #40	; 0x28
 800ba7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ba7e <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800ba7e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ba82:	b08b      	sub	sp, #44	; 0x2c
 800ba84:	2400      	movs	r4, #0
 800ba86:	461d      	mov	r5, r3
 800ba88:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800ba8c:	4688      	mov	r8, r1
 800ba8e:	4691      	mov	r9, r2
 800ba90:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 800ba94:	9404      	str	r4, [sp, #16]
 800ba96:	4607      	mov	r7, r0
 800ba98:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800ba9c:	f7ff ffa8 	bl	800b9f0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800baa0:	fb06 9505 	mla	r5, r6, r5, r9
 800baa4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800baa8:	f8ad 3018 	strh.w	r3, [sp, #24]
 800baac:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800bab0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800bab4:	6878      	ldr	r0, [r7, #4]
 800bab6:	9505      	str	r5, [sp, #20]
 800bab8:	f8ad 301a 	strh.w	r3, [sp, #26]
 800babc:	f8ad 401c 	strh.w	r4, [sp, #28]
 800bac0:	f8ad 601e 	strh.w	r6, [sp, #30]
 800bac4:	f8cd 8010 	str.w	r8, [sp, #16]
 800bac8:	f8ad 4020 	strh.w	r4, [sp, #32]
 800bacc:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800bad0:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800bad4:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800bad8:	6803      	ldr	r3, [r0, #0]
 800bada:	a901      	add	r1, sp, #4
 800badc:	685b      	ldr	r3, [r3, #4]
 800bade:	4798      	blx	r3
 800bae0:	b00b      	add	sp, #44	; 0x2c
 800bae2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800bae8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800bae8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800baec:	b08a      	sub	sp, #40	; 0x28
 800baee:	4698      	mov	r8, r3
 800baf0:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 800baf4:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 800baf8:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 800bafc:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 800bb00:	2300      	movs	r3, #0
 800bb02:	2d0b      	cmp	r5, #11
 800bb04:	4606      	mov	r6, r0
 800bb06:	9304      	str	r3, [sp, #16]
 800bb08:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 800bb0c:	d138      	bne.n	800bb80 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800bb0e:	2380      	movs	r3, #128	; 0x80
 800bb10:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800bb14:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800bb18:	f8ad 3018 	strh.w	r3, [sp, #24]
 800bb1c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800bb20:	f8ad 301a 	strh.w	r3, [sp, #26]
 800bb24:	f88d 0020 	strb.w	r0, [sp, #32]
 800bb28:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800bb2c:	f8ad 301c 	strh.w	r3, [sp, #28]
 800bb30:	4630      	mov	r0, r6
 800bb32:	9203      	str	r2, [sp, #12]
 800bb34:	f7ff ff5c 	bl	800b9f0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bb38:	2c0b      	cmp	r4, #11
 800bb3a:	bf98      	it	ls
 800bb3c:	4b1b      	ldrls	r3, [pc, #108]	; (800bbac <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800bb3e:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800bb42:	bf98      	it	ls
 800bb44:	5d19      	ldrbls	r1, [r3, r4]
 800bb46:	f8ad 701e 	strh.w	r7, [sp, #30]
 800bb4a:	bf88      	it	hi
 800bb4c:	2100      	movhi	r1, #0
 800bb4e:	fb02 8307 	mla	r3, r2, r7, r8
 800bb52:	10c9      	asrs	r1, r1, #3
 800bb54:	fb01 0003 	mla	r0, r1, r3, r0
 800bb58:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 800bb5c:	9005      	str	r0, [sp, #20]
 800bb5e:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800bb62:	6870      	ldr	r0, [r6, #4]
 800bb64:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 800bb68:	2300      	movs	r3, #0
 800bb6a:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800bb6e:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800bb72:	6803      	ldr	r3, [r0, #0]
 800bb74:	a901      	add	r1, sp, #4
 800bb76:	685b      	ldr	r3, [r3, #4]
 800bb78:	4798      	blx	r3
 800bb7a:	b00a      	add	sp, #40	; 0x28
 800bb7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bb80:	2d02      	cmp	r5, #2
 800bb82:	d109      	bne.n	800bb98 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800bb84:	28ff      	cmp	r0, #255	; 0xff
 800bb86:	d105      	bne.n	800bb94 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800bb88:	f1bc 0f00 	cmp.w	ip, #0
 800bb8c:	bf14      	ite	ne
 800bb8e:	2340      	movne	r3, #64	; 0x40
 800bb90:	2320      	moveq	r3, #32
 800bb92:	e7bd      	b.n	800bb10 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800bb94:	2340      	movs	r3, #64	; 0x40
 800bb96:	e7bb      	b.n	800bb10 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800bb98:	28ff      	cmp	r0, #255	; 0xff
 800bb9a:	d105      	bne.n	800bba8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800bb9c:	f1bc 0f00 	cmp.w	ip, #0
 800bba0:	bf14      	ite	ne
 800bba2:	2304      	movne	r3, #4
 800bba4:	2301      	moveq	r3, #1
 800bba6:	e7b3      	b.n	800bb10 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800bba8:	2304      	movs	r3, #4
 800bbaa:	e7b1      	b.n	800bb10 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800bbac:	0802046c 	.word	0x0802046c

0800bbb0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800bbb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bbb4:	b08b      	sub	sp, #44	; 0x2c
 800bbb6:	461d      	mov	r5, r3
 800bbb8:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800bbbc:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 800bbc0:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 800bbc4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 800bbc8:	bf14      	ite	ne
 800bbca:	2308      	movne	r3, #8
 800bbcc:	2302      	moveq	r3, #2
 800bbce:	2400      	movs	r4, #0
 800bbd0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800bbd4:	4688      	mov	r8, r1
 800bbd6:	4693      	mov	fp, r2
 800bbd8:	9404      	str	r4, [sp, #16]
 800bbda:	4607      	mov	r7, r0
 800bbdc:	f7ff ff08 	bl	800b9f0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bbe0:	2e0b      	cmp	r6, #11
 800bbe2:	bf98      	it	ls
 800bbe4:	4b15      	ldrls	r3, [pc, #84]	; (800bc3c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800bbe6:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800bbea:	bf98      	it	ls
 800bbec:	5d9c      	ldrbls	r4, [r3, r6]
 800bbee:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800bbf2:	f8ad 3018 	strh.w	r3, [sp, #24]
 800bbf6:	fb05 b50a 	mla	r5, r5, sl, fp
 800bbfa:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800bbfe:	f8ad 301a 	strh.w	r3, [sp, #26]
 800bc02:	10e4      	asrs	r4, r4, #3
 800bc04:	fb04 0405 	mla	r4, r4, r5, r0
 800bc08:	2300      	movs	r3, #0
 800bc0a:	6878      	ldr	r0, [r7, #4]
 800bc0c:	9405      	str	r4, [sp, #20]
 800bc0e:	f8ad 301c 	strh.w	r3, [sp, #28]
 800bc12:	f8ad a01e 	strh.w	sl, [sp, #30]
 800bc16:	f8cd 8010 	str.w	r8, [sp, #16]
 800bc1a:	f88d 9020 	strb.w	r9, [sp, #32]
 800bc1e:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 800bc22:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800bc26:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 800bc2a:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 800bc2e:	6803      	ldr	r3, [r0, #0]
 800bc30:	a901      	add	r1, sp, #4
 800bc32:	685b      	ldr	r3, [r3, #4]
 800bc34:	4798      	blx	r3
 800bc36:	b00b      	add	sp, #44	; 0x2c
 800bc38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bc3c:	0802046c 	.word	0x0802046c

0800bc40 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800bc40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bc44:	461e      	mov	r6, r3
 800bc46:	4b0a      	ldr	r3, [pc, #40]	; (800bc70 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800bc48:	460f      	mov	r7, r1
 800bc4a:	881d      	ldrh	r5, [r3, #0]
 800bc4c:	4690      	mov	r8, r2
 800bc4e:	f7f6 ff41 	bl	8002ad4 <_ZN8touchgfx3HAL3lcdEv>
 800bc52:	6803      	ldr	r3, [r0, #0]
 800bc54:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bc56:	4798      	blx	r3
 800bc58:	280b      	cmp	r0, #11
 800bc5a:	bf9a      	itte	ls
 800bc5c:	4b05      	ldrls	r3, [pc, #20]	; (800bc74 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800bc5e:	5c1c      	ldrbls	r4, [r3, r0]
 800bc60:	2400      	movhi	r4, #0
 800bc62:	fb08 7005 	mla	r0, r8, r5, r7
 800bc66:	10e4      	asrs	r4, r4, #3
 800bc68:	fb04 6000 	mla	r0, r4, r0, r6
 800bc6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bc70:	200135aa 	.word	0x200135aa
 800bc74:	0802046c 	.word	0x0802046c

0800bc78 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800bc78:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bc7a:	b08b      	sub	sp, #44	; 0x2c
 800bc7c:	461f      	mov	r7, r3
 800bc7e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800bc82:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800bc86:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800bc8a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800bc8e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800bc92:	f8ad 301a 	strh.w	r3, [sp, #26]
 800bc96:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800bc9a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800bc9e:	2500      	movs	r5, #0
 800bca0:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800bca4:	f88d 3020 	strb.w	r3, [sp, #32]
 800bca8:	4604      	mov	r4, r0
 800bcaa:	4616      	mov	r6, r2
 800bcac:	9504      	str	r5, [sp, #16]
 800bcae:	f7ff fe9f 	bl	800b9f0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bcb2:	463a      	mov	r2, r7
 800bcb4:	4631      	mov	r1, r6
 800bcb6:	4603      	mov	r3, r0
 800bcb8:	4620      	mov	r0, r4
 800bcba:	f7ff ffc1 	bl	800bc40 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800bcbe:	4b0e      	ldr	r3, [pc, #56]	; (800bcf8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800bcc0:	9005      	str	r0, [sp, #20]
 800bcc2:	881b      	ldrh	r3, [r3, #0]
 800bcc4:	f8ad 301e 	strh.w	r3, [sp, #30]
 800bcc8:	f7f6 ff04 	bl	8002ad4 <_ZN8touchgfx3HAL3lcdEv>
 800bccc:	6803      	ldr	r3, [r0, #0]
 800bcce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bcd0:	4798      	blx	r3
 800bcd2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800bcd4:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800bcd8:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800bcdc:	9304      	str	r3, [sp, #16]
 800bcde:	6860      	ldr	r0, [r4, #4]
 800bce0:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800bce4:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800bce8:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800bcec:	6803      	ldr	r3, [r0, #0]
 800bcee:	a901      	add	r1, sp, #4
 800bcf0:	685b      	ldr	r3, [r3, #4]
 800bcf2:	4798      	blx	r3
 800bcf4:	b00b      	add	sp, #44	; 0x2c
 800bcf6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bcf8:	200135aa 	.word	0x200135aa

0800bcfc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800bcfc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bcfe:	b08d      	sub	sp, #52	; 0x34
 800bd00:	466b      	mov	r3, sp
 800bd02:	e883 0006 	stmia.w	r3, {r1, r2}
 800bd06:	2300      	movs	r3, #0
 800bd08:	9306      	str	r3, [sp, #24]
 800bd0a:	6803      	ldr	r3, [r0, #0]
 800bd0c:	f8bd 6000 	ldrh.w	r6, [sp]
 800bd10:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bd12:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800bd16:	2501      	movs	r5, #1
 800bd18:	9503      	str	r5, [sp, #12]
 800bd1a:	4604      	mov	r4, r0
 800bd1c:	4798      	blx	r3
 800bd1e:	463a      	mov	r2, r7
 800bd20:	4631      	mov	r1, r6
 800bd22:	4603      	mov	r3, r0
 800bd24:	4620      	mov	r0, r4
 800bd26:	f7ff ff8b 	bl	800bc40 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800bd2a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800bd2c:	9307      	str	r3, [sp, #28]
 800bd2e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800bd32:	f8ad 3020 	strh.w	r3, [sp, #32]
 800bd36:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800bd3a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800bd3e:	4b0f      	ldr	r3, [pc, #60]	; (800bd7c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800bd40:	9004      	str	r0, [sp, #16]
 800bd42:	881b      	ldrh	r3, [r3, #0]
 800bd44:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800bd48:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800bd4c:	f7f6 fec2 	bl	8002ad4 <_ZN8touchgfx3HAL3lcdEv>
 800bd50:	6803      	ldr	r3, [r0, #0]
 800bd52:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bd54:	4798      	blx	r3
 800bd56:	23ff      	movs	r3, #255	; 0xff
 800bd58:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800bd5c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800bd60:	6860      	ldr	r0, [r4, #4]
 800bd62:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800bd66:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800bd6a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800bd6e:	6803      	ldr	r3, [r0, #0]
 800bd70:	a903      	add	r1, sp, #12
 800bd72:	685b      	ldr	r3, [r3, #4]
 800bd74:	4798      	blx	r3
 800bd76:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800bd78:	b00d      	add	sp, #52	; 0x34
 800bd7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bd7c:	200135aa 	.word	0x200135aa

0800bd80 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800bd80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bd84:	b08c      	sub	sp, #48	; 0x30
 800bd86:	461e      	mov	r6, r3
 800bd88:	466d      	mov	r5, sp
 800bd8a:	2300      	movs	r3, #0
 800bd8c:	e885 0006 	stmia.w	r5, {r1, r2}
 800bd90:	9306      	str	r3, [sp, #24]
 800bd92:	6803      	ldr	r3, [r0, #0]
 800bd94:	f8bd 7000 	ldrh.w	r7, [sp]
 800bd98:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bd9a:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800bd9e:	2501      	movs	r5, #1
 800bda0:	9503      	str	r5, [sp, #12]
 800bda2:	4604      	mov	r4, r0
 800bda4:	4798      	blx	r3
 800bda6:	4642      	mov	r2, r8
 800bda8:	4639      	mov	r1, r7
 800bdaa:	4603      	mov	r3, r0
 800bdac:	4620      	mov	r0, r4
 800bdae:	f7ff ff47 	bl	800bc40 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800bdb2:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800bdb6:	f8ad 3020 	strh.w	r3, [sp, #32]
 800bdba:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800bdbe:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800bdc2:	4b11      	ldr	r3, [pc, #68]	; (800be08 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800bdc4:	9004      	str	r0, [sp, #16]
 800bdc6:	881b      	ldrh	r3, [r3, #0]
 800bdc8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800bdcc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800bdce:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800bdd2:	9607      	str	r6, [sp, #28]
 800bdd4:	f7f6 fe7e 	bl	8002ad4 <_ZN8touchgfx3HAL3lcdEv>
 800bdd8:	6803      	ldr	r3, [r0, #0]
 800bdda:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bddc:	4798      	blx	r3
 800bdde:	23ff      	movs	r3, #255	; 0xff
 800bde0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800bde4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800bde8:	6860      	ldr	r0, [r4, #4]
 800bdea:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800bdee:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800bdf2:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800bdf6:	6803      	ldr	r3, [r0, #0]
 800bdf8:	a903      	add	r1, sp, #12
 800bdfa:	685b      	ldr	r3, [r3, #4]
 800bdfc:	4798      	blx	r3
 800bdfe:	4630      	mov	r0, r6
 800be00:	b00c      	add	sp, #48	; 0x30
 800be02:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800be06:	bf00      	nop
 800be08:	200135aa 	.word	0x200135aa

0800be0c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800be0c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800be0e:	b085      	sub	sp, #20
 800be10:	ac02      	add	r4, sp, #8
 800be12:	e884 0006 	stmia.w	r4, {r1, r2}
 800be16:	4605      	mov	r5, r0
 800be18:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800be1c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800be20:	f7ff fde6 	bl	800b9f0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800be24:	463a      	mov	r2, r7
 800be26:	4603      	mov	r3, r0
 800be28:	4631      	mov	r1, r6
 800be2a:	4628      	mov	r0, r5
 800be2c:	f7ff ff08 	bl	800bc40 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800be30:	4a05      	ldr	r2, [pc, #20]	; (800be48 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800be32:	682b      	ldr	r3, [r5, #0]
 800be34:	8812      	ldrh	r2, [r2, #0]
 800be36:	9200      	str	r2, [sp, #0]
 800be38:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 800be3a:	e894 0006 	ldmia.w	r4, {r1, r2}
 800be3e:	4603      	mov	r3, r0
 800be40:	4628      	mov	r0, r5
 800be42:	47b0      	blx	r6
 800be44:	b005      	add	sp, #20
 800be46:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800be48:	200135aa 	.word	0x200135aa

0800be4c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800be4c:	b570      	push	{r4, r5, r6, lr}
 800be4e:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800be52:	4604      	mov	r4, r0
 800be54:	b19b      	cbz	r3, 800be7e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800be56:	2002      	movs	r0, #2
 800be58:	f7f4 ffdc 	bl	8000e14 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800be5c:	2300      	movs	r3, #0
 800be5e:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800be62:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800be66:	6823      	ldr	r3, [r4, #0]
 800be68:	4620      	mov	r0, r4
 800be6a:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800be6e:	f7ff fdbf 	bl	800b9f0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800be72:	462b      	mov	r3, r5
 800be74:	4601      	mov	r1, r0
 800be76:	4620      	mov	r0, r4
 800be78:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800be7c:	4718      	bx	r3
 800be7e:	bd70      	pop	{r4, r5, r6, pc}

0800be80 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800be80:	b538      	push	{r3, r4, r5, lr}
 800be82:	f890 3078 	ldrb.w	r3, [r0, #120]	; 0x78
 800be86:	428b      	cmp	r3, r1
 800be88:	4604      	mov	r4, r0
 800be8a:	460d      	mov	r5, r1
 800be8c:	d006      	beq.n	800be9c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800be8e:	6803      	ldr	r3, [r0, #0]
 800be90:	b929      	cbnz	r1, 800be9e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800be92:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800be96:	4798      	blx	r3
 800be98:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
 800be9c:	bd38      	pop	{r3, r4, r5, pc}
 800be9e:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800bea2:	e7f8      	b.n	800be96 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800bea4 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800bea4:	b510      	push	{r4, lr}
 800bea6:	4b0d      	ldr	r3, [pc, #52]	; (800bedc <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800bea8:	781b      	ldrb	r3, [r3, #0]
 800beaa:	4604      	mov	r4, r0
 800beac:	b95b      	cbnz	r3, 800bec6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800beae:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800beb2:	2b02      	cmp	r3, #2
 800beb4:	d007      	beq.n	800bec6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800beb6:	6840      	ldr	r0, [r0, #4]
 800beb8:	f000 f912 	bl	800c0e0 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800bebc:	b118      	cbz	r0, 800bec6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800bebe:	6862      	ldr	r2, [r4, #4]
 800bec0:	7a53      	ldrb	r3, [r2, #9]
 800bec2:	2b00      	cmp	r3, #0
 800bec4:	d0fc      	beq.n	800bec0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800bec6:	f7f5 f8c3 	bl	8001050 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800beca:	4620      	mov	r0, r4
 800becc:	2100      	movs	r1, #0
 800bece:	f7ff ffd7 	bl	800be80 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bed2:	4620      	mov	r0, r4
 800bed4:	f7ff fd8c 	bl	800b9f0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bed8:	bd10      	pop	{r4, pc}
 800beda:	bf00      	nop
 800bedc:	200135ae 	.word	0x200135ae

0800bee0 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800bee0:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800bee4:	1a13      	subs	r3, r2, r0
 800bee6:	4258      	negs	r0, r3
 800bee8:	4158      	adcs	r0, r3
 800beea:	4770      	bx	lr

0800beec <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800beec:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800bef0:	1a9b      	subs	r3, r3, r2
 800bef2:	2b00      	cmp	r3, #0
 800bef4:	bfdc      	itt	le
 800bef6:	6882      	ldrle	r2, [r0, #8]
 800bef8:	189b      	addle	r3, r3, r2
 800befa:	2b01      	cmp	r3, #1
 800befc:	bfcc      	ite	gt
 800befe:	2000      	movgt	r0, #0
 800bf00:	2001      	movle	r0, #1
 800bf02:	4770      	bx	lr

0800bf04 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800bf04:	6902      	ldr	r2, [r0, #16]
 800bf06:	6843      	ldr	r3, [r0, #4]
 800bf08:	2024      	movs	r0, #36	; 0x24
 800bf0a:	fb00 3002 	mla	r0, r0, r2, r3
 800bf0e:	4770      	bx	lr

0800bf10 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800bf10:	6803      	ldr	r3, [r0, #0]
 800bf12:	691b      	ldr	r3, [r3, #16]
 800bf14:	4718      	bx	r3

0800bf16 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800bf16:	b570      	push	{r4, r5, r6, lr}
 800bf18:	2301      	movs	r3, #1
 800bf1a:	7203      	strb	r3, [r0, #8]
 800bf1c:	4604      	mov	r4, r0
 800bf1e:	6840      	ldr	r0, [r0, #4]
 800bf20:	6803      	ldr	r3, [r0, #0]
 800bf22:	699b      	ldr	r3, [r3, #24]
 800bf24:	4798      	blx	r3
 800bf26:	6803      	ldr	r3, [r0, #0]
 800bf28:	2b40      	cmp	r3, #64	; 0x40
 800bf2a:	4605      	mov	r5, r0
 800bf2c:	d00c      	beq.n	800bf48 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bf2e:	d810      	bhi.n	800bf52 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800bf30:	2b04      	cmp	r3, #4
 800bf32:	d01d      	beq.n	800bf70 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800bf34:	d804      	bhi.n	800bf40 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800bf36:	2b01      	cmp	r3, #1
 800bf38:	d006      	beq.n	800bf48 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bf3a:	2b02      	cmp	r3, #2
 800bf3c:	d02c      	beq.n	800bf98 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800bf3e:	bd70      	pop	{r4, r5, r6, pc}
 800bf40:	2b08      	cmp	r3, #8
 800bf42:	d01d      	beq.n	800bf80 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800bf44:	2b20      	cmp	r3, #32
 800bf46:	d1fa      	bne.n	800bf3e <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800bf48:	6823      	ldr	r3, [r4, #0]
 800bf4a:	4620      	mov	r0, r4
 800bf4c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bf4e:	4798      	blx	r3
 800bf50:	e013      	b.n	800bf7a <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800bf52:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800bf56:	d0f7      	beq.n	800bf48 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bf58:	d804      	bhi.n	800bf64 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800bf5a:	2b80      	cmp	r3, #128	; 0x80
 800bf5c:	d0f4      	beq.n	800bf48 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bf5e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800bf62:	e7f0      	b.n	800bf46 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800bf64:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800bf68:	d0ee      	beq.n	800bf48 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bf6a:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800bf6e:	e7e5      	b.n	800bf3c <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800bf70:	6823      	ldr	r3, [r4, #0]
 800bf72:	7f01      	ldrb	r1, [r0, #28]
 800bf74:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bf76:	4620      	mov	r0, r4
 800bf78:	4798      	blx	r3
 800bf7a:	6823      	ldr	r3, [r4, #0]
 800bf7c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bf7e:	e006      	b.n	800bf8e <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800bf80:	6823      	ldr	r3, [r4, #0]
 800bf82:	7f01      	ldrb	r1, [r0, #28]
 800bf84:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bf86:	4620      	mov	r0, r4
 800bf88:	4798      	blx	r3
 800bf8a:	6823      	ldr	r3, [r4, #0]
 800bf8c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800bf8e:	4629      	mov	r1, r5
 800bf90:	4620      	mov	r0, r4
 800bf92:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bf96:	4718      	bx	r3
 800bf98:	6823      	ldr	r3, [r4, #0]
 800bf9a:	4620      	mov	r0, r4
 800bf9c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bf9e:	4798      	blx	r3
 800bfa0:	e7f3      	b.n	800bf8a <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800bfa2 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800bfa2:	4770      	bx	lr

0800bfa4 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800bfa4:	4770      	bx	lr

0800bfa6 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800bfa6:	4770      	bx	lr

0800bfa8 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800bfa8:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800bfac:	1ad2      	subs	r2, r2, r3
 800bfae:	2a00      	cmp	r2, #0
 800bfb0:	b510      	push	{r4, lr}
 800bfb2:	bfdc      	itt	le
 800bfb4:	6884      	ldrle	r4, [r0, #8]
 800bfb6:	1912      	addle	r2, r2, r4
 800bfb8:	2a01      	cmp	r2, #1
 800bfba:	dd16      	ble.n	800bfea <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800bfbc:	6842      	ldr	r2, [r0, #4]
 800bfbe:	2424      	movs	r4, #36	; 0x24
 800bfc0:	fb04 2303 	mla	r3, r4, r3, r2
 800bfc4:	f101 0220 	add.w	r2, r1, #32
 800bfc8:	f851 4b04 	ldr.w	r4, [r1], #4
 800bfcc:	f843 4b04 	str.w	r4, [r3], #4
 800bfd0:	4291      	cmp	r1, r2
 800bfd2:	d1f9      	bne.n	800bfc8 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800bfd4:	780a      	ldrb	r2, [r1, #0]
 800bfd6:	701a      	strb	r2, [r3, #0]
 800bfd8:	68c3      	ldr	r3, [r0, #12]
 800bfda:	6882      	ldr	r2, [r0, #8]
 800bfdc:	f3bf 8f5b 	dmb	ish
 800bfe0:	3301      	adds	r3, #1
 800bfe2:	429a      	cmp	r2, r3
 800bfe4:	bfd8      	it	le
 800bfe6:	1a9b      	suble	r3, r3, r2
 800bfe8:	60c3      	str	r3, [r0, #12]
 800bfea:	bd10      	pop	{r4, pc}

0800bfec <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800bfec:	6903      	ldr	r3, [r0, #16]
 800bfee:	6882      	ldr	r2, [r0, #8]
 800bff0:	f3bf 8f5b 	dmb	ish
 800bff4:	3301      	adds	r3, #1
 800bff6:	429a      	cmp	r2, r3
 800bff8:	bfd8      	it	le
 800bffa:	1a9b      	suble	r3, r3, r2
 800bffc:	6103      	str	r3, [r0, #16]
 800bffe:	4770      	bx	lr

0800c000 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800c000:	b570      	push	{r4, r5, r6, lr}
 800c002:	4604      	mov	r4, r0
 800c004:	460e      	mov	r6, r1
 800c006:	6860      	ldr	r0, [r4, #4]
 800c008:	6803      	ldr	r3, [r0, #0]
 800c00a:	685b      	ldr	r3, [r3, #4]
 800c00c:	4798      	blx	r3
 800c00e:	2800      	cmp	r0, #0
 800c010:	d1f9      	bne.n	800c006 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800c012:	4d0d      	ldr	r5, [pc, #52]	; (800c048 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800c014:	6828      	ldr	r0, [r5, #0]
 800c016:	6803      	ldr	r3, [r0, #0]
 800c018:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800c01a:	4798      	blx	r3
 800c01c:	f7f5 f826 	bl	800106c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800c020:	6828      	ldr	r0, [r5, #0]
 800c022:	2101      	movs	r1, #1
 800c024:	f7ff ff2c 	bl	800be80 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800c028:	6860      	ldr	r0, [r4, #4]
 800c02a:	6803      	ldr	r3, [r0, #0]
 800c02c:	4631      	mov	r1, r6
 800c02e:	689b      	ldr	r3, [r3, #8]
 800c030:	4798      	blx	r3
 800c032:	6823      	ldr	r3, [r4, #0]
 800c034:	4620      	mov	r0, r4
 800c036:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c038:	4798      	blx	r3
 800c03a:	6828      	ldr	r0, [r5, #0]
 800c03c:	6803      	ldr	r3, [r0, #0]
 800c03e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c042:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800c044:	4718      	bx	r3
 800c046:	bf00      	nop
 800c048:	200135b0 	.word	0x200135b0

0800c04c <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800c04c:	b508      	push	{r3, lr}
 800c04e:	f7f4 ffff 	bl	8001050 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800c052:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800c056:	f7f5 b803 	b.w	8001060 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800c05a <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800c05a:	b510      	push	{r4, lr}
 800c05c:	2114      	movs	r1, #20
 800c05e:	4604      	mov	r4, r0
 800c060:	f011 f98a 	bl	801d378 <_ZdlPvj>
 800c064:	4620      	mov	r0, r4
 800c066:	bd10      	pop	{r4, pc}

0800c068 <_ZN8touchgfx13DMA_Interface5startEv>:
 800c068:	b510      	push	{r4, lr}
 800c06a:	4604      	mov	r4, r0
 800c06c:	6840      	ldr	r0, [r0, #4]
 800c06e:	6803      	ldr	r3, [r0, #0]
 800c070:	681b      	ldr	r3, [r3, #0]
 800c072:	4798      	blx	r3
 800c074:	b948      	cbnz	r0, 800c08a <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800c076:	7a63      	ldrb	r3, [r4, #9]
 800c078:	b13b      	cbz	r3, 800c08a <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800c07a:	7a23      	ldrb	r3, [r4, #8]
 800c07c:	b92b      	cbnz	r3, 800c08a <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800c07e:	6823      	ldr	r3, [r4, #0]
 800c080:	4620      	mov	r0, r4
 800c082:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c084:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c088:	4718      	bx	r3
 800c08a:	bd10      	pop	{r4, pc}

0800c08c <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800c08c:	b570      	push	{r4, r5, r6, lr}
 800c08e:	4604      	mov	r4, r0
 800c090:	6840      	ldr	r0, [r0, #4]
 800c092:	6803      	ldr	r3, [r0, #0]
 800c094:	681b      	ldr	r3, [r3, #0]
 800c096:	4798      	blx	r3
 800c098:	4605      	mov	r5, r0
 800c09a:	b930      	cbnz	r0, 800c0aa <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800c09c:	7a23      	ldrb	r3, [r4, #8]
 800c09e:	b123      	cbz	r3, 800c0aa <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800c0a0:	6860      	ldr	r0, [r4, #4]
 800c0a2:	6803      	ldr	r3, [r0, #0]
 800c0a4:	695b      	ldr	r3, [r3, #20]
 800c0a6:	4798      	blx	r3
 800c0a8:	7225      	strb	r5, [r4, #8]
 800c0aa:	6860      	ldr	r0, [r4, #4]
 800c0ac:	6803      	ldr	r3, [r0, #0]
 800c0ae:	681b      	ldr	r3, [r3, #0]
 800c0b0:	4798      	blx	r3
 800c0b2:	b928      	cbnz	r0, 800c0c0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800c0b4:	6823      	ldr	r3, [r4, #0]
 800c0b6:	4620      	mov	r0, r4
 800c0b8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c0ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c0be:	4718      	bx	r3
 800c0c0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c0c4:	f7f4 bfda 	b.w	800107c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800c0c8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800c0c8:	b510      	push	{r4, lr}
 800c0ca:	4c04      	ldr	r4, [pc, #16]	; (800c0dc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800c0cc:	6082      	str	r2, [r0, #8]
 800c0ce:	2200      	movs	r2, #0
 800c0d0:	e9c0 4100 	strd	r4, r1, [r0]
 800c0d4:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800c0d8:	bd10      	pop	{r4, pc}
 800c0da:	bf00      	nop
 800c0dc:	08020480 	.word	0x08020480

0800c0e0 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800c0e0:	6840      	ldr	r0, [r0, #4]
 800c0e2:	6803      	ldr	r3, [r0, #0]
 800c0e4:	681b      	ldr	r3, [r3, #0]
 800c0e6:	4718      	bx	r3

0800c0e8 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv>:
 800c0e8:	b508      	push	{r3, lr}
 800c0ea:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 800c0ee:	b10b      	cbz	r3, 800c0f4 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv+0xc>
 800c0f0:	f7f6 fb75 	bl	80027de <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800c0f4:	bd08      	pop	{r3, pc}

0800c0f6 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>:
 800c0f6:	6803      	ldr	r3, [r0, #0]
 800c0f8:	f64f 71fe 	movw	r1, #65534	; 0xfffe
 800c0fc:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800c0fe:	4718      	bx	r3

0800c100 <_ZN8touchgfx14SnapshotWidgetD1Ev>:
 800c100:	4770      	bx	lr

0800c102 <_ZN8touchgfx14SnapshotWidgetD0Ev>:
 800c102:	b510      	push	{r4, lr}
 800c104:	212c      	movs	r1, #44	; 0x2c
 800c106:	4604      	mov	r4, r0
 800c108:	f011 f936 	bl	801d378 <_ZdlPvj>
 800c10c:	4620      	mov	r0, r4
 800c10e:	bd10      	pop	{r4, pc}

0800c110 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv>:
 800c110:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800c114:	2bff      	cmp	r3, #255	; 0xff
 800c116:	b510      	push	{r4, lr}
 800c118:	d104      	bne.n	800c124 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x14>
 800c11a:	8cca      	ldrh	r2, [r1, #38]	; 0x26
 800c11c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c120:	429a      	cmp	r2, r3
 800c122:	d105      	bne.n	800c130 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x20>
 800c124:	2300      	movs	r3, #0
 800c126:	8003      	strh	r3, [r0, #0]
 800c128:	8043      	strh	r3, [r0, #2]
 800c12a:	8083      	strh	r3, [r0, #4]
 800c12c:	80c3      	strh	r3, [r0, #6]
 800c12e:	bd10      	pop	{r4, pc}
 800c130:	2300      	movs	r3, #0
 800c132:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 800c136:	f9b1 200a 	ldrsh.w	r2, [r1, #10]
 800c13a:	8003      	strh	r3, [r0, #0]
 800c13c:	8043      	strh	r3, [r0, #2]
 800c13e:	8084      	strh	r4, [r0, #4]
 800c140:	80c2      	strh	r2, [r0, #6]
 800c142:	e7f4      	b.n	800c12e <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x1e>

0800c144 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE>:
 800c144:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c148:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 800c14c:	b087      	sub	sp, #28
 800c14e:	4604      	mov	r4, r0
 800c150:	4689      	mov	r9, r1
 800c152:	b363      	cbz	r3, 800c1ae <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 800c154:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
 800c156:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c15a:	429a      	cmp	r2, r3
 800c15c:	d027      	beq.n	800c1ae <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 800c15e:	ad06      	add	r5, sp, #24
 800c160:	2700      	movs	r7, #0
 800c162:	f825 2d0c 	strh.w	r2, [r5, #-12]!
 800c166:	4628      	mov	r0, r5
 800c168:	f005 fb0e 	bl	8011788 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c16c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c170:	f8ad 3016 	strh.w	r3, [sp, #22]
 800c174:	6823      	ldr	r3, [r4, #0]
 800c176:	f8ad 0014 	strh.w	r0, [sp, #20]
 800c17a:	a904      	add	r1, sp, #16
 800c17c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c17e:	9704      	str	r7, [sp, #16]
 800c180:	4620      	mov	r0, r4
 800c182:	4798      	blx	r3
 800c184:	f7f6 fca6 	bl	8002ad4 <_ZN8touchgfx3HAL3lcdEv>
 800c188:	6803      	ldr	r3, [r0, #0]
 800c18a:	4606      	mov	r6, r0
 800c18c:	f8d3 800c 	ldr.w	r8, [r3, #12]
 800c190:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 800c192:	f8ad 300c 	strh.w	r3, [sp, #12]
 800c196:	4628      	mov	r0, r5
 800c198:	f005 fbe2 	bl	8011960 <_ZNK8touchgfx6Bitmap7getDataEv>
 800c19c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800c1a0:	9300      	str	r3, [sp, #0]
 800c1a2:	4601      	mov	r1, r0
 800c1a4:	9701      	str	r7, [sp, #4]
 800c1a6:	464b      	mov	r3, r9
 800c1a8:	aa04      	add	r2, sp, #16
 800c1aa:	4630      	mov	r0, r6
 800c1ac:	47c0      	blx	r8
 800c1ae:	b007      	add	sp, #28
 800c1b0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800c1b4 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEt>:
 800c1b4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800c1b6:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800c1ba:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c1be:	6803      	ldr	r3, [r0, #0]
 800c1c0:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800c1c4:	f8ad 2004 	strh.w	r2, [sp, #4]
 800c1c8:	460d      	mov	r5, r1
 800c1ca:	2100      	movs	r1, #0
 800c1cc:	4604      	mov	r4, r0
 800c1ce:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c1d0:	9100      	str	r1, [sp, #0]
 800c1d2:	4669      	mov	r1, sp
 800c1d4:	4798      	blx	r3
 800c1d6:	4621      	mov	r1, r4
 800c1d8:	a802      	add	r0, sp, #8
 800c1da:	f003 feb9 	bl	800ff50 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c1de:	f7f6 fc79 	bl	8002ad4 <_ZN8touchgfx3HAL3lcdEv>
 800c1e2:	6803      	ldr	r3, [r0, #0]
 800c1e4:	aa02      	add	r2, sp, #8
 800c1e6:	695e      	ldr	r6, [r3, #20]
 800c1e8:	4669      	mov	r1, sp
 800c1ea:	462b      	mov	r3, r5
 800c1ec:	47b0      	blx	r6
 800c1ee:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c1f2:	2800      	cmp	r0, #0
 800c1f4:	bf08      	it	eq
 800c1f6:	461d      	moveq	r5, r3
 800c1f8:	84e5      	strh	r5, [r4, #38]	; 0x26
 800c1fa:	b004      	add	sp, #16
 800c1fc:	bd70      	pop	{r4, r5, r6, pc}
	...

0800c200 <_ZN8touchgfx14SnapshotWidgetC1Ev>:
 800c200:	2200      	movs	r2, #0
 800c202:	8082      	strh	r2, [r0, #4]
 800c204:	80c2      	strh	r2, [r0, #6]
 800c206:	8102      	strh	r2, [r0, #8]
 800c208:	8142      	strh	r2, [r0, #10]
 800c20a:	8182      	strh	r2, [r0, #12]
 800c20c:	81c2      	strh	r2, [r0, #14]
 800c20e:	8202      	strh	r2, [r0, #16]
 800c210:	8242      	strh	r2, [r0, #18]
 800c212:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800c216:	61c2      	str	r2, [r0, #28]
 800c218:	8402      	strh	r2, [r0, #32]
 800c21a:	8442      	strh	r2, [r0, #34]	; 0x22
 800c21c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800c220:	2201      	movs	r2, #1
 800c222:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800c226:	4a04      	ldr	r2, [pc, #16]	; (800c238 <_ZN8touchgfx14SnapshotWidgetC1Ev+0x38>)
 800c228:	6002      	str	r2, [r0, #0]
 800c22a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800c22e:	84c2      	strh	r2, [r0, #38]	; 0x26
 800c230:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
 800c234:	4770      	bx	lr
 800c236:	bf00      	nop
 800c238:	080204a4 	.word	0x080204a4

0800c23c <_ZN8touchgfx13AnimatedImage12setBitmapEndERKNS_6BitmapE>:
 800c23c:	880b      	ldrh	r3, [r1, #0]
 800c23e:	8643      	strh	r3, [r0, #50]	; 0x32
 800c240:	4770      	bx	lr

0800c242 <_ZN8touchgfx13AnimatedImageD1Ev>:
 800c242:	4770      	bx	lr

0800c244 <_ZN8touchgfx13AnimatedImage13stopAnimationEv>:
 800c244:	b513      	push	{r0, r1, r4, lr}
 800c246:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 800c24a:	4604      	mov	r4, r0
 800c24c:	b13b      	cbz	r3, 800c25e <_ZN8touchgfx13AnimatedImage13stopAnimationEv+0x1a>
 800c24e:	f002 fe11 	bl	800ee74 <_ZN8touchgfx11Application11getInstanceEv>
 800c252:	4621      	mov	r1, r4
 800c254:	f002 fe3a 	bl	800eecc <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>
 800c258:	2300      	movs	r3, #0
 800c25a:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 800c25e:	f894 3036 	ldrb.w	r3, [r4, #54]	; 0x36
 800c262:	b163      	cbz	r3, 800c27e <_ZN8touchgfx13AnimatedImage13stopAnimationEv+0x3a>
 800c264:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 800c266:	f8ad 3004 	strh.w	r3, [sp, #4]
 800c26a:	a901      	add	r1, sp, #4
 800c26c:	4620      	mov	r0, r4
 800c26e:	f001 f881 	bl	800d374 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800c272:	6823      	ldr	r3, [r4, #0]
 800c274:	4620      	mov	r0, r4
 800c276:	695b      	ldr	r3, [r3, #20]
 800c278:	4798      	blx	r3
 800c27a:	b002      	add	sp, #8
 800c27c:	bd10      	pop	{r4, pc}
 800c27e:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800c280:	e7f1      	b.n	800c266 <_ZN8touchgfx13AnimatedImage13stopAnimationEv+0x22>

0800c282 <_ZN8touchgfx13AnimatedImage9setBitmapERKNS_6BitmapE>:
 800c282:	880b      	ldrh	r3, [r1, #0]
 800c284:	8603      	strh	r3, [r0, #48]	; 0x30
 800c286:	f001 b875 	b.w	800d374 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>

0800c28a <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>:
 800c28a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c28c:	8e05      	ldrh	r5, [r0, #48]	; 0x30
 800c28e:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800c292:	42bd      	cmp	r5, r7
 800c294:	4604      	mov	r4, r0
 800c296:	d019      	beq.n	800c2cc <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x42>
 800c298:	8e46      	ldrh	r6, [r0, #50]	; 0x32
 800c29a:	42be      	cmp	r6, r7
 800c29c:	d016      	beq.n	800c2cc <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x42>
 800c29e:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
 800c2a2:	f880 3037 	strb.w	r3, [r0, #55]	; 0x37
 800c2a6:	b199      	cbz	r1, 800c2d0 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x46>
 800c2a8:	b142      	cbz	r2, 800c2bc <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x32>
 800c2aa:	a902      	add	r1, sp, #8
 800c2ac:	f821 6d04 	strh.w	r6, [r1, #-4]!
 800c2b0:	f001 f860 	bl	800d374 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800c2b4:	6823      	ldr	r3, [r4, #0]
 800c2b6:	4620      	mov	r0, r4
 800c2b8:	695b      	ldr	r3, [r3, #20]
 800c2ba:	4798      	blx	r3
 800c2bc:	f002 fdda 	bl	800ee74 <_ZN8touchgfx11Application11getInstanceEv>
 800c2c0:	4621      	mov	r1, r4
 800c2c2:	f002 fddd 	bl	800ee80 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>
 800c2c6:	2301      	movs	r3, #1
 800c2c8:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 800c2cc:	b003      	add	sp, #12
 800c2ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c2d0:	2a00      	cmp	r2, #0
 800c2d2:	d0f3      	beq.n	800c2bc <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x32>
 800c2d4:	a902      	add	r1, sp, #8
 800c2d6:	f821 5d04 	strh.w	r5, [r1, #-4]!
 800c2da:	e7e9      	b.n	800c2b0 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x26>

0800c2dc <_ZN8touchgfx13AnimatedImageD0Ev>:
 800c2dc:	b510      	push	{r4, lr}
 800c2de:	213c      	movs	r1, #60	; 0x3c
 800c2e0:	4604      	mov	r4, r0
 800c2e2:	f011 f849 	bl	801d378 <_ZdlPvj>
 800c2e6:	4620      	mov	r0, r4
 800c2e8:	bd10      	pop	{r4, pc}

0800c2ea <_ZN8touchgfx13AnimatedImage14pauseAnimationEv>:
 800c2ea:	b510      	push	{r4, lr}
 800c2ec:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 800c2f0:	4604      	mov	r4, r0
 800c2f2:	b143      	cbz	r3, 800c306 <_ZN8touchgfx13AnimatedImage14pauseAnimationEv+0x1c>
 800c2f4:	f002 fdbe 	bl	800ee74 <_ZN8touchgfx11Application11getInstanceEv>
 800c2f8:	4621      	mov	r1, r4
 800c2fa:	f002 fde7 	bl	800eecc <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>
 800c2fe:	2300      	movs	r3, #0
 800c300:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 800c304:	bd10      	pop	{r4, pc}
 800c306:	f002 fdb5 	bl	800ee74 <_ZN8touchgfx11Application11getInstanceEv>
 800c30a:	4621      	mov	r1, r4
 800c30c:	f002 fdb8 	bl	800ee80 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>
 800c310:	2301      	movs	r3, #1
 800c312:	e7f5      	b.n	800c300 <_ZN8touchgfx13AnimatedImage14pauseAnimationEv+0x16>

0800c314 <_ZN8touchgfx13AnimatedImage15handleTickEventEv>:
 800c314:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c316:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 800c31a:	4604      	mov	r4, r0
 800c31c:	2b00      	cmp	r3, #0
 800c31e:	d041      	beq.n	800c3a4 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x90>
 800c320:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800c324:	f890 2034 	ldrb.w	r2, [r0, #52]	; 0x34
 800c328:	3301      	adds	r3, #1
 800c32a:	b2db      	uxtb	r3, r3
 800c32c:	429a      	cmp	r2, r3
 800c32e:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
 800c332:	d137      	bne.n	800c3a4 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x90>
 800c334:	2300      	movs	r3, #0
 800c336:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
 800c33a:	8e41      	ldrh	r1, [r0, #50]	; 0x32
 800c33c:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 800c33e:	f890 2036 	ldrb.w	r2, [r0, #54]	; 0x36
 800c342:	4299      	cmp	r1, r3
 800c344:	d100      	bne.n	800c348 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x34>
 800c346:	b122      	cbz	r2, 800c352 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x3e>
 800c348:	8e21      	ldrh	r1, [r4, #48]	; 0x30
 800c34a:	4299      	cmp	r1, r3
 800c34c:	d12e      	bne.n	800c3ac <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x98>
 800c34e:	2a00      	cmp	r2, #0
 800c350:	d033      	beq.n	800c3ba <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0xa6>
 800c352:	f894 5037 	ldrb.w	r5, [r4, #55]	; 0x37
 800c356:	b935      	cbnz	r5, 800c366 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x52>
 800c358:	f002 fd8c 	bl	800ee74 <_ZN8touchgfx11Application11getInstanceEv>
 800c35c:	4621      	mov	r1, r4
 800c35e:	f002 fdb5 	bl	800eecc <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>
 800c362:	f884 5038 	strb.w	r5, [r4, #56]	; 0x38
 800c366:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800c368:	b140      	cbz	r0, 800c37c <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x68>
 800c36a:	6803      	ldr	r3, [r0, #0]
 800c36c:	68db      	ldr	r3, [r3, #12]
 800c36e:	4798      	blx	r3
 800c370:	b120      	cbz	r0, 800c37c <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x68>
 800c372:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800c374:	6803      	ldr	r3, [r0, #0]
 800c376:	4621      	mov	r1, r4
 800c378:	689b      	ldr	r3, [r3, #8]
 800c37a:	4798      	blx	r3
 800c37c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800c380:	b183      	cbz	r3, 800c3a4 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x90>
 800c382:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800c386:	b16b      	cbz	r3, 800c3a4 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x90>
 800c388:	f894 3036 	ldrb.w	r3, [r4, #54]	; 0x36
 800c38c:	b163      	cbz	r3, 800c3a8 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x94>
 800c38e:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 800c390:	f8ad 3004 	strh.w	r3, [sp, #4]
 800c394:	a901      	add	r1, sp, #4
 800c396:	4620      	mov	r0, r4
 800c398:	f000 ffec 	bl	800d374 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800c39c:	6823      	ldr	r3, [r4, #0]
 800c39e:	4620      	mov	r0, r4
 800c3a0:	695b      	ldr	r3, [r3, #20]
 800c3a2:	4798      	blx	r3
 800c3a4:	b003      	add	sp, #12
 800c3a6:	bd30      	pop	{r4, r5, pc}
 800c3a8:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800c3aa:	e7f1      	b.n	800c390 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x7c>
 800c3ac:	b12a      	cbz	r2, 800c3ba <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0xa6>
 800c3ae:	3b01      	subs	r3, #1
 800c3b0:	a902      	add	r1, sp, #8
 800c3b2:	b29b      	uxth	r3, r3
 800c3b4:	f821 3d04 	strh.w	r3, [r1, #-4]!
 800c3b8:	e7ed      	b.n	800c396 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x82>
 800c3ba:	3301      	adds	r3, #1
 800c3bc:	e7f8      	b.n	800c3b0 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x9c>

0800c3be <_ZNK8touchgfx5Image17invalidateContentEv>:
 800c3be:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 800c3c2:	b12a      	cbz	r2, 800c3d0 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800c3c4:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800c3c8:	b112      	cbz	r2, 800c3d0 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800c3ca:	6803      	ldr	r3, [r0, #0]
 800c3cc:	695b      	ldr	r3, [r3, #20]
 800c3ce:	4718      	bx	r3
 800c3d0:	4770      	bx	lr

0800c3d2 <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>:
 800c3d2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c3d4:	ac02      	add	r4, sp, #8
 800c3d6:	6803      	ldr	r3, [r0, #0]
 800c3d8:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800c3da:	f824 1d04 	strh.w	r1, [r4, #-4]!
 800c3de:	4605      	mov	r5, r0
 800c3e0:	4621      	mov	r1, r4
 800c3e2:	4616      	mov	r6, r2
 800c3e4:	4798      	blx	r3
 800c3e6:	682b      	ldr	r3, [r5, #0]
 800c3e8:	4621      	mov	r1, r4
 800c3ea:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c3ec:	f8ad 6004 	strh.w	r6, [sp, #4]
 800c3f0:	4628      	mov	r0, r5
 800c3f2:	4798      	blx	r3
 800c3f4:	b002      	add	sp, #8
 800c3f6:	bd70      	pop	{r4, r5, r6, pc}

0800c3f8 <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>:
 800c3f8:	2300      	movs	r3, #0
 800c3fa:	f880 1034 	strb.w	r1, [r0, #52]	; 0x34
 800c3fe:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
 800c402:	4770      	bx	lr

0800c404 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>:
 800c404:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 800c408:	4770      	bx	lr

0800c40a <_ZN8touchgfx13ScalableImage19getScalingAlgorithmEv>:
 800c40a:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 800c40e:	4770      	bx	lr

0800c410 <_ZN8touchgfx13ScalableImageD1Ev>:
 800c410:	4770      	bx	lr

0800c412 <_ZN8touchgfx13ScalableImageD0Ev>:
 800c412:	b510      	push	{r4, lr}
 800c414:	212c      	movs	r1, #44	; 0x2c
 800c416:	4604      	mov	r4, r0
 800c418:	f010 ffae 	bl	801d378 <_ZdlPvj>
 800c41c:	4620      	mov	r0, r4
 800c41e:	bd10      	pop	{r4, pc}

0800c420 <_ZNK8touchgfx13ScalableImage12getSolidRectEv>:
 800c420:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800c422:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800c426:	2bff      	cmp	r3, #255	; 0xff
 800c428:	4605      	mov	r5, r0
 800c42a:	d11e      	bne.n	800c46a <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x4a>
 800c42c:	f101 0426 	add.w	r4, r1, #38	; 0x26
 800c430:	4621      	mov	r1, r4
 800c432:	4668      	mov	r0, sp
 800c434:	f005 fa10 	bl	8011858 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800c438:	4620      	mov	r0, r4
 800c43a:	f9bd 6004 	ldrsh.w	r6, [sp, #4]
 800c43e:	f005 f9a3 	bl	8011788 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c442:	4286      	cmp	r6, r0
 800c444:	d111      	bne.n	800c46a <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x4a>
 800c446:	4621      	mov	r1, r4
 800c448:	a802      	add	r0, sp, #8
 800c44a:	f005 fa05 	bl	8011858 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800c44e:	4620      	mov	r0, r4
 800c450:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 800c454:	f005 f9cc 	bl	80117f0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c458:	4286      	cmp	r6, r0
 800c45a:	d106      	bne.n	800c46a <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x4a>
 800c45c:	4621      	mov	r1, r4
 800c45e:	4628      	mov	r0, r5
 800c460:	f005 f9fa 	bl	8011858 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800c464:	4628      	mov	r0, r5
 800c466:	b004      	add	sp, #16
 800c468:	bd70      	pop	{r4, r5, r6, pc}
 800c46a:	2300      	movs	r3, #0
 800c46c:	802b      	strh	r3, [r5, #0]
 800c46e:	806b      	strh	r3, [r5, #2]
 800c470:	80ab      	strh	r3, [r5, #4]
 800c472:	80eb      	strh	r3, [r5, #6]
 800c474:	e7f6      	b.n	800c464 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x44>
	...

0800c478 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>:
 800c478:	b538      	push	{r3, r4, r5, lr}
 800c47a:	2300      	movs	r3, #0
 800c47c:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800c480:	8083      	strh	r3, [r0, #4]
 800c482:	80c3      	strh	r3, [r0, #6]
 800c484:	8103      	strh	r3, [r0, #8]
 800c486:	8143      	strh	r3, [r0, #10]
 800c488:	8183      	strh	r3, [r0, #12]
 800c48a:	81c3      	strh	r3, [r0, #14]
 800c48c:	8203      	strh	r3, [r0, #16]
 800c48e:	8243      	strh	r3, [r0, #18]
 800c490:	61c3      	str	r3, [r0, #28]
 800c492:	8403      	strh	r3, [r0, #32]
 800c494:	8443      	strh	r3, [r0, #34]	; 0x22
 800c496:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
 800c49a:	2501      	movs	r5, #1
 800c49c:	4b08      	ldr	r3, [pc, #32]	; (800c4c0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x48>)
 800c49e:	f880 5025 	strb.w	r5, [r0, #37]	; 0x25
 800c4a2:	6003      	str	r3, [r0, #0]
 800c4a4:	880b      	ldrh	r3, [r1, #0]
 800c4a6:	84c3      	strh	r3, [r0, #38]	; 0x26
 800c4a8:	23ff      	movs	r3, #255	; 0xff
 800c4aa:	4604      	mov	r4, r0
 800c4ac:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 800c4b0:	f000 ff60 	bl	800d374 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800c4b4:	4b03      	ldr	r3, [pc, #12]	; (800c4c4 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x4c>)
 800c4b6:	6023      	str	r3, [r4, #0]
 800c4b8:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 800c4bc:	4620      	mov	r0, r4
 800c4be:	bd38      	pop	{r3, r4, r5, pc}
 800c4c0:	080207d8 	.word	0x080207d8
 800c4c4:	08020590 	.word	0x08020590

0800c4c8 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>:
 800c4c8:	4603      	mov	r3, r0
 800c4ca:	3026      	adds	r0, #38	; 0x26
 800c4cc:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 800c4d0:	b90b      	cbnz	r3, 800c4d6 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv+0xe>
 800c4d2:	f003 bddb 	b.w	801008c <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 800c4d6:	f003 bde9 	b.w	80100ac <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

0800c4dc <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 800c4dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c4e0:	4604      	mov	r4, r0
 800c4e2:	469b      	mov	fp, r3
 800c4e4:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 800c4e8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800c4ec:	f9b1 6000 	ldrsh.w	r6, [r1]
 800c4f0:	8888      	ldrh	r0, [r1, #4]
 800c4f2:	b0b3      	sub	sp, #204	; 0xcc
 800c4f4:	4430      	add	r0, r6
 800c4f6:	b280      	uxth	r0, r0
 800c4f8:	9206      	str	r2, [sp, #24]
 800c4fa:	fa0f fe80 	sxth.w	lr, r0
 800c4fe:	2200      	movs	r2, #0
 800c500:	4596      	cmp	lr, r2
 800c502:	e9dd a93c 	ldrd	sl, r9, [sp, #240]	; 0xf0
 800c506:	e9dd 873e 	ldrd	r8, r7, [sp, #248]	; 0xf8
 800c50a:	9211      	str	r2, [sp, #68]	; 0x44
 800c50c:	f340 811a 	ble.w	800c744 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x268>
 800c510:	45b4      	cmp	ip, r6
 800c512:	f340 8117 	ble.w	800c744 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x268>
 800c516:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800c51a:	88ca      	ldrh	r2, [r1, #6]
 800c51c:	442a      	add	r2, r5
 800c51e:	b292      	uxth	r2, r2
 800c520:	b211      	sxth	r1, r2
 800c522:	2900      	cmp	r1, #0
 800c524:	f340 810e 	ble.w	800c744 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x268>
 800c528:	42ab      	cmp	r3, r5
 800c52a:	f340 810b 	ble.w	800c744 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x268>
 800c52e:	45f4      	cmp	ip, lr
 800c530:	bfb8      	it	lt
 800c532:	fa1f f08c 	uxthlt.w	r0, ip
 800c536:	428b      	cmp	r3, r1
 800c538:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800c53c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800c540:	bfb8      	it	lt
 800c542:	b29a      	uxthlt	r2, r3
 800c544:	1b80      	subs	r0, r0, r6
 800c546:	1b52      	subs	r2, r2, r5
 800c548:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 800c54c:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 800c550:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 800c554:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 800c558:	ab11      	add	r3, sp, #68	; 0x44
 800c55a:	e893 0003 	ldmia.w	r3, {r0, r1}
 800c55e:	6822      	ldr	r2, [r4, #0]
 800c560:	9307      	str	r3, [sp, #28]
 800c562:	ad13      	add	r5, sp, #76	; 0x4c
 800c564:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800c566:	e885 0003 	stmia.w	r5, {r0, r1}
 800c56a:	4629      	mov	r1, r5
 800c56c:	4620      	mov	r0, r4
 800c56e:	4790      	blx	r2
 800c570:	4621      	mov	r1, r4
 800c572:	a815      	add	r0, sp, #84	; 0x54
 800c574:	f003 fcec 	bl	800ff50 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c578:	a815      	add	r0, sp, #84	; 0x54
 800c57a:	f002 fa5b 	bl	800ea34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800c57e:	9b07      	ldr	r3, [sp, #28]
 800c580:	1d26      	adds	r6, r4, #4
 800c582:	4618      	mov	r0, r3
 800c584:	4631      	mov	r1, r6
 800c586:	f002 fa99 	bl	800eabc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800c58a:	4628      	mov	r0, r5
 800c58c:	f104 0526 	add.w	r5, r4, #38	; 0x26
 800c590:	f002 fa50 	bl	800ea34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800c594:	4628      	mov	r0, r5
 800c596:	f005 f9e3 	bl	8011960 <_ZNK8touchgfx6Bitmap7getDataEv>
 800c59a:	9007      	str	r0, [sp, #28]
 800c59c:	2800      	cmp	r0, #0
 800c59e:	f000 80ce 	beq.w	800c73e <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x262>
 800c5a2:	f8db 2000 	ldr.w	r2, [fp]
 800c5a6:	9209      	str	r2, [sp, #36]	; 0x24
 800c5a8:	f8db 2004 	ldr.w	r2, [fp, #4]
 800c5ac:	920a      	str	r2, [sp, #40]	; 0x28
 800c5ae:	f8db 2008 	ldr.w	r2, [fp, #8]
 800c5b2:	920b      	str	r2, [sp, #44]	; 0x2c
 800c5b4:	f8db 200c 	ldr.w	r2, [fp, #12]
 800c5b8:	920c      	str	r2, [sp, #48]	; 0x30
 800c5ba:	f8da 2000 	ldr.w	r2, [sl]
 800c5be:	920d      	str	r2, [sp, #52]	; 0x34
 800c5c0:	f8da 2004 	ldr.w	r2, [sl, #4]
 800c5c4:	920e      	str	r2, [sp, #56]	; 0x38
 800c5c6:	f8da 2008 	ldr.w	r2, [sl, #8]
 800c5ca:	920f      	str	r2, [sp, #60]	; 0x3c
 800c5cc:	f8da 200c 	ldr.w	r2, [sl, #12]
 800c5d0:	9210      	str	r2, [sp, #64]	; 0x40
 800c5d2:	a90d      	add	r1, sp, #52	; 0x34
 800c5d4:	4632      	mov	r2, r6
 800c5d6:	a809      	add	r0, sp, #36	; 0x24
 800c5d8:	f002 fa54 	bl	800ea84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800c5dc:	4632      	mov	r2, r6
 800c5de:	a90e      	add	r1, sp, #56	; 0x38
 800c5e0:	a80a      	add	r0, sp, #40	; 0x28
 800c5e2:	f002 fa4f 	bl	800ea84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800c5e6:	4632      	mov	r2, r6
 800c5e8:	a90f      	add	r1, sp, #60	; 0x3c
 800c5ea:	a80b      	add	r0, sp, #44	; 0x2c
 800c5ec:	f002 fa4a 	bl	800ea84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800c5f0:	4632      	mov	r2, r6
 800c5f2:	a910      	add	r1, sp, #64	; 0x40
 800c5f4:	a80c      	add	r0, sp, #48	; 0x30
 800c5f6:	f002 fa45 	bl	800ea84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800c5fa:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 800c5fe:	edd7 3a00 	vldr	s7, [r7]
 800c602:	ed97 5a01 	vldr	s10, [r7, #4]
 800c606:	edd9 2a00 	vldr	s5, [r9]
 800c60a:	ed98 3a00 	vldr	s6, [r8]
 800c60e:	ed99 4a01 	vldr	s8, [r9, #4]
 800c612:	edd8 4a01 	vldr	s9, [r8, #4]
 800c616:	edd9 5a02 	vldr	s11, [r9, #8]
 800c61a:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 800c61e:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 800c622:	edcd 2a20 	vstr	s5, [sp, #128]	; 0x80
 800c626:	eef0 6a67 	vmov.f32	s13, s15
 800c62a:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 800c62e:	ed8d 3a21 	vstr	s6, [sp, #132]	; 0x84
 800c632:	eeb0 7a67 	vmov.f32	s14, s15
 800c636:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 800c63a:	edcd 3a22 	vstr	s7, [sp, #136]	; 0x88
 800c63e:	eeb0 6a67 	vmov.f32	s12, s15
 800c642:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800c646:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 800c64a:	ed8d 4a25 	vstr	s8, [sp, #148]	; 0x94
 800c64e:	ee16 6a10 	vmov	r6, s12
 800c652:	eeb0 6a67 	vmov.f32	s12, s15
 800c656:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800c65a:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 800c65e:	edcd 4a26 	vstr	s9, [sp, #152]	; 0x98
 800c662:	ee16 0a10 	vmov	r0, s12
 800c666:	eeb0 6a67 	vmov.f32	s12, s15
 800c66a:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800c66e:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 800c672:	ed8d 5a27 	vstr	s10, [sp, #156]	; 0x9c
 800c676:	ee16 1a10 	vmov	r1, s12
 800c67a:	eeb0 6a67 	vmov.f32	s12, s15
 800c67e:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800c682:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 800c686:	ee16 2a10 	vmov	r2, s12
 800c68a:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 800c68e:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 800c692:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 800c696:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 800c69a:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800c69e:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 800c6a2:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 800c6a6:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 800c6aa:	f8d7 a008 	ldr.w	sl, [r7, #8]
 800c6ae:	f8d8 b008 	ldr.w	fp, [r8, #8]
 800c6b2:	68ff      	ldr	r7, [r7, #12]
 800c6b4:	9624      	str	r6, [sp, #144]	; 0x90
 800c6b6:	edcd 5a2a 	vstr	s11, [sp, #168]	; 0xa8
 800c6ba:	922d      	str	r2, [sp, #180]	; 0xb4
 800c6bc:	4a23      	ldr	r2, [pc, #140]	; (800c74c <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x270>)
 800c6be:	9b06      	ldr	r3, [sp, #24]
 800c6c0:	8812      	ldrh	r2, [r2, #0]
 800c6c2:	9317      	str	r3, [sp, #92]	; 0x5c
 800c6c4:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 800c6c8:	9b07      	ldr	r3, [sp, #28]
 800c6ca:	9218      	str	r2, [sp, #96]	; 0x60
 800c6cc:	4628      	mov	r0, r5
 800c6ce:	9319      	str	r3, [sp, #100]	; 0x64
 800c6d0:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 800c6d4:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 800c6d8:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 800c6dc:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 800c6e0:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 800c6e4:	9731      	str	r7, [sp, #196]	; 0xc4
 800c6e6:	f005 f96b 	bl	80119c0 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 800c6ea:	901a      	str	r0, [sp, #104]	; 0x68
 800c6ec:	4628      	mov	r0, r5
 800c6ee:	f005 f84b 	bl	8011788 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c6f2:	901b      	str	r0, [sp, #108]	; 0x6c
 800c6f4:	4628      	mov	r0, r5
 800c6f6:	f005 f87b 	bl	80117f0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c6fa:	901c      	str	r0, [sp, #112]	; 0x70
 800c6fc:	4628      	mov	r0, r5
 800c6fe:	f005 f843 	bl	8011788 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c702:	4b13      	ldr	r3, [pc, #76]	; (800c750 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x274>)
 800c704:	901d      	str	r0, [sp, #116]	; 0x74
 800c706:	681b      	ldr	r3, [r3, #0]
 800c708:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800c70c:	b10a      	cbz	r2, 800c712 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x236>
 800c70e:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 800c710:	b905      	cbnz	r5, 800c714 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x238>
 800c712:	689d      	ldr	r5, [r3, #8]
 800c714:	682b      	ldr	r3, [r5, #0]
 800c716:	4620      	mov	r0, r4
 800c718:	6c1e      	ldr	r6, [r3, #64]	; 0x40
 800c71a:	f7ff fed5 	bl	800c4c8 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>
 800c71e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c722:	9304      	str	r3, [sp, #16]
 800c724:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800c728:	e9cd 0302 	strd	r0, r3, [sp, #8]
 800c72c:	ab13      	add	r3, sp, #76	; 0x4c
 800c72e:	9301      	str	r3, [sp, #4]
 800c730:	ab15      	add	r3, sp, #84	; 0x54
 800c732:	9300      	str	r3, [sp, #0]
 800c734:	aa1e      	add	r2, sp, #120	; 0x78
 800c736:	ab19      	add	r3, sp, #100	; 0x64
 800c738:	a917      	add	r1, sp, #92	; 0x5c
 800c73a:	4628      	mov	r0, r5
 800c73c:	47b0      	blx	r6
 800c73e:	b033      	add	sp, #204	; 0xcc
 800c740:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c744:	2300      	movs	r3, #0
 800c746:	9312      	str	r3, [sp, #72]	; 0x48
 800c748:	e706      	b.n	800c558 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x7c>
 800c74a:	bf00      	nop
 800c74c:	200135aa 	.word	0x200135aa
 800c750:	200135b0 	.word	0x200135b0

0800c754 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE>:
 800c754:	b570      	push	{r4, r5, r6, lr}
 800c756:	ed2d 8b04 	vpush	{d8-d9}
 800c75a:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 800c75e:	b098      	sub	sp, #96	; 0x60
 800c760:	4604      	mov	r4, r0
 800c762:	460e      	mov	r6, r1
 800c764:	2b00      	cmp	r3, #0
 800c766:	d065      	beq.n	800c834 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe0>
 800c768:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800c76c:	ed9f 8a38 	vldr	s16, [pc, #224]	; 800c850 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xfc>
 800c770:	ee09 3a10 	vmov	s18, r3
 800c774:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800c778:	f100 0526 	add.w	r5, r0, #38	; 0x26
 800c77c:	ee08 3a90 	vmov	s17, r3
 800c780:	4628      	mov	r0, r5
 800c782:	4b34      	ldr	r3, [pc, #208]	; (800c854 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x100>)
 800c784:	930c      	str	r3, [sp, #48]	; 0x30
 800c786:	930d      	str	r3, [sp, #52]	; 0x34
 800c788:	930e      	str	r3, [sp, #56]	; 0x38
 800c78a:	930f      	str	r3, [sp, #60]	; 0x3c
 800c78c:	f004 fffc 	bl	8011788 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c790:	ee07 0a90 	vmov	s15, r0
 800c794:	4628      	mov	r0, r5
 800c796:	eef8 9ae7 	vcvt.f32.s32	s19, s15
 800c79a:	f005 f829 	bl	80117f0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c79e:	4b2e      	ldr	r3, [pc, #184]	; (800c858 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x104>)
 800c7a0:	781b      	ldrb	r3, [r3, #0]
 800c7a2:	ee07 0a90 	vmov	s15, r0
 800c7a6:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
 800c7aa:	eef8 8ae8 	vcvt.f32.s32	s17, s17
 800c7ae:	2b01      	cmp	r3, #1
 800c7b0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800c7b4:	ee39 9a08 	vadd.f32	s18, s18, s16
 800c7b8:	ee78 8a88 	vadd.f32	s17, s17, s16
 800c7bc:	eef0 7a48 	vmov.f32	s15, s16
 800c7c0:	d13c      	bne.n	800c83c <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe8>
 800c7c2:	eef0 6a69 	vmov.f32	s13, s19
 800c7c6:	eeb0 6a47 	vmov.f32	s12, s14
 800c7ca:	eef0 5a47 	vmov.f32	s11, s14
 800c7ce:	ee19 3a90 	vmov	r3, s19
 800c7d2:	eeb0 7a48 	vmov.f32	s14, s16
 800c7d6:	eef0 9a48 	vmov.f32	s19, s16
 800c7da:	9314      	str	r3, [sp, #80]	; 0x50
 800c7dc:	ab14      	add	r3, sp, #80	; 0x50
 800c7de:	9303      	str	r3, [sp, #12]
 800c7e0:	ab10      	add	r3, sp, #64	; 0x40
 800c7e2:	9302      	str	r3, [sp, #8]
 800c7e4:	ab0c      	add	r3, sp, #48	; 0x30
 800c7e6:	9301      	str	r3, [sp, #4]
 800c7e8:	ab08      	add	r3, sp, #32
 800c7ea:	9300      	str	r3, [sp, #0]
 800c7ec:	2200      	movs	r2, #0
 800c7ee:	ab04      	add	r3, sp, #16
 800c7f0:	4631      	mov	r1, r6
 800c7f2:	4620      	mov	r0, r4
 800c7f4:	edcd 7a04 	vstr	s15, [sp, #16]
 800c7f8:	ed8d 9a05 	vstr	s18, [sp, #20]
 800c7fc:	ed8d 9a06 	vstr	s18, [sp, #24]
 800c800:	edcd 7a07 	vstr	s15, [sp, #28]
 800c804:	edcd 7a08 	vstr	s15, [sp, #32]
 800c808:	edcd 7a09 	vstr	s15, [sp, #36]	; 0x24
 800c80c:	edcd 8a0a 	vstr	s17, [sp, #40]	; 0x28
 800c810:	edcd 8a0b 	vstr	s17, [sp, #44]	; 0x2c
 800c814:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 800c818:	edcd 9a11 	vstr	s19, [sp, #68]	; 0x44
 800c81c:	edcd 5a12 	vstr	s11, [sp, #72]	; 0x48
 800c820:	ed8d 6a13 	vstr	s12, [sp, #76]	; 0x4c
 800c824:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 800c828:	ed8d 7a16 	vstr	s14, [sp, #88]	; 0x58
 800c82c:	edcd 6a17 	vstr	s13, [sp, #92]	; 0x5c
 800c830:	f7ff fe54 	bl	800c4dc <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 800c834:	b018      	add	sp, #96	; 0x60
 800c836:	ecbd 8b04 	vpop	{d8-d9}
 800c83a:	bd70      	pop	{r4, r5, r6, pc}
 800c83c:	eef0 6a47 	vmov.f32	s13, s14
 800c840:	eef0 5a69 	vmov.f32	s11, s19
 800c844:	eeb0 6a48 	vmov.f32	s12, s16
 800c848:	ee18 3a10 	vmov	r3, s16
 800c84c:	e7c5      	b.n	800c7da <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x86>
 800c84e:	bf00      	nop
 800c850:	00000000 	.word	0x00000000
 800c854:	42c80000 	.word	0x42c80000
 800c858:	200135a8 	.word	0x200135a8

0800c85c <_ZN8touchgfx8TextArea8setWidthEs>:
 800c85c:	b530      	push	{r4, r5, lr}
 800c85e:	b085      	sub	sp, #20
 800c860:	6803      	ldr	r3, [r0, #0]
 800c862:	8101      	strh	r1, [r0, #8]
 800c864:	466d      	mov	r5, sp
 800c866:	4601      	mov	r1, r0
 800c868:	4604      	mov	r4, r0
 800c86a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800c86e:	4628      	mov	r0, r5
 800c870:	4798      	blx	r3
 800c872:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800c876:	343c      	adds	r4, #60	; 0x3c
 800c878:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800c87c:	b005      	add	sp, #20
 800c87e:	bd30      	pop	{r4, r5, pc}

0800c880 <_ZN8touchgfx8TextArea9setHeightEs>:
 800c880:	b530      	push	{r4, r5, lr}
 800c882:	b085      	sub	sp, #20
 800c884:	6803      	ldr	r3, [r0, #0]
 800c886:	8141      	strh	r1, [r0, #10]
 800c888:	466d      	mov	r5, sp
 800c88a:	4601      	mov	r1, r0
 800c88c:	4604      	mov	r4, r0
 800c88e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800c892:	4628      	mov	r0, r5
 800c894:	4798      	blx	r3
 800c896:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800c89a:	343c      	adds	r4, #60	; 0x3c
 800c89c:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800c8a0:	b005      	add	sp, #20
 800c8a2:	bd30      	pop	{r4, r5, pc}

0800c8a4 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800c8a4:	2200      	movs	r2, #0
 800c8a6:	8002      	strh	r2, [r0, #0]
 800c8a8:	8042      	strh	r2, [r0, #2]
 800c8aa:	8082      	strh	r2, [r0, #4]
 800c8ac:	80c2      	strh	r2, [r0, #6]
 800c8ae:	4770      	bx	lr

0800c8b0 <_ZN8touchgfx8TextArea8setAlphaEh>:
 800c8b0:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
 800c8b4:	4770      	bx	lr
	...

0800c8b8 <_ZN8touchgfx8TextArea12setBaselineYEs>:
 800c8b8:	b570      	push	{r4, r5, r6, lr}
 800c8ba:	6803      	ldr	r3, [r0, #0]
 800c8bc:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800c8be:	6b5e      	ldr	r6, [r3, #52]	; 0x34
 800c8c0:	4b09      	ldr	r3, [pc, #36]	; (800c8e8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x30>)
 800c8c2:	681b      	ldr	r3, [r3, #0]
 800c8c4:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800c8c8:	4b08      	ldr	r3, [pc, #32]	; (800c8ec <_ZN8touchgfx8TextArea12setBaselineYEs+0x34>)
 800c8ca:	681b      	ldr	r3, [r3, #0]
 800c8cc:	4604      	mov	r4, r0
 800c8ce:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800c8d2:	6803      	ldr	r3, [r0, #0]
 800c8d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c8d6:	460d      	mov	r5, r1
 800c8d8:	4798      	blx	r3
 800c8da:	1a29      	subs	r1, r5, r0
 800c8dc:	4633      	mov	r3, r6
 800c8de:	4620      	mov	r0, r4
 800c8e0:	b209      	sxth	r1, r1
 800c8e2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c8e6:	4718      	bx	r3
 800c8e8:	20013600 	.word	0x20013600
 800c8ec:	20013608 	.word	0x20013608

0800c8f0 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 800c8f0:	b570      	push	{r4, r5, r6, lr}
 800c8f2:	6803      	ldr	r3, [r0, #0]
 800c8f4:	4604      	mov	r4, r0
 800c8f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c8f8:	4615      	mov	r5, r2
 800c8fa:	4798      	blx	r3
 800c8fc:	6823      	ldr	r3, [r4, #0]
 800c8fe:	4629      	mov	r1, r5
 800c900:	4620      	mov	r0, r4
 800c902:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800c904:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c908:	4718      	bx	r3

0800c90a <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800c90a:	2000      	movs	r0, #0
 800c90c:	4770      	bx	lr

0800c90e <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
 800c90e:	2000      	movs	r0, #0
 800c910:	4770      	bx	lr
	...

0800c914 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800c914:	4b07      	ldr	r3, [pc, #28]	; (800c934 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800c916:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800c918:	881b      	ldrh	r3, [r3, #0]
 800c91a:	4293      	cmp	r3, r2
 800c91c:	bf81      	itttt	hi
 800c91e:	4b06      	ldrhi	r3, [pc, #24]	; (800c938 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800c920:	681b      	ldrhi	r3, [r3, #0]
 800c922:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800c926:	7858      	ldrbhi	r0, [r3, #1]
 800c928:	bf8c      	ite	hi
 800c92a:	f000 0003 	andhi.w	r0, r0, #3
 800c92e:	2000      	movls	r0, #0
 800c930:	4770      	bx	lr
 800c932:	bf00      	nop
 800c934:	20013604 	.word	0x20013604
 800c938:	20013600 	.word	0x20013600

0800c93c <_ZN8touchgfx8TextAreaD1Ev>:
 800c93c:	4770      	bx	lr
	...

0800c940 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800c940:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c944:	4b10      	ldr	r3, [pc, #64]	; (800c988 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800c946:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800c948:	881b      	ldrh	r3, [r3, #0]
 800c94a:	428b      	cmp	r3, r1
 800c94c:	4604      	mov	r4, r0
 800c94e:	d918      	bls.n	800c982 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800c950:	6803      	ldr	r3, [r0, #0]
 800c952:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 800c954:	4b0d      	ldr	r3, [pc, #52]	; (800c98c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800c956:	6818      	ldr	r0, [r3, #0]
 800c958:	f7f8 f8c0 	bl	8004adc <_ZNK8touchgfx5Texts7getTextEt>
 800c95c:	6823      	ldr	r3, [r4, #0]
 800c95e:	4606      	mov	r6, r0
 800c960:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800c962:	4620      	mov	r0, r4
 800c964:	4798      	blx	r3
 800c966:	6823      	ldr	r3, [r4, #0]
 800c968:	4607      	mov	r7, r0
 800c96a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800c96e:	4620      	mov	r0, r4
 800c970:	4798      	blx	r3
 800c972:	463a      	mov	r2, r7
 800c974:	4603      	mov	r3, r0
 800c976:	4631      	mov	r1, r6
 800c978:	4620      	mov	r0, r4
 800c97a:	46ac      	mov	ip, r5
 800c97c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800c980:	4760      	bx	ip
 800c982:	2000      	movs	r0, #0
 800c984:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c988:	20013604 	.word	0x20013604
 800c98c:	2001360c 	.word	0x2001360c

0800c990 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800c990:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800c994:	4b17      	ldr	r3, [pc, #92]	; (800c9f4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800c996:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800c998:	881b      	ldrh	r3, [r3, #0]
 800c99a:	428b      	cmp	r3, r1
 800c99c:	4604      	mov	r4, r0
 800c99e:	d926      	bls.n	800c9ee <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800c9a0:	4b15      	ldr	r3, [pc, #84]	; (800c9f8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800c9a2:	681b      	ldr	r3, [r3, #0]
 800c9a4:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800c9a8:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800c9ac:	4b13      	ldr	r3, [pc, #76]	; (800c9fc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800c9ae:	7855      	ldrb	r5, [r2, #1]
 800c9b0:	681b      	ldr	r3, [r3, #0]
 800c9b2:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800c9b6:	6833      	ldr	r3, [r6, #0]
 800c9b8:	69df      	ldr	r7, [r3, #28]
 800c9ba:	4b11      	ldr	r3, [pc, #68]	; (800ca00 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800c9bc:	6818      	ldr	r0, [r3, #0]
 800c9be:	f7f8 f88d 	bl	8004adc <_ZNK8touchgfx5Texts7getTextEt>
 800c9c2:	6823      	ldr	r3, [r4, #0]
 800c9c4:	4680      	mov	r8, r0
 800c9c6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800c9c8:	4620      	mov	r0, r4
 800c9ca:	4798      	blx	r3
 800c9cc:	6823      	ldr	r3, [r4, #0]
 800c9ce:	4681      	mov	r9, r0
 800c9d0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800c9d4:	4620      	mov	r0, r4
 800c9d6:	4798      	blx	r3
 800c9d8:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800c9dc:	9000      	str	r0, [sp, #0]
 800c9de:	464b      	mov	r3, r9
 800c9e0:	4642      	mov	r2, r8
 800c9e2:	4629      	mov	r1, r5
 800c9e4:	4630      	mov	r0, r6
 800c9e6:	47b8      	blx	r7
 800c9e8:	b003      	add	sp, #12
 800c9ea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c9ee:	2000      	movs	r0, #0
 800c9f0:	e7fa      	b.n	800c9e8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800c9f2:	bf00      	nop
 800c9f4:	20013604 	.word	0x20013604
 800c9f8:	20013600 	.word	0x20013600
 800c9fc:	20013608 	.word	0x20013608
 800ca00:	2001360c 	.word	0x2001360c

0800ca04 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800ca04:	b40e      	push	{r1, r2, r3}
 800ca06:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ca0a:	4b2f      	ldr	r3, [pc, #188]	; (800cac8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800ca0c:	881a      	ldrh	r2, [r3, #0]
 800ca0e:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800ca10:	429a      	cmp	r2, r3
 800ca12:	b09d      	sub	sp, #116	; 0x74
 800ca14:	4604      	mov	r4, r0
 800ca16:	d954      	bls.n	800cac2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800ca18:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800cacc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800ca1c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800cad0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800ca20:	aa26      	add	r2, sp, #152	; 0x98
 800ca22:	9202      	str	r2, [sp, #8]
 800ca24:	f8d9 2000 	ldr.w	r2, [r9]
 800ca28:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800ca2c:	f8d8 3000 	ldr.w	r3, [r8]
 800ca30:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800ca34:	682b      	ldr	r3, [r5, #0]
 800ca36:	4628      	mov	r0, r5
 800ca38:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ca3a:	4798      	blx	r3
 800ca3c:	b207      	sxth	r7, r0
 800ca3e:	4606      	mov	r6, r0
 800ca40:	a803      	add	r0, sp, #12
 800ca42:	f003 fe92 	bl	801076a <_ZN8touchgfx12TextProviderC1Ev>
 800ca46:	682b      	ldr	r3, [r5, #0]
 800ca48:	4628      	mov	r0, r5
 800ca4a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ca4c:	4798      	blx	r3
 800ca4e:	682b      	ldr	r3, [r5, #0]
 800ca50:	4682      	mov	sl, r0
 800ca52:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800ca54:	4628      	mov	r0, r5
 800ca56:	4798      	blx	r3
 800ca58:	4653      	mov	r3, sl
 800ca5a:	9000      	str	r0, [sp, #0]
 800ca5c:	9a02      	ldr	r2, [sp, #8]
 800ca5e:	9925      	ldr	r1, [sp, #148]	; 0x94
 800ca60:	a803      	add	r0, sp, #12
 800ca62:	f003 fedd 	bl	8010820 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800ca66:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800ca68:	f8d9 3000 	ldr.w	r3, [r9]
 800ca6c:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 800ca70:	8925      	ldrh	r5, [r4, #8]
 800ca72:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800ca76:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800ca7a:	eba5 050c 	sub.w	r5, r5, ip
 800ca7e:	784a      	ldrb	r2, [r1, #1]
 800ca80:	f8d8 3000 	ldr.w	r3, [r8]
 800ca84:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800ca88:	b22d      	sxth	r5, r5
 800ca8a:	9500      	str	r5, [sp, #0]
 800ca8c:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800ca90:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800ca94:	a803      	add	r0, sp, #12
 800ca96:	f001 fce1 	bl	800e45c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800ca9a:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800ca9e:	18b9      	adds	r1, r7, r2
 800caa0:	2900      	cmp	r1, #0
 800caa2:	b203      	sxth	r3, r0
 800caa4:	dd0b      	ble.n	800cabe <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800caa6:	3b01      	subs	r3, #1
 800caa8:	fb13 f302 	smulbb	r3, r3, r2
 800caac:	fb16 3300 	smlabb	r3, r6, r0, r3
 800cab0:	b21f      	sxth	r7, r3
 800cab2:	4638      	mov	r0, r7
 800cab4:	b01d      	add	sp, #116	; 0x74
 800cab6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800caba:	b003      	add	sp, #12
 800cabc:	4770      	bx	lr
 800cabe:	2b00      	cmp	r3, #0
 800cac0:	dcf7      	bgt.n	800cab2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800cac2:	2700      	movs	r7, #0
 800cac4:	e7f5      	b.n	800cab2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800cac6:	bf00      	nop
 800cac8:	20013604 	.word	0x20013604
 800cacc:	20013600 	.word	0x20013600
 800cad0:	20013608 	.word	0x20013608

0800cad4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800cad4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cad8:	4bbb      	ldr	r3, [pc, #748]	; (800cdc8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f4>)
 800cada:	460c      	mov	r4, r1
 800cadc:	881b      	ldrh	r3, [r3, #0]
 800cade:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 800cae0:	428b      	cmp	r3, r1
 800cae2:	b0a9      	sub	sp, #164	; 0xa4
 800cae4:	4681      	mov	r9, r0
 800cae6:	d809      	bhi.n	800cafc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 800cae8:	2300      	movs	r3, #0
 800caea:	f04f 32ff 	mov.w	r2, #4294967295
 800caee:	e9c0 3200 	strd	r3, r2, [r0]
 800caf2:	6083      	str	r3, [r0, #8]
 800caf4:	4648      	mov	r0, r9
 800caf6:	b029      	add	sp, #164	; 0xa4
 800caf8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cafc:	f8df b2d0 	ldr.w	fp, [pc, #720]	; 800cdd0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800cb00:	f8df 82d0 	ldr.w	r8, [pc, #720]	; 800cdd4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>
 800cb04:	f8db 3000 	ldr.w	r3, [fp]
 800cb08:	f8d8 0000 	ldr.w	r0, [r8]
 800cb0c:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800cb10:	4bae      	ldr	r3, [pc, #696]	; (800cdcc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 800cb12:	681b      	ldr	r3, [r3, #0]
 800cb14:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800cb18:	f7f7 ffe0 	bl	8004adc <_ZNK8touchgfx5Texts7getTextEt>
 800cb1c:	682b      	ldr	r3, [r5, #0]
 800cb1e:	4607      	mov	r7, r0
 800cb20:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800cb22:	4628      	mov	r0, r5
 800cb24:	4798      	blx	r3
 800cb26:	8ea6      	ldrh	r6, [r4, #52]	; 0x34
 800cb28:	f8cd 800c 	str.w	r8, [sp, #12]
 800cb2c:	4430      	add	r0, r6
 800cb2e:	f894 6039 	ldrb.w	r6, [r4, #57]	; 0x39
 800cb32:	b283      	uxth	r3, r0
 800cb34:	f10d 0a3c 	add.w	sl, sp, #60	; 0x3c
 800cb38:	9302      	str	r3, [sp, #8]
 800cb3a:	4650      	mov	r0, sl
 800cb3c:	2e00      	cmp	r6, #0
 800cb3e:	f040 8091 	bne.w	800cc64 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 800cb42:	f003 fe12 	bl	801076a <_ZN8touchgfx12TextProviderC1Ev>
 800cb46:	682b      	ldr	r3, [r5, #0]
 800cb48:	4628      	mov	r0, r5
 800cb4a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800cb4c:	4798      	blx	r3
 800cb4e:	682b      	ldr	r3, [r5, #0]
 800cb50:	9005      	str	r0, [sp, #20]
 800cb52:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800cb54:	4628      	mov	r0, r5
 800cb56:	4798      	blx	r3
 800cb58:	6823      	ldr	r3, [r4, #0]
 800cb5a:	4680      	mov	r8, r0
 800cb5c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800cb5e:	4620      	mov	r0, r4
 800cb60:	4798      	blx	r3
 800cb62:	6822      	ldr	r2, [r4, #0]
 800cb64:	9004      	str	r0, [sp, #16]
 800cb66:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800cb6a:	4620      	mov	r0, r4
 800cb6c:	4790      	blx	r2
 800cb6e:	9905      	ldr	r1, [sp, #20]
 800cb70:	9b04      	ldr	r3, [sp, #16]
 800cb72:	9001      	str	r0, [sp, #4]
 800cb74:	9300      	str	r3, [sp, #0]
 800cb76:	460a      	mov	r2, r1
 800cb78:	4643      	mov	r3, r8
 800cb7a:	4639      	mov	r1, r7
 800cb7c:	4650      	mov	r0, sl
 800cb7e:	f003 fe64 	bl	801084a <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800cb82:	4637      	mov	r7, r6
 800cb84:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800cb86:	f8db 3000 	ldr.w	r3, [fp]
 800cb8a:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800cb8e:	4629      	mov	r1, r5
 800cb90:	785b      	ldrb	r3, [r3, #1]
 800cb92:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800cb96:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800cb9a:	4650      	mov	r0, sl
 800cb9c:	f001 f9b0 	bl	800df00 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800cba0:	4287      	cmp	r7, r0
 800cba2:	bfb8      	it	lt
 800cba4:	b207      	sxthlt	r7, r0
 800cba6:	3601      	adds	r6, #1
 800cba8:	4650      	mov	r0, sl
 800cbaa:	b2b6      	uxth	r6, r6
 800cbac:	f003 fe04 	bl	80107b8 <_ZN8touchgfx12TextProvider11endOfStringEv>
 800cbb0:	2800      	cmp	r0, #0
 800cbb2:	d0e7      	beq.n	800cb84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xb0>
 800cbb4:	9b02      	ldr	r3, [sp, #8]
 800cbb6:	f8b4 8034 	ldrh.w	r8, [r4, #52]	; 0x34
 800cbba:	fb13 f606 	smulbb	r6, r3, r6
 800cbbe:	eba6 0608 	sub.w	r6, r6, r8
 800cbc2:	b2b6      	uxth	r6, r6
 800cbc4:	fa0f f886 	sxth.w	r8, r6
 800cbc8:	f1b8 0f00 	cmp.w	r8, #0
 800cbcc:	dd06      	ble.n	800cbdc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x108>
 800cbce:	682b      	ldr	r3, [r5, #0]
 800cbd0:	4628      	mov	r0, r5
 800cbd2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800cbd4:	4798      	blx	r3
 800cbd6:	4430      	add	r0, r6
 800cbd8:	fa0f f880 	sxth.w	r8, r0
 800cbdc:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800cbe0:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800cbe4:	6823      	ldr	r3, [r4, #0]
 800cbe6:	bf08      	it	eq
 800cbe8:	f9b4 6008 	ldrsheq.w	r6, [r4, #8]
 800cbec:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800cbee:	bf18      	it	ne
 800cbf0:	f9b4 600a 	ldrshne.w	r6, [r4, #10]
 800cbf4:	4620      	mov	r0, r4
 800cbf6:	4798      	blx	r3
 800cbf8:	2801      	cmp	r0, #1
 800cbfa:	b2ba      	uxth	r2, r7
 800cbfc:	f000 80d1 	beq.w	800cda2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ce>
 800cc00:	2802      	cmp	r0, #2
 800cc02:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800cc06:	f000 80d2 	beq.w	800cdae <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2da>
 800cc0a:	b21e      	sxth	r6, r3
 800cc0c:	7a29      	ldrb	r1, [r5, #8]
 800cc0e:	7a6d      	ldrb	r5, [r5, #9]
 800cc10:	1a76      	subs	r6, r6, r1
 800cc12:	4429      	add	r1, r5
 800cc14:	440a      	add	r2, r1
 800cc16:	f894 1038 	ldrb.w	r1, [r4, #56]	; 0x38
 800cc1a:	b2b3      	uxth	r3, r6
 800cc1c:	b292      	uxth	r2, r2
 800cc1e:	2902      	cmp	r1, #2
 800cc20:	b21f      	sxth	r7, r3
 800cc22:	b216      	sxth	r6, r2
 800cc24:	f000 80c6 	beq.w	800cdb4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2e0>
 800cc28:	2903      	cmp	r1, #3
 800cc2a:	f000 80d5 	beq.w	800cdd8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>
 800cc2e:	2901      	cmp	r1, #1
 800cc30:	f040 80db 	bne.w	800cdea <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x316>
 800cc34:	8923      	ldrh	r3, [r4, #8]
 800cc36:	4632      	mov	r2, r6
 800cc38:	eba3 0308 	sub.w	r3, r3, r8
 800cc3c:	4646      	mov	r6, r8
 800cc3e:	463d      	mov	r5, r7
 800cc40:	4690      	mov	r8, r2
 800cc42:	b21f      	sxth	r7, r3
 800cc44:	9b03      	ldr	r3, [sp, #12]
 800cc46:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800cc48:	6818      	ldr	r0, [r3, #0]
 800cc4a:	f7f7 ff47 	bl	8004adc <_ZNK8touchgfx5Texts7getTextEt>
 800cc4e:	f8a9 7000 	strh.w	r7, [r9]
 800cc52:	f8a9 5002 	strh.w	r5, [r9, #2]
 800cc56:	f8a9 6004 	strh.w	r6, [r9, #4]
 800cc5a:	f8a9 8006 	strh.w	r8, [r9, #6]
 800cc5e:	f8c9 0008 	str.w	r0, [r9, #8]
 800cc62:	e747      	b.n	800caf4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 800cc64:	f003 fd81 	bl	801076a <_ZN8touchgfx12TextProviderC1Ev>
 800cc68:	682b      	ldr	r3, [r5, #0]
 800cc6a:	4628      	mov	r0, r5
 800cc6c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800cc6e:	4798      	blx	r3
 800cc70:	682b      	ldr	r3, [r5, #0]
 800cc72:	4606      	mov	r6, r0
 800cc74:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800cc76:	4628      	mov	r0, r5
 800cc78:	4798      	blx	r3
 800cc7a:	6823      	ldr	r3, [r4, #0]
 800cc7c:	4680      	mov	r8, r0
 800cc7e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800cc80:	4620      	mov	r0, r4
 800cc82:	4798      	blx	r3
 800cc84:	6822      	ldr	r2, [r4, #0]
 800cc86:	9004      	str	r0, [sp, #16]
 800cc88:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800cc8c:	4620      	mov	r0, r4
 800cc8e:	4790      	blx	r2
 800cc90:	9b04      	ldr	r3, [sp, #16]
 800cc92:	9001      	str	r0, [sp, #4]
 800cc94:	4632      	mov	r2, r6
 800cc96:	9300      	str	r3, [sp, #0]
 800cc98:	4639      	mov	r1, r7
 800cc9a:	4643      	mov	r3, r8
 800cc9c:	4650      	mov	r0, sl
 800cc9e:	f003 fdd4 	bl	801084a <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800cca2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800cca6:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 800ccaa:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800ccac:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 800ccb0:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800ccb4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800ccb8:	bf0a      	itet	eq
 800ccba:	4642      	moveq	r2, r8
 800ccbc:	461a      	movne	r2, r3
 800ccbe:	4698      	moveq	r8, r3
 800ccc0:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800ccc4:	1ad2      	subs	r2, r2, r3
 800ccc6:	f8db 3000 	ldr.w	r3, [fp]
 800ccca:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800ccce:	7859      	ldrb	r1, [r3, #1]
 800ccd0:	f8cd a020 	str.w	sl, [sp, #32]
 800ccd4:	2300      	movs	r3, #0
 800ccd6:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800ccda:	f8ad 301c 	strh.w	r3, [sp, #28]
 800ccde:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800cce2:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800cce6:	950a      	str	r5, [sp, #40]	; 0x28
 800cce8:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800ccec:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800ccf0:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800ccf4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800ccf8:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800ccfc:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800cd00:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800cd04:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 800cd08:	b350      	cbz	r0, 800cd60 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800cd0a:	682b      	ldr	r3, [r5, #0]
 800cd0c:	4628      	mov	r0, r5
 800cd0e:	695b      	ldr	r3, [r3, #20]
 800cd10:	4798      	blx	r3
 800cd12:	4607      	mov	r7, r0
 800cd14:	b320      	cbz	r0, 800cd60 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800cd16:	980a      	ldr	r0, [sp, #40]	; 0x28
 800cd18:	6803      	ldr	r3, [r0, #0]
 800cd1a:	4639      	mov	r1, r7
 800cd1c:	68db      	ldr	r3, [r3, #12]
 800cd1e:	4798      	blx	r3
 800cd20:	4606      	mov	r6, r0
 800cd22:	b1e8      	cbz	r0, 800cd60 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800cd24:	7b43      	ldrb	r3, [r0, #13]
 800cd26:	7a82      	ldrb	r2, [r0, #10]
 800cd28:	005b      	lsls	r3, r3, #1
 800cd2a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800cd2e:	4313      	orrs	r3, r2
 800cd30:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800cd34:	f89d 3025 	ldrb.w	r3, [sp, #37]	; 0x25
 800cd38:	2b04      	cmp	r3, #4
 800cd3a:	d111      	bne.n	800cd60 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800cd3c:	980a      	ldr	r0, [sp, #40]	; 0x28
 800cd3e:	6803      	ldr	r3, [r0, #0]
 800cd40:	4632      	mov	r2, r6
 800cd42:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800cd44:	4639      	mov	r1, r7
 800cd46:	4798      	blx	r3
 800cd48:	7b73      	ldrb	r3, [r6, #13]
 800cd4a:	005b      	lsls	r3, r3, #1
 800cd4c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800cd50:	7ab3      	ldrb	r3, [r6, #10]
 800cd52:	4313      	orrs	r3, r2
 800cd54:	4418      	add	r0, r3
 800cd56:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800cd5a:	4418      	add	r0, r3
 800cd5c:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 800cd60:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 800cd64:	2600      	movs	r6, #0
 800cd66:	ea4f 0b4a 	mov.w	fp, sl, lsl #1
 800cd6a:	4637      	mov	r7, r6
 800cd6c:	45c3      	cmp	fp, r8
 800cd6e:	bfd4      	ite	le
 800cd70:	2100      	movle	r1, #0
 800cd72:	2101      	movgt	r1, #1
 800cd74:	a807      	add	r0, sp, #28
 800cd76:	f001 faa2 	bl	800e2be <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800cd7a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 800cd7e:	429f      	cmp	r7, r3
 800cd80:	bfb8      	it	lt
 800cd82:	b21f      	sxthlt	r7, r3
 800cd84:	9b02      	ldr	r3, [sp, #8]
 800cd86:	eba8 0803 	sub.w	r8, r8, r3
 800cd8a:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800cd8e:	3601      	adds	r6, #1
 800cd90:	b2b6      	uxth	r6, r6
 800cd92:	fa0f f888 	sxth.w	r8, r8
 800cd96:	2b00      	cmp	r3, #0
 800cd98:	f43f af0c 	beq.w	800cbb4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 800cd9c:	45c2      	cmp	sl, r8
 800cd9e:	dbe5      	blt.n	800cd6c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x298>
 800cda0:	e708      	b.n	800cbb4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 800cda2:	1bf6      	subs	r6, r6, r7
 800cda4:	2702      	movs	r7, #2
 800cda6:	fb96 f6f7 	sdiv	r6, r6, r7
 800cdaa:	b236      	sxth	r6, r6
 800cdac:	e72e      	b.n	800cc0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x138>
 800cdae:	4413      	add	r3, r2
 800cdb0:	1af6      	subs	r6, r6, r3
 800cdb2:	e7fa      	b.n	800cdaa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2d6>
 800cdb4:	8925      	ldrh	r5, [r4, #8]
 800cdb6:	1aad      	subs	r5, r5, r2
 800cdb8:	1aed      	subs	r5, r5, r3
 800cdba:	b22f      	sxth	r7, r5
 800cdbc:	8965      	ldrh	r5, [r4, #10]
 800cdbe:	eba5 0508 	sub.w	r5, r5, r8
 800cdc2:	b22d      	sxth	r5, r5
 800cdc4:	e73e      	b.n	800cc44 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800cdc6:	bf00      	nop
 800cdc8:	20013604 	.word	0x20013604
 800cdcc:	20013608 	.word	0x20013608
 800cdd0:	20013600 	.word	0x20013600
 800cdd4:	2001360c 	.word	0x2001360c
 800cdd8:	8965      	ldrh	r5, [r4, #10]
 800cdda:	1aad      	subs	r5, r5, r2
 800cddc:	1aed      	subs	r5, r5, r3
 800cdde:	4633      	mov	r3, r6
 800cde0:	b22d      	sxth	r5, r5
 800cde2:	4646      	mov	r6, r8
 800cde4:	2700      	movs	r7, #0
 800cde6:	4698      	mov	r8, r3
 800cde8:	e72c      	b.n	800cc44 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800cdea:	2500      	movs	r5, #0
 800cdec:	e72a      	b.n	800cc44 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800cdee:	bf00      	nop

0800cdf0 <_ZN8touchgfx8TextAreaD0Ev>:
 800cdf0:	b510      	push	{r4, lr}
 800cdf2:	2148      	movs	r1, #72	; 0x48
 800cdf4:	4604      	mov	r4, r0
 800cdf6:	f010 fabf 	bl	801d378 <_ZdlPvj>
 800cdfa:	4620      	mov	r0, r4
 800cdfc:	bd10      	pop	{r4, pc}
	...

0800ce00 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800ce00:	b513      	push	{r0, r1, r4, lr}
 800ce02:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800ce06:	4604      	mov	r4, r0
 800ce08:	b1fb      	cbz	r3, 800ce4a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800ce0a:	4b16      	ldr	r3, [pc, #88]	; (800ce64 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 800ce0c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800ce0e:	881b      	ldrh	r3, [r3, #0]
 800ce10:	428b      	cmp	r3, r1
 800ce12:	d91a      	bls.n	800ce4a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800ce14:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800ce18:	2b00      	cmp	r3, #0
 800ce1a:	dd16      	ble.n	800ce4a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800ce1c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800ce20:	2b00      	cmp	r3, #0
 800ce22:	dd12      	ble.n	800ce4a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800ce24:	4b10      	ldr	r3, [pc, #64]	; (800ce68 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 800ce26:	6818      	ldr	r0, [r3, #0]
 800ce28:	f7f7 fe58 	bl	8004adc <_ZNK8touchgfx5Texts7getTextEt>
 800ce2c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800ce30:	6822      	ldr	r2, [r4, #0]
 800ce32:	2b00      	cmp	r3, #0
 800ce34:	db06      	blt.n	800ce44 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800ce36:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800ce3a:	2b00      	cmp	r3, #0
 800ce3c:	db02      	blt.n	800ce44 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800ce3e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800ce40:	4298      	cmp	r0, r3
 800ce42:	d004      	beq.n	800ce4e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 800ce44:	6953      	ldr	r3, [r2, #20]
 800ce46:	4620      	mov	r0, r4
 800ce48:	4798      	blx	r3
 800ce4a:	b002      	add	sp, #8
 800ce4c:	bd10      	pop	{r4, pc}
 800ce4e:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 800ce52:	c903      	ldmia	r1, {r0, r1}
 800ce54:	466b      	mov	r3, sp
 800ce56:	e883 0003 	stmia.w	r3, {r0, r1}
 800ce5a:	6912      	ldr	r2, [r2, #16]
 800ce5c:	4619      	mov	r1, r3
 800ce5e:	4620      	mov	r0, r4
 800ce60:	4790      	blx	r2
 800ce62:	e7f2      	b.n	800ce4a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800ce64:	20013604 	.word	0x20013604
 800ce68:	2001360c 	.word	0x2001360c

0800ce6c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800ce6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ce70:	4b44      	ldr	r3, [pc, #272]	; (800cf84 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 800ce72:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800ce74:	881b      	ldrh	r3, [r3, #0]
 800ce76:	4293      	cmp	r3, r2
 800ce78:	b08e      	sub	sp, #56	; 0x38
 800ce7a:	4604      	mov	r4, r0
 800ce7c:	d97e      	bls.n	800cf7c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800ce7e:	6808      	ldr	r0, [r1, #0]
 800ce80:	4d41      	ldr	r5, [pc, #260]	; (800cf88 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 800ce82:	6849      	ldr	r1, [r1, #4]
 800ce84:	ab05      	add	r3, sp, #20
 800ce86:	c303      	stmia	r3!, {r0, r1}
 800ce88:	4611      	mov	r1, r2
 800ce8a:	6828      	ldr	r0, [r5, #0]
 800ce8c:	f7f7 fe26 	bl	8004adc <_ZNK8touchgfx5Texts7getTextEt>
 800ce90:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800ce94:	2b00      	cmp	r3, #0
 800ce96:	db11      	blt.n	800cebc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800ce98:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800ce9c:	2b00      	cmp	r3, #0
 800ce9e:	db0d      	blt.n	800cebc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800cea0:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800cea2:	4298      	cmp	r0, r3
 800cea4:	d10a      	bne.n	800cebc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800cea6:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800ceaa:	e892 0003 	ldmia.w	r2, {r0, r1}
 800ceae:	ab09      	add	r3, sp, #36	; 0x24
 800ceb0:	e883 0003 	stmia.w	r3, {r0, r1}
 800ceb4:	4619      	mov	r1, r3
 800ceb6:	a805      	add	r0, sp, #20
 800ceb8:	f7fe f92c 	bl	800b114 <_ZN8touchgfx4RectaNERKS0_>
 800cebc:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800cec0:	2b00      	cmp	r3, #0
 800cec2:	dd5b      	ble.n	800cf7c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800cec4:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800cec8:	2b00      	cmp	r3, #0
 800ceca:	dd57      	ble.n	800cf7c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800cecc:	4f2f      	ldr	r7, [pc, #188]	; (800cf8c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 800cece:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800ced0:	683b      	ldr	r3, [r7, #0]
 800ced2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800ced6:	4b2e      	ldr	r3, [pc, #184]	; (800cf90 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 800ced8:	681b      	ldr	r3, [r3, #0]
 800ceda:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800cede:	2e00      	cmp	r6, #0
 800cee0:	d04c      	beq.n	800cf7c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800cee2:	6823      	ldr	r3, [r4, #0]
 800cee4:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 800cee8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800ceea:	4620      	mov	r0, r4
 800ceec:	4798      	blx	r3
 800ceee:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800cef0:	683b      	ldr	r3, [r7, #0]
 800cef2:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 800cef6:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 800cefa:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 800cefe:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800cf00:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800cf04:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 800cf08:	785b      	ldrb	r3, [r3, #1]
 800cf0a:	9609      	str	r6, [sp, #36]	; 0x24
 800cf0c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800cf10:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800cf14:	4b1f      	ldr	r3, [pc, #124]	; (800cf94 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 800cf16:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800cf1a:	681b      	ldr	r3, [r3, #0]
 800cf1c:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 800cf20:	910b      	str	r1, [sp, #44]	; 0x2c
 800cf22:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 800cf26:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 800cf2a:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 800cf2e:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 800cf32:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800cf36:	b10a      	cbz	r2, 800cf3c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 800cf38:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 800cf3a:	b906      	cbnz	r6, 800cf3e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 800cf3c:	689e      	ldr	r6, [r3, #8]
 800cf3e:	af07      	add	r7, sp, #28
 800cf40:	4621      	mov	r1, r4
 800cf42:	4638      	mov	r0, r7
 800cf44:	f003 f804 	bl	800ff50 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800cf48:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800cf4a:	6828      	ldr	r0, [r5, #0]
 800cf4c:	f7f7 fdc6 	bl	8004adc <_ZNK8touchgfx5Texts7getTextEt>
 800cf50:	6823      	ldr	r3, [r4, #0]
 800cf52:	4605      	mov	r5, r0
 800cf54:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800cf56:	4620      	mov	r0, r4
 800cf58:	4798      	blx	r3
 800cf5a:	6823      	ldr	r3, [r4, #0]
 800cf5c:	4680      	mov	r8, r0
 800cf5e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800cf62:	4620      	mov	r0, r4
 800cf64:	4798      	blx	r3
 800cf66:	e9cd 8002 	strd	r8, r0, [sp, #8]
 800cf6a:	ab09      	add	r3, sp, #36	; 0x24
 800cf6c:	9300      	str	r3, [sp, #0]
 800cf6e:	9501      	str	r5, [sp, #4]
 800cf70:	ab05      	add	r3, sp, #20
 800cf72:	e897 0006 	ldmia.w	r7, {r1, r2}
 800cf76:	4630      	mov	r0, r6
 800cf78:	f7f7 fd62 	bl	8004a40 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800cf7c:	b00e      	add	sp, #56	; 0x38
 800cf7e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cf82:	bf00      	nop
 800cf84:	20013604 	.word	0x20013604
 800cf88:	2001360c 	.word	0x2001360c
 800cf8c:	20013600 	.word	0x20013600
 800cf90:	20013608 	.word	0x20013608
 800cf94:	200135b0 	.word	0x200135b0

0800cf98 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800cf98:	b570      	push	{r4, r5, r6, lr}
 800cf9a:	6803      	ldr	r3, [r0, #0]
 800cf9c:	4604      	mov	r4, r0
 800cf9e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cfa0:	4615      	mov	r5, r2
 800cfa2:	4798      	blx	r3
 800cfa4:	6823      	ldr	r3, [r4, #0]
 800cfa6:	4629      	mov	r1, r5
 800cfa8:	4620      	mov	r0, r4
 800cfaa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800cfac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cfb0:	4718      	bx	r3
	...

0800cfb4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800cfb4:	b538      	push	{r3, r4, r5, lr}
 800cfb6:	4b0e      	ldr	r3, [pc, #56]	; (800cff0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800cfb8:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800cfba:	881b      	ldrh	r3, [r3, #0]
 800cfbc:	429a      	cmp	r2, r3
 800cfbe:	4604      	mov	r4, r0
 800cfc0:	d214      	bcs.n	800cfec <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800cfc2:	6803      	ldr	r3, [r0, #0]
 800cfc4:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800cfc6:	4798      	blx	r3
 800cfc8:	6823      	ldr	r3, [r4, #0]
 800cfca:	4605      	mov	r5, r0
 800cfcc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800cfce:	4620      	mov	r0, r4
 800cfd0:	4798      	blx	r3
 800cfd2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800cfd6:	b22d      	sxth	r5, r5
 800cfd8:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800cfdc:	4601      	mov	r1, r0
 800cfde:	bf06      	itte	eq
 800cfe0:	4602      	moveq	r2, r0
 800cfe2:	4629      	moveq	r1, r5
 800cfe4:	462a      	movne	r2, r5
 800cfe6:	4620      	mov	r0, r4
 800cfe8:	f7ff ffd6 	bl	800cf98 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800cfec:	bd38      	pop	{r3, r4, r5, pc}
 800cfee:	bf00      	nop
 800cff0:	20013604 	.word	0x20013604

0800cff4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800cff4:	b530      	push	{r4, r5, lr}
 800cff6:	888b      	ldrh	r3, [r1, #4]
 800cff8:	8583      	strh	r3, [r0, #44]	; 0x2c
 800cffa:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800cffe:	b085      	sub	sp, #20
 800d000:	4604      	mov	r4, r0
 800d002:	b923      	cbnz	r3, 800d00e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800d004:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800d008:	b90b      	cbnz	r3, 800d00e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800d00a:	f7ff ffd3 	bl	800cfb4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800d00e:	6823      	ldr	r3, [r4, #0]
 800d010:	466d      	mov	r5, sp
 800d012:	4621      	mov	r1, r4
 800d014:	4628      	mov	r0, r5
 800d016:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800d01a:	4798      	blx	r3
 800d01c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800d020:	343c      	adds	r4, #60	; 0x3c
 800d022:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800d026:	b005      	add	sp, #20
 800d028:	bd30      	pop	{r4, r5, pc}

0800d02a <_ZNK8touchgfx3Box12getSolidRectEv>:
 800d02a:	2300      	movs	r3, #0
 800d02c:	8083      	strh	r3, [r0, #4]
 800d02e:	80c3      	strh	r3, [r0, #6]
 800d030:	8003      	strh	r3, [r0, #0]
 800d032:	8043      	strh	r3, [r0, #2]
 800d034:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800d038:	2bff      	cmp	r3, #255	; 0xff
 800d03a:	bf01      	itttt	eq
 800d03c:	890b      	ldrheq	r3, [r1, #8]
 800d03e:	8083      	strheq	r3, [r0, #4]
 800d040:	894b      	ldrheq	r3, [r1, #10]
 800d042:	80c3      	strheq	r3, [r0, #6]
 800d044:	4770      	bx	lr
	...

0800d048 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800d048:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d04a:	4604      	mov	r4, r0
 800d04c:	6808      	ldr	r0, [r1, #0]
 800d04e:	6849      	ldr	r1, [r1, #4]
 800d050:	466b      	mov	r3, sp
 800d052:	c303      	stmia	r3!, {r0, r1}
 800d054:	6823      	ldr	r3, [r4, #0]
 800d056:	4669      	mov	r1, sp
 800d058:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d05a:	4620      	mov	r0, r4
 800d05c:	4798      	blx	r3
 800d05e:	4b08      	ldr	r3, [pc, #32]	; (800d080 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800d060:	681b      	ldr	r3, [r3, #0]
 800d062:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800d066:	b10a      	cbz	r2, 800d06c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800d068:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800d06a:	b900      	cbnz	r0, 800d06e <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800d06c:	6898      	ldr	r0, [r3, #8]
 800d06e:	6803      	ldr	r3, [r0, #0]
 800d070:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800d072:	6a1d      	ldr	r5, [r3, #32]
 800d074:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800d078:	4669      	mov	r1, sp
 800d07a:	47a8      	blx	r5
 800d07c:	b003      	add	sp, #12
 800d07e:	bd30      	pop	{r4, r5, pc}
 800d080:	200135b0 	.word	0x200135b0

0800d084 <_ZN8touchgfx3BoxD1Ev>:
 800d084:	4770      	bx	lr

0800d086 <_ZN8touchgfx3BoxD0Ev>:
 800d086:	b510      	push	{r4, lr}
 800d088:	212c      	movs	r1, #44	; 0x2c
 800d08a:	4604      	mov	r4, r0
 800d08c:	f010 f974 	bl	801d378 <_ZdlPvj>
 800d090:	4620      	mov	r0, r4
 800d092:	bd10      	pop	{r4, pc}

0800d094 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800d094:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 800d098:	b12a      	cbz	r2, 800d0a6 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800d09a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800d09e:	b112      	cbz	r2, 800d0a6 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800d0a0:	6803      	ldr	r3, [r0, #0]
 800d0a2:	695b      	ldr	r3, [r3, #20]
 800d0a4:	4718      	bx	r3
 800d0a6:	4770      	bx	lr

0800d0a8 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800d0a8:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800d0ac:	4770      	bx	lr

0800d0ae <_ZN8touchgfx6ButtonD1Ev>:
 800d0ae:	4770      	bx	lr

0800d0b0 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800d0b0:	b570      	push	{r4, r5, r6, lr}
 800d0b2:	880b      	ldrh	r3, [r1, #0]
 800d0b4:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800d0b6:	4605      	mov	r5, r0
 800d0b8:	8813      	ldrh	r3, [r2, #0]
 800d0ba:	f825 3f30 	strh.w	r3, [r5, #48]!
 800d0be:	4604      	mov	r4, r0
 800d0c0:	4628      	mov	r0, r5
 800d0c2:	f004 fb61 	bl	8011788 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d0c6:	4606      	mov	r6, r0
 800d0c8:	4628      	mov	r0, r5
 800d0ca:	f004 fb91 	bl	80117f0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d0ce:	6823      	ldr	r3, [r4, #0]
 800d0d0:	4605      	mov	r5, r0
 800d0d2:	4631      	mov	r1, r6
 800d0d4:	4620      	mov	r0, r4
 800d0d6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d0d8:	4798      	blx	r3
 800d0da:	6823      	ldr	r3, [r4, #0]
 800d0dc:	4629      	mov	r1, r5
 800d0de:	4620      	mov	r0, r4
 800d0e0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d0e2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d0e6:	4718      	bx	r3

0800d0e8 <_ZN8touchgfx6ButtonD0Ev>:
 800d0e8:	b510      	push	{r4, lr}
 800d0ea:	2134      	movs	r1, #52	; 0x34
 800d0ec:	4604      	mov	r4, r0
 800d0ee:	f010 f943 	bl	801d378 <_ZdlPvj>
 800d0f2:	4620      	mov	r0, r4
 800d0f4:	bd10      	pop	{r4, pc}

0800d0f6 <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800d0f6:	b510      	push	{r4, lr}
 800d0f8:	4604      	mov	r4, r0
 800d0fa:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800d0fc:	b150      	cbz	r0, 800d114 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800d0fe:	6803      	ldr	r3, [r0, #0]
 800d100:	68db      	ldr	r3, [r3, #12]
 800d102:	4798      	blx	r3
 800d104:	b130      	cbz	r0, 800d114 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800d106:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800d108:	6803      	ldr	r3, [r0, #0]
 800d10a:	4621      	mov	r1, r4
 800d10c:	689b      	ldr	r3, [r3, #8]
 800d10e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d112:	4718      	bx	r3
 800d114:	bd10      	pop	{r4, pc}

0800d116 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800d116:	b510      	push	{r4, lr}
 800d118:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800d11c:	2bff      	cmp	r3, #255	; 0xff
 800d11e:	4604      	mov	r4, r0
 800d120:	d006      	beq.n	800d130 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800d122:	2300      	movs	r3, #0
 800d124:	8003      	strh	r3, [r0, #0]
 800d126:	8043      	strh	r3, [r0, #2]
 800d128:	8083      	strh	r3, [r0, #4]
 800d12a:	80c3      	strh	r3, [r0, #6]
 800d12c:	4620      	mov	r0, r4
 800d12e:	bd10      	pop	{r4, pc}
 800d130:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800d134:	b11b      	cbz	r3, 800d13e <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800d136:	3130      	adds	r1, #48	; 0x30
 800d138:	f004 fb8e 	bl	8011858 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800d13c:	e7f6      	b.n	800d12c <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800d13e:	312e      	adds	r1, #46	; 0x2e
 800d140:	e7fa      	b.n	800d138 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

0800d144 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800d144:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d148:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800d14c:	b08a      	sub	sp, #40	; 0x28
 800d14e:	4604      	mov	r4, r0
 800d150:	4688      	mov	r8, r1
 800d152:	2b00      	cmp	r3, #0
 800d154:	d066      	beq.n	800d224 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800d156:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800d158:	f8ad 3014 	strh.w	r3, [sp, #20]
 800d15c:	a805      	add	r0, sp, #20
 800d15e:	f004 fb13 	bl	8011788 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d162:	4607      	mov	r7, r0
 800d164:	a805      	add	r0, sp, #20
 800d166:	f004 fb43 	bl	80117f0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d16a:	f9b8 6000 	ldrsh.w	r6, [r8]
 800d16e:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 800d172:	4432      	add	r2, r6
 800d174:	b292      	uxth	r2, r2
 800d176:	2300      	movs	r3, #0
 800d178:	fa0f fc82 	sxth.w	ip, r2
 800d17c:	459c      	cmp	ip, r3
 800d17e:	9306      	str	r3, [sp, #24]
 800d180:	dd52      	ble.n	800d228 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800d182:	42b7      	cmp	r7, r6
 800d184:	dd50      	ble.n	800d228 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800d186:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 800d18a:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800d18e:	442b      	add	r3, r5
 800d190:	b29b      	uxth	r3, r3
 800d192:	b219      	sxth	r1, r3
 800d194:	2900      	cmp	r1, #0
 800d196:	dd47      	ble.n	800d228 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800d198:	42a8      	cmp	r0, r5
 800d19a:	dd45      	ble.n	800d228 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800d19c:	4567      	cmp	r7, ip
 800d19e:	bfb8      	it	lt
 800d1a0:	b2ba      	uxthlt	r2, r7
 800d1a2:	4288      	cmp	r0, r1
 800d1a4:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800d1a8:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800d1ac:	bfb8      	it	lt
 800d1ae:	b283      	uxthlt	r3, r0
 800d1b0:	1b92      	subs	r2, r2, r6
 800d1b2:	1b5b      	subs	r3, r3, r5
 800d1b4:	f8ad 201c 	strh.w	r2, [sp, #28]
 800d1b8:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d1bc:	f8ad 6018 	strh.w	r6, [sp, #24]
 800d1c0:	f8ad 501a 	strh.w	r5, [sp, #26]
 800d1c4:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800d1c8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800d1cc:	429a      	cmp	r2, r3
 800d1ce:	d026      	beq.n	800d21e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800d1d0:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800d1d4:	2b00      	cmp	r3, #0
 800d1d6:	dd22      	ble.n	800d21e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800d1d8:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800d1dc:	2b00      	cmp	r3, #0
 800d1de:	dd1e      	ble.n	800d21e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800d1e0:	2300      	movs	r3, #0
 800d1e2:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800d1e6:	6823      	ldr	r3, [r4, #0]
 800d1e8:	a908      	add	r1, sp, #32
 800d1ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d1ec:	4620      	mov	r0, r4
 800d1ee:	4798      	blx	r3
 800d1f0:	4b0f      	ldr	r3, [pc, #60]	; (800d230 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 800d1f2:	681b      	ldr	r3, [r3, #0]
 800d1f4:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800d1f8:	b10a      	cbz	r2, 800d1fe <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 800d1fa:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800d1fc:	b900      	cbnz	r0, 800d200 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 800d1fe:	6898      	ldr	r0, [r3, #8]
 800d200:	6801      	ldr	r1, [r0, #0]
 800d202:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800d206:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800d20a:	2501      	movs	r5, #1
 800d20c:	9502      	str	r5, [sp, #8]
 800d20e:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800d212:	9401      	str	r4, [sp, #4]
 800d214:	ac06      	add	r4, sp, #24
 800d216:	9400      	str	r4, [sp, #0]
 800d218:	688c      	ldr	r4, [r1, #8]
 800d21a:	a905      	add	r1, sp, #20
 800d21c:	47a0      	blx	r4
 800d21e:	b00a      	add	sp, #40	; 0x28
 800d220:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d224:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800d226:	e797      	b.n	800d158 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800d228:	2300      	movs	r3, #0
 800d22a:	9307      	str	r3, [sp, #28]
 800d22c:	e7ca      	b.n	800d1c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 800d22e:	bf00      	nop
 800d230:	200135b0 	.word	0x200135b0

0800d234 <_ZNK8touchgfx6Button17invalidateContentEv>:
 800d234:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 800d238:	b12a      	cbz	r2, 800d246 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800d23a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800d23e:	b112      	cbz	r2, 800d246 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800d240:	6803      	ldr	r3, [r0, #0]
 800d242:	695b      	ldr	r3, [r3, #20]
 800d244:	4718      	bx	r3
 800d246:	4770      	bx	lr

0800d248 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 800d248:	4770      	bx	lr

0800d24a <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800d24a:	b510      	push	{r4, lr}
 800d24c:	2134      	movs	r1, #52	; 0x34
 800d24e:	4604      	mov	r4, r0
 800d250:	f010 f892 	bl	801d378 <_ZdlPvj>
 800d254:	4620      	mov	r0, r4
 800d256:	bd10      	pop	{r4, pc}

0800d258 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 800d258:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d25c:	4604      	mov	r4, r0
 800d25e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800d260:	8962      	ldrh	r2, [r4, #10]
 800d262:	b218      	sxth	r0, r3
 800d264:	460e      	mov	r6, r1
 800d266:	005b      	lsls	r3, r3, #1
 800d268:	8921      	ldrh	r1, [r4, #8]
 800d26a:	b29b      	uxth	r3, r3
 800d26c:	1ac9      	subs	r1, r1, r3
 800d26e:	b08e      	sub	sp, #56	; 0x38
 800d270:	b209      	sxth	r1, r1
 800d272:	1ad3      	subs	r3, r2, r3
 800d274:	b21b      	sxth	r3, r3
 800d276:	2900      	cmp	r1, #0
 800d278:	f8ad 0000 	strh.w	r0, [sp]
 800d27c:	f8ad 0002 	strh.w	r0, [sp, #2]
 800d280:	f8ad 1004 	strh.w	r1, [sp, #4]
 800d284:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d288:	dd5e      	ble.n	800d348 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800d28a:	2b00      	cmp	r3, #0
 800d28c:	dd5c      	ble.n	800d348 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800d28e:	6830      	ldr	r0, [r6, #0]
 800d290:	6871      	ldr	r1, [r6, #4]
 800d292:	ab02      	add	r3, sp, #8
 800d294:	c303      	stmia	r3!, {r0, r1}
 800d296:	4669      	mov	r1, sp
 800d298:	a802      	add	r0, sp, #8
 800d29a:	f7fd ff3b 	bl	800b114 <_ZN8touchgfx4RectaNERKS0_>
 800d29e:	4620      	mov	r0, r4
 800d2a0:	a902      	add	r1, sp, #8
 800d2a2:	f7ff fed1 	bl	800d048 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 800d2a6:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 800d2a8:	2800      	cmp	r0, #0
 800d2aa:	d05f      	beq.n	800d36c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800d2ac:	8963      	ldrh	r3, [r4, #10]
 800d2ae:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800d2b2:	f8ad 101c 	strh.w	r1, [sp, #28]
 800d2b6:	1a1f      	subs	r7, r3, r0
 800d2b8:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 800d2bc:	b202      	sxth	r2, r0
 800d2be:	2500      	movs	r5, #0
 800d2c0:	b21b      	sxth	r3, r3
 800d2c2:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800d2c6:	1a09      	subs	r1, r1, r0
 800d2c8:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800d2cc:	9506      	str	r5, [sp, #24]
 800d2ce:	f8ad 201e 	strh.w	r2, [sp, #30]
 800d2d2:	f8ad 5020 	strh.w	r5, [sp, #32]
 800d2d6:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800d2da:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 800d2de:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 800d2e2:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800d2e6:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800d2ea:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 800d2ee:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 800d2f2:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800d2f6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800d2fa:	af04      	add	r7, sp, #16
 800d2fc:	ab06      	add	r3, sp, #24
 800d2fe:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800d302:	e893 0003 	ldmia.w	r3, {r0, r1}
 800d306:	e887 0003 	stmia.w	r7, {r0, r1}
 800d30a:	4631      	mov	r1, r6
 800d30c:	4638      	mov	r0, r7
 800d30e:	f7fd ff01 	bl	800b114 <_ZN8touchgfx4RectaNERKS0_>
 800d312:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800d316:	2b00      	cmp	r3, #0
 800d318:	dd12      	ble.n	800d340 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800d31a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800d31e:	2b00      	cmp	r3, #0
 800d320:	dd0e      	ble.n	800d340 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800d322:	6823      	ldr	r3, [r4, #0]
 800d324:	4639      	mov	r1, r7
 800d326:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d328:	4620      	mov	r0, r4
 800d32a:	4798      	blx	r3
 800d32c:	f7f5 fbd2 	bl	8002ad4 <_ZN8touchgfx3HAL3lcdEv>
 800d330:	6803      	ldr	r3, [r0, #0]
 800d332:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d334:	f8d3 8020 	ldr.w	r8, [r3, #32]
 800d338:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800d33c:	4639      	mov	r1, r7
 800d33e:	47c0      	blx	r8
 800d340:	3501      	adds	r5, #1
 800d342:	2d04      	cmp	r5, #4
 800d344:	d1da      	bne.n	800d2fc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 800d346:	e011      	b.n	800d36c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800d348:	6830      	ldr	r0, [r6, #0]
 800d34a:	6871      	ldr	r1, [r6, #4]
 800d34c:	ab06      	add	r3, sp, #24
 800d34e:	c303      	stmia	r3!, {r0, r1}
 800d350:	6823      	ldr	r3, [r4, #0]
 800d352:	a906      	add	r1, sp, #24
 800d354:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d356:	4620      	mov	r0, r4
 800d358:	4798      	blx	r3
 800d35a:	f7f5 fbbb 	bl	8002ad4 <_ZN8touchgfx3HAL3lcdEv>
 800d35e:	6803      	ldr	r3, [r0, #0]
 800d360:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d362:	6a1d      	ldr	r5, [r3, #32]
 800d364:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800d368:	a906      	add	r1, sp, #24
 800d36a:	47a8      	blx	r5
 800d36c:	b00e      	add	sp, #56	; 0x38
 800d36e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800d372 <_ZN8touchgfx5ImageD1Ev>:
 800d372:	4770      	bx	lr

0800d374 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800d374:	b570      	push	{r4, r5, r6, lr}
 800d376:	880b      	ldrh	r3, [r1, #0]
 800d378:	84c3      	strh	r3, [r0, #38]	; 0x26
 800d37a:	4604      	mov	r4, r0
 800d37c:	4608      	mov	r0, r1
 800d37e:	460d      	mov	r5, r1
 800d380:	f004 fa02 	bl	8011788 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d384:	4606      	mov	r6, r0
 800d386:	4628      	mov	r0, r5
 800d388:	f004 fa32 	bl	80117f0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d38c:	6823      	ldr	r3, [r4, #0]
 800d38e:	4605      	mov	r5, r0
 800d390:	4631      	mov	r1, r6
 800d392:	4620      	mov	r0, r4
 800d394:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d396:	4798      	blx	r3
 800d398:	6823      	ldr	r3, [r4, #0]
 800d39a:	4629      	mov	r1, r5
 800d39c:	4620      	mov	r0, r4
 800d39e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d3a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d3a4:	4718      	bx	r3

0800d3a6 <_ZN8touchgfx5ImageD0Ev>:
 800d3a6:	b510      	push	{r4, lr}
 800d3a8:	212c      	movs	r1, #44	; 0x2c
 800d3aa:	4604      	mov	r4, r0
 800d3ac:	f00f ffe4 	bl	801d378 <_ZdlPvj>
 800d3b0:	4620      	mov	r0, r4
 800d3b2:	bd10      	pop	{r4, pc}

0800d3b4 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800d3b4:	b510      	push	{r4, lr}
 800d3b6:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800d3ba:	2bff      	cmp	r3, #255	; 0xff
 800d3bc:	4604      	mov	r4, r0
 800d3be:	d006      	beq.n	800d3ce <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800d3c0:	2300      	movs	r3, #0
 800d3c2:	8003      	strh	r3, [r0, #0]
 800d3c4:	8043      	strh	r3, [r0, #2]
 800d3c6:	8083      	strh	r3, [r0, #4]
 800d3c8:	80c3      	strh	r3, [r0, #6]
 800d3ca:	4620      	mov	r0, r4
 800d3cc:	bd10      	pop	{r4, pc}
 800d3ce:	3126      	adds	r1, #38	; 0x26
 800d3d0:	f004 fa42 	bl	8011858 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800d3d4:	e7f9      	b.n	800d3ca <_ZNK8touchgfx5Image12getSolidRectEv+0x16>
	...

0800d3d8 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800d3d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d3dc:	4604      	mov	r4, r0
 800d3de:	b088      	sub	sp, #32
 800d3e0:	f854 3b26 	ldr.w	r3, [r4], #38
 800d3e4:	2500      	movs	r5, #0
 800d3e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d3e8:	460f      	mov	r7, r1
 800d3ea:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800d3ee:	a904      	add	r1, sp, #16
 800d3f0:	4606      	mov	r6, r0
 800d3f2:	4798      	blx	r3
 800d3f4:	4620      	mov	r0, r4
 800d3f6:	f004 f9c7 	bl	8011788 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d3fa:	4680      	mov	r8, r0
 800d3fc:	4620      	mov	r0, r4
 800d3fe:	f004 f9f7 	bl	80117f0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d402:	9506      	str	r5, [sp, #24]
 800d404:	ad06      	add	r5, sp, #24
 800d406:	f8ad 001e 	strh.w	r0, [sp, #30]
 800d40a:	4639      	mov	r1, r7
 800d40c:	4628      	mov	r0, r5
 800d40e:	f8ad 801c 	strh.w	r8, [sp, #28]
 800d412:	f7fd fe7f 	bl	800b114 <_ZN8touchgfx4RectaNERKS0_>
 800d416:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800d41a:	2b00      	cmp	r3, #0
 800d41c:	dd19      	ble.n	800d452 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800d41e:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800d422:	2b00      	cmp	r3, #0
 800d424:	dd15      	ble.n	800d452 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800d426:	4b0c      	ldr	r3, [pc, #48]	; (800d458 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800d428:	681b      	ldr	r3, [r3, #0]
 800d42a:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800d42e:	b10a      	cbz	r2, 800d434 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800d430:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800d432:	b900      	cbnz	r0, 800d436 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800d434:	6898      	ldr	r0, [r3, #8]
 800d436:	6801      	ldr	r1, [r0, #0]
 800d438:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800d43c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800d440:	2701      	movs	r7, #1
 800d442:	9702      	str	r7, [sp, #8]
 800d444:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800d448:	e9cd 5600 	strd	r5, r6, [sp]
 800d44c:	688d      	ldr	r5, [r1, #8]
 800d44e:	4621      	mov	r1, r4
 800d450:	47a8      	blx	r5
 800d452:	b008      	add	sp, #32
 800d454:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d458:	200135b0 	.word	0x200135b0

0800d45c <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800d45c:	b510      	push	{r4, lr}
 800d45e:	6803      	ldr	r3, [r0, #0]
 800d460:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d462:	460c      	mov	r4, r1
 800d464:	4798      	blx	r3
 800d466:	1b03      	subs	r3, r0, r4
 800d468:	4258      	negs	r0, r3
 800d46a:	4158      	adcs	r0, r3
 800d46c:	bd10      	pop	{r4, pc}
	...

0800d470 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800d470:	4b01      	ldr	r3, [pc, #4]	; (800d478 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800d472:	6019      	str	r1, [r3, #0]
 800d474:	4770      	bx	lr
 800d476:	bf00      	nop
 800d478:	200135b8 	.word	0x200135b8

0800d47c <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800d47c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d480:	4696      	mov	lr, r2
 800d482:	4605      	mov	r5, r0
 800d484:	4614      	mov	r4, r2
 800d486:	460e      	mov	r6, r1
 800d488:	461f      	mov	r7, r3
 800d48a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800d48e:	b097      	sub	sp, #92	; 0x5c
 800d490:	f10d 0c1c 	add.w	ip, sp, #28
 800d494:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800d498:	f8de 3000 	ldr.w	r3, [lr]
 800d49c:	f8cc 3000 	str.w	r3, [ip]
 800d4a0:	f104 0e14 	add.w	lr, r4, #20
 800d4a4:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800d4a8:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800d4ac:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800d4b0:	f8de 3000 	ldr.w	r3, [lr]
 800d4b4:	f8cc 3000 	str.w	r3, [ip]
 800d4b8:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800d4bc:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800d4c0:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800d4c4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800d4c8:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800d4cc:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800d4d0:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800d4d4:	f8de 3000 	ldr.w	r3, [lr]
 800d4d8:	f8cc 3000 	str.w	r3, [ip]
 800d4dc:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800d4de:	682b      	ldr	r3, [r5, #0]
 800d4e0:	9201      	str	r2, [sp, #4]
 800d4e2:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800d4e6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800d4e8:	9200      	str	r2, [sp, #0]
 800d4ea:	f8cd 8008 	str.w	r8, [sp, #8]
 800d4ee:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 800d4f2:	aa07      	add	r2, sp, #28
 800d4f4:	463b      	mov	r3, r7
 800d4f6:	4631      	mov	r1, r6
 800d4f8:	4628      	mov	r0, r5
 800d4fa:	47d8      	blx	fp
 800d4fc:	46a6      	mov	lr, r4
 800d4fe:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800d502:	f10d 0c1c 	add.w	ip, sp, #28
 800d506:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800d50a:	f8de 3000 	ldr.w	r3, [lr]
 800d50e:	f8cc 3000 	str.w	r3, [ip]
 800d512:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800d516:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800d51a:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800d51e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800d522:	343c      	adds	r4, #60	; 0x3c
 800d524:	f8de 3000 	ldr.w	r3, [lr]
 800d528:	f8cc 3000 	str.w	r3, [ip]
 800d52c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800d52e:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800d532:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800d536:	6823      	ldr	r3, [r4, #0]
 800d538:	f8cc 3000 	str.w	r3, [ip]
 800d53c:	682b      	ldr	r3, [r5, #0]
 800d53e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800d542:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800d544:	9201      	str	r2, [sp, #4]
 800d546:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800d548:	9200      	str	r2, [sp, #0]
 800d54a:	f8cd 8008 	str.w	r8, [sp, #8]
 800d54e:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 800d550:	aa07      	add	r2, sp, #28
 800d552:	463b      	mov	r3, r7
 800d554:	4631      	mov	r1, r6
 800d556:	4628      	mov	r0, r5
 800d558:	47a0      	blx	r4
 800d55a:	b017      	add	sp, #92	; 0x5c
 800d55c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800d560 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800d560:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d564:	b08d      	sub	sp, #52	; 0x34
 800d566:	4688      	mov	r8, r1
 800d568:	9916      	ldr	r1, [sp, #88]	; 0x58
 800d56a:	f8d3 c000 	ldr.w	ip, [r3]
 800d56e:	680f      	ldr	r7, [r1, #0]
 800d570:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800d574:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800d578:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800d57c:	edd3 6a07 	vldr	s13, [r3, #28]
 800d580:	9918      	ldr	r1, [sp, #96]	; 0x60
 800d582:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800d586:	f9b1 9000 	ldrsh.w	r9, [r1]
 800d58a:	f9ba 1000 	ldrsh.w	r1, [sl]
 800d58e:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800d592:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800d596:	eba7 070c 	sub.w	r7, r7, ip
 800d59a:	42bc      	cmp	r4, r7
 800d59c:	bfa8      	it	ge
 800d59e:	463c      	movge	r4, r7
 800d5a0:	ee07 4a90 	vmov	s15, r4
 800d5a4:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800d5a8:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800d5ac:	ee25 4a04 	vmul.f32	s8, s10, s8
 800d5b0:	ee65 4a24 	vmul.f32	s9, s10, s9
 800d5b4:	ee25 5a27 	vmul.f32	s10, s10, s15
 800d5b8:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800d5bc:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800d5c0:	eb09 0e0c 	add.w	lr, r9, ip
 800d5c4:	4571      	cmp	r1, lr
 800d5c6:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800d5ca:	ee32 1a05 	vadd.f32	s2, s4, s10
 800d5ce:	ee36 0a84 	vadd.f32	s0, s13, s8
 800d5d2:	ee61 1a87 	vmul.f32	s3, s3, s14
 800d5d6:	ee22 2a07 	vmul.f32	s4, s4, s14
 800d5da:	f340 808d 	ble.w	800d6f8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800d5de:	eba1 060e 	sub.w	r6, r1, lr
 800d5e2:	fb96 f5f4 	sdiv	r5, r6, r4
 800d5e6:	ee07 5a10 	vmov	s14, r5
 800d5ea:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800d5ee:	2d00      	cmp	r5, #0
 800d5f0:	fb04 6615 	mls	r6, r4, r5, r6
 800d5f4:	eea7 0a04 	vfma.f32	s0, s14, s8
 800d5f8:	eee7 0a24 	vfma.f32	s1, s14, s9
 800d5fc:	eea7 1a05 	vfma.f32	s2, s14, s10
 800d600:	dd13      	ble.n	800d62a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800d602:	ee70 6a44 	vsub.f32	s13, s0, s8
 800d606:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800d60a:	eef5 6a40 	vcmp.f32	s13, #0.0
 800d60e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d612:	bf18      	it	ne
 800d614:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800d618:	ee31 2a45 	vsub.f32	s4, s2, s10
 800d61c:	bf08      	it	eq
 800d61e:	eeb0 7a67 	vmoveq.f32	s14, s15
 800d622:	ee61 1a87 	vmul.f32	s3, s3, s14
 800d626:	ee22 2a07 	vmul.f32	s4, s4, s14
 800d62a:	fb05 f204 	mul.w	r2, r5, r4
 800d62e:	1abf      	subs	r7, r7, r2
 800d630:	4494      	add	ip, r2
 800d632:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800d636:	4411      	add	r1, r2
 800d638:	eb09 020c 	add.w	r2, r9, ip
 800d63c:	443a      	add	r2, r7
 800d63e:	b209      	sxth	r1, r1
 800d640:	428a      	cmp	r2, r1
 800d642:	bfc4      	itt	gt
 800d644:	eba1 0209 	subgt.w	r2, r1, r9
 800d648:	eba2 070c 	subgt.w	r7, r2, ip
 800d64c:	2f00      	cmp	r7, #0
 800d64e:	dd50      	ble.n	800d6f2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800d650:	fb97 f1f4 	sdiv	r1, r7, r4
 800d654:	fb04 7211 	mls	r2, r4, r1, r7
 800d658:	b90a      	cbnz	r2, 800d65e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800d65a:	3901      	subs	r1, #1
 800d65c:	4622      	mov	r2, r4
 800d65e:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800d662:	6840      	ldr	r0, [r0, #4]
 800d664:	900b      	str	r0, [sp, #44]	; 0x2c
 800d666:	f8d0 a000 	ldr.w	sl, [r0]
 800d66a:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800d66c:	9008      	str	r0, [sp, #32]
 800d66e:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800d672:	9818      	ldr	r0, [sp, #96]	; 0x60
 800d674:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800d678:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800d67c:	695b      	ldr	r3, [r3, #20]
 800d67e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800d680:	445b      	add	r3, fp
 800d682:	eef0 6a42 	vmov.f32	s13, s4
 800d686:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800d68a:	ee21 3a23 	vmul.f32	s6, s2, s7
 800d68e:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800d692:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800d696:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800d69a:	9307      	str	r3, [sp, #28]
 800d69c:	ee17 7a90 	vmov	r7, s15
 800d6a0:	ee73 7a42 	vsub.f32	s15, s6, s4
 800d6a4:	eeb0 7a61 	vmov.f32	s14, s3
 800d6a8:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800d6ac:	ee16 3a90 	vmov	r3, s13
 800d6b0:	fb97 f7f4 	sdiv	r7, r7, r4
 800d6b4:	ee17 ca90 	vmov	ip, s15
 800d6b8:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800d6bc:	fb9c fcf4 	sdiv	ip, ip, r4
 800d6c0:	fb0c 3306 	mla	r3, ip, r6, r3
 800d6c4:	9302      	str	r3, [sp, #8]
 800d6c6:	ee17 3a10 	vmov	r3, s14
 800d6ca:	44b6      	add	lr, r6
 800d6cc:	fb04 e505 	mla	r5, r4, r5, lr
 800d6d0:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800d6d4:	fb07 3706 	mla	r7, r7, r6, r3
 800d6d8:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800d6dc:	e9cd 4700 	strd	r4, r7, [sp]
 800d6e0:	2900      	cmp	r1, #0
 800d6e2:	bfcc      	ite	gt
 800d6e4:	46a1      	movgt	r9, r4
 800d6e6:	4691      	movle	r9, r2
 800d6e8:	eba9 0306 	sub.w	r3, r9, r6
 800d6ec:	f8da 4008 	ldr.w	r4, [sl, #8]
 800d6f0:	47a0      	blx	r4
 800d6f2:	b00d      	add	sp, #52	; 0x34
 800d6f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d6f8:	2500      	movs	r5, #0
 800d6fa:	462e      	mov	r6, r5
 800d6fc:	e799      	b.n	800d632 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800d700 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800d700:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d704:	b0db      	sub	sp, #364	; 0x16c
 800d706:	461d      	mov	r5, r3
 800d708:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800d70c:	930a      	str	r3, [sp, #40]	; 0x28
 800d70e:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800d712:	930b      	str	r3, [sp, #44]	; 0x2c
 800d714:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800d718:	9310      	str	r3, [sp, #64]	; 0x40
 800d71a:	6803      	ldr	r3, [r0, #0]
 800d71c:	910f      	str	r1, [sp, #60]	; 0x3c
 800d71e:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 800d720:	9009      	str	r0, [sp, #36]	; 0x24
 800d722:	4614      	mov	r4, r2
 800d724:	4629      	mov	r1, r5
 800d726:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800d72a:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800d72e:	47b8      	blx	r7
 800d730:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d732:	6058      	str	r0, [r3, #4]
 800d734:	2800      	cmp	r0, #0
 800d736:	f000 83a1 	beq.w	800de7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800d73a:	682b      	ldr	r3, [r5, #0]
 800d73c:	9314      	str	r3, [sp, #80]	; 0x50
 800d73e:	686b      	ldr	r3, [r5, #4]
 800d740:	9315      	str	r3, [sp, #84]	; 0x54
 800d742:	4bc4      	ldr	r3, [pc, #784]	; (800da54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800d744:	ed94 7a02 	vldr	s14, [r4, #8]
 800d748:	7819      	ldrb	r1, [r3, #0]
 800d74a:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800d74e:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800d752:	2900      	cmp	r1, #0
 800d754:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800d758:	bf16      	itet	ne
 800d75a:	4619      	movne	r1, r3
 800d75c:	4611      	moveq	r1, r2
 800d75e:	4613      	movne	r3, r2
 800d760:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d764:	9116      	str	r1, [sp, #88]	; 0x58
 800d766:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800d76a:	f240 8387 	bls.w	800de7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800d76e:	ed94 7a07 	vldr	s14, [r4, #28]
 800d772:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800d776:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d77a:	f240 837f 	bls.w	800de7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800d77e:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800d782:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800d786:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d78a:	f240 8377 	bls.w	800de7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800d78e:	6822      	ldr	r2, [r4, #0]
 800d790:	4bb1      	ldr	r3, [pc, #708]	; (800da58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800d792:	429a      	cmp	r2, r3
 800d794:	f2c0 8372 	blt.w	800de7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800d798:	49b0      	ldr	r1, [pc, #704]	; (800da5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800d79a:	6963      	ldr	r3, [r4, #20]
 800d79c:	428a      	cmp	r2, r1
 800d79e:	f300 836d 	bgt.w	800de7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800d7a2:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800d7a6:	48ae      	ldr	r0, [pc, #696]	; (800da60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800d7a8:	33ff      	adds	r3, #255	; 0xff
 800d7aa:	4283      	cmp	r3, r0
 800d7ac:	f200 8366 	bhi.w	800de7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800d7b0:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800d7b2:	4dac      	ldr	r5, [pc, #688]	; (800da64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800d7b4:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800d7b8:	33ff      	adds	r3, #255	; 0xff
 800d7ba:	42ab      	cmp	r3, r5
 800d7bc:	f200 835e 	bhi.w	800de7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800d7c0:	6862      	ldr	r2, [r4, #4]
 800d7c2:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800d7c6:	33ff      	adds	r3, #255	; 0xff
 800d7c8:	4283      	cmp	r3, r0
 800d7ca:	f200 8357 	bhi.w	800de7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800d7ce:	69a1      	ldr	r1, [r4, #24]
 800d7d0:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800d7d4:	33ff      	adds	r3, #255	; 0xff
 800d7d6:	4283      	cmp	r3, r0
 800d7d8:	f200 8350 	bhi.w	800de7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800d7dc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800d7de:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800d7e2:	30ff      	adds	r0, #255	; 0xff
 800d7e4:	42a8      	cmp	r0, r5
 800d7e6:	f200 8349 	bhi.w	800de7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800d7ea:	428a      	cmp	r2, r1
 800d7ec:	f280 8110 	bge.w	800da10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800d7f0:	429a      	cmp	r2, r3
 800d7f2:	f300 8119 	bgt.w	800da28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800d7f6:	4299      	cmp	r1, r3
 800d7f8:	f280 811d 	bge.w	800da36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800d7fc:	2502      	movs	r5, #2
 800d7fe:	2701      	movs	r7, #1
 800d800:	46a9      	mov	r9, r5
 800d802:	46b8      	mov	r8, r7
 800d804:	f04f 0a00 	mov.w	sl, #0
 800d808:	4621      	mov	r1, r4
 800d80a:	a849      	add	r0, sp, #292	; 0x124
 800d80c:	f003 fcf4 	bl	80111f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800d810:	4622      	mov	r2, r4
 800d812:	4653      	mov	r3, sl
 800d814:	a949      	add	r1, sp, #292	; 0x124
 800d816:	f8cd 9000 	str.w	r9, [sp]
 800d81a:	a819      	add	r0, sp, #100	; 0x64
 800d81c:	f003 fe1c 	bl	8011458 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800d820:	4622      	mov	r2, r4
 800d822:	4653      	mov	r3, sl
 800d824:	a949      	add	r1, sp, #292	; 0x124
 800d826:	f8cd 8000 	str.w	r8, [sp]
 800d82a:	a829      	add	r0, sp, #164	; 0xa4
 800d82c:	f003 fe14 	bl	8011458 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800d830:	4643      	mov	r3, r8
 800d832:	4622      	mov	r2, r4
 800d834:	a949      	add	r1, sp, #292	; 0x124
 800d836:	f8cd 9000 	str.w	r9, [sp]
 800d83a:	a839      	add	r0, sp, #228	; 0xe4
 800d83c:	f003 fe0c 	bl	8011458 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800d840:	42af      	cmp	r7, r5
 800d842:	bfb5      	itete	lt
 800d844:	2300      	movlt	r3, #0
 800d846:	2301      	movge	r3, #1
 800d848:	930e      	strlt	r3, [sp, #56]	; 0x38
 800d84a:	930e      	strge	r3, [sp, #56]	; 0x38
 800d84c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800d84e:	e893 0003 	ldmia.w	r3, {r0, r1}
 800d852:	af12      	add	r7, sp, #72	; 0x48
 800d854:	bfb9      	ittee	lt
 800d856:	ad29      	addlt	r5, sp, #164	; 0xa4
 800d858:	ac19      	addlt	r4, sp, #100	; 0x64
 800d85a:	ad19      	addge	r5, sp, #100	; 0x64
 800d85c:	ac29      	addge	r4, sp, #164	; 0xa4
 800d85e:	e887 0003 	stmia.w	r7, {r0, r1}
 800d862:	b928      	cbnz	r0, 800d870 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800d864:	4b80      	ldr	r3, [pc, #512]	; (800da68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800d866:	6818      	ldr	r0, [r3, #0]
 800d868:	6803      	ldr	r3, [r0, #0]
 800d86a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d86c:	4798      	blx	r3
 800d86e:	6038      	str	r0, [r7, #0]
 800d870:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800d872:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800d876:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800d87a:	930c      	str	r3, [sp, #48]	; 0x30
 800d87c:	990c      	ldr	r1, [sp, #48]	; 0x30
 800d87e:	6963      	ldr	r3, [r4, #20]
 800d880:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800d882:	440b      	add	r3, r1
 800d884:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800d888:	4408      	add	r0, r1
 800d88a:	b200      	sxth	r0, r0
 800d88c:	4283      	cmp	r3, r0
 800d88e:	900d      	str	r0, [sp, #52]	; 0x34
 800d890:	f280 80dd 	bge.w	800da4e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800d894:	428b      	cmp	r3, r1
 800d896:	da08      	bge.n	800d8aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800d898:	2a00      	cmp	r2, #0
 800d89a:	dd06      	ble.n	800d8aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800d89c:	1acb      	subs	r3, r1, r3
 800d89e:	429a      	cmp	r2, r3
 800d8a0:	f2c0 80e4 	blt.w	800da6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800d8a4:	2b00      	cmp	r3, #0
 800d8a6:	f300 80e2 	bgt.w	800da6e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800d8aa:	6967      	ldr	r7, [r4, #20]
 800d8ac:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800d8ae:	443b      	add	r3, r7
 800d8b0:	461f      	mov	r7, r3
 800d8b2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d8b4:	1bdf      	subs	r7, r3, r7
 800d8b6:	4297      	cmp	r7, r2
 800d8b8:	bfa8      	it	ge
 800d8ba:	4617      	movge	r7, r2
 800d8bc:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800d8c0:	2f00      	cmp	r7, #0
 800d8c2:	f340 8166 	ble.w	800db92 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800d8c6:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800d8c8:	6829      	ldr	r1, [r5, #0]
 800d8ca:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d8ce:	f9bb 3000 	ldrsh.w	r3, [fp]
 800d8d2:	6820      	ldr	r0, [r4, #0]
 800d8d4:	4411      	add	r1, r2
 800d8d6:	4299      	cmp	r1, r3
 800d8d8:	dd1a      	ble.n	800d910 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800d8da:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800d8de:	440b      	add	r3, r1
 800d8e0:	4402      	add	r2, r0
 800d8e2:	b21b      	sxth	r3, r3
 800d8e4:	429a      	cmp	r2, r3
 800d8e6:	dc13      	bgt.n	800d910 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800d8e8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d8ea:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800d8ec:	681b      	ldr	r3, [r3, #0]
 800d8ee:	9206      	str	r2, [sp, #24]
 800d8f0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d8f2:	9205      	str	r2, [sp, #20]
 800d8f4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800d8f6:	9500      	str	r5, [sp, #0]
 800d8f8:	e9cd b203 	strd	fp, r2, [sp, #12]
 800d8fc:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800d8fe:	9809      	ldr	r0, [sp, #36]	; 0x24
 800d900:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800d904:	a912      	add	r1, sp, #72	; 0x48
 800d906:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800d90a:	aa49      	add	r2, sp, #292	; 0x124
 800d90c:	4623      	mov	r3, r4
 800d90e:	47c8      	blx	r9
 800d910:	e9d4 2300 	ldrd	r2, r3, [r4]
 800d914:	441a      	add	r2, r3
 800d916:	6963      	ldr	r3, [r4, #20]
 800d918:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800d91c:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800d920:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800d924:	68a1      	ldr	r1, [r4, #8]
 800d926:	ed94 6a08 	vldr	s12, [r4, #32]
 800d92a:	6022      	str	r2, [r4, #0]
 800d92c:	3301      	adds	r3, #1
 800d92e:	6163      	str	r3, [r4, #20]
 800d930:	69a3      	ldr	r3, [r4, #24]
 800d932:	ee37 7a27 	vadd.f32	s14, s14, s15
 800d936:	3b01      	subs	r3, #1
 800d938:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800d93c:	61a3      	str	r3, [r4, #24]
 800d93e:	6923      	ldr	r3, [r4, #16]
 800d940:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800d944:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d948:	edd4 6a07 	vldr	s13, [r4, #28]
 800d94c:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800d950:	440b      	add	r3, r1
 800d952:	68e1      	ldr	r1, [r4, #12]
 800d954:	6123      	str	r3, [r4, #16]
 800d956:	ee76 6a86 	vadd.f32	s13, s13, s12
 800d95a:	428b      	cmp	r3, r1
 800d95c:	edc4 6a07 	vstr	s13, [r4, #28]
 800d960:	db15      	blt.n	800d98e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800d962:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800d966:	ee76 6a26 	vadd.f32	s13, s12, s13
 800d96a:	3201      	adds	r2, #1
 800d96c:	edc4 6a07 	vstr	s13, [r4, #28]
 800d970:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800d974:	6022      	str	r2, [r4, #0]
 800d976:	ee36 7a87 	vadd.f32	s14, s13, s14
 800d97a:	1a5b      	subs	r3, r3, r1
 800d97c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800d980:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800d984:	6123      	str	r3, [r4, #16]
 800d986:	ee77 7a27 	vadd.f32	s15, s14, s15
 800d98a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800d98e:	e9d5 2300 	ldrd	r2, r3, [r5]
 800d992:	441a      	add	r2, r3
 800d994:	696b      	ldr	r3, [r5, #20]
 800d996:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800d99a:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800d99e:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800d9a2:	68a9      	ldr	r1, [r5, #8]
 800d9a4:	ed95 6a08 	vldr	s12, [r5, #32]
 800d9a8:	602a      	str	r2, [r5, #0]
 800d9aa:	3301      	adds	r3, #1
 800d9ac:	616b      	str	r3, [r5, #20]
 800d9ae:	69ab      	ldr	r3, [r5, #24]
 800d9b0:	ee37 7a27 	vadd.f32	s14, s14, s15
 800d9b4:	3b01      	subs	r3, #1
 800d9b6:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800d9ba:	61ab      	str	r3, [r5, #24]
 800d9bc:	692b      	ldr	r3, [r5, #16]
 800d9be:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800d9c2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d9c6:	edd5 6a07 	vldr	s13, [r5, #28]
 800d9ca:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800d9ce:	440b      	add	r3, r1
 800d9d0:	68e9      	ldr	r1, [r5, #12]
 800d9d2:	612b      	str	r3, [r5, #16]
 800d9d4:	ee76 6a86 	vadd.f32	s13, s13, s12
 800d9d8:	428b      	cmp	r3, r1
 800d9da:	edc5 6a07 	vstr	s13, [r5, #28]
 800d9de:	db15      	blt.n	800da0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800d9e0:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800d9e4:	ee76 6a26 	vadd.f32	s13, s12, s13
 800d9e8:	3201      	adds	r2, #1
 800d9ea:	edc5 6a07 	vstr	s13, [r5, #28]
 800d9ee:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800d9f2:	602a      	str	r2, [r5, #0]
 800d9f4:	ee36 7a87 	vadd.f32	s14, s13, s14
 800d9f8:	1a5b      	subs	r3, r3, r1
 800d9fa:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800d9fe:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800da02:	612b      	str	r3, [r5, #16]
 800da04:	ee77 7a27 	vadd.f32	s15, s14, s15
 800da08:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800da0c:	3f01      	subs	r7, #1
 800da0e:	e757      	b.n	800d8c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800da10:	4299      	cmp	r1, r3
 800da12:	dc13      	bgt.n	800da3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800da14:	429a      	cmp	r2, r3
 800da16:	da14      	bge.n	800da42 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800da18:	2502      	movs	r5, #2
 800da1a:	2703      	movs	r7, #3
 800da1c:	46a9      	mov	r9, r5
 800da1e:	f04f 0800 	mov.w	r8, #0
 800da22:	f04f 0a01 	mov.w	sl, #1
 800da26:	e6ef      	b.n	800d808 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800da28:	2501      	movs	r5, #1
 800da2a:	2700      	movs	r7, #0
 800da2c:	46a9      	mov	r9, r5
 800da2e:	46b8      	mov	r8, r7
 800da30:	f04f 0a02 	mov.w	sl, #2
 800da34:	e6e8      	b.n	800d808 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800da36:	2501      	movs	r5, #1
 800da38:	2702      	movs	r7, #2
 800da3a:	e6e1      	b.n	800d800 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800da3c:	2500      	movs	r5, #0
 800da3e:	2701      	movs	r7, #1
 800da40:	e7f4      	b.n	800da2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800da42:	2702      	movs	r7, #2
 800da44:	2503      	movs	r5, #3
 800da46:	f04f 0900 	mov.w	r9, #0
 800da4a:	46b8      	mov	r8, r7
 800da4c:	e7e9      	b.n	800da22 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800da4e:	4613      	mov	r3, r2
 800da50:	e728      	b.n	800d8a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800da52:	bf00      	nop
 800da54:	200135a8 	.word	0x200135a8
 800da58:	fffd8f01 	.word	0xfffd8f01
 800da5c:	00027100 	.word	0x00027100
 800da60:	0004e1ff 	.word	0x0004e1ff
 800da64:	0004e1fe 	.word	0x0004e1fe
 800da68:	200135b0 	.word	0x200135b0
 800da6c:	4613      	mov	r3, r2
 800da6e:	992b      	ldr	r1, [sp, #172]	; 0xac
 800da70:	9111      	str	r1, [sp, #68]	; 0x44
 800da72:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800da76:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800da7a:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800da7c:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800da80:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800da84:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800da88:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800da8c:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800da90:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800da94:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800da98:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800da9c:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800daa0:	469e      	mov	lr, r3
 800daa2:	469c      	mov	ip, r3
 800daa4:	f04f 0900 	mov.w	r9, #0
 800daa8:	f1bc 0f00 	cmp.w	ip, #0
 800daac:	d147      	bne.n	800db3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800daae:	eb03 0c07 	add.w	ip, r3, r7
 800dab2:	1ad7      	subs	r7, r2, r3
 800dab4:	f1b9 0f00 	cmp.w	r9, #0
 800dab8:	d009      	beq.n	800dace <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800daba:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800dabe:	9029      	str	r0, [sp, #164]	; 0xa4
 800dac0:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800dac4:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800dac8:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800dacc:	912d      	str	r1, [sp, #180]	; 0xb4
 800dace:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800dad0:	9111      	str	r1, [sp, #68]	; 0x44
 800dad2:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800dad6:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800dada:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800dade:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800dae2:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800dae6:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800daea:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800daee:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800daf2:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800daf6:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800dafa:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800dafe:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800db02:	f04f 0800 	mov.w	r8, #0
 800db06:	f1be 0f00 	cmp.w	lr, #0
 800db0a:	d031      	beq.n	800db70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800db0c:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800db0e:	4431      	add	r1, r6
 800db10:	4549      	cmp	r1, r9
 800db12:	4450      	add	r0, sl
 800db14:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800db18:	ee37 7a04 	vadd.f32	s14, s14, s8
 800db1c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800db20:	db08      	blt.n	800db34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800db22:	ee77 7a85 	vadd.f32	s15, s15, s10
 800db26:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800db2a:	ee37 7a06 	vadd.f32	s14, s14, s12
 800db2e:	3001      	adds	r0, #1
 800db30:	eba1 0109 	sub.w	r1, r1, r9
 800db34:	f10e 3eff 	add.w	lr, lr, #4294967295
 800db38:	f04f 0801 	mov.w	r8, #1
 800db3c:	e7e3      	b.n	800db06 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800db3e:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800db40:	4431      	add	r1, r6
 800db42:	4541      	cmp	r1, r8
 800db44:	4450      	add	r0, sl
 800db46:	ee37 7a24 	vadd.f32	s14, s14, s9
 800db4a:	ee77 7a84 	vadd.f32	s15, s15, s8
 800db4e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800db52:	db08      	blt.n	800db66 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800db54:	ee76 6a85 	vadd.f32	s13, s13, s10
 800db58:	ee37 7a25 	vadd.f32	s14, s14, s11
 800db5c:	ee77 7a86 	vadd.f32	s15, s15, s12
 800db60:	3001      	adds	r0, #1
 800db62:	eba1 0108 	sub.w	r1, r1, r8
 800db66:	f10c 3cff 	add.w	ip, ip, #4294967295
 800db6a:	f04f 0901 	mov.w	r9, #1
 800db6e:	e79b      	b.n	800daa8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800db70:	449c      	add	ip, r3
 800db72:	1aff      	subs	r7, r7, r3
 800db74:	f1b8 0f00 	cmp.w	r8, #0
 800db78:	d009      	beq.n	800db8e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800db7a:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800db7e:	9019      	str	r0, [sp, #100]	; 0x64
 800db80:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800db84:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800db88:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800db8c:	911d      	str	r1, [sp, #116]	; 0x74
 800db8e:	1ad2      	subs	r2, r2, r3
 800db90:	e68b      	b.n	800d8aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800db92:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800db94:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800db96:	2b00      	cmp	r3, #0
 800db98:	f000 80d1 	beq.w	800dd3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800db9c:	ad19      	add	r5, sp, #100	; 0x64
 800db9e:	ac39      	add	r4, sp, #228	; 0xe4
 800dba0:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800dba2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800dba6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800dbaa:	930c      	str	r3, [sp, #48]	; 0x30
 800dbac:	990c      	ldr	r1, [sp, #48]	; 0x30
 800dbae:	6963      	ldr	r3, [r4, #20]
 800dbb0:	440b      	add	r3, r1
 800dbb2:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800dbb6:	4408      	add	r0, r1
 800dbb8:	b200      	sxth	r0, r0
 800dbba:	4283      	cmp	r3, r0
 800dbbc:	900d      	str	r0, [sp, #52]	; 0x34
 800dbbe:	f280 80c1 	bge.w	800dd44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800dbc2:	428b      	cmp	r3, r1
 800dbc4:	da08      	bge.n	800dbd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800dbc6:	2a00      	cmp	r2, #0
 800dbc8:	dd06      	ble.n	800dbd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800dbca:	1acb      	subs	r3, r1, r3
 800dbcc:	429a      	cmp	r2, r3
 800dbce:	f2c0 80bb 	blt.w	800dd48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800dbd2:	2b00      	cmp	r3, #0
 800dbd4:	f300 80b9 	bgt.w	800dd4a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800dbd8:	6967      	ldr	r7, [r4, #20]
 800dbda:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800dbdc:	443b      	add	r3, r7
 800dbde:	461f      	mov	r7, r3
 800dbe0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800dbe2:	1bdf      	subs	r7, r3, r7
 800dbe4:	4297      	cmp	r7, r2
 800dbe6:	bfa8      	it	ge
 800dbe8:	4617      	movge	r7, r2
 800dbea:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800dbee:	2f00      	cmp	r7, #0
 800dbf0:	f340 813c 	ble.w	800de6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800dbf4:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800dbf6:	6829      	ldr	r1, [r5, #0]
 800dbf8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800dbfc:	f9bb 3000 	ldrsh.w	r3, [fp]
 800dc00:	6820      	ldr	r0, [r4, #0]
 800dc02:	4411      	add	r1, r2
 800dc04:	4299      	cmp	r1, r3
 800dc06:	dd1a      	ble.n	800dc3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800dc08:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800dc0c:	440b      	add	r3, r1
 800dc0e:	4402      	add	r2, r0
 800dc10:	b21b      	sxth	r3, r3
 800dc12:	429a      	cmp	r2, r3
 800dc14:	dc13      	bgt.n	800dc3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800dc16:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800dc18:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800dc1a:	681b      	ldr	r3, [r3, #0]
 800dc1c:	9206      	str	r2, [sp, #24]
 800dc1e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800dc20:	9205      	str	r2, [sp, #20]
 800dc22:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800dc24:	9500      	str	r5, [sp, #0]
 800dc26:	e9cd b203 	strd	fp, r2, [sp, #12]
 800dc2a:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800dc2c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800dc2e:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800dc32:	a912      	add	r1, sp, #72	; 0x48
 800dc34:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800dc38:	aa49      	add	r2, sp, #292	; 0x124
 800dc3a:	4623      	mov	r3, r4
 800dc3c:	47c8      	blx	r9
 800dc3e:	e9d4 2300 	ldrd	r2, r3, [r4]
 800dc42:	441a      	add	r2, r3
 800dc44:	6963      	ldr	r3, [r4, #20]
 800dc46:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800dc4a:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800dc4e:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800dc52:	68a1      	ldr	r1, [r4, #8]
 800dc54:	ed94 6a08 	vldr	s12, [r4, #32]
 800dc58:	6022      	str	r2, [r4, #0]
 800dc5a:	3301      	adds	r3, #1
 800dc5c:	6163      	str	r3, [r4, #20]
 800dc5e:	69a3      	ldr	r3, [r4, #24]
 800dc60:	ee37 7a27 	vadd.f32	s14, s14, s15
 800dc64:	3b01      	subs	r3, #1
 800dc66:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800dc6a:	61a3      	str	r3, [r4, #24]
 800dc6c:	6923      	ldr	r3, [r4, #16]
 800dc6e:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800dc72:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800dc76:	edd4 6a07 	vldr	s13, [r4, #28]
 800dc7a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800dc7e:	440b      	add	r3, r1
 800dc80:	68e1      	ldr	r1, [r4, #12]
 800dc82:	6123      	str	r3, [r4, #16]
 800dc84:	ee76 6a86 	vadd.f32	s13, s13, s12
 800dc88:	428b      	cmp	r3, r1
 800dc8a:	edc4 6a07 	vstr	s13, [r4, #28]
 800dc8e:	db15      	blt.n	800dcbc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800dc90:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800dc94:	ee76 6a26 	vadd.f32	s13, s12, s13
 800dc98:	3201      	adds	r2, #1
 800dc9a:	edc4 6a07 	vstr	s13, [r4, #28]
 800dc9e:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800dca2:	6022      	str	r2, [r4, #0]
 800dca4:	ee36 7a87 	vadd.f32	s14, s13, s14
 800dca8:	1a5b      	subs	r3, r3, r1
 800dcaa:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800dcae:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800dcb2:	6123      	str	r3, [r4, #16]
 800dcb4:	ee77 7a27 	vadd.f32	s15, s14, s15
 800dcb8:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800dcbc:	e9d5 2300 	ldrd	r2, r3, [r5]
 800dcc0:	441a      	add	r2, r3
 800dcc2:	696b      	ldr	r3, [r5, #20]
 800dcc4:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800dcc8:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800dccc:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800dcd0:	68a9      	ldr	r1, [r5, #8]
 800dcd2:	ed95 6a08 	vldr	s12, [r5, #32]
 800dcd6:	602a      	str	r2, [r5, #0]
 800dcd8:	3301      	adds	r3, #1
 800dcda:	616b      	str	r3, [r5, #20]
 800dcdc:	69ab      	ldr	r3, [r5, #24]
 800dcde:	ee37 7a27 	vadd.f32	s14, s14, s15
 800dce2:	3b01      	subs	r3, #1
 800dce4:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800dce8:	61ab      	str	r3, [r5, #24]
 800dcea:	692b      	ldr	r3, [r5, #16]
 800dcec:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800dcf0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800dcf4:	edd5 6a07 	vldr	s13, [r5, #28]
 800dcf8:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800dcfc:	440b      	add	r3, r1
 800dcfe:	68e9      	ldr	r1, [r5, #12]
 800dd00:	612b      	str	r3, [r5, #16]
 800dd02:	ee76 6a86 	vadd.f32	s13, s13, s12
 800dd06:	428b      	cmp	r3, r1
 800dd08:	edc5 6a07 	vstr	s13, [r5, #28]
 800dd0c:	db15      	blt.n	800dd3a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800dd0e:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800dd12:	ee76 6a26 	vadd.f32	s13, s12, s13
 800dd16:	3201      	adds	r2, #1
 800dd18:	edc5 6a07 	vstr	s13, [r5, #28]
 800dd1c:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800dd20:	602a      	str	r2, [r5, #0]
 800dd22:	ee36 7a87 	vadd.f32	s14, s13, s14
 800dd26:	1a5b      	subs	r3, r3, r1
 800dd28:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800dd2c:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800dd30:	612b      	str	r3, [r5, #16]
 800dd32:	ee77 7a27 	vadd.f32	s15, s14, s15
 800dd36:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800dd3a:	3f01      	subs	r7, #1
 800dd3c:	e757      	b.n	800dbee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800dd3e:	ad39      	add	r5, sp, #228	; 0xe4
 800dd40:	ac19      	add	r4, sp, #100	; 0x64
 800dd42:	e72d      	b.n	800dba0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800dd44:	4613      	mov	r3, r2
 800dd46:	e744      	b.n	800dbd2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800dd48:	4613      	mov	r3, r2
 800dd4a:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800dd4e:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 800dd50:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 800dd54:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 800dd58:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 800dd5c:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 800dd60:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 800dd64:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 800dd68:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 800dd6c:	993d      	ldr	r1, [sp, #244]	; 0xf4
 800dd6e:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 800dd72:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 800dd76:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 800dd7a:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 800dd7e:	960e      	str	r6, [sp, #56]	; 0x38
 800dd80:	469e      	mov	lr, r3
 800dd82:	461f      	mov	r7, r3
 800dd84:	f04f 0900 	mov.w	r9, #0
 800dd88:	2f00      	cmp	r7, #0
 800dd8a:	d146      	bne.n	800de1a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800dd8c:	449c      	add	ip, r3
 800dd8e:	1ad7      	subs	r7, r2, r3
 800dd90:	f1b9 0f00 	cmp.w	r9, #0
 800dd94:	d009      	beq.n	800ddaa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800dd96:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 800dd9a:	9039      	str	r0, [sp, #228]	; 0xe4
 800dd9c:	913d      	str	r1, [sp, #244]	; 0xf4
 800dd9e:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 800dda2:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 800dda6:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 800ddaa:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800ddac:	910e      	str	r1, [sp, #56]	; 0x38
 800ddae:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800ddb2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800ddb6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800ddba:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800ddbe:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800ddc2:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800ddc6:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800ddca:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800ddce:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800ddd2:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800ddd6:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800ddda:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800ddde:	f04f 0800 	mov.w	r8, #0
 800dde2:	f1be 0f00 	cmp.w	lr, #0
 800dde6:	d030      	beq.n	800de4a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800dde8:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800ddea:	4431      	add	r1, r6
 800ddec:	4549      	cmp	r1, r9
 800ddee:	4450      	add	r0, sl
 800ddf0:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800ddf4:	ee37 7a04 	vadd.f32	s14, s14, s8
 800ddf8:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800ddfc:	db08      	blt.n	800de10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800ddfe:	ee77 7a85 	vadd.f32	s15, s15, s10
 800de02:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800de06:	ee37 7a06 	vadd.f32	s14, s14, s12
 800de0a:	3001      	adds	r0, #1
 800de0c:	eba1 0109 	sub.w	r1, r1, r9
 800de10:	f10e 3eff 	add.w	lr, lr, #4294967295
 800de14:	f04f 0801 	mov.w	r8, #1
 800de18:	e7e3      	b.n	800dde2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800de1a:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800de1c:	4431      	add	r1, r6
 800de1e:	4541      	cmp	r1, r8
 800de20:	4450      	add	r0, sl
 800de22:	ee37 7a24 	vadd.f32	s14, s14, s9
 800de26:	ee77 7a84 	vadd.f32	s15, s15, s8
 800de2a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800de2e:	db08      	blt.n	800de42 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800de30:	ee76 6a85 	vadd.f32	s13, s13, s10
 800de34:	ee37 7a25 	vadd.f32	s14, s14, s11
 800de38:	ee77 7a86 	vadd.f32	s15, s15, s12
 800de3c:	3001      	adds	r0, #1
 800de3e:	eba1 0108 	sub.w	r1, r1, r8
 800de42:	3f01      	subs	r7, #1
 800de44:	f04f 0901 	mov.w	r9, #1
 800de48:	e79e      	b.n	800dd88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800de4a:	449c      	add	ip, r3
 800de4c:	1aff      	subs	r7, r7, r3
 800de4e:	f1b8 0f00 	cmp.w	r8, #0
 800de52:	d009      	beq.n	800de68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800de54:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800de58:	9019      	str	r0, [sp, #100]	; 0x64
 800de5a:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800de5e:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800de62:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800de66:	911d      	str	r1, [sp, #116]	; 0x74
 800de68:	1ad2      	subs	r2, r2, r3
 800de6a:	e6b5      	b.n	800dbd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800de6c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800de6e:	681b      	ldr	r3, [r3, #0]
 800de70:	b923      	cbnz	r3, 800de7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800de72:	4b04      	ldr	r3, [pc, #16]	; (800de84 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800de74:	6818      	ldr	r0, [r3, #0]
 800de76:	6803      	ldr	r3, [r0, #0]
 800de78:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800de7a:	4798      	blx	r3
 800de7c:	b05b      	add	sp, #364	; 0x16c
 800de7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800de82:	bf00      	nop
 800de84:	200135b0 	.word	0x200135b0

0800de88 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 800de88:	b570      	push	{r4, r5, r6, lr}
 800de8a:	4604      	mov	r4, r0
 800de8c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 800de90:	9804      	ldr	r0, [sp, #16]
 800de92:	6061      	str	r1, [r4, #4]
 800de94:	2500      	movs	r5, #0
 800de96:	8025      	strh	r5, [r4, #0]
 800de98:	7223      	strb	r3, [r4, #8]
 800de9a:	7266      	strb	r6, [r4, #9]
 800de9c:	60e0      	str	r0, [r4, #12]
 800de9e:	8222      	strh	r2, [r4, #16]
 800dea0:	8265      	strh	r5, [r4, #18]
 800dea2:	82a5      	strh	r5, [r4, #20]
 800dea4:	82e5      	strh	r5, [r4, #22]
 800dea6:	8325      	strh	r5, [r4, #24]
 800dea8:	8365      	strh	r5, [r4, #26]
 800deaa:	83a5      	strh	r5, [r4, #28]
 800deac:	77a5      	strb	r5, [r4, #30]
 800deae:	b32e      	cbz	r6, 800defc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800deb0:	6803      	ldr	r3, [r0, #0]
 800deb2:	695b      	ldr	r3, [r3, #20]
 800deb4:	4798      	blx	r3
 800deb6:	4606      	mov	r6, r0
 800deb8:	b300      	cbz	r0, 800defc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800deba:	68e0      	ldr	r0, [r4, #12]
 800debc:	6803      	ldr	r3, [r0, #0]
 800debe:	4631      	mov	r1, r6
 800dec0:	68db      	ldr	r3, [r3, #12]
 800dec2:	4798      	blx	r3
 800dec4:	4605      	mov	r5, r0
 800dec6:	b1c8      	cbz	r0, 800defc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800dec8:	7b43      	ldrb	r3, [r0, #13]
 800deca:	7a82      	ldrb	r2, [r0, #10]
 800decc:	005b      	lsls	r3, r3, #1
 800dece:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ded2:	4313      	orrs	r3, r2
 800ded4:	83a3      	strh	r3, [r4, #28]
 800ded6:	7a63      	ldrb	r3, [r4, #9]
 800ded8:	2b04      	cmp	r3, #4
 800deda:	d10f      	bne.n	800defc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800dedc:	68e0      	ldr	r0, [r4, #12]
 800dede:	6803      	ldr	r3, [r0, #0]
 800dee0:	462a      	mov	r2, r5
 800dee2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dee4:	4631      	mov	r1, r6
 800dee6:	4798      	blx	r3
 800dee8:	7b6b      	ldrb	r3, [r5, #13]
 800deea:	005b      	lsls	r3, r3, #1
 800deec:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800def0:	7aab      	ldrb	r3, [r5, #10]
 800def2:	4313      	orrs	r3, r2
 800def4:	4418      	add	r0, r3
 800def6:	8ba3      	ldrh	r3, [r4, #28]
 800def8:	4418      	add	r0, r3
 800defa:	83a0      	strh	r0, [r4, #28]
 800defc:	4620      	mov	r0, r4
 800defe:	bd70      	pop	{r4, r5, r6, pc}

0800df00 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800df00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800df04:	2400      	movs	r4, #0
 800df06:	b085      	sub	sp, #20
 800df08:	4681      	mov	r9, r0
 800df0a:	4688      	mov	r8, r1
 800df0c:	4692      	mov	sl, r2
 800df0e:	469b      	mov	fp, r3
 800df10:	4627      	mov	r7, r4
 800df12:	4625      	mov	r5, r4
 800df14:	4626      	mov	r6, r4
 800df16:	4554      	cmp	r4, sl
 800df18:	da2a      	bge.n	800df70 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800df1a:	2300      	movs	r3, #0
 800df1c:	9303      	str	r3, [sp, #12]
 800df1e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800df22:	429d      	cmp	r5, r3
 800df24:	d004      	beq.n	800df30 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800df26:	f242 030b 	movw	r3, #8203	; 0x200b
 800df2a:	429d      	cmp	r5, r3
 800df2c:	bf18      	it	ne
 800df2e:	462f      	movne	r7, r5
 800df30:	ab03      	add	r3, sp, #12
 800df32:	4642      	mov	r2, r8
 800df34:	4659      	mov	r1, fp
 800df36:	4648      	mov	r0, r9
 800df38:	f002 ff74 	bl	8010e24 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800df3c:	4605      	mov	r5, r0
 800df3e:	b1b8      	cbz	r0, 800df70 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800df40:	280a      	cmp	r0, #10
 800df42:	d015      	beq.n	800df70 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800df44:	9a03      	ldr	r2, [sp, #12]
 800df46:	b18a      	cbz	r2, 800df6c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800df48:	7b50      	ldrb	r0, [r2, #13]
 800df4a:	7a93      	ldrb	r3, [r2, #10]
 800df4c:	8895      	ldrh	r5, [r2, #4]
 800df4e:	0040      	lsls	r0, r0, #1
 800df50:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800df54:	4303      	orrs	r3, r0
 800df56:	9301      	str	r3, [sp, #4]
 800df58:	f8d8 3000 	ldr.w	r3, [r8]
 800df5c:	4639      	mov	r1, r7
 800df5e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800df60:	4640      	mov	r0, r8
 800df62:	4798      	blx	r3
 800df64:	9b01      	ldr	r3, [sp, #4]
 800df66:	4418      	add	r0, r3
 800df68:	4406      	add	r6, r0
 800df6a:	b2b6      	uxth	r6, r6
 800df6c:	3401      	adds	r4, #1
 800df6e:	e7d2      	b.n	800df16 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800df70:	4630      	mov	r0, r6
 800df72:	b005      	add	sp, #20
 800df74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800df78 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800df78:	2a02      	cmp	r2, #2
 800df7a:	b530      	push	{r4, r5, lr}
 800df7c:	d011      	beq.n	800dfa2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800df7e:	2a03      	cmp	r2, #3
 800df80:	d01c      	beq.n	800dfbc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800df82:	2a01      	cmp	r2, #1
 800df84:	d10c      	bne.n	800dfa0 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800df86:	888b      	ldrh	r3, [r1, #4]
 800df88:	8801      	ldrh	r1, [r0, #0]
 800df8a:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800df8e:	8844      	ldrh	r4, [r0, #2]
 800df90:	8004      	strh	r4, [r0, #0]
 800df92:	1a5b      	subs	r3, r3, r1
 800df94:	1a9b      	subs	r3, r3, r2
 800df96:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800df9a:	8043      	strh	r3, [r0, #2]
 800df9c:	8081      	strh	r1, [r0, #4]
 800df9e:	80c2      	strh	r2, [r0, #6]
 800dfa0:	bd30      	pop	{r4, r5, pc}
 800dfa2:	88cb      	ldrh	r3, [r1, #6]
 800dfa4:	8842      	ldrh	r2, [r0, #2]
 800dfa6:	1a9b      	subs	r3, r3, r2
 800dfa8:	88c2      	ldrh	r2, [r0, #6]
 800dfaa:	1a9b      	subs	r3, r3, r2
 800dfac:	888a      	ldrh	r2, [r1, #4]
 800dfae:	8801      	ldrh	r1, [r0, #0]
 800dfb0:	8043      	strh	r3, [r0, #2]
 800dfb2:	1a52      	subs	r2, r2, r1
 800dfb4:	8881      	ldrh	r1, [r0, #4]
 800dfb6:	1a52      	subs	r2, r2, r1
 800dfb8:	8002      	strh	r2, [r0, #0]
 800dfba:	e7f1      	b.n	800dfa0 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800dfbc:	88cb      	ldrh	r3, [r1, #6]
 800dfbe:	8841      	ldrh	r1, [r0, #2]
 800dfc0:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800dfc4:	f9b0 5000 	ldrsh.w	r5, [r0]
 800dfc8:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800dfcc:	8045      	strh	r5, [r0, #2]
 800dfce:	1a5b      	subs	r3, r3, r1
 800dfd0:	1a9b      	subs	r3, r3, r2
 800dfd2:	8003      	strh	r3, [r0, #0]
 800dfd4:	8082      	strh	r2, [r0, #4]
 800dfd6:	80c4      	strh	r4, [r0, #6]
 800dfd8:	e7e2      	b.n	800dfa0 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800dfda <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800dfda:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dfde:	b09f      	sub	sp, #124	; 0x7c
 800dfe0:	9116      	str	r1, [sp, #88]	; 0x58
 800dfe2:	9317      	str	r3, [sp, #92]	; 0x5c
 800dfe4:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800dfe6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800dfe8:	8809      	ldrh	r1, [r1, #0]
 800dfea:	889b      	ldrh	r3, [r3, #4]
 800dfec:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800dff0:	9212      	str	r2, [sp, #72]	; 0x48
 800dff2:	440b      	add	r3, r1
 800dff4:	b21b      	sxth	r3, r3
 800dff6:	9310      	str	r3, [sp, #64]	; 0x40
 800dff8:	f8d8 3000 	ldr.w	r3, [r8]
 800dffc:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800e000:	7a59      	ldrb	r1, [r3, #9]
 800e002:	7a1b      	ldrb	r3, [r3, #8]
 800e004:	9011      	str	r0, [sp, #68]	; 0x44
 800e006:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800e00a:	9114      	str	r1, [sp, #80]	; 0x50
 800e00c:	9315      	str	r3, [sp, #84]	; 0x54
 800e00e:	f9bd 50a0 	ldrsh.w	r5, [sp, #160]	; 0xa0
 800e012:	2a00      	cmp	r2, #0
 800e014:	d06a      	beq.n	800e0ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800e016:	f898 3010 	ldrb.w	r3, [r8, #16]
 800e01a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800e01c:	2b04      	cmp	r3, #4
 800e01e:	bf14      	ite	ne
 800e020:	2301      	movne	r3, #1
 800e022:	2302      	moveq	r3, #2
 800e024:	4413      	add	r3, r2
 800e026:	f04f 0900 	mov.w	r9, #0
 800e02a:	930f      	str	r3, [sp, #60]	; 0x3c
 800e02c:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800e030:	464c      	mov	r4, r9
 800e032:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800e036:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800e03a:	4293      	cmp	r3, r2
 800e03c:	f280 808f 	bge.w	800e15e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 800e040:	2300      	movs	r3, #0
 800e042:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 800e046:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 800e04a:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800e04e:	429c      	cmp	r4, r3
 800e050:	d006      	beq.n	800e060 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 800e052:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e054:	f242 020b 	movw	r2, #8203	; 0x200b
 800e058:	4294      	cmp	r4, r2
 800e05a:	bf18      	it	ne
 800e05c:	4623      	movne	r3, r4
 800e05e:	930d      	str	r3, [sp, #52]	; 0x34
 800e060:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e062:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800e064:	f8d8 2000 	ldr.w	r2, [r8]
 800e068:	428b      	cmp	r3, r1
 800e06a:	db41      	blt.n	800e0f0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 800e06c:	6813      	ldr	r3, [r2, #0]
 800e06e:	4610      	mov	r0, r2
 800e070:	695b      	ldr	r3, [r3, #20]
 800e072:	4798      	blx	r3
 800e074:	4604      	mov	r4, r0
 800e076:	f8d8 0000 	ldr.w	r0, [r8]
 800e07a:	6803      	ldr	r3, [r0, #0]
 800e07c:	aa1d      	add	r2, sp, #116	; 0x74
 800e07e:	689e      	ldr	r6, [r3, #8]
 800e080:	4621      	mov	r1, r4
 800e082:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800e086:	47b0      	blx	r6
 800e088:	901c      	str	r0, [sp, #112]	; 0x70
 800e08a:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800e08e:	429c      	cmp	r4, r3
 800e090:	f000 80e9 	beq.w	800e266 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 800e094:	f242 030b 	movw	r3, #8203	; 0x200b
 800e098:	429c      	cmp	r4, r3
 800e09a:	f000 80e4 	beq.w	800e266 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 800e09e:	2c00      	cmp	r4, #0
 800e0a0:	f000 80f6 	beq.w	800e290 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 800e0a4:	2c0a      	cmp	r4, #10
 800e0a6:	d060      	beq.n	800e16a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 800e0a8:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800e0aa:	b36a      	cbz	r2, 800e108 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 800e0ac:	8894      	ldrh	r4, [r2, #4]
 800e0ae:	f1bb 0f00 	cmp.w	fp, #0
 800e0b2:	d03b      	beq.n	800e12c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 800e0b4:	f892 900d 	ldrb.w	r9, [r2, #13]
 800e0b8:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800e0bc:	f409 7380 	and.w	r3, r9, #256	; 0x100
 800e0c0:	f892 900a 	ldrb.w	r9, [r2, #10]
 800e0c4:	f1bb 0f01 	cmp.w	fp, #1
 800e0c8:	ea49 0903 	orr.w	r9, r9, r3
 800e0cc:	d134      	bne.n	800e138 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 800e0ce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e0d0:	eba5 0509 	sub.w	r5, r5, r9
 800e0d4:	2b00      	cmp	r3, #0
 800e0d6:	d14f      	bne.n	800e178 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 800e0d8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800e0da:	eb09 0305 	add.w	r3, r9, r5
 800e0de:	4413      	add	r3, r2
 800e0e0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800e0e2:	f9b2 2000 	ldrsh.w	r2, [r2]
 800e0e6:	4293      	cmp	r3, r2
 800e0e8:	da51      	bge.n	800e18e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 800e0ea:	e038      	b.n	800e15e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 800e0ec:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800e0ee:	e79a      	b.n	800e026 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 800e0f0:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800e0f4:	9301      	str	r3, [sp, #4]
 800e0f6:	ab1d      	add	r3, sp, #116	; 0x74
 800e0f8:	9300      	str	r3, [sp, #0]
 800e0fa:	4659      	mov	r1, fp
 800e0fc:	ab1c      	add	r3, sp, #112	; 0x70
 800e0fe:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800e100:	f002 fed9 	bl	8010eb6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800e104:	4604      	mov	r4, r0
 800e106:	e7c0      	b.n	800e08a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 800e108:	f8d8 0000 	ldr.w	r0, [r8]
 800e10c:	6803      	ldr	r3, [r0, #0]
 800e10e:	691b      	ldr	r3, [r3, #16]
 800e110:	4798      	blx	r3
 800e112:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800e116:	4298      	cmp	r0, r3
 800e118:	f000 80a5 	beq.w	800e266 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 800e11c:	f242 030b 	movw	r3, #8203	; 0x200b
 800e120:	4298      	cmp	r0, r3
 800e122:	f000 80a0 	beq.w	800e266 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 800e126:	f1bb 0f00 	cmp.w	fp, #0
 800e12a:	d100      	bne.n	800e12e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 800e12c:	444d      	add	r5, r9
 800e12e:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800e130:	2a00      	cmp	r2, #0
 800e132:	d1bf      	bne.n	800e0b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 800e134:	4691      	mov	r9, r2
 800e136:	e096      	b.n	800e266 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 800e138:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e13a:	2b00      	cmp	r3, #0
 800e13c:	f000 80aa 	beq.w	800e294 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 800e140:	f1bb 0f00 	cmp.w	fp, #0
 800e144:	d118      	bne.n	800e178 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 800e146:	f8d8 0000 	ldr.w	r0, [r8]
 800e14a:	990d      	ldr	r1, [sp, #52]	; 0x34
 800e14c:	6803      	ldr	r3, [r0, #0]
 800e14e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e150:	4798      	blx	r3
 800e152:	4405      	add	r5, r0
 800e154:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800e156:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800e158:	1aeb      	subs	r3, r5, r3
 800e15a:	4293      	cmp	r3, r2
 800e15c:	dd17      	ble.n	800e18e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 800e15e:	2c00      	cmp	r4, #0
 800e160:	f000 8096 	beq.w	800e290 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 800e164:	2c0a      	cmp	r4, #10
 800e166:	f040 8084 	bne.w	800e272 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 800e16a:	240a      	movs	r4, #10
 800e16c:	fab4 f084 	clz	r0, r4
 800e170:	0940      	lsrs	r0, r0, #5
 800e172:	b01f      	add	sp, #124	; 0x7c
 800e174:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e178:	f8d8 0000 	ldr.w	r0, [r8]
 800e17c:	990d      	ldr	r1, [sp, #52]	; 0x34
 800e17e:	6803      	ldr	r3, [r0, #0]
 800e180:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e182:	4798      	blx	r3
 800e184:	f1bb 0f01 	cmp.w	fp, #1
 800e188:	eba5 0500 	sub.w	r5, r5, r0
 800e18c:	d0a4      	beq.n	800e0d8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 800e18e:	981c      	ldr	r0, [sp, #112]	; 0x70
 800e190:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800e192:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800e196:	f9b3 6000 	ldrsh.w	r6, [r3]
 800e19a:	7b43      	ldrb	r3, [r0, #13]
 800e19c:	015b      	lsls	r3, r3, #5
 800e19e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e1a2:	7983      	ldrb	r3, [r0, #6]
 800e1a4:	4429      	add	r1, r5
 800e1a6:	4313      	orrs	r3, r2
 800e1a8:	440b      	add	r3, r1
 800e1aa:	42b3      	cmp	r3, r6
 800e1ac:	db5b      	blt.n	800e266 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 800e1ae:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e1b0:	4299      	cmp	r1, r3
 800e1b2:	da58      	bge.n	800e266 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 800e1b4:	f8d8 0000 	ldr.w	r0, [r8]
 800e1b8:	6803      	ldr	r3, [r0, #0]
 800e1ba:	42ae      	cmp	r6, r5
 800e1bc:	bfc8      	it	gt
 800e1be:	1b76      	subgt	r6, r6, r5
 800e1c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e1c2:	bfcc      	ite	gt
 800e1c4:	b2b6      	uxthgt	r6, r6
 800e1c6:	2600      	movle	r6, #0
 800e1c8:	4798      	blx	r3
 800e1ca:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800e1cc:	7b5a      	ldrb	r2, [r3, #13]
 800e1ce:	00d1      	lsls	r1, r2, #3
 800e1d0:	f401 7780 	and.w	r7, r1, #256	; 0x100
 800e1d4:	7a19      	ldrb	r1, [r3, #8]
 800e1d6:	4339      	orrs	r1, r7
 800e1d8:	0657      	lsls	r7, r2, #25
 800e1da:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800e1dc:	bf44      	itt	mi
 800e1de:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 800e1e2:	b209      	sxthmi	r1, r1
 800e1e4:	19c7      	adds	r7, r0, r7
 800e1e6:	1a7f      	subs	r7, r7, r1
 800e1e8:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800e1ea:	b2bf      	uxth	r7, r7
 800e1ec:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800e1f0:	fa0f fa87 	sxth.w	sl, r7
 800e1f4:	4551      	cmp	r1, sl
 800e1f6:	dd3a      	ble.n	800e26e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 800e1f8:	0112      	lsls	r2, r2, #4
 800e1fa:	79d8      	ldrb	r0, [r3, #7]
 800e1fc:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800e200:	4302      	orrs	r2, r0
 800e202:	4492      	add	sl, r2
 800e204:	4551      	cmp	r1, sl
 800e206:	dc2e      	bgt.n	800e266 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 800e208:	1bcf      	subs	r7, r1, r7
 800e20a:	b2bf      	uxth	r7, r7
 800e20c:	468a      	mov	sl, r1
 800e20e:	9319      	str	r3, [sp, #100]	; 0x64
 800e210:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800e212:	f8d8 0000 	ldr.w	r0, [r8]
 800e216:	681a      	ldr	r2, [r3, #0]
 800e218:	6801      	ldr	r1, [r0, #0]
 800e21a:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 800e21c:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800e21e:	9313      	str	r3, [sp, #76]	; 0x4c
 800e220:	9218      	str	r2, [sp, #96]	; 0x60
 800e222:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800e224:	4788      	blx	r1
 800e226:	f898 1006 	ldrb.w	r1, [r8, #6]
 800e22a:	910b      	str	r1, [sp, #44]	; 0x2c
 800e22c:	f898 100e 	ldrb.w	r1, [r8, #14]
 800e230:	910a      	str	r1, [sp, #40]	; 0x28
 800e232:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 800e236:	9109      	str	r1, [sp, #36]	; 0x24
 800e238:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800e23a:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800e23e:	9305      	str	r3, [sp, #20]
 800e240:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800e242:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800e244:	9206      	str	r2, [sp, #24]
 800e246:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800e24a:	e9cd 7303 	strd	r7, r3, [sp, #12]
 800e24e:	e9cd a601 	strd	sl, r6, [sp, #4]
 800e252:	442e      	add	r6, r5
 800e254:	b236      	sxth	r6, r6
 800e256:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800e258:	9600      	str	r6, [sp, #0]
 800e25a:	681a      	ldr	r2, [r3, #0]
 800e25c:	9916      	ldr	r1, [sp, #88]	; 0x58
 800e25e:	685b      	ldr	r3, [r3, #4]
 800e260:	9811      	ldr	r0, [sp, #68]	; 0x44
 800e262:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800e264:	47b0      	blx	r6
 800e266:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e268:	3301      	adds	r3, #1
 800e26a:	930e      	str	r3, [sp, #56]	; 0x38
 800e26c:	e6e3      	b.n	800e036 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 800e26e:	2700      	movs	r7, #0
 800e270:	e7cd      	b.n	800e20e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 800e272:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800e274:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800e276:	3501      	adds	r5, #1
 800e278:	429d      	cmp	r5, r3
 800e27a:	f6bf af77 	bge.w	800e16c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 800e27e:	4659      	mov	r1, fp
 800e280:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800e282:	f7f6 fb99 	bl	80049b8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800e286:	4604      	mov	r4, r0
 800e288:	b110      	cbz	r0, 800e290 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 800e28a:	280a      	cmp	r0, #10
 800e28c:	d1f2      	bne.n	800e274 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 800e28e:	e76c      	b.n	800e16a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 800e290:	2400      	movs	r4, #0
 800e292:	e76b      	b.n	800e16c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 800e294:	f1bb 0f00 	cmp.w	fp, #0
 800e298:	f43f af5c 	beq.w	800e154 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 800e29c:	e777      	b.n	800e18e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

0800e29e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800e29e:	b530      	push	{r4, r5, lr}
 800e2a0:	8a44      	ldrh	r4, [r0, #18]
 800e2a2:	8ac5      	ldrh	r5, [r0, #22]
 800e2a4:	82c3      	strh	r3, [r0, #22]
 800e2a6:	442c      	add	r4, r5
 800e2a8:	1ae4      	subs	r4, r4, r3
 800e2aa:	8244      	strh	r4, [r0, #18]
 800e2ac:	8b03      	ldrh	r3, [r0, #24]
 800e2ae:	8a84      	ldrh	r4, [r0, #20]
 800e2b0:	4422      	add	r2, r4
 800e2b2:	440c      	add	r4, r1
 800e2b4:	1a59      	subs	r1, r3, r1
 800e2b6:	8342      	strh	r2, [r0, #26]
 800e2b8:	8284      	strh	r4, [r0, #20]
 800e2ba:	8301      	strh	r1, [r0, #24]
 800e2bc:	bd30      	pop	{r4, r5, pc}

0800e2be <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 800e2be:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e2c2:	7a43      	ldrb	r3, [r0, #9]
 800e2c4:	1eda      	subs	r2, r3, #3
 800e2c6:	b087      	sub	sp, #28
 800e2c8:	4604      	mov	r4, r0
 800e2ca:	b2d2      	uxtb	r2, r2
 800e2cc:	460f      	mov	r7, r1
 800e2ce:	2900      	cmp	r1, #0
 800e2d0:	d036      	beq.n	800e340 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 800e2d2:	2a01      	cmp	r2, #1
 800e2d4:	d932      	bls.n	800e33c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 800e2d6:	1e58      	subs	r0, r3, #1
 800e2d8:	f1d0 0b00 	rsbs	fp, r0, #0
 800e2dc:	eb4b 0b00 	adc.w	fp, fp, r0
 800e2e0:	1e99      	subs	r1, r3, #2
 800e2e2:	424b      	negs	r3, r1
 800e2e4:	414b      	adcs	r3, r1
 800e2e6:	9303      	str	r3, [sp, #12]
 800e2e8:	2300      	movs	r3, #0
 800e2ea:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800e2ee:	2500      	movs	r5, #0
 800e2f0:	8265      	strh	r5, [r4, #18]
 800e2f2:	82a5      	strh	r5, [r4, #20]
 800e2f4:	46a9      	mov	r9, r5
 800e2f6:	f242 0a0b 	movw	sl, #8203	; 0x200b
 800e2fa:	2300      	movs	r3, #0
 800e2fc:	9305      	str	r3, [sp, #20]
 800e2fe:	8823      	ldrh	r3, [r4, #0]
 800e300:	2b20      	cmp	r3, #32
 800e302:	d02b      	beq.n	800e35c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 800e304:	eba3 020a 	sub.w	r2, r3, sl
 800e308:	4256      	negs	r6, r2
 800e30a:	4156      	adcs	r6, r2
 800e30c:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800e310:	4293      	cmp	r3, r2
 800e312:	d004      	beq.n	800e31e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800e314:	4553      	cmp	r3, sl
 800e316:	bf16      	itet	ne
 800e318:	4699      	movne	r9, r3
 800e31a:	2601      	moveq	r6, #1
 800e31c:	2600      	movne	r6, #0
 800e31e:	ab05      	add	r3, sp, #20
 800e320:	68e2      	ldr	r2, [r4, #12]
 800e322:	7a21      	ldrb	r1, [r4, #8]
 800e324:	6860      	ldr	r0, [r4, #4]
 800e326:	f002 fd7d 	bl	8010e24 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800e32a:	8020      	strh	r0, [r4, #0]
 800e32c:	b9c8      	cbnz	r0, 800e362 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 800e32e:	8b22      	ldrh	r2, [r4, #24]
 800e330:	2300      	movs	r3, #0
 800e332:	4611      	mov	r1, r2
 800e334:	4620      	mov	r0, r4
 800e336:	f7ff ffb2 	bl	800e29e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800e33a:	e066      	b.n	800e40a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800e33c:	468b      	mov	fp, r1
 800e33e:	e7cf      	b.n	800e2e0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 800e340:	3b01      	subs	r3, #1
 800e342:	2a01      	cmp	r2, #1
 800e344:	bf8c      	ite	hi
 800e346:	2200      	movhi	r2, #0
 800e348:	2201      	movls	r2, #1
 800e34a:	2b01      	cmp	r3, #1
 800e34c:	bf8c      	ite	hi
 800e34e:	2300      	movhi	r3, #0
 800e350:	2301      	movls	r3, #1
 800e352:	9202      	str	r2, [sp, #8]
 800e354:	9301      	str	r3, [sp, #4]
 800e356:	9103      	str	r1, [sp, #12]
 800e358:	468b      	mov	fp, r1
 800e35a:	e7c8      	b.n	800e2ee <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 800e35c:	4699      	mov	r9, r3
 800e35e:	2601      	movs	r6, #1
 800e360:	e7dd      	b.n	800e31e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800e362:	8ae3      	ldrh	r3, [r4, #22]
 800e364:	280a      	cmp	r0, #10
 800e366:	f103 0301 	add.w	r3, r3, #1
 800e36a:	82e3      	strh	r3, [r4, #22]
 800e36c:	d0df      	beq.n	800e32e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 800e36e:	9a05      	ldr	r2, [sp, #20]
 800e370:	bb42      	cbnz	r2, 800e3c4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 800e372:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800e376:	4298      	cmp	r0, r3
 800e378:	d001      	beq.n	800e37e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800e37a:	4550      	cmp	r0, sl
 800e37c:	d1bd      	bne.n	800e2fa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800e37e:	8823      	ldrh	r3, [r4, #0]
 800e380:	8b21      	ldrh	r1, [r4, #24]
 800e382:	2b20      	cmp	r3, #32
 800e384:	d001      	beq.n	800e38a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 800e386:	4553      	cmp	r3, sl
 800e388:	d131      	bne.n	800e3ee <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 800e38a:	2e00      	cmp	r6, #0
 800e38c:	bf0a      	itet	eq
 800e38e:	460d      	moveq	r5, r1
 800e390:	4630      	movne	r0, r6
 800e392:	2001      	moveq	r0, #1
 800e394:	440a      	add	r2, r1
 800e396:	8aa3      	ldrh	r3, [r4, #20]
 800e398:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800e39c:	b292      	uxth	r2, r2
 800e39e:	8322      	strh	r2, [r4, #24]
 800e3a0:	4413      	add	r3, r2
 800e3a2:	2f00      	cmp	r7, #0
 800e3a4:	d03a      	beq.n	800e41c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 800e3a6:	f1bb 0f00 	cmp.w	fp, #0
 800e3aa:	d102      	bne.n	800e3b2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 800e3ac:	9903      	ldr	r1, [sp, #12]
 800e3ae:	b301      	cbz	r1, 800e3f2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800e3b0:	b1f8      	cbz	r0, 800e3f2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800e3b2:	8ba1      	ldrh	r1, [r4, #28]
 800e3b4:	4419      	add	r1, r3
 800e3b6:	458c      	cmp	ip, r1
 800e3b8:	da2a      	bge.n	800e410 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800e3ba:	8a61      	ldrh	r1, [r4, #18]
 800e3bc:	b341      	cbz	r1, 800e410 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800e3be:	4563      	cmp	r3, ip
 800e3c0:	dd9b      	ble.n	800e2fa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800e3c2:	e01c      	b.n	800e3fe <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 800e3c4:	8893      	ldrh	r3, [r2, #4]
 800e3c6:	8023      	strh	r3, [r4, #0]
 800e3c8:	f892 800d 	ldrb.w	r8, [r2, #13]
 800e3cc:	ea4f 0848 	mov.w	r8, r8, lsl #1
 800e3d0:	f408 7080 	and.w	r0, r8, #256	; 0x100
 800e3d4:	f892 800a 	ldrb.w	r8, [r2, #10]
 800e3d8:	ea48 0800 	orr.w	r8, r8, r0
 800e3dc:	68e0      	ldr	r0, [r4, #12]
 800e3de:	6803      	ldr	r3, [r0, #0]
 800e3e0:	4649      	mov	r1, r9
 800e3e2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e3e4:	4798      	blx	r3
 800e3e6:	eb08 0200 	add.w	r2, r8, r0
 800e3ea:	b292      	uxth	r2, r2
 800e3ec:	e7c7      	b.n	800e37e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800e3ee:	2000      	movs	r0, #0
 800e3f0:	e7d0      	b.n	800e394 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 800e3f2:	4563      	cmp	r3, ip
 800e3f4:	dd81      	ble.n	800e2fa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800e3f6:	8a63      	ldrh	r3, [r4, #18]
 800e3f8:	2b00      	cmp	r3, #0
 800e3fa:	f43f af7e 	beq.w	800e2fa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800e3fe:	2301      	movs	r3, #1
 800e400:	77a3      	strb	r3, [r4, #30]
 800e402:	8ba2      	ldrh	r2, [r4, #28]
 800e404:	8b63      	ldrh	r3, [r4, #26]
 800e406:	4413      	add	r3, r2
 800e408:	8363      	strh	r3, [r4, #26]
 800e40a:	b007      	add	sp, #28
 800e40c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e410:	2300      	movs	r3, #0
 800e412:	4611      	mov	r1, r2
 800e414:	4620      	mov	r0, r4
 800e416:	f7ff ff42 	bl	800e29e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800e41a:	e76e      	b.n	800e2fa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800e41c:	4563      	cmp	r3, ip
 800e41e:	dd14      	ble.n	800e44a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 800e420:	9b02      	ldr	r3, [sp, #8]
 800e422:	b113      	cbz	r3, 800e42a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 800e424:	2301      	movs	r3, #1
 800e426:	460a      	mov	r2, r1
 800e428:	e783      	b.n	800e332 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 800e42a:	9b01      	ldr	r3, [sp, #4]
 800e42c:	2b00      	cmp	r3, #0
 800e42e:	f43f af64 	beq.w	800e2fa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800e432:	2800      	cmp	r0, #0
 800e434:	f47f af61 	bne.w	800e2fa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800e438:	b116      	cbz	r6, 800e440 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 800e43a:	2301      	movs	r3, #1
 800e43c:	462a      	mov	r2, r5
 800e43e:	e779      	b.n	800e334 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 800e440:	8a63      	ldrh	r3, [r4, #18]
 800e442:	2b00      	cmp	r3, #0
 800e444:	f43f af59 	beq.w	800e2fa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800e448:	e7df      	b.n	800e40a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800e44a:	2800      	cmp	r0, #0
 800e44c:	f47f af55 	bne.w	800e2fa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800e450:	2e00      	cmp	r6, #0
 800e452:	f43f af52 	beq.w	800e2fa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800e456:	2301      	movs	r3, #1
 800e458:	462a      	mov	r2, r5
 800e45a:	e7db      	b.n	800e414 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

0800e45c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800e45c:	b530      	push	{r4, r5, lr}
 800e45e:	4605      	mov	r5, r0
 800e460:	b08b      	sub	sp, #44	; 0x2c
 800e462:	b191      	cbz	r1, 800e48a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 800e464:	e9cd 3100 	strd	r3, r1, [sp]
 800e468:	4613      	mov	r3, r2
 800e46a:	4601      	mov	r1, r0
 800e46c:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 800e470:	a802      	add	r0, sp, #8
 800e472:	f7ff fd09 	bl	800de88 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800e476:	2401      	movs	r4, #1
 800e478:	2100      	movs	r1, #0
 800e47a:	a802      	add	r0, sp, #8
 800e47c:	f7ff ff1f 	bl	800e2be <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800e480:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800e484:	b163      	cbz	r3, 800e4a0 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800e486:	3401      	adds	r4, #1
 800e488:	e7f6      	b.n	800e478 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 800e48a:	f002 fd99 	bl	8010fc0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e48e:	2401      	movs	r4, #1
 800e490:	280a      	cmp	r0, #10
 800e492:	4628      	mov	r0, r5
 800e494:	bf08      	it	eq
 800e496:	3401      	addeq	r4, #1
 800e498:	f002 fd92 	bl	8010fc0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e49c:	2800      	cmp	r0, #0
 800e49e:	d1f7      	bne.n	800e490 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800e4a0:	b2a0      	uxth	r0, r4
 800e4a2:	b00b      	add	sp, #44	; 0x2c
 800e4a4:	bd30      	pop	{r4, r5, pc}

0800e4a6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800e4a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e4aa:	b0e5      	sub	sp, #404	; 0x194
 800e4ac:	4689      	mov	r9, r1
 800e4ae:	f8dd a1b8 	ldr.w	sl, [sp, #440]	; 0x1b8
 800e4b2:	900a      	str	r0, [sp, #40]	; 0x28
 800e4b4:	461c      	mov	r4, r3
 800e4b6:	f1ba 0f00 	cmp.w	sl, #0
 800e4ba:	f000 80b4 	beq.w	800e626 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800e4be:	681b      	ldr	r3, [r3, #0]
 800e4c0:	2b00      	cmp	r3, #0
 800e4c2:	f000 80b0 	beq.w	800e626 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800e4c6:	7ba3      	ldrb	r3, [r4, #14]
 800e4c8:	2b00      	cmp	r3, #0
 800e4ca:	f000 80ac 	beq.w	800e626 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800e4ce:	6810      	ldr	r0, [r2, #0]
 800e4d0:	6851      	ldr	r1, [r2, #4]
 800e4d2:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 800e4d6:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 800e4da:	f10d 0834 	add.w	r8, sp, #52	; 0x34
 800e4de:	4643      	mov	r3, r8
 800e4e0:	c303      	stmia	r3!, {r0, r1}
 800e4e2:	2500      	movs	r5, #0
 800e4e4:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 800e4e8:	79a2      	ldrb	r2, [r4, #6]
 800e4ea:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800e4ee:	a90f      	add	r1, sp, #60	; 0x3c
 800e4f0:	4640      	mov	r0, r8
 800e4f2:	950f      	str	r5, [sp, #60]	; 0x3c
 800e4f4:	f7ff fd40 	bl	800df78 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800e4f8:	a90f      	add	r1, sp, #60	; 0x3c
 800e4fa:	4608      	mov	r0, r1
 800e4fc:	79a2      	ldrb	r2, [r4, #6]
 800e4fe:	af19      	add	r7, sp, #100	; 0x64
 800e500:	f7ff fd3a 	bl	800df78 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800e504:	4638      	mov	r0, r7
 800e506:	f002 f930 	bl	801076a <_ZN8touchgfx12TextProviderC1Ev>
 800e50a:	6820      	ldr	r0, [r4, #0]
 800e50c:	6803      	ldr	r3, [r0, #0]
 800e50e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e510:	4798      	blx	r3
 800e512:	4606      	mov	r6, r0
 800e514:	6820      	ldr	r0, [r4, #0]
 800e516:	6803      	ldr	r3, [r0, #0]
 800e518:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e51a:	4798      	blx	r3
 800e51c:	4633      	mov	r3, r6
 800e51e:	9000      	str	r0, [sp, #0]
 800e520:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 800e522:	4651      	mov	r1, sl
 800e524:	4638      	mov	r0, r7
 800e526:	f002 f97b 	bl	8010820 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800e52a:	6820      	ldr	r0, [r4, #0]
 800e52c:	7923      	ldrb	r3, [r4, #4]
 800e52e:	9308      	str	r3, [sp, #32]
 800e530:	6803      	ldr	r3, [r0, #0]
 800e532:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800e534:	4798      	blx	r3
 800e536:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800e53a:	181e      	adds	r6, r3, r0
 800e53c:	42ae      	cmp	r6, r5
 800e53e:	dd06      	ble.n	800e54e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xa8>
 800e540:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 800e544:	4282      	cmp	r2, r0
 800e546:	bfa4      	itt	ge
 800e548:	189d      	addge	r5, r3, r2
 800e54a:	fb95 f5f6 	sdivge	r5, r5, r6
 800e54e:	a832      	add	r0, sp, #200	; 0xc8
 800e550:	f002 f90b 	bl	801076a <_ZN8touchgfx12TextProviderC1Ev>
 800e554:	7c23      	ldrb	r3, [r4, #16]
 800e556:	b17b      	cbz	r3, 800e578 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd2>
 800e558:	6820      	ldr	r0, [r4, #0]
 800e55a:	6803      	ldr	r3, [r0, #0]
 800e55c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e55e:	4798      	blx	r3
 800e560:	4683      	mov	fp, r0
 800e562:	6820      	ldr	r0, [r4, #0]
 800e564:	6803      	ldr	r3, [r0, #0]
 800e566:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e568:	4798      	blx	r3
 800e56a:	465b      	mov	r3, fp
 800e56c:	9000      	str	r0, [sp, #0]
 800e56e:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 800e570:	4651      	mov	r1, sl
 800e572:	a832      	add	r0, sp, #200	; 0xc8
 800e574:	f002 f954 	bl	8010820 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800e578:	7be1      	ldrb	r1, [r4, #15]
 800e57a:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800e57e:	7963      	ldrb	r3, [r4, #5]
 800e580:	1a52      	subs	r2, r2, r1
 800e582:	7c21      	ldrb	r1, [r4, #16]
 800e584:	9101      	str	r1, [sp, #4]
 800e586:	6821      	ldr	r1, [r4, #0]
 800e588:	9100      	str	r1, [sp, #0]
 800e58a:	b292      	uxth	r2, r2
 800e58c:	a932      	add	r1, sp, #200	; 0xc8
 800e58e:	a811      	add	r0, sp, #68	; 0x44
 800e590:	f7ff fc7a 	bl	800de88 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800e594:	7c23      	ldrb	r3, [r4, #16]
 800e596:	b9bb      	cbnz	r3, 800e5c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>
 800e598:	fa1f fa86 	uxth.w	sl, r6
 800e59c:	2d00      	cmp	r5, #0
 800e59e:	dd45      	ble.n	800e62c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 800e5a0:	4638      	mov	r0, r7
 800e5a2:	f002 fd0d 	bl	8010fc0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e5a6:	2800      	cmp	r0, #0
 800e5a8:	d03d      	beq.n	800e626 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800e5aa:	280a      	cmp	r0, #10
 800e5ac:	d1f6      	bne.n	800e59c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 800e5ae:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800e5b2:	4453      	add	r3, sl
 800e5b4:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800e5b8:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 800e5bc:	eba3 030a 	sub.w	r3, r3, sl
 800e5c0:	3d01      	subs	r5, #1
 800e5c2:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800e5c6:	e7e9      	b.n	800e59c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 800e5c8:	0073      	lsls	r3, r6, #1
 800e5ca:	9309      	str	r3, [sp, #36]	; 0x24
 800e5cc:	f64f 7bff 	movw	fp, #65535	; 0xffff
 800e5d0:	fa1f fa86 	uxth.w	sl, r6
 800e5d4:	2d00      	cmp	r5, #0
 800e5d6:	dd29      	ble.n	800e62c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 800e5d8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800e5dc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e5de:	428b      	cmp	r3, r1
 800e5e0:	bfd4      	ite	le
 800e5e2:	2100      	movle	r1, #0
 800e5e4:	2101      	movgt	r1, #1
 800e5e6:	a811      	add	r0, sp, #68	; 0x44
 800e5e8:	f7ff fe69 	bl	800e2be <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800e5ec:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 800e5f0:	3b01      	subs	r3, #1
 800e5f2:	b29b      	uxth	r3, r3
 800e5f4:	455b      	cmp	r3, fp
 800e5f6:	930b      	str	r3, [sp, #44]	; 0x2c
 800e5f8:	d005      	beq.n	800e606 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x160>
 800e5fa:	7961      	ldrb	r1, [r4, #5]
 800e5fc:	4638      	mov	r0, r7
 800e5fe:	f7f6 f9db 	bl	80049b8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800e602:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800e604:	e7f4      	b.n	800e5f0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14a>
 800e606:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800e60a:	4453      	add	r3, sl
 800e60c:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800e610:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 800e614:	eba3 030a 	sub.w	r3, r3, sl
 800e618:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800e61c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800e620:	3d01      	subs	r5, #1
 800e622:	2b00      	cmp	r3, #0
 800e624:	d1d6      	bne.n	800e5d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12e>
 800e626:	b065      	add	sp, #404	; 0x194
 800e628:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e62c:	0075      	lsls	r5, r6, #1
 800e62e:	f04f 0a00 	mov.w	sl, #0
 800e632:	7c23      	ldrb	r3, [r4, #16]
 800e634:	2b00      	cmp	r3, #0
 800e636:	d066      	beq.n	800e706 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x260>
 800e638:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800e63c:	428d      	cmp	r5, r1
 800e63e:	bfd4      	ite	le
 800e640:	2100      	movle	r1, #0
 800e642:	2101      	movgt	r1, #1
 800e644:	a811      	add	r0, sp, #68	; 0x44
 800e646:	f7ff fe3a 	bl	800e2be <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800e64a:	9b08      	ldr	r3, [sp, #32]
 800e64c:	2b00      	cmp	r3, #0
 800e64e:	d055      	beq.n	800e6fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800e650:	f894 b010 	ldrb.w	fp, [r4, #16]
 800e654:	2264      	movs	r2, #100	; 0x64
 800e656:	4639      	mov	r1, r7
 800e658:	a84b      	add	r0, sp, #300	; 0x12c
 800e65a:	f00f f990 	bl	801d97e <memcpy>
 800e65e:	f1bb 0f00 	cmp.w	fp, #0
 800e662:	d058      	beq.n	800e716 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x270>
 800e664:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 800e668:	7922      	ldrb	r2, [r4, #4]
 800e66a:	2a01      	cmp	r2, #1
 800e66c:	d13c      	bne.n	800e6e8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 800e66e:	f9bd 0040 	ldrsh.w	r0, [sp, #64]	; 0x40
 800e672:	1ac0      	subs	r0, r0, r3
 800e674:	2302      	movs	r3, #2
 800e676:	fb90 f0f3 	sdiv	r0, r0, r3
 800e67a:	b200      	sxth	r0, r0
 800e67c:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800e680:	4418      	add	r0, r3
 800e682:	7c23      	ldrb	r3, [r4, #16]
 800e684:	b200      	sxth	r0, r0
 800e686:	2b00      	cmp	r3, #0
 800e688:	d03a      	beq.n	800e700 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25a>
 800e68a:	f8bd 2056 	ldrh.w	r2, [sp, #86]	; 0x56
 800e68e:	f89d 1062 	ldrb.w	r1, [sp, #98]	; 0x62
 800e692:	9000      	str	r0, [sp, #0]
 800e694:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800e698:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 800e69c:	980a      	ldr	r0, [sp, #40]	; 0x28
 800e69e:	e9cd a703 	strd	sl, r7, [sp, #12]
 800e6a2:	e9cd 8401 	strd	r8, r4, [sp, #4]
 800e6a6:	464a      	mov	r2, r9
 800e6a8:	2100      	movs	r1, #0
 800e6aa:	f7ff fc96 	bl	800dfda <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800e6ae:	2800      	cmp	r0, #0
 800e6b0:	d1b9      	bne.n	800e626 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800e6b2:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800e6b6:	b2b2      	uxth	r2, r6
 800e6b8:	4611      	mov	r1, r2
 800e6ba:	4413      	add	r3, r2
 800e6bc:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 800e6c0:	1a52      	subs	r2, r2, r1
 800e6c2:	7c21      	ldrb	r1, [r4, #16]
 800e6c4:	b21b      	sxth	r3, r3
 800e6c6:	b212      	sxth	r2, r2
 800e6c8:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800e6cc:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 800e6d0:	b109      	cbz	r1, 800e6d6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x230>
 800e6d2:	42b2      	cmp	r2, r6
 800e6d4:	dba7      	blt.n	800e626 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800e6d6:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 800e6da:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 800e6de:	440a      	add	r2, r1
 800e6e0:	b212      	sxth	r2, r2
 800e6e2:	4293      	cmp	r3, r2
 800e6e4:	dda5      	ble.n	800e632 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x18c>
 800e6e6:	e79e      	b.n	800e626 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800e6e8:	2a02      	cmp	r2, #2
 800e6ea:	d105      	bne.n	800e6f8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800e6ec:	7be2      	ldrb	r2, [r4, #15]
 800e6ee:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 800e6f2:	1a80      	subs	r0, r0, r2
 800e6f4:	1ac0      	subs	r0, r0, r3
 800e6f6:	e7c0      	b.n	800e67a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 800e6f8:	2000      	movs	r0, #0
 800e6fa:	e7bf      	b.n	800e67c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 800e6fc:	7be0      	ldrb	r0, [r4, #15]
 800e6fe:	e7bd      	b.n	800e67c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 800e700:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800e704:	e7c3      	b.n	800e68e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e8>
 800e706:	9b08      	ldr	r3, [sp, #32]
 800e708:	2b00      	cmp	r3, #0
 800e70a:	d0f7      	beq.n	800e6fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800e70c:	2264      	movs	r2, #100	; 0x64
 800e70e:	4639      	mov	r1, r7
 800e710:	a84b      	add	r0, sp, #300	; 0x12c
 800e712:	f00f f934 	bl	801d97e <memcpy>
 800e716:	2300      	movs	r3, #0
 800e718:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800e71c:	6821      	ldr	r1, [r4, #0]
 800e71e:	a84b      	add	r0, sp, #300	; 0x12c
 800e720:	f7ff fbee 	bl	800df00 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800e724:	b203      	sxth	r3, r0
 800e726:	e79f      	b.n	800e668 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c2>

0800e728 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800e728:	2b03      	cmp	r3, #3
 800e72a:	d818      	bhi.n	800e75e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 800e72c:	e8df f003 	tbb	[pc, r3]
 800e730:	130d0602 	.word	0x130d0602
 800e734:	f9b0 2000 	ldrsh.w	r2, [r0]
 800e738:	1850      	adds	r0, r2, r1
 800e73a:	4770      	bx	lr
 800e73c:	8803      	ldrh	r3, [r0, #0]
 800e73e:	8880      	ldrh	r0, [r0, #4]
 800e740:	4418      	add	r0, r3
 800e742:	b200      	sxth	r0, r0
 800e744:	1a80      	subs	r0, r0, r2
 800e746:	3801      	subs	r0, #1
 800e748:	4770      	bx	lr
 800e74a:	8803      	ldrh	r3, [r0, #0]
 800e74c:	8880      	ldrh	r0, [r0, #4]
 800e74e:	4418      	add	r0, r3
 800e750:	b200      	sxth	r0, r0
 800e752:	1a40      	subs	r0, r0, r1
 800e754:	e7f7      	b.n	800e746 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800e756:	f9b0 0000 	ldrsh.w	r0, [r0]
 800e75a:	4410      	add	r0, r2
 800e75c:	4770      	bx	lr
 800e75e:	2000      	movs	r0, #0
 800e760:	4770      	bx	lr

0800e762 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800e762:	2b03      	cmp	r3, #3
 800e764:	d817      	bhi.n	800e796 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 800e766:	e8df f003 	tbb	[pc, r3]
 800e76a:	0602      	.short	0x0602
 800e76c:	1009      	.short	0x1009
 800e76e:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800e772:	1850      	adds	r0, r2, r1
 800e774:	4770      	bx	lr
 800e776:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800e77a:	e7fa      	b.n	800e772 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 800e77c:	8843      	ldrh	r3, [r0, #2]
 800e77e:	88c0      	ldrh	r0, [r0, #6]
 800e780:	4418      	add	r0, r3
 800e782:	b200      	sxth	r0, r0
 800e784:	1a80      	subs	r0, r0, r2
 800e786:	3801      	subs	r0, #1
 800e788:	4770      	bx	lr
 800e78a:	8843      	ldrh	r3, [r0, #2]
 800e78c:	88c0      	ldrh	r0, [r0, #6]
 800e78e:	4418      	add	r0, r3
 800e790:	b200      	sxth	r0, r0
 800e792:	1a40      	subs	r0, r0, r1
 800e794:	e7f7      	b.n	800e786 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800e796:	2000      	movs	r0, #0
 800e798:	4770      	bx	lr
	...

0800e79c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800e79c:	4b01      	ldr	r3, [pc, #4]	; (800e7a4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800e79e:	2200      	movs	r2, #0
 800e7a0:	601a      	str	r2, [r3, #0]
 800e7a2:	4770      	bx	lr
 800e7a4:	200135b8 	.word	0x200135b8

0800e7a8 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800e7a8:	4603      	mov	r3, r0
 800e7aa:	b1c8      	cbz	r0, 800e7e0 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800e7ac:	0c02      	lsrs	r2, r0, #16
 800e7ae:	0412      	lsls	r2, r2, #16
 800e7b0:	b9a2      	cbnz	r2, 800e7dc <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800e7b2:	0403      	lsls	r3, r0, #16
 800e7b4:	2010      	movs	r0, #16
 800e7b6:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800e7ba:	bf04      	itt	eq
 800e7bc:	021b      	lsleq	r3, r3, #8
 800e7be:	3008      	addeq	r0, #8
 800e7c0:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800e7c4:	bf04      	itt	eq
 800e7c6:	011b      	lsleq	r3, r3, #4
 800e7c8:	3004      	addeq	r0, #4
 800e7ca:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800e7ce:	bf04      	itt	eq
 800e7d0:	009b      	lsleq	r3, r3, #2
 800e7d2:	3002      	addeq	r0, #2
 800e7d4:	2b00      	cmp	r3, #0
 800e7d6:	db04      	blt.n	800e7e2 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800e7d8:	3001      	adds	r0, #1
 800e7da:	4770      	bx	lr
 800e7dc:	2000      	movs	r0, #0
 800e7de:	e7ea      	b.n	800e7b6 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800e7e0:	2020      	movs	r0, #32
 800e7e2:	4770      	bx	lr

0800e7e4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800e7e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e7e8:	b087      	sub	sp, #28
 800e7ea:	4681      	mov	r9, r0
 800e7ec:	4698      	mov	r8, r3
 800e7ee:	4610      	mov	r0, r2
 800e7f0:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 800e7f4:	460d      	mov	r5, r1
 800e7f6:	b981      	cbnz	r1, 800e81a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 800e7f8:	b14b      	cbz	r3, 800e80e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 800e7fa:	460b      	mov	r3, r1
 800e7fc:	e9cd 4700 	strd	r4, r7, [sp]
 800e800:	464a      	mov	r2, r9
 800e802:	4641      	mov	r1, r8
 800e804:	f7ff ffee 	bl	800e7e4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800e808:	b007      	add	sp, #28
 800e80a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e80e:	f04f 33ff 	mov.w	r3, #4294967295
 800e812:	603b      	str	r3, [r7, #0]
 800e814:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800e818:	e7f6      	b.n	800e808 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800e81a:	fa32 fa01 	lsrs.w	sl, r2, r1
 800e81e:	d107      	bne.n	800e830 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 800e820:	fb09 f602 	mul.w	r6, r9, r2
 800e824:	fbb6 f0f4 	udiv	r0, r6, r4
 800e828:	fb04 6610 	mls	r6, r4, r0, r6
 800e82c:	603e      	str	r6, [r7, #0]
 800e82e:	e7eb      	b.n	800e808 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800e830:	2601      	movs	r6, #1
 800e832:	408e      	lsls	r6, r1
 800e834:	3e01      	subs	r6, #1
 800e836:	4016      	ands	r6, r2
 800e838:	fa09 fb01 	lsl.w	fp, r9, r1
 800e83c:	4630      	mov	r0, r6
 800e83e:	fbbb f3f4 	udiv	r3, fp, r4
 800e842:	9302      	str	r3, [sp, #8]
 800e844:	fb0a f303 	mul.w	r3, sl, r3
 800e848:	9303      	str	r3, [sp, #12]
 800e84a:	f7ff ffad 	bl	800e7a8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800e84e:	464a      	mov	r2, r9
 800e850:	460b      	mov	r3, r1
 800e852:	e9cd 4700 	strd	r4, r7, [sp]
 800e856:	4601      	mov	r1, r0
 800e858:	4630      	mov	r0, r6
 800e85a:	f7ff ffc3 	bl	800e7e4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800e85e:	9b02      	ldr	r3, [sp, #8]
 800e860:	fb04 bb13 	mls	fp, r4, r3, fp
 800e864:	4606      	mov	r6, r0
 800e866:	4658      	mov	r0, fp
 800e868:	eb05 0108 	add.w	r1, r5, r8
 800e86c:	f7ff ff9c 	bl	800e7a8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800e870:	ab05      	add	r3, sp, #20
 800e872:	e9cd 4300 	strd	r4, r3, [sp]
 800e876:	465a      	mov	r2, fp
 800e878:	4603      	mov	r3, r0
 800e87a:	4650      	mov	r0, sl
 800e87c:	f7ff ffb2 	bl	800e7e4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800e880:	6839      	ldr	r1, [r7, #0]
 800e882:	9a05      	ldr	r2, [sp, #20]
 800e884:	9b03      	ldr	r3, [sp, #12]
 800e886:	4411      	add	r1, r2
 800e888:	fbb1 f2f4 	udiv	r2, r1, r4
 800e88c:	18d3      	adds	r3, r2, r3
 800e88e:	441e      	add	r6, r3
 800e890:	fb04 1412 	mls	r4, r4, r2, r1
 800e894:	4430      	add	r0, r6
 800e896:	603c      	str	r4, [r7, #0]
 800e898:	e7b6      	b.n	800e808 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

0800e89a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800e89a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e89e:	b085      	sub	sp, #20
 800e8a0:	f1b0 0900 	subs.w	r9, r0, #0
 800e8a4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800e8a6:	461d      	mov	r5, r3
 800e8a8:	bfbf      	itttt	lt
 800e8aa:	6823      	ldrlt	r3, [r4, #0]
 800e8ac:	425b      	neglt	r3, r3
 800e8ae:	f1c9 0900 	rsblt	r9, r9, #0
 800e8b2:	6023      	strlt	r3, [r4, #0]
 800e8b4:	bfb4      	ite	lt
 800e8b6:	f04f 36ff 	movlt.w	r6, #4294967295
 800e8ba:	2601      	movge	r6, #1
 800e8bc:	2a00      	cmp	r2, #0
 800e8be:	4617      	mov	r7, r2
 800e8c0:	da04      	bge.n	800e8cc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800e8c2:	6823      	ldr	r3, [r4, #0]
 800e8c4:	425b      	negs	r3, r3
 800e8c6:	4257      	negs	r7, r2
 800e8c8:	4276      	negs	r6, r6
 800e8ca:	6023      	str	r3, [r4, #0]
 800e8cc:	2d00      	cmp	r5, #0
 800e8ce:	4638      	mov	r0, r7
 800e8d0:	bfba      	itte	lt
 800e8d2:	426d      	neglt	r5, r5
 800e8d4:	f04f 38ff 	movlt.w	r8, #4294967295
 800e8d8:	f04f 0801 	movge.w	r8, #1
 800e8dc:	f7ff ff64 	bl	800e7a8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800e8e0:	ab03      	add	r3, sp, #12
 800e8e2:	e9cd 5300 	strd	r5, r3, [sp]
 800e8e6:	463a      	mov	r2, r7
 800e8e8:	4603      	mov	r3, r0
 800e8ea:	4648      	mov	r0, r9
 800e8ec:	f7ff ff7a 	bl	800e7e4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800e8f0:	6823      	ldr	r3, [r4, #0]
 800e8f2:	9a03      	ldr	r2, [sp, #12]
 800e8f4:	4546      	cmp	r6, r8
 800e8f6:	441a      	add	r2, r3
 800e8f8:	fb92 f3f5 	sdiv	r3, r2, r5
 800e8fc:	4418      	add	r0, r3
 800e8fe:	bf18      	it	ne
 800e900:	4240      	negne	r0, r0
 800e902:	fb05 2313 	mls	r3, r5, r3, r2
 800e906:	1c72      	adds	r2, r6, #1
 800e908:	6023      	str	r3, [r4, #0]
 800e90a:	d105      	bne.n	800e918 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800e90c:	2b00      	cmp	r3, #0
 800e90e:	f1c3 0200 	rsb	r2, r3, #0
 800e912:	db0b      	blt.n	800e92c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800e914:	6022      	str	r2, [r4, #0]
 800e916:	e006      	b.n	800e926 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800e918:	2e01      	cmp	r6, #1
 800e91a:	d104      	bne.n	800e926 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800e91c:	2b00      	cmp	r3, #0
 800e91e:	da02      	bge.n	800e926 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800e920:	442b      	add	r3, r5
 800e922:	3801      	subs	r0, #1
 800e924:	6023      	str	r3, [r4, #0]
 800e926:	b005      	add	sp, #20
 800e928:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e92c:	3801      	subs	r0, #1
 800e92e:	1b52      	subs	r2, r2, r5
 800e930:	e7f0      	b.n	800e914 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

0800e934 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800e934:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800e938:	4c1c      	ldr	r4, [pc, #112]	; (800e9ac <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800e93a:	6807      	ldr	r7, [r0, #0]
 800e93c:	69a3      	ldr	r3, [r4, #24]
 800e93e:	4605      	mov	r5, r0
 800e940:	b92b      	cbnz	r3, 800e94e <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800e942:	6840      	ldr	r0, [r0, #4]
 800e944:	e9c5 7000 	strd	r7, r0, [r5]
 800e948:	b004      	add	sp, #16
 800e94a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e94e:	68a2      	ldr	r2, [r4, #8]
 800e950:	6820      	ldr	r0, [r4, #0]
 800e952:	ae04      	add	r6, sp, #16
 800e954:	f04f 0802 	mov.w	r8, #2
 800e958:	fb93 f1f8 	sdiv	r1, r3, r8
 800e95c:	440a      	add	r2, r1
 800e95e:	f846 2d04 	str.w	r2, [r6, #-4]!
 800e962:	69e1      	ldr	r1, [r4, #28]
 800e964:	9600      	str	r6, [sp, #0]
 800e966:	463a      	mov	r2, r7
 800e968:	f7ff ff97 	bl	800e89a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800e96c:	69a3      	ldr	r3, [r4, #24]
 800e96e:	686a      	ldr	r2, [r5, #4]
 800e970:	6a21      	ldr	r1, [r4, #32]
 800e972:	9600      	str	r6, [sp, #0]
 800e974:	4607      	mov	r7, r0
 800e976:	6860      	ldr	r0, [r4, #4]
 800e978:	f7ff ff8f 	bl	800e89a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800e97c:	6962      	ldr	r2, [r4, #20]
 800e97e:	69a3      	ldr	r3, [r4, #24]
 800e980:	fb93 f8f8 	sdiv	r8, r3, r8
 800e984:	4442      	add	r2, r8
 800e986:	9203      	str	r2, [sp, #12]
 800e988:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800e98a:	682a      	ldr	r2, [r5, #0]
 800e98c:	9600      	str	r6, [sp, #0]
 800e98e:	4407      	add	r7, r0
 800e990:	68e0      	ldr	r0, [r4, #12]
 800e992:	f7ff ff82 	bl	800e89a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800e996:	9600      	str	r6, [sp, #0]
 800e998:	4680      	mov	r8, r0
 800e99a:	69a3      	ldr	r3, [r4, #24]
 800e99c:	686a      	ldr	r2, [r5, #4]
 800e99e:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800e9a0:	6920      	ldr	r0, [r4, #16]
 800e9a2:	f7ff ff7a 	bl	800e89a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800e9a6:	4440      	add	r0, r8
 800e9a8:	e7cc      	b.n	800e944 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800e9aa:	bf00      	nop
 800e9ac:	200135bc 	.word	0x200135bc

0800e9b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800e9b0:	4b07      	ldr	r3, [pc, #28]	; (800e9d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800e9b2:	781b      	ldrb	r3, [r3, #0]
 800e9b4:	2b01      	cmp	r3, #1
 800e9b6:	d109      	bne.n	800e9cc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800e9b8:	f9b1 3000 	ldrsh.w	r3, [r1]
 800e9bc:	f9b0 2000 	ldrsh.w	r2, [r0]
 800e9c0:	8003      	strh	r3, [r0, #0]
 800e9c2:	4b04      	ldr	r3, [pc, #16]	; (800e9d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800e9c4:	881b      	ldrh	r3, [r3, #0]
 800e9c6:	3b01      	subs	r3, #1
 800e9c8:	1a9b      	subs	r3, r3, r2
 800e9ca:	800b      	strh	r3, [r1, #0]
 800e9cc:	4770      	bx	lr
 800e9ce:	bf00      	nop
 800e9d0:	200135a8 	.word	0x200135a8
 800e9d4:	200135a4 	.word	0x200135a4

0800e9d8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800e9d8:	b510      	push	{r4, lr}
 800e9da:	4b07      	ldr	r3, [pc, #28]	; (800e9f8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800e9dc:	781b      	ldrb	r3, [r3, #0]
 800e9de:	2b01      	cmp	r3, #1
 800e9e0:	d108      	bne.n	800e9f4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800e9e2:	4b06      	ldr	r3, [pc, #24]	; (800e9fc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800e9e4:	880c      	ldrh	r4, [r1, #0]
 800e9e6:	881b      	ldrh	r3, [r3, #0]
 800e9e8:	f9b0 2000 	ldrsh.w	r2, [r0]
 800e9ec:	3b01      	subs	r3, #1
 800e9ee:	1b1b      	subs	r3, r3, r4
 800e9f0:	8003      	strh	r3, [r0, #0]
 800e9f2:	800a      	strh	r2, [r1, #0]
 800e9f4:	bd10      	pop	{r4, pc}
 800e9f6:	bf00      	nop
 800e9f8:	200135a8 	.word	0x200135a8
 800e9fc:	200135a4 	.word	0x200135a4

0800ea00 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800ea00:	b510      	push	{r4, lr}
 800ea02:	4b0a      	ldr	r3, [pc, #40]	; (800ea2c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800ea04:	781b      	ldrb	r3, [r3, #0]
 800ea06:	2b01      	cmp	r3, #1
 800ea08:	d10e      	bne.n	800ea28 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800ea0a:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800ea0e:	8843      	ldrh	r3, [r0, #2]
 800ea10:	f9b0 4000 	ldrsh.w	r4, [r0]
 800ea14:	8044      	strh	r4, [r0, #2]
 800ea16:	18ca      	adds	r2, r1, r3
 800ea18:	4b05      	ldr	r3, [pc, #20]	; (800ea30 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800ea1a:	881b      	ldrh	r3, [r3, #0]
 800ea1c:	1a9b      	subs	r3, r3, r2
 800ea1e:	8003      	strh	r3, [r0, #0]
 800ea20:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800ea24:	80c3      	strh	r3, [r0, #6]
 800ea26:	8081      	strh	r1, [r0, #4]
 800ea28:	bd10      	pop	{r4, pc}
 800ea2a:	bf00      	nop
 800ea2c:	200135a8 	.word	0x200135a8
 800ea30:	200135a4 	.word	0x200135a4

0800ea34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800ea34:	4b08      	ldr	r3, [pc, #32]	; (800ea58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800ea36:	781b      	ldrb	r3, [r3, #0]
 800ea38:	2b01      	cmp	r3, #1
 800ea3a:	d10c      	bne.n	800ea56 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800ea3c:	8803      	ldrh	r3, [r0, #0]
 800ea3e:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800ea42:	8842      	ldrh	r2, [r0, #2]
 800ea44:	8002      	strh	r2, [r0, #0]
 800ea46:	185a      	adds	r2, r3, r1
 800ea48:	4b04      	ldr	r3, [pc, #16]	; (800ea5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800ea4a:	881b      	ldrh	r3, [r3, #0]
 800ea4c:	1a9b      	subs	r3, r3, r2
 800ea4e:	8043      	strh	r3, [r0, #2]
 800ea50:	88c3      	ldrh	r3, [r0, #6]
 800ea52:	8083      	strh	r3, [r0, #4]
 800ea54:	80c1      	strh	r1, [r0, #6]
 800ea56:	4770      	bx	lr
 800ea58:	200135a8 	.word	0x200135a8
 800ea5c:	200135a4 	.word	0x200135a4

0800ea60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800ea60:	b510      	push	{r4, lr}
 800ea62:	4b07      	ldr	r3, [pc, #28]	; (800ea80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800ea64:	781b      	ldrb	r3, [r3, #0]
 800ea66:	2b01      	cmp	r3, #1
 800ea68:	d108      	bne.n	800ea7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800ea6a:	f9b1 3000 	ldrsh.w	r3, [r1]
 800ea6e:	f9b0 4000 	ldrsh.w	r4, [r0]
 800ea72:	8003      	strh	r3, [r0, #0]
 800ea74:	8893      	ldrh	r3, [r2, #4]
 800ea76:	3b01      	subs	r3, #1
 800ea78:	1b1b      	subs	r3, r3, r4
 800ea7a:	800b      	strh	r3, [r1, #0]
 800ea7c:	bd10      	pop	{r4, pc}
 800ea7e:	bf00      	nop
 800ea80:	200135a8 	.word	0x200135a8

0800ea84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 800ea84:	4b0b      	ldr	r3, [pc, #44]	; (800eab4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 800ea86:	781b      	ldrb	r3, [r3, #0]
 800ea88:	2b01      	cmp	r3, #1
 800ea8a:	d111      	bne.n	800eab0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 800ea8c:	680b      	ldr	r3, [r1, #0]
 800ea8e:	ed90 7a00 	vldr	s14, [r0]
 800ea92:	6003      	str	r3, [r0, #0]
 800ea94:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 800ea98:	eddf 6a07 	vldr	s13, [pc, #28]	; 800eab8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 800ea9c:	ee07 3a90 	vmov	s15, r3
 800eaa0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800eaa4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800eaa8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800eaac:	edc1 7a00 	vstr	s15, [r1]
 800eab0:	4770      	bx	lr
 800eab2:	bf00      	nop
 800eab4:	200135a8 	.word	0x200135a8
 800eab8:	38d1b717 	.word	0x38d1b717

0800eabc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800eabc:	b510      	push	{r4, lr}
 800eabe:	4b0a      	ldr	r3, [pc, #40]	; (800eae8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800eac0:	781b      	ldrb	r3, [r3, #0]
 800eac2:	2b01      	cmp	r3, #1
 800eac4:	460a      	mov	r2, r1
 800eac6:	d10d      	bne.n	800eae4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800eac8:	8881      	ldrh	r1, [r0, #4]
 800eaca:	8803      	ldrh	r3, [r0, #0]
 800eacc:	440b      	add	r3, r1
 800eace:	4601      	mov	r1, r0
 800ead0:	3b01      	subs	r3, #1
 800ead2:	f821 3b02 	strh.w	r3, [r1], #2
 800ead6:	f7ff ffc3 	bl	800ea60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800eada:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800eade:	88c2      	ldrh	r2, [r0, #6]
 800eae0:	8082      	strh	r2, [r0, #4]
 800eae2:	80c3      	strh	r3, [r0, #6]
 800eae4:	bd10      	pop	{r4, pc}
 800eae6:	bf00      	nop
 800eae8:	200135a8 	.word	0x200135a8

0800eaec <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800eaec:	b570      	push	{r4, r5, r6, lr}
 800eaee:	4c0b      	ldr	r4, [pc, #44]	; (800eb1c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 800eaf0:	2300      	movs	r3, #0
 800eaf2:	4605      	mov	r5, r0
 800eaf4:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800eaf8:	6820      	ldr	r0, [r4, #0]
 800eafa:	460e      	mov	r6, r1
 800eafc:	b110      	cbz	r0, 800eb04 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x18>
 800eafe:	6803      	ldr	r3, [r0, #0]
 800eb00:	695b      	ldr	r3, [r3, #20]
 800eb02:	4798      	blx	r3
 800eb04:	6026      	str	r6, [r4, #0]
 800eb06:	6833      	ldr	r3, [r6, #0]
 800eb08:	4630      	mov	r0, r6
 800eb0a:	68db      	ldr	r3, [r3, #12]
 800eb0c:	4798      	blx	r3
 800eb0e:	682b      	ldr	r3, [r5, #0]
 800eb10:	4628      	mov	r0, r5
 800eb12:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800eb14:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800eb18:	4718      	bx	r3
 800eb1a:	bf00      	nop
 800eb1c:	200135ec 	.word	0x200135ec

0800eb20 <_ZN8touchgfx11Application13requestRedrawEv>:
 800eb20:	4b06      	ldr	r3, [pc, #24]	; (800eb3c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800eb22:	f9b3 2000 	ldrsh.w	r2, [r3]
 800eb26:	4b06      	ldr	r3, [pc, #24]	; (800eb40 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800eb28:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 800eb2c:	f9b3 3000 	ldrsh.w	r3, [r3]
 800eb30:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 800eb34:	2100      	movs	r1, #0
 800eb36:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 800eb3a:	4770      	bx	lr
 800eb3c:	200135a4 	.word	0x200135a4
 800eb40:	200135a6 	.word	0x200135a6

0800eb44 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800eb44:	4b03      	ldr	r3, [pc, #12]	; (800eb54 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800eb46:	6818      	ldr	r0, [r3, #0]
 800eb48:	b110      	cbz	r0, 800eb50 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800eb4a:	6803      	ldr	r3, [r0, #0]
 800eb4c:	699b      	ldr	r3, [r3, #24]
 800eb4e:	4718      	bx	r3
 800eb50:	4770      	bx	lr
 800eb52:	bf00      	nop
 800eb54:	200135ec 	.word	0x200135ec

0800eb58 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800eb58:	4770      	bx	lr
	...

0800eb5c <_ZN8touchgfx11Application4drawEv>:
 800eb5c:	b507      	push	{r0, r1, r2, lr}
 800eb5e:	4b09      	ldr	r3, [pc, #36]	; (800eb84 <_ZN8touchgfx11Application4drawEv+0x28>)
 800eb60:	f9b3 2000 	ldrsh.w	r2, [r3]
 800eb64:	4b08      	ldr	r3, [pc, #32]	; (800eb88 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800eb66:	f8ad 2004 	strh.w	r2, [sp, #4]
 800eb6a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800eb6e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800eb72:	6803      	ldr	r3, [r0, #0]
 800eb74:	2100      	movs	r1, #0
 800eb76:	9100      	str	r1, [sp, #0]
 800eb78:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800eb7a:	4669      	mov	r1, sp
 800eb7c:	4798      	blx	r3
 800eb7e:	b003      	add	sp, #12
 800eb80:	f85d fb04 	ldr.w	pc, [sp], #4
 800eb84:	200135a4 	.word	0x200135a4
 800eb88:	200135a6 	.word	0x200135a6

0800eb8c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800eb8c:	4b03      	ldr	r3, [pc, #12]	; (800eb9c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800eb8e:	6818      	ldr	r0, [r3, #0]
 800eb90:	b110      	cbz	r0, 800eb98 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800eb92:	6803      	ldr	r3, [r0, #0]
 800eb94:	69db      	ldr	r3, [r3, #28]
 800eb96:	4718      	bx	r3
 800eb98:	4770      	bx	lr
 800eb9a:	bf00      	nop
 800eb9c:	200135ec 	.word	0x200135ec

0800eba0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800eba0:	4b03      	ldr	r3, [pc, #12]	; (800ebb0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800eba2:	6818      	ldr	r0, [r3, #0]
 800eba4:	b110      	cbz	r0, 800ebac <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800eba6:	6803      	ldr	r3, [r0, #0]
 800eba8:	6a1b      	ldr	r3, [r3, #32]
 800ebaa:	4718      	bx	r3
 800ebac:	4770      	bx	lr
 800ebae:	bf00      	nop
 800ebb0:	200135ec 	.word	0x200135ec

0800ebb4 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800ebb4:	2300      	movs	r3, #0
 800ebb6:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 800ebba:	4770      	bx	lr

0800ebbc <_ZN8touchgfx11Application14handleKeyEventEh>:
 800ebbc:	4b03      	ldr	r3, [pc, #12]	; (800ebcc <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800ebbe:	6818      	ldr	r0, [r3, #0]
 800ebc0:	b110      	cbz	r0, 800ebc8 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800ebc2:	6803      	ldr	r3, [r0, #0]
 800ebc4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ebc6:	4718      	bx	r3
 800ebc8:	4770      	bx	lr
 800ebca:	bf00      	nop
 800ebcc:	200135ec 	.word	0x200135ec

0800ebd0 <_ZN8touchgfx11Application15handleTickEventEv>:
 800ebd0:	b570      	push	{r4, r5, r6, lr}
 800ebd2:	4d32      	ldr	r5, [pc, #200]	; (800ec9c <_ZN8touchgfx11Application15handleTickEventEv+0xcc>)
 800ebd4:	4604      	mov	r4, r0
 800ebd6:	6828      	ldr	r0, [r5, #0]
 800ebd8:	b140      	cbz	r0, 800ebec <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800ebda:	7a03      	ldrb	r3, [r0, #8]
 800ebdc:	b933      	cbnz	r3, 800ebec <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800ebde:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 800ebe2:	6803      	ldr	r3, [r0, #0]
 800ebe4:	689b      	ldr	r3, [r3, #8]
 800ebe6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ebea:	4718      	bx	r3
 800ebec:	f894 3134 	ldrb.w	r3, [r4, #308]	; 0x134
 800ebf0:	b97b      	cbnz	r3, 800ec12 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800ebf2:	b170      	cbz	r0, 800ec12 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800ebf4:	7a03      	ldrb	r3, [r0, #8]
 800ebf6:	b163      	cbz	r3, 800ec12 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800ebf8:	4b29      	ldr	r3, [pc, #164]	; (800eca0 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 800ebfa:	6818      	ldr	r0, [r3, #0]
 800ebfc:	b110      	cbz	r0, 800ec04 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800ebfe:	6803      	ldr	r3, [r0, #0]
 800ec00:	691b      	ldr	r3, [r3, #16]
 800ec02:	4798      	blx	r3
 800ec04:	6828      	ldr	r0, [r5, #0]
 800ec06:	6803      	ldr	r3, [r0, #0]
 800ec08:	68db      	ldr	r3, [r3, #12]
 800ec0a:	4798      	blx	r3
 800ec0c:	2301      	movs	r3, #1
 800ec0e:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 800ec12:	2500      	movs	r5, #0
 800ec14:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 800ec18:	42a8      	cmp	r0, r5
 800ec1a:	dd0c      	ble.n	800ec36 <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 800ec1c:	1963      	adds	r3, r4, r5
 800ec1e:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800ec22:	b132      	cbz	r2, 800ec32 <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 800ec24:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800ec28:	4413      	add	r3, r2
 800ec2a:	6858      	ldr	r0, [r3, #4]
 800ec2c:	6803      	ldr	r3, [r0, #0]
 800ec2e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800ec30:	4798      	blx	r3
 800ec32:	3501      	adds	r5, #1
 800ec34:	e7ee      	b.n	800ec14 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800ec36:	2300      	movs	r3, #0
 800ec38:	461a      	mov	r2, r3
 800ec3a:	4298      	cmp	r0, r3
 800ec3c:	d015      	beq.n	800ec6a <_ZN8touchgfx11Application15handleTickEventEv+0x9a>
 800ec3e:	18e1      	adds	r1, r4, r3
 800ec40:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 800ec44:	b16d      	cbz	r5, 800ec62 <_ZN8touchgfx11Application15handleTickEventEv+0x92>
 800ec46:	429a      	cmp	r2, r3
 800ec48:	d00a      	beq.n	800ec60 <_ZN8touchgfx11Application15handleTickEventEv+0x90>
 800ec4a:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 800ec4e:	4431      	add	r1, r6
 800ec50:	684e      	ldr	r6, [r1, #4]
 800ec52:	b291      	uxth	r1, r2
 800ec54:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 800ec58:	604e      	str	r6, [r1, #4]
 800ec5a:	18a1      	adds	r1, r4, r2
 800ec5c:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 800ec60:	3201      	adds	r2, #1
 800ec62:	3301      	adds	r3, #1
 800ec64:	e7e9      	b.n	800ec3a <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 800ec66:	f8a4 3084 	strh.w	r3, [r4, #132]	; 0x84
 800ec6a:	f8b4 5084 	ldrh.w	r5, [r4, #132]	; 0x84
 800ec6e:	4295      	cmp	r5, r2
 800ec70:	dd0d      	ble.n	800ec8e <_ZN8touchgfx11Application15handleTickEventEv+0xbe>
 800ec72:	1e6b      	subs	r3, r5, #1
 800ec74:	b29b      	uxth	r3, r3
 800ec76:	eb04 0183 	add.w	r1, r4, r3, lsl #2
 800ec7a:	4618      	mov	r0, r3
 800ec7c:	3104      	adds	r1, #4
 800ec7e:	4285      	cmp	r5, r0
 800ec80:	ddf1      	ble.n	800ec66 <_ZN8touchgfx11Application15handleTickEventEv+0x96>
 800ec82:	f851 6f04 	ldr.w	r6, [r1, #4]!
 800ec86:	f841 6c04 	str.w	r6, [r1, #-4]
 800ec8a:	3001      	adds	r0, #1
 800ec8c:	e7f7      	b.n	800ec7e <_ZN8touchgfx11Application15handleTickEventEv+0xae>
 800ec8e:	4b04      	ldr	r3, [pc, #16]	; (800eca0 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 800ec90:	6818      	ldr	r0, [r3, #0]
 800ec92:	b110      	cbz	r0, 800ec9a <_ZN8touchgfx11Application15handleTickEventEv+0xca>
 800ec94:	6803      	ldr	r3, [r0, #0]
 800ec96:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ec98:	e7a5      	b.n	800ebe6 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800ec9a:	bd70      	pop	{r4, r5, r6, pc}
 800ec9c:	200135f0 	.word	0x200135f0
 800eca0:	200135ec 	.word	0x200135ec

0800eca4 <_ZN8touchgfx11ApplicationD1Ev>:
 800eca4:	4770      	bx	lr

0800eca6 <_ZN8touchgfx11ApplicationD0Ev>:
 800eca6:	b510      	push	{r4, lr}
 800eca8:	f44f 719c 	mov.w	r1, #312	; 0x138
 800ecac:	4604      	mov	r4, r0
 800ecae:	f00e fb63 	bl	801d378 <_ZdlPvj>
 800ecb2:	4620      	mov	r0, r4
 800ecb4:	bd10      	pop	{r4, pc}

0800ecb6 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800ecb6:	b510      	push	{r4, lr}
 800ecb8:	f9b1 4000 	ldrsh.w	r4, [r1]
 800ecbc:	888a      	ldrh	r2, [r1, #4]
 800ecbe:	f9b0 3000 	ldrsh.w	r3, [r0]
 800ecc2:	4422      	add	r2, r4
 800ecc4:	b212      	sxth	r2, r2
 800ecc6:	4293      	cmp	r3, r2
 800ecc8:	da15      	bge.n	800ecf6 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800ecca:	8882      	ldrh	r2, [r0, #4]
 800eccc:	4413      	add	r3, r2
 800ecce:	b21b      	sxth	r3, r3
 800ecd0:	429c      	cmp	r4, r3
 800ecd2:	da10      	bge.n	800ecf6 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800ecd4:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800ecd8:	88c9      	ldrh	r1, [r1, #6]
 800ecda:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800ecde:	4419      	add	r1, r3
 800ece0:	b209      	sxth	r1, r1
 800ece2:	428a      	cmp	r2, r1
 800ece4:	da07      	bge.n	800ecf6 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800ece6:	88c0      	ldrh	r0, [r0, #6]
 800ece8:	4410      	add	r0, r2
 800ecea:	b200      	sxth	r0, r0
 800ecec:	4283      	cmp	r3, r0
 800ecee:	bfac      	ite	ge
 800ecf0:	2000      	movge	r0, #0
 800ecf2:	2001      	movlt	r0, #1
 800ecf4:	bd10      	pop	{r4, pc}
 800ecf6:	2000      	movs	r0, #0
 800ecf8:	e7fc      	b.n	800ecf4 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800ecfa <_ZN8touchgfx4Rect10restrictToEss>:
 800ecfa:	f9b0 3000 	ldrsh.w	r3, [r0]
 800ecfe:	2b00      	cmp	r3, #0
 800ed00:	b510      	push	{r4, lr}
 800ed02:	da04      	bge.n	800ed0e <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800ed04:	8884      	ldrh	r4, [r0, #4]
 800ed06:	4423      	add	r3, r4
 800ed08:	8083      	strh	r3, [r0, #4]
 800ed0a:	2300      	movs	r3, #0
 800ed0c:	8003      	strh	r3, [r0, #0]
 800ed0e:	f9b0 4000 	ldrsh.w	r4, [r0]
 800ed12:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800ed16:	1b09      	subs	r1, r1, r4
 800ed18:	428b      	cmp	r3, r1
 800ed1a:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800ed1e:	bfc8      	it	gt
 800ed20:	8081      	strhgt	r1, [r0, #4]
 800ed22:	2b00      	cmp	r3, #0
 800ed24:	da04      	bge.n	800ed30 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800ed26:	88c1      	ldrh	r1, [r0, #6]
 800ed28:	440b      	add	r3, r1
 800ed2a:	80c3      	strh	r3, [r0, #6]
 800ed2c:	2300      	movs	r3, #0
 800ed2e:	8043      	strh	r3, [r0, #2]
 800ed30:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800ed34:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800ed38:	1a52      	subs	r2, r2, r1
 800ed3a:	4293      	cmp	r3, r2
 800ed3c:	bfc8      	it	gt
 800ed3e:	80c2      	strhgt	r2, [r0, #6]
 800ed40:	bd10      	pop	{r4, pc}
	...

0800ed44 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800ed44:	b510      	push	{r4, lr}
 800ed46:	4b10      	ldr	r3, [pc, #64]	; (800ed88 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800ed48:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ed4c:	4b0f      	ldr	r3, [pc, #60]	; (800ed8c <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800ed4e:	460c      	mov	r4, r1
 800ed50:	4620      	mov	r0, r4
 800ed52:	f9b3 1000 	ldrsh.w	r1, [r3]
 800ed56:	f7ff ffd0 	bl	800ecfa <_ZN8touchgfx4Rect10restrictToEss>
 800ed5a:	4b0d      	ldr	r3, [pc, #52]	; (800ed90 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800ed5c:	6818      	ldr	r0, [r3, #0]
 800ed5e:	b190      	cbz	r0, 800ed86 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800ed60:	6803      	ldr	r3, [r0, #0]
 800ed62:	4621      	mov	r1, r4
 800ed64:	689b      	ldr	r3, [r3, #8]
 800ed66:	4798      	blx	r3
 800ed68:	4b0a      	ldr	r3, [pc, #40]	; (800ed94 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800ed6a:	6818      	ldr	r0, [r3, #0]
 800ed6c:	b118      	cbz	r0, 800ed76 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800ed6e:	6803      	ldr	r3, [r0, #0]
 800ed70:	4621      	mov	r1, r4
 800ed72:	689b      	ldr	r3, [r3, #8]
 800ed74:	4798      	blx	r3
 800ed76:	4b08      	ldr	r3, [pc, #32]	; (800ed98 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800ed78:	6818      	ldr	r0, [r3, #0]
 800ed7a:	6803      	ldr	r3, [r0, #0]
 800ed7c:	4621      	mov	r1, r4
 800ed7e:	69db      	ldr	r3, [r3, #28]
 800ed80:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ed84:	4718      	bx	r3
 800ed86:	bd10      	pop	{r4, pc}
 800ed88:	200135a6 	.word	0x200135a6
 800ed8c:	200135a4 	.word	0x200135a4
 800ed90:	200135ec 	.word	0x200135ec
 800ed94:	200135e8 	.word	0x200135e8
 800ed98:	200135b0 	.word	0x200135b0

0800ed9c <_ZNK8touchgfx4Rect8includesERKS0_>:
 800ed9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ed9e:	4606      	mov	r6, r0
 800eda0:	4608      	mov	r0, r1
 800eda2:	460f      	mov	r7, r1
 800eda4:	f7fc f9f9 	bl	800b19a <_ZNK8touchgfx4Rect7isEmptyEv>
 800eda8:	b9e8      	cbnz	r0, 800ede6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800edaa:	f9b7 5000 	ldrsh.w	r5, [r7]
 800edae:	f9b6 4000 	ldrsh.w	r4, [r6]
 800edb2:	42a5      	cmp	r5, r4
 800edb4:	db17      	blt.n	800ede6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800edb6:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800edba:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800edbe:	429a      	cmp	r2, r3
 800edc0:	db11      	blt.n	800ede6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800edc2:	88b9      	ldrh	r1, [r7, #4]
 800edc4:	440d      	add	r5, r1
 800edc6:	88b1      	ldrh	r1, [r6, #4]
 800edc8:	440c      	add	r4, r1
 800edca:	b22d      	sxth	r5, r5
 800edcc:	b224      	sxth	r4, r4
 800edce:	42a5      	cmp	r5, r4
 800edd0:	dc09      	bgt.n	800ede6 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800edd2:	88f8      	ldrh	r0, [r7, #6]
 800edd4:	4410      	add	r0, r2
 800edd6:	88f2      	ldrh	r2, [r6, #6]
 800edd8:	4413      	add	r3, r2
 800edda:	b200      	sxth	r0, r0
 800eddc:	b21b      	sxth	r3, r3
 800edde:	4298      	cmp	r0, r3
 800ede0:	bfcc      	ite	gt
 800ede2:	2000      	movgt	r0, #0
 800ede4:	2001      	movle	r0, #1
 800ede6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800ede8 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800ede8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800edea:	4604      	mov	r4, r0
 800edec:	4608      	mov	r0, r1
 800edee:	460d      	mov	r5, r1
 800edf0:	f7fc f9d3 	bl	800b19a <_ZNK8touchgfx4Rect7isEmptyEv>
 800edf4:	b978      	cbnz	r0, 800ee16 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800edf6:	4620      	mov	r0, r4
 800edf8:	f7fc f9cf 	bl	800b19a <_ZNK8touchgfx4Rect7isEmptyEv>
 800edfc:	f9b5 6000 	ldrsh.w	r6, [r5]
 800ee00:	b150      	cbz	r0, 800ee18 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800ee02:	8026      	strh	r6, [r4, #0]
 800ee04:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800ee08:	8063      	strh	r3, [r4, #2]
 800ee0a:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800ee0e:	80a3      	strh	r3, [r4, #4]
 800ee10:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800ee14:	80e3      	strh	r3, [r4, #6]
 800ee16:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ee18:	f9b4 1000 	ldrsh.w	r1, [r4]
 800ee1c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800ee20:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800ee24:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800ee28:	88ed      	ldrh	r5, [r5, #6]
 800ee2a:	42b1      	cmp	r1, r6
 800ee2c:	460f      	mov	r7, r1
 800ee2e:	bfa8      	it	ge
 800ee30:	4637      	movge	r7, r6
 800ee32:	4293      	cmp	r3, r2
 800ee34:	4618      	mov	r0, r3
 800ee36:	4466      	add	r6, ip
 800ee38:	bfa8      	it	ge
 800ee3a:	4610      	movge	r0, r2
 800ee3c:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800ee40:	8027      	strh	r7, [r4, #0]
 800ee42:	442a      	add	r2, r5
 800ee44:	88e5      	ldrh	r5, [r4, #6]
 800ee46:	8060      	strh	r0, [r4, #2]
 800ee48:	4461      	add	r1, ip
 800ee4a:	442b      	add	r3, r5
 800ee4c:	b236      	sxth	r6, r6
 800ee4e:	b209      	sxth	r1, r1
 800ee50:	b212      	sxth	r2, r2
 800ee52:	b21b      	sxth	r3, r3
 800ee54:	428e      	cmp	r6, r1
 800ee56:	bfac      	ite	ge
 800ee58:	ebc7 0106 	rsbge	r1, r7, r6
 800ee5c:	ebc7 0101 	rsblt	r1, r7, r1
 800ee60:	429a      	cmp	r2, r3
 800ee62:	bfac      	ite	ge
 800ee64:	ebc0 0202 	rsbge	r2, r0, r2
 800ee68:	ebc0 0203 	rsblt	r2, r0, r3
 800ee6c:	80a1      	strh	r1, [r4, #4]
 800ee6e:	80e2      	strh	r2, [r4, #6]
 800ee70:	e7d1      	b.n	800ee16 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800ee74 <_ZN8touchgfx11Application11getInstanceEv>:
 800ee74:	4b01      	ldr	r3, [pc, #4]	; (800ee7c <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800ee76:	6818      	ldr	r0, [r3, #0]
 800ee78:	4770      	bx	lr
 800ee7a:	bf00      	nop
 800ee7c:	200135fc 	.word	0x200135fc

0800ee80 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>:
 800ee80:	b570      	push	{r4, r5, r6, lr}
 800ee82:	f8b0 3084 	ldrh.w	r3, [r0, #132]	; 0x84
 800ee86:	1d04      	adds	r4, r0, #4
 800ee88:	2200      	movs	r2, #0
 800ee8a:	b295      	uxth	r5, r2
 800ee8c:	429d      	cmp	r5, r3
 800ee8e:	d20f      	bcs.n	800eeb0 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x30>
 800ee90:	f854 6b04 	ldr.w	r6, [r4], #4
 800ee94:	428e      	cmp	r6, r1
 800ee96:	4615      	mov	r5, r2
 800ee98:	f102 0201 	add.w	r2, r2, #1
 800ee9c:	d1f5      	bne.n	800ee8a <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0xa>
 800ee9e:	4428      	add	r0, r5
 800eea0:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
 800eea4:	2bff      	cmp	r3, #255	; 0xff
 800eea6:	d002      	beq.n	800eeae <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x2e>
 800eea8:	3301      	adds	r3, #1
 800eeaa:	f880 3088 	strb.w	r3, [r0, #136]	; 0x88
 800eeae:	bd70      	pop	{r4, r5, r6, pc}
 800eeb0:	18c2      	adds	r2, r0, r3
 800eeb2:	2b20      	cmp	r3, #32
 800eeb4:	f04f 0401 	mov.w	r4, #1
 800eeb8:	f882 4088 	strb.w	r4, [r2, #136]	; 0x88
 800eebc:	bf1f      	itttt	ne
 800eebe:	191a      	addne	r2, r3, r4
 800eec0:	f8a0 2084 	strhne.w	r2, [r0, #132]	; 0x84
 800eec4:	eb00 0083 	addne.w	r0, r0, r3, lsl #2
 800eec8:	6041      	strne	r1, [r0, #4]
 800eeca:	e7f0      	b.n	800eeae <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x2e>

0800eecc <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>:
 800eecc:	b570      	push	{r4, r5, r6, lr}
 800eece:	f8b0 6084 	ldrh.w	r6, [r0, #132]	; 0x84
 800eed2:	1d04      	adds	r4, r0, #4
 800eed4:	2300      	movs	r3, #0
 800eed6:	b29a      	uxth	r2, r3
 800eed8:	4296      	cmp	r6, r2
 800eeda:	d90a      	bls.n	800eef2 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x26>
 800eedc:	f854 2b04 	ldr.w	r2, [r4], #4
 800eee0:	428a      	cmp	r2, r1
 800eee2:	d107      	bne.n	800eef4 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x28>
 800eee4:	18c5      	adds	r5, r0, r3
 800eee6:	f895 2088 	ldrb.w	r2, [r5, #136]	; 0x88
 800eeea:	b11a      	cbz	r2, 800eef4 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x28>
 800eeec:	3a01      	subs	r2, #1
 800eeee:	f885 2088 	strb.w	r2, [r5, #136]	; 0x88
 800eef2:	bd70      	pop	{r4, r5, r6, pc}
 800eef4:	3301      	adds	r3, #1
 800eef6:	e7ee      	b.n	800eed6 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0xa>

0800eef8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 800eef8:	2300      	movs	r3, #0
 800eefa:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800eefe:	f100 0288 	add.w	r2, r0, #136	; 0x88
 800ef02:	30a8      	adds	r0, #168	; 0xa8
 800ef04:	f802 3b01 	strb.w	r3, [r2], #1
 800ef08:	4282      	cmp	r2, r0
 800ef0a:	d1fb      	bne.n	800ef04 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 800ef0c:	4770      	bx	lr

0800ef0e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800ef0e:	4603      	mov	r3, r0
 800ef10:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800ef14:	2200      	movs	r2, #0
 800ef16:	801a      	strh	r2, [r3, #0]
 800ef18:	805a      	strh	r2, [r3, #2]
 800ef1a:	809a      	strh	r2, [r3, #4]
 800ef1c:	80da      	strh	r2, [r3, #6]
 800ef1e:	3308      	adds	r3, #8
 800ef20:	428b      	cmp	r3, r1
 800ef22:	d1f8      	bne.n	800ef16 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800ef24:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800ef28:	4770      	bx	lr
	...

0800ef2c <_ZN8touchgfx11ApplicationC1Ev>:
 800ef2c:	b570      	push	{r4, r5, r6, lr}
 800ef2e:	4b19      	ldr	r3, [pc, #100]	; (800ef94 <_ZN8touchgfx11ApplicationC1Ev+0x68>)
 800ef30:	6003      	str	r3, [r0, #0]
 800ef32:	2500      	movs	r5, #0
 800ef34:	4604      	mov	r4, r0
 800ef36:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 800ef3a:	30a8      	adds	r0, #168	; 0xa8
 800ef3c:	f7ff ffe7 	bl	800ef0e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800ef40:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 800ef44:	f7ff ffe3 	bl	800ef0e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800ef48:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 800ef4c:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 800ef50:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 800ef54:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 800ef58:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 800ef5c:	490e      	ldr	r1, [pc, #56]	; (800ef98 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 800ef5e:	480f      	ldr	r0, [pc, #60]	; (800ef9c <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 800ef60:	4e0f      	ldr	r6, [pc, #60]	; (800efa0 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 800ef62:	f00e f8e1 	bl	801d128 <CRC_Lock>
 800ef66:	4b0f      	ldr	r3, [pc, #60]	; (800efa4 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800ef68:	b158      	cbz	r0, 800ef82 <_ZN8touchgfx11ApplicationC1Ev+0x56>
 800ef6a:	801d      	strh	r5, [r3, #0]
 800ef6c:	4a0e      	ldr	r2, [pc, #56]	; (800efa8 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800ef6e:	2300      	movs	r3, #0
 800ef70:	6013      	str	r3, [r2, #0]
 800ef72:	4a0e      	ldr	r2, [pc, #56]	; (800efac <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800ef74:	6033      	str	r3, [r6, #0]
 800ef76:	4620      	mov	r0, r4
 800ef78:	6013      	str	r3, [r2, #0]
 800ef7a:	f7ff ffbd 	bl	800eef8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 800ef7e:	4620      	mov	r0, r4
 800ef80:	bd70      	pop	{r4, r5, r6, pc}
 800ef82:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800ef86:	2002      	movs	r0, #2
 800ef88:	801a      	strh	r2, [r3, #0]
 800ef8a:	6030      	str	r0, [r6, #0]
 800ef8c:	f001 fa40 	bl	8010410 <_ZN8touchgfx6Screen4drawEv>
 800ef90:	e7ec      	b.n	800ef6c <_ZN8touchgfx11ApplicationC1Ev+0x40>
 800ef92:	bf00      	nop
 800ef94:	08020844 	.word	0x08020844
 800ef98:	b5e8b5cd 	.word	0xb5e8b5cd
 800ef9c:	f407a5c2 	.word	0xf407a5c2
 800efa0:	200135ec 	.word	0x200135ec
 800efa4:	20000084 	.word	0x20000084
 800efa8:	200135fc 	.word	0x200135fc
 800efac:	200135f0 	.word	0x200135f0

0800efb0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800efb0:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 800efb4:	3b01      	subs	r3, #1
 800efb6:	b29b      	uxth	r3, r3
 800efb8:	428b      	cmp	r3, r1
 800efba:	b510      	push	{r4, lr}
 800efbc:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 800efc0:	d908      	bls.n	800efd4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 800efc2:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800efc6:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800efca:	681a      	ldr	r2, [r3, #0]
 800efcc:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800efd0:	685a      	ldr	r2, [r3, #4]
 800efd2:	6062      	str	r2, [r4, #4]
 800efd4:	bd10      	pop	{r4, pc}
	...

0800efd8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800efd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800efdc:	4b94      	ldr	r3, [pc, #592]	; (800f230 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 800efde:	b08f      	sub	sp, #60	; 0x3c
 800efe0:	ac0a      	add	r4, sp, #40	; 0x28
 800efe2:	e884 0006 	stmia.w	r4, {r1, r2}
 800efe6:	f9b3 2000 	ldrsh.w	r2, [r3]
 800efea:	4b92      	ldr	r3, [pc, #584]	; (800f234 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>)
 800efec:	4683      	mov	fp, r0
 800efee:	f9b3 1000 	ldrsh.w	r1, [r3]
 800eff2:	4620      	mov	r0, r4
 800eff4:	f7ff fe81 	bl	800ecfa <_ZN8touchgfx4Rect10restrictToEss>
 800eff8:	4620      	mov	r0, r4
 800effa:	f7fc f8ce 	bl	800b19a <_ZNK8touchgfx4Rect7isEmptyEv>
 800effe:	2800      	cmp	r0, #0
 800f000:	d16a      	bne.n	800f0d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800f002:	9403      	str	r4, [sp, #12]
 800f004:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800f008:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800f00c:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 800f010:	2400      	movs	r4, #0
 800f012:	9301      	str	r3, [sp, #4]
 800f014:	36a0      	adds	r6, #160	; 0xa0
 800f016:	42a5      	cmp	r5, r4
 800f018:	d00d      	beq.n	800f036 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 800f01a:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 800f01e:	9803      	ldr	r0, [sp, #12]
 800f020:	f7ff febc 	bl	800ed9c <_ZNK8touchgfx4Rect8includesERKS0_>
 800f024:	b128      	cbz	r0, 800f032 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 800f026:	1e69      	subs	r1, r5, #1
 800f028:	1b09      	subs	r1, r1, r4
 800f02a:	b289      	uxth	r1, r1
 800f02c:	9801      	ldr	r0, [sp, #4]
 800f02e:	f7ff ffbf 	bl	800efb0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800f032:	3401      	adds	r4, #1
 800f034:	e7ef      	b.n	800f016 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e>
 800f036:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800f03a:	9704      	str	r7, [sp, #16]
 800f03c:	1e7b      	subs	r3, r7, #1
 800f03e:	9302      	str	r3, [sp, #8]
 800f040:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 800f044:	2400      	movs	r4, #0
 800f046:	4655      	mov	r5, sl
 800f048:	9705      	str	r7, [sp, #20]
 800f04a:	4626      	mov	r6, r4
 800f04c:	9b05      	ldr	r3, [sp, #20]
 800f04e:	2b00      	cmp	r3, #0
 800f050:	d078      	beq.n	800f144 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x16c>
 800f052:	9903      	ldr	r1, [sp, #12]
 800f054:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800f058:	f7ff fe2d 	bl	800ecb6 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800f05c:	b360      	cbz	r0, 800f0b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800f05e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 800f062:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 800f066:	f9bd 902a 	ldrsh.w	r9, [sp, #42]	; 0x2a
 800f06a:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 800f06e:	45e6      	cmp	lr, ip
 800f070:	db35      	blt.n	800f0de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800f072:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 800f076:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800f07a:	4472      	add	r2, lr
 800f07c:	4463      	add	r3, ip
 800f07e:	b212      	sxth	r2, r2
 800f080:	b21b      	sxth	r3, r3
 800f082:	429a      	cmp	r2, r3
 800f084:	dc2b      	bgt.n	800f0de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800f086:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800f08a:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 800f08e:	fa1f f288 	uxth.w	r2, r8
 800f092:	4413      	add	r3, r2
 800f094:	b29b      	uxth	r3, r3
 800f096:	45c1      	cmp	r9, r8
 800f098:	fa0f fe83 	sxth.w	lr, r3
 800f09c:	fa1f fc89 	uxth.w	ip, r9
 800f0a0:	db0f      	blt.n	800f0c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800f0a2:	eba3 030c 	sub.w	r3, r3, ip
 800f0a6:	1ac9      	subs	r1, r1, r3
 800f0a8:	b209      	sxth	r1, r1
 800f0aa:	2900      	cmp	r1, #0
 800f0ac:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 800f0b0:	dd12      	ble.n	800f0d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800f0b2:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 800f0b6:	4604      	mov	r4, r0
 800f0b8:	9b05      	ldr	r3, [sp, #20]
 800f0ba:	3b01      	subs	r3, #1
 800f0bc:	9305      	str	r3, [sp, #20]
 800f0be:	3d08      	subs	r5, #8
 800f0c0:	e7c4      	b.n	800f04c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x74>
 800f0c2:	4461      	add	r1, ip
 800f0c4:	b209      	sxth	r1, r1
 800f0c6:	4571      	cmp	r1, lr
 800f0c8:	dc3a      	bgt.n	800f140 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800f0ca:	eba2 020c 	sub.w	r2, r2, ip
 800f0ce:	b212      	sxth	r2, r2
 800f0d0:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 800f0d4:	2a00      	cmp	r2, #0
 800f0d6:	dcee      	bgt.n	800f0b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800f0d8:	b00f      	add	sp, #60	; 0x3c
 800f0da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f0de:	45c1      	cmp	r9, r8
 800f0e0:	db2e      	blt.n	800f140 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800f0e2:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 800f0e6:	4499      	add	r9, r3
 800f0e8:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800f0ec:	4498      	add	r8, r3
 800f0ee:	fa0f f989 	sxth.w	r9, r9
 800f0f2:	fa0f f888 	sxth.w	r8, r8
 800f0f6:	45c1      	cmp	r9, r8
 800f0f8:	dc22      	bgt.n	800f140 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800f0fa:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800f0fe:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 800f102:	fa1f f28c 	uxth.w	r2, ip
 800f106:	4413      	add	r3, r2
 800f108:	b29b      	uxth	r3, r3
 800f10a:	45e6      	cmp	lr, ip
 800f10c:	fa1f f88e 	uxth.w	r8, lr
 800f110:	fa0f f983 	sxth.w	r9, r3
 800f114:	db0a      	blt.n	800f12c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x154>
 800f116:	eba3 0308 	sub.w	r3, r3, r8
 800f11a:	1ac9      	subs	r1, r1, r3
 800f11c:	b209      	sxth	r1, r1
 800f11e:	2900      	cmp	r1, #0
 800f120:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 800f124:	ddd8      	ble.n	800f0d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800f126:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 800f12a:	e7c4      	b.n	800f0b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800f12c:	4441      	add	r1, r8
 800f12e:	b209      	sxth	r1, r1
 800f130:	4549      	cmp	r1, r9
 800f132:	dc05      	bgt.n	800f140 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800f134:	eba2 0208 	sub.w	r2, r2, r8
 800f138:	b212      	sxth	r2, r2
 800f13a:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800f13e:	e7c9      	b.n	800f0d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 800f140:	4606      	mov	r6, r0
 800f142:	e7b9      	b.n	800f0b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800f144:	2c00      	cmp	r4, #0
 800f146:	f47f af7d 	bne.w	800f044 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c>
 800f14a:	2e00      	cmp	r6, #0
 800f14c:	f000 81e1 	beq.w	800f512 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 800f150:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 800f154:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 800f158:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 800f15c:	b2b9      	uxth	r1, r7
 800f15e:	9105      	str	r1, [sp, #20]
 800f160:	9805      	ldr	r0, [sp, #20]
 800f162:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 800f166:	4401      	add	r1, r0
 800f168:	b2b3      	uxth	r3, r6
 800f16a:	b289      	uxth	r1, r1
 800f16c:	441a      	add	r2, r3
 800f16e:	9106      	str	r1, [sp, #24]
 800f170:	b292      	uxth	r2, r2
 800f172:	f9bd 9018 	ldrsh.w	r9, [sp, #24]
 800f176:	fa0f f882 	sxth.w	r8, r2
 800f17a:	4655      	mov	r5, sl
 800f17c:	e9cd 2307 	strd	r2, r3, [sp, #28]
 800f180:	9b04      	ldr	r3, [sp, #16]
 800f182:	2b00      	cmp	r3, #0
 800f184:	d058      	beq.n	800f238 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x260>
 800f186:	9903      	ldr	r1, [sp, #12]
 800f188:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800f18c:	f7ff fd93 	bl	800ecb6 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800f190:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 800f194:	b1d8      	cbz	r0, 800f1ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 800f196:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 800f19a:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 800f19e:	4576      	cmp	r6, lr
 800f1a0:	dc26      	bgt.n	800f1f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 800f1a2:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 800f1a6:	44f4      	add	ip, lr
 800f1a8:	fa0f fc8c 	sxth.w	ip, ip
 800f1ac:	45e0      	cmp	r8, ip
 800f1ae:	db1f      	blt.n	800f1f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 800f1b0:	428f      	cmp	r7, r1
 800f1b2:	fa1f fc81 	uxth.w	ip, r1
 800f1b6:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 800f1ba:	dc0f      	bgt.n	800f1dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x204>
 800f1bc:	9806      	ldr	r0, [sp, #24]
 800f1be:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 800f1c2:	eba0 0c0c 	sub.w	ip, r0, ip
 800f1c6:	eba1 010c 	sub.w	r1, r1, ip
 800f1ca:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 800f1ce:	4620      	mov	r0, r4
 800f1d0:	9904      	ldr	r1, [sp, #16]
 800f1d2:	3901      	subs	r1, #1
 800f1d4:	9104      	str	r1, [sp, #16]
 800f1d6:	3d08      	subs	r5, #8
 800f1d8:	4604      	mov	r4, r0
 800f1da:	e7cf      	b.n	800f17c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a4>
 800f1dc:	4461      	add	r1, ip
 800f1de:	b209      	sxth	r1, r1
 800f1e0:	4549      	cmp	r1, r9
 800f1e2:	dcf5      	bgt.n	800f1d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 800f1e4:	9905      	ldr	r1, [sp, #20]
 800f1e6:	eba1 0c0c 	sub.w	ip, r1, ip
 800f1ea:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 800f1ee:	e7ee      	b.n	800f1ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 800f1f0:	428f      	cmp	r7, r1
 800f1f2:	dced      	bgt.n	800f1d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 800f1f4:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 800f1f8:	4461      	add	r1, ip
 800f1fa:	b209      	sxth	r1, r1
 800f1fc:	4589      	cmp	r9, r1
 800f1fe:	dbe7      	blt.n	800f1d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 800f200:	4576      	cmp	r6, lr
 800f202:	fa1f fc8e 	uxth.w	ip, lr
 800f206:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 800f20a:	dc08      	bgt.n	800f21e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 800f20c:	eba2 0c0c 	sub.w	ip, r2, ip
 800f210:	eba1 010c 	sub.w	r1, r1, ip
 800f214:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 800f218:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 800f21c:	e7d7      	b.n	800f1ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 800f21e:	4461      	add	r1, ip
 800f220:	b209      	sxth	r1, r1
 800f222:	4588      	cmp	r8, r1
 800f224:	dbd4      	blt.n	800f1d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 800f226:	eba3 0c0c 	sub.w	ip, r3, ip
 800f22a:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 800f22e:	e7ce      	b.n	800f1ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 800f230:	200135a6 	.word	0x200135a6
 800f234:	200135a4 	.word	0x200135a4
 800f238:	2c00      	cmp	r4, #0
 800f23a:	f000 816a 	beq.w	800f512 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 800f23e:	9b02      	ldr	r3, [sp, #8]
 800f240:	3301      	adds	r3, #1
 800f242:	f000 8166 	beq.w	800f512 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 800f246:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 800f24a:	4621      	mov	r1, r4
 800f24c:	9803      	ldr	r0, [sp, #12]
 800f24e:	f7ff fda5 	bl	800ed9c <_ZNK8touchgfx4Rect8includesERKS0_>
 800f252:	b120      	cbz	r0, 800f25e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x286>
 800f254:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 800f258:	9801      	ldr	r0, [sp, #4]
 800f25a:	f7ff fea9 	bl	800efb0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800f25e:	9903      	ldr	r1, [sp, #12]
 800f260:	4620      	mov	r0, r4
 800f262:	f7ff fd28 	bl	800ecb6 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800f266:	2800      	cmp	r0, #0
 800f268:	f000 809b 	beq.w	800f3a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 800f26c:	f9ba 00a0 	ldrsh.w	r0, [sl, #160]	; 0xa0
 800f270:	f9ba 30a4 	ldrsh.w	r3, [sl, #164]	; 0xa4
 800f274:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 800f278:	9309      	str	r3, [sp, #36]	; 0x24
 800f27a:	b281      	uxth	r1, r0
 800f27c:	eb01 0c03 	add.w	ip, r1, r3
 800f280:	fa1f f98c 	uxth.w	r9, ip
 800f284:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 800f288:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 800f28c:	f9ba 20a2 	ldrsh.w	r2, [sl, #162]	; 0xa2
 800f290:	b2ab      	uxth	r3, r5
 800f292:	eb03 040c 	add.w	r4, r3, ip
 800f296:	b2a4      	uxth	r4, r4
 800f298:	9405      	str	r4, [sp, #20]
 800f29a:	f9bd 4014 	ldrsh.w	r4, [sp, #20]
 800f29e:	9404      	str	r4, [sp, #16]
 800f2a0:	4285      	cmp	r5, r0
 800f2a2:	f8bb 40e8 	ldrh.w	r4, [fp, #232]	; 0xe8
 800f2a6:	f340 809a 	ble.w	800f3de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x406>
 800f2aa:	1a5b      	subs	r3, r3, r1
 800f2ac:	b29b      	uxth	r3, r3
 800f2ae:	4596      	cmp	lr, r2
 800f2b0:	fa0f f589 	sxth.w	r5, r9
 800f2b4:	b21e      	sxth	r6, r3
 800f2b6:	dd2e      	ble.n	800f316 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x33e>
 800f2b8:	9f02      	ldr	r7, [sp, #8]
 800f2ba:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 800f2be:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 800f2c2:	9f04      	ldr	r7, [sp, #16]
 800f2c4:	1b7f      	subs	r7, r7, r5
 800f2c6:	f8b8 50ae 	ldrh.w	r5, [r8, #174]	; 0xae
 800f2ca:	fa1f fe8e 	uxth.w	lr, lr
 800f2ce:	b292      	uxth	r2, r2
 800f2d0:	ebae 0102 	sub.w	r1, lr, r2
 800f2d4:	4486      	add	lr, r0
 800f2d6:	442a      	add	r2, r5
 800f2d8:	b289      	uxth	r1, r1
 800f2da:	fa0f fe8e 	sxth.w	lr, lr
 800f2de:	b212      	sxth	r2, r2
 800f2e0:	b20c      	sxth	r4, r1
 800f2e2:	ebae 0202 	sub.w	r2, lr, r2
 800f2e6:	4367      	muls	r7, r4
 800f2e8:	4372      	muls	r2, r6
 800f2ea:	4297      	cmp	r7, r2
 800f2ec:	db09      	blt.n	800f302 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32a>
 800f2ee:	f8b8 20a8 	ldrh.w	r2, [r8, #168]	; 0xa8
 800f2f2:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 800f2f6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 800f2fa:	449c      	add	ip, r3
 800f2fc:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 800f300:	e680      	b.n	800f004 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800f302:	4401      	add	r1, r0
 800f304:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 800f308:	f8a8 60ac 	strh.w	r6, [r8, #172]	; 0xac
 800f30c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 800f310:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 800f314:	e676      	b.n	800f004 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800f316:	9f04      	ldr	r7, [sp, #16]
 800f318:	42bd      	cmp	r5, r7
 800f31a:	da27      	bge.n	800f36c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x394>
 800f31c:	9902      	ldr	r1, [sp, #8]
 800f31e:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 800f322:	eb0b 00c1 	add.w	r0, fp, r1, lsl #3
 800f326:	eb04 010e 	add.w	r1, r4, lr
 800f32a:	fa1f f881 	uxth.w	r8, r1
 800f32e:	f8b0 10ae 	ldrh.w	r1, [r0, #174]	; 0xae
 800f332:	4411      	add	r1, r2
 800f334:	eba1 0108 	sub.w	r1, r1, r8
 800f338:	b289      	uxth	r1, r1
 800f33a:	fa0f f988 	sxth.w	r9, r8
 800f33e:	eba2 020e 	sub.w	r2, r2, lr
 800f342:	fa0f f881 	sxth.w	r8, r1
 800f346:	1b7f      	subs	r7, r7, r5
 800f348:	4372      	muls	r2, r6
 800f34a:	fb08 f707 	mul.w	r7, r8, r7
 800f34e:	42ba      	cmp	r2, r7
 800f350:	dc06      	bgt.n	800f360 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 800f352:	f8a0 90aa 	strh.w	r9, [r0, #170]	; 0xaa
 800f356:	f8a0 80ae 	strh.w	r8, [r0, #174]	; 0xae
 800f35a:	f8b0 20a8 	ldrh.w	r2, [r0, #168]	; 0xa8
 800f35e:	e7ca      	b.n	800f2f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 800f360:	f8a0 60ac 	strh.w	r6, [r0, #172]	; 0xac
 800f364:	4421      	add	r1, r4
 800f366:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 800f36a:	e64b      	b.n	800f004 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800f36c:	9d05      	ldr	r5, [sp, #20]
 800f36e:	eba9 0505 	sub.w	r5, r9, r5
 800f372:	b2ad      	uxth	r5, r5
 800f374:	2c06      	cmp	r4, #6
 800f376:	fa0f fe85 	sxth.w	lr, r5
 800f37a:	d818      	bhi.n	800f3ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d6>
 800f37c:	9b04      	ldr	r3, [sp, #16]
 800f37e:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 800f382:	1c63      	adds	r3, r4, #1
 800f384:	f9ba 10a6 	ldrsh.w	r1, [sl, #166]	; 0xa6
 800f388:	f8aa e0a4 	strh.w	lr, [sl, #164]	; 0xa4
 800f38c:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 800f390:	9b01      	ldr	r3, [sp, #4]
 800f392:	9d01      	ldr	r5, [sp, #4]
 800f394:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800f398:	f825 0034 	strh.w	r0, [r5, r4, lsl #3]
 800f39c:	805a      	strh	r2, [r3, #2]
 800f39e:	809e      	strh	r6, [r3, #4]
 800f3a0:	80d9      	strh	r1, [r3, #6]
 800f3a2:	9b02      	ldr	r3, [sp, #8]
 800f3a4:	3b01      	subs	r3, #1
 800f3a6:	9302      	str	r3, [sp, #8]
 800f3a8:	f1aa 0a08 	sub.w	sl, sl, #8
 800f3ac:	e747      	b.n	800f23e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x266>
 800f3ae:	9a02      	ldr	r2, [sp, #8]
 800f3b0:	45b6      	cmp	lr, r6
 800f3b2:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800f3b6:	db0d      	blt.n	800f3d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fc>
 800f3b8:	449c      	add	ip, r3
 800f3ba:	fa1f fc8c 	uxth.w	ip, ip
 800f3be:	445a      	add	r2, fp
 800f3c0:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 800f3c4:	448c      	add	ip, r1
 800f3c6:	f8ad 0028 	strh.w	r0, [sp, #40]	; 0x28
 800f3ca:	f8a2 c0a8 	strh.w	ip, [r2, #168]	; 0xa8
 800f3ce:	f8a2 e0ac 	strh.w	lr, [r2, #172]	; 0xac
 800f3d2:	e617      	b.n	800f004 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800f3d4:	445a      	add	r2, fp
 800f3d6:	44ac      	add	ip, r5
 800f3d8:	f8a2 60ac 	strh.w	r6, [r2, #172]	; 0xac
 800f3dc:	e78e      	b.n	800f2fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 800f3de:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 800f3e2:	fa1f f18e 	uxth.w	r1, lr
 800f3e6:	eb01 0806 	add.w	r8, r1, r6
 800f3ea:	b293      	uxth	r3, r2
 800f3ec:	fa1f f888 	uxth.w	r8, r8
 800f3f0:	9306      	str	r3, [sp, #24]
 800f3f2:	fa0f f388 	sxth.w	r3, r8
 800f3f6:	9307      	str	r3, [sp, #28]
 800f3f8:	9f06      	ldr	r7, [sp, #24]
 800f3fa:	f8ba 30a6 	ldrh.w	r3, [sl, #166]	; 0xa6
 800f3fe:	443b      	add	r3, r7
 800f400:	b29b      	uxth	r3, r3
 800f402:	4596      	cmp	lr, r2
 800f404:	9308      	str	r3, [sp, #32]
 800f406:	da25      	bge.n	800f454 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
 800f408:	9905      	ldr	r1, [sp, #20]
 800f40a:	eba3 0308 	sub.w	r3, r3, r8
 800f40e:	eba9 0401 	sub.w	r4, r9, r1
 800f412:	b2a4      	uxth	r4, r4
 800f414:	b29b      	uxth	r3, r3
 800f416:	fa0f f984 	sxth.w	r9, r4
 800f41a:	b219      	sxth	r1, r3
 800f41c:	eba2 020e 	sub.w	r2, r2, lr
 800f420:	1b40      	subs	r0, r0, r5
 800f422:	fb09 f202 	mul.w	r2, r9, r2
 800f426:	4348      	muls	r0, r1
 800f428:	4282      	cmp	r2, r0
 800f42a:	9a02      	ldr	r2, [sp, #8]
 800f42c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800f430:	445a      	add	r2, fp
 800f432:	dc06      	bgt.n	800f442 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 800f434:	9b07      	ldr	r3, [sp, #28]
 800f436:	f8a2 10ae 	strh.w	r1, [r2, #174]	; 0xae
 800f43a:	f8a2 30aa 	strh.w	r3, [r2, #170]	; 0xaa
 800f43e:	44a4      	add	ip, r4
 800f440:	e75c      	b.n	800f2fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 800f442:	9904      	ldr	r1, [sp, #16]
 800f444:	f8a2 90ac 	strh.w	r9, [r2, #172]	; 0xac
 800f448:	f8a2 10a8 	strh.w	r1, [r2, #168]	; 0xa8
 800f44c:	4433      	add	r3, r6
 800f44e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800f452:	e5d7      	b.n	800f004 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800f454:	9f06      	ldr	r7, [sp, #24]
 800f456:	9b04      	ldr	r3, [sp, #16]
 800f458:	1bc9      	subs	r1, r1, r7
 800f45a:	fa0f f789 	sxth.w	r7, r9
 800f45e:	b289      	uxth	r1, r1
 800f460:	429f      	cmp	r7, r3
 800f462:	fa0f fe81 	sxth.w	lr, r1
 800f466:	dd22      	ble.n	800f4ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d6>
 800f468:	9a05      	ldr	r2, [sp, #20]
 800f46a:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800f46e:	1b40      	subs	r0, r0, r5
 800f470:	eba9 0202 	sub.w	r2, r9, r2
 800f474:	9d07      	ldr	r5, [sp, #28]
 800f476:	b292      	uxth	r2, r2
 800f478:	eba5 0a03 	sub.w	sl, r5, r3
 800f47c:	b214      	sxth	r4, r2
 800f47e:	9b02      	ldr	r3, [sp, #8]
 800f480:	fb0e f000 	mul.w	r0, lr, r0
 800f484:	fb04 fa0a 	mul.w	sl, r4, sl
 800f488:	00db      	lsls	r3, r3, #3
 800f48a:	4550      	cmp	r0, sl
 800f48c:	445b      	add	r3, fp
 800f48e:	db03      	blt.n	800f498 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c0>
 800f490:	f8a3 e0ae 	strh.w	lr, [r3, #174]	; 0xae
 800f494:	4494      	add	ip, r2
 800f496:	e731      	b.n	800f2fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 800f498:	9a04      	ldr	r2, [sp, #16]
 800f49a:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 800f49e:	f8a3 40ac 	strh.w	r4, [r3, #172]	; 0xac
 800f4a2:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 800f4a6:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 800f4aa:	4431      	add	r1, r6
 800f4ac:	e75b      	b.n	800f366 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38e>
 800f4ae:	9b08      	ldr	r3, [sp, #32]
 800f4b0:	eba3 0308 	sub.w	r3, r3, r8
 800f4b4:	b29b      	uxth	r3, r3
 800f4b6:	2c06      	cmp	r4, #6
 800f4b8:	b21d      	sxth	r5, r3
 800f4ba:	d813      	bhi.n	800f4e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50c>
 800f4bc:	9b07      	ldr	r3, [sp, #28]
 800f4be:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 800f4c2:	1c63      	adds	r3, r4, #1
 800f4c4:	f8aa 50a6 	strh.w	r5, [sl, #166]	; 0xa6
 800f4c8:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 800f4cc:	9b01      	ldr	r3, [sp, #4]
 800f4ce:	9901      	ldr	r1, [sp, #4]
 800f4d0:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800f4d4:	f821 0034 	strh.w	r0, [r1, r4, lsl #3]
 800f4d8:	805a      	strh	r2, [r3, #2]
 800f4da:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f4dc:	809a      	strh	r2, [r3, #4]
 800f4de:	f8a3 e006 	strh.w	lr, [r3, #6]
 800f4e2:	e75e      	b.n	800f3a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 800f4e4:	9802      	ldr	r0, [sp, #8]
 800f4e6:	4575      	cmp	r5, lr
 800f4e8:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800f4ec:	db0d      	blt.n	800f50a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x532>
 800f4ee:	4431      	add	r1, r6
 800f4f0:	9b06      	ldr	r3, [sp, #24]
 800f4f2:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 800f4f6:	b289      	uxth	r1, r1
 800f4f8:	4458      	add	r0, fp
 800f4fa:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 800f4fe:	4419      	add	r1, r3
 800f500:	f8a0 10aa 	strh.w	r1, [r0, #170]	; 0xaa
 800f504:	f8a0 50ae 	strh.w	r5, [r0, #174]	; 0xae
 800f508:	e57c      	b.n	800f004 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800f50a:	4458      	add	r0, fp
 800f50c:	f8a0 e0ae 	strh.w	lr, [r0, #174]	; 0xae
 800f510:	e79c      	b.n	800f44c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
 800f512:	f8bb 60e8 	ldrh.w	r6, [fp, #232]	; 0xe8
 800f516:	2e07      	cmp	r6, #7
 800f518:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 800f51c:	d812      	bhi.n	800f544 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56c>
 800f51e:	1c75      	adds	r5, r6, #1
 800f520:	f8ab 50e8 	strh.w	r5, [fp, #232]	; 0xe8
 800f524:	9d01      	ldr	r5, [sp, #4]
 800f526:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 800f52a:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 800f52e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 800f532:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 800f536:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 800f53a:	442c      	add	r4, r5
 800f53c:	8061      	strh	r1, [r4, #2]
 800f53e:	80a2      	strh	r2, [r4, #4]
 800f540:	80e3      	strh	r3, [r4, #6]
 800f542:	e5c9      	b.n	800f0d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800f544:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800f548:	3e01      	subs	r6, #1
 800f54a:	445c      	add	r4, fp
 800f54c:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 800f550:	f04f 37ff 	mov.w	r7, #4294967295
 800f554:	2500      	movs	r5, #0
 800f556:	9305      	str	r3, [sp, #20]
 800f558:	f9b4 30a4 	ldrsh.w	r3, [r4, #164]	; 0xa4
 800f55c:	9302      	str	r3, [sp, #8]
 800f55e:	1e72      	subs	r2, r6, #1
 800f560:	f9b4 30a6 	ldrsh.w	r3, [r4, #166]	; 0xa6
 800f564:	9304      	str	r3, [sp, #16]
 800f566:	4691      	mov	r9, r2
 800f568:	f104 03a0 	add.w	r3, r4, #160	; 0xa0
 800f56c:	f1b9 3fff 	cmp.w	r9, #4294967295
 800f570:	bf14      	ite	ne
 800f572:	9905      	ldrne	r1, [sp, #20]
 800f574:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 800f578:	6818      	ldr	r0, [r3, #0]
 800f57a:	9207      	str	r2, [sp, #28]
 800f57c:	bf18      	it	ne
 800f57e:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 800f582:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800f586:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800f58a:	f8be 8004 	ldrh.w	r8, [lr, #4]
 800f58e:	9306      	str	r3, [sp, #24]
 800f590:	fb18 f801 	smulbb	r8, r8, r1
 800f594:	6859      	ldr	r1, [r3, #4]
 800f596:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800f59a:	4671      	mov	r1, lr
 800f59c:	a80c      	add	r0, sp, #48	; 0x30
 800f59e:	f7ff fc23 	bl	800ede8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800f5a2:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 800f5a6:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 800f5aa:	9b04      	ldr	r3, [sp, #16]
 800f5ac:	9a02      	ldr	r2, [sp, #8]
 800f5ae:	fb10 f001 	smulbb	r0, r0, r1
 800f5b2:	fb02 8803 	mla	r8, r2, r3, r8
 800f5b6:	eba0 0108 	sub.w	r1, r0, r8
 800f5ba:	f04f 0c08 	mov.w	ip, #8
 800f5be:	fb90 f0fc 	sdiv	r0, r0, ip
 800f5c2:	4288      	cmp	r0, r1
 800f5c4:	dc20      	bgt.n	800f608 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x630>
 800f5c6:	4551      	cmp	r1, sl
 800f5c8:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800f5cc:	da03      	bge.n	800f5d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 800f5ce:	b1d9      	cbz	r1, 800f608 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x630>
 800f5d0:	468a      	mov	sl, r1
 800f5d2:	464f      	mov	r7, r9
 800f5d4:	4635      	mov	r5, r6
 800f5d6:	f109 39ff 	add.w	r9, r9, #4294967295
 800f5da:	f119 0f02 	cmn.w	r9, #2
 800f5de:	d1c5      	bne.n	800f56c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 800f5e0:	4616      	mov	r6, r2
 800f5e2:	3201      	adds	r2, #1
 800f5e4:	f1a4 0408 	sub.w	r4, r4, #8
 800f5e8:	d1b6      	bne.n	800f558 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x580>
 800f5ea:	9b01      	ldr	r3, [sp, #4]
 800f5ec:	b2ac      	uxth	r4, r5
 800f5ee:	00ed      	lsls	r5, r5, #3
 800f5f0:	1958      	adds	r0, r3, r5
 800f5f2:	1c7b      	adds	r3, r7, #1
 800f5f4:	d10b      	bne.n	800f60e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x636>
 800f5f6:	4601      	mov	r1, r0
 800f5f8:	9803      	ldr	r0, [sp, #12]
 800f5fa:	f7ff fbf5 	bl	800ede8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800f5fe:	4621      	mov	r1, r4
 800f600:	9801      	ldr	r0, [sp, #4]
 800f602:	f7ff fcd5 	bl	800efb0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800f606:	e4fd      	b.n	800f004 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800f608:	464f      	mov	r7, r9
 800f60a:	4635      	mov	r5, r6
 800f60c:	e7ed      	b.n	800f5ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x612>
 800f60e:	9b01      	ldr	r3, [sp, #4]
 800f610:	00ff      	lsls	r7, r7, #3
 800f612:	19d9      	adds	r1, r3, r7
 800f614:	f7ff fbe8 	bl	800ede8 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800f618:	9b03      	ldr	r3, [sp, #12]
 800f61a:	cb03      	ldmia	r3!, {r0, r1}
 800f61c:	445f      	add	r7, fp
 800f61e:	445d      	add	r5, fp
 800f620:	f8c7 00a8 	str.w	r0, [r7, #168]	; 0xa8
 800f624:	f8c7 10ac 	str.w	r1, [r7, #172]	; 0xac
 800f628:	f855 0fa8 	ldr.w	r0, [r5, #168]!
 800f62c:	9b03      	ldr	r3, [sp, #12]
 800f62e:	6869      	ldr	r1, [r5, #4]
 800f630:	c303      	stmia	r3!, {r0, r1}
 800f632:	e7e4      	b.n	800f5fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x626>

0800f634 <_ZN8touchgfx11Application10invalidateEv>:
 800f634:	4b09      	ldr	r3, [pc, #36]	; (800f65c <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800f636:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f63a:	4b09      	ldr	r3, [pc, #36]	; (800f660 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 800f63c:	b082      	sub	sp, #8
 800f63e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f642:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f646:	2100      	movs	r1, #0
 800f648:	9100      	str	r1, [sp, #0]
 800f64a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800f64e:	ab02      	add	r3, sp, #8
 800f650:	e913 0006 	ldmdb	r3, {r1, r2}
 800f654:	b002      	add	sp, #8
 800f656:	f7ff bcbf 	b.w	800efd8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800f65a:	bf00      	nop
 800f65c:	200135a4 	.word	0x200135a4
 800f660:	200135a6 	.word	0x200135a6

0800f664 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 800f664:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f668:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 800f66c:	b09b      	sub	sp, #108	; 0x6c
 800f66e:	4604      	mov	r4, r0
 800f670:	4630      	mov	r0, r6
 800f672:	f7fb fd92 	bl	800b19a <_ZNK8touchgfx4Rect7isEmptyEv>
 800f676:	4605      	mov	r5, r0
 800f678:	b940      	cbnz	r0, 800f68c <_ZN8touchgfx11Application15drawCachedAreasEv+0x28>
 800f67a:	e896 0006 	ldmia.w	r6, {r1, r2}
 800f67e:	4620      	mov	r0, r4
 800f680:	f7ff fcaa 	bl	800efd8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800f684:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800f688:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800f68c:	4bc9      	ldr	r3, [pc, #804]	; (800f9b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 800f68e:	681b      	ldr	r3, [r3, #0]
 800f690:	2b00      	cmp	r3, #0
 800f692:	d03e      	beq.n	800f712 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 800f694:	4dc8      	ldr	r5, [pc, #800]	; (800f9b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 800f696:	4628      	mov	r0, r5
 800f698:	f7fb fd7f 	bl	800b19a <_ZNK8touchgfx4Rect7isEmptyEv>
 800f69c:	4606      	mov	r6, r0
 800f69e:	2800      	cmp	r0, #0
 800f6a0:	d137      	bne.n	800f712 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 800f6a2:	4628      	mov	r0, r5
 800f6a4:	f7ff f9ac 	bl	800ea00 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800f6a8:	6829      	ldr	r1, [r5, #0]
 800f6aa:	686a      	ldr	r2, [r5, #4]
 800f6ac:	4620      	mov	r0, r4
 800f6ae:	f7ff fc93 	bl	800efd8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800f6b2:	802e      	strh	r6, [r5, #0]
 800f6b4:	806e      	strh	r6, [r5, #2]
 800f6b6:	80ae      	strh	r6, [r5, #4]
 800f6b8:	80ee      	strh	r6, [r5, #6]
 800f6ba:	ae09      	add	r6, sp, #36	; 0x24
 800f6bc:	4630      	mov	r0, r6
 800f6be:	f7ff fc26 	bl	800ef0e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800f6c2:	4abe      	ldr	r2, [pc, #760]	; (800f9bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 800f6c4:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 800f6c8:	8815      	ldrh	r5, [r2, #0]
 800f6ca:	9202      	str	r2, [sp, #8]
 800f6cc:	462b      	mov	r3, r5
 800f6ce:	f104 00a8 	add.w	r0, r4, #168	; 0xa8
 800f6d2:	429f      	cmp	r7, r3
 800f6d4:	d924      	bls.n	800f720 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbc>
 800f6d6:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 800f6da:	2907      	cmp	r1, #7
 800f6dc:	d816      	bhi.n	800f70c <_ZN8touchgfx11Application15drawCachedAreasEv+0xa8>
 800f6de:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 800f6e2:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 800f6e6:	f9b2 9002 	ldrsh.w	r9, [r2, #2]
 800f6ea:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 800f6ee:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 800f6f2:	1c4a      	adds	r2, r1, #1
 800f6f4:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 800f6f8:	eb06 02c1 	add.w	r2, r6, r1, lsl #3
 800f6fc:	f826 8031 	strh.w	r8, [r6, r1, lsl #3]
 800f700:	f8a2 9002 	strh.w	r9, [r2, #2]
 800f704:	f8a2 e004 	strh.w	lr, [r2, #4]
 800f708:	f8a2 c006 	strh.w	ip, [r2, #6]
 800f70c:	3301      	adds	r3, #1
 800f70e:	b29b      	uxth	r3, r3
 800f710:	e7df      	b.n	800f6d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6e>
 800f712:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800f716:	2b00      	cmp	r3, #0
 800f718:	d1cf      	bne.n	800f6ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x56>
 800f71a:	b01b      	add	sp, #108	; 0x6c
 800f71c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f720:	462f      	mov	r7, r5
 800f722:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 800f726:	42bb      	cmp	r3, r7
 800f728:	d90b      	bls.n	800f742 <_ZN8touchgfx11Application15drawCachedAreasEv+0xde>
 800f72a:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 800f72e:	4620      	mov	r0, r4
 800f730:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 800f734:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 800f738:	3701      	adds	r7, #1
 800f73a:	f7ff fc4d 	bl	800efd8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800f73e:	b2bf      	uxth	r7, r7
 800f740:	e7ef      	b.n	800f722 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbe>
 800f742:	4a9f      	ldr	r2, [pc, #636]	; (800f9c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 800f744:	6813      	ldr	r3, [r2, #0]
 800f746:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800f74a:	2b01      	cmp	r3, #1
 800f74c:	4690      	mov	r8, r2
 800f74e:	f040 80e6 	bne.w	800f91e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ba>
 800f752:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 800f756:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 800f75a:	4629      	mov	r1, r5
 800f75c:	33aa      	adds	r3, #170	; 0xaa
 800f75e:	2500      	movs	r5, #0
 800f760:	428f      	cmp	r7, r1
 800f762:	f103 0308 	add.w	r3, r3, #8
 800f766:	dd0a      	ble.n	800f77e <_ZN8touchgfx11Application15drawCachedAreasEv+0x11a>
 800f768:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 800f76c:	f833 0c04 	ldrh.w	r0, [r3, #-4]
 800f770:	4402      	add	r2, r0
 800f772:	b212      	sxth	r2, r2
 800f774:	4295      	cmp	r5, r2
 800f776:	bfb8      	it	lt
 800f778:	4615      	movlt	r5, r2
 800f77a:	3101      	adds	r1, #1
 800f77c:	e7f0      	b.n	800f760 <_ZN8touchgfx11Application15drawCachedAreasEv+0xfc>
 800f77e:	4b91      	ldr	r3, [pc, #580]	; (800f9c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 800f780:	f8df b23c 	ldr.w	fp, [pc, #572]	; 800f9c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>
 800f784:	881b      	ldrh	r3, [r3, #0]
 800f786:	2b0f      	cmp	r3, #15
 800f788:	bf88      	it	hi
 800f78a:	ea4f 0ad3 	movhi.w	sl, r3, lsr #3
 800f78e:	f04f 0300 	mov.w	r3, #0
 800f792:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800f796:	bf98      	it	ls
 800f798:	f04f 0a01 	movls.w	sl, #1
 800f79c:	46d8      	mov	r8, fp
 800f79e:	f8bd 701a 	ldrh.w	r7, [sp, #26]
 800f7a2:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 800f7a6:	4438      	add	r0, r7
 800f7a8:	b207      	sxth	r7, r0
 800f7aa:	f8db 0000 	ldr.w	r0, [fp]
 800f7ae:	42bd      	cmp	r5, r7
 800f7b0:	6803      	ldr	r3, [r0, #0]
 800f7b2:	f340 8084 	ble.w	800f8be <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 800f7b6:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800f7ba:	4798      	blx	r3
 800f7bc:	eb07 030a 	add.w	r3, r7, sl
 800f7c0:	4298      	cmp	r0, r3
 800f7c2:	da07      	bge.n	800f7d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 800f7c4:	4285      	cmp	r5, r0
 800f7c6:	dd05      	ble.n	800f7d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 800f7c8:	4287      	cmp	r7, r0
 800f7ca:	dd6d      	ble.n	800f8a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 800f7cc:	2f00      	cmp	r7, #0
 800f7ce:	dd6b      	ble.n	800f8a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 800f7d0:	4628      	mov	r0, r5
 800f7d2:	e004      	b.n	800f7de <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 800f7d4:	4287      	cmp	r7, r0
 800f7d6:	dcfb      	bgt.n	800f7d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16c>
 800f7d8:	42a8      	cmp	r0, r5
 800f7da:	bfa8      	it	ge
 800f7dc:	4628      	movge	r0, r5
 800f7de:	4b7a      	ldr	r3, [pc, #488]	; (800f9c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>)
 800f7e0:	f8ad 7016 	strh.w	r7, [sp, #22]
 800f7e4:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f7e8:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f7ec:	9b02      	ldr	r3, [sp, #8]
 800f7ee:	1bc0      	subs	r0, r0, r7
 800f7f0:	2200      	movs	r2, #0
 800f7f2:	881f      	ldrh	r7, [r3, #0]
 800f7f4:	f8ad 2014 	strh.w	r2, [sp, #20]
 800f7f8:	f8ad 001a 	strh.w	r0, [sp, #26]
 800f7fc:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800f800:	42bb      	cmp	r3, r7
 800f802:	d9cc      	bls.n	800f79e <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 800f804:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 800f808:	ab07      	add	r3, sp, #28
 800f80a:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800f80e:	6851      	ldr	r1, [r2, #4]
 800f810:	c303      	stmia	r3!, {r0, r1}
 800f812:	a905      	add	r1, sp, #20
 800f814:	a807      	add	r0, sp, #28
 800f816:	f7ff fa4e 	bl	800ecb6 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800f81a:	2800      	cmp	r0, #0
 800f81c:	d04c      	beq.n	800f8b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 800f81e:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 800f822:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 800f826:	f8bd 9020 	ldrh.w	r9, [sp, #32]
 800f82a:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 800f82e:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800f832:	9303      	str	r3, [sp, #12]
 800f834:	4686      	mov	lr, r0
 800f836:	4290      	cmp	r0, r2
 800f838:	4448      	add	r0, r9
 800f83a:	f8bd 9018 	ldrh.w	r9, [sp, #24]
 800f83e:	bfb8      	it	lt
 800f840:	4696      	movlt	lr, r2
 800f842:	444a      	add	r2, r9
 800f844:	4299      	cmp	r1, r3
 800f846:	b280      	uxth	r0, r0
 800f848:	b292      	uxth	r2, r2
 800f84a:	468c      	mov	ip, r1
 800f84c:	fa0f f982 	sxth.w	r9, r2
 800f850:	bfb8      	it	lt
 800f852:	469c      	movlt	ip, r3
 800f854:	b203      	sxth	r3, r0
 800f856:	454b      	cmp	r3, r9
 800f858:	bfb8      	it	lt
 800f85a:	4602      	movlt	r2, r0
 800f85c:	eba2 020e 	sub.w	r2, r2, lr
 800f860:	f8ad 2020 	strh.w	r2, [sp, #32]
 800f864:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 800f868:	9b03      	ldr	r3, [sp, #12]
 800f86a:	f8ad e01c 	strh.w	lr, [sp, #28]
 800f86e:	4411      	add	r1, r2
 800f870:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800f874:	f8ad c01e 	strh.w	ip, [sp, #30]
 800f878:	4413      	add	r3, r2
 800f87a:	b289      	uxth	r1, r1
 800f87c:	b29b      	uxth	r3, r3
 800f87e:	b208      	sxth	r0, r1
 800f880:	b21a      	sxth	r2, r3
 800f882:	4290      	cmp	r0, r2
 800f884:	bfb8      	it	lt
 800f886:	460b      	movlt	r3, r1
 800f888:	eba3 030c 	sub.w	r3, r3, ip
 800f88c:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800f890:	a807      	add	r0, sp, #28
 800f892:	f7fb fc82 	bl	800b19a <_ZNK8touchgfx4Rect7isEmptyEv>
 800f896:	b920      	cbnz	r0, 800f8a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 800f898:	6823      	ldr	r3, [r4, #0]
 800f89a:	a907      	add	r1, sp, #28
 800f89c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800f89e:	4620      	mov	r0, r4
 800f8a0:	4798      	blx	r3
 800f8a2:	3701      	adds	r7, #1
 800f8a4:	b2bf      	uxth	r7, r7
 800f8a6:	e7a9      	b.n	800f7fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 800f8a8:	f8d8 0000 	ldr.w	r0, [r8]
 800f8ac:	6803      	ldr	r3, [r0, #0]
 800f8ae:	2101      	movs	r1, #1
 800f8b0:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800f8b4:	4798      	blx	r3
 800f8b6:	e772      	b.n	800f79e <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 800f8b8:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800f8bc:	e7e8      	b.n	800f890 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 800f8be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f8c0:	4798      	blx	r3
 800f8c2:	4b42      	ldr	r3, [pc, #264]	; (800f9cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x368>)
 800f8c4:	781b      	ldrb	r3, [r3, #0]
 800f8c6:	2b00      	cmp	r3, #0
 800f8c8:	f43f af27 	beq.w	800f71a <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 800f8cc:	2300      	movs	r3, #0
 800f8ce:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 800f8d2:	9b02      	ldr	r3, [sp, #8]
 800f8d4:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 800f8d8:	881b      	ldrh	r3, [r3, #0]
 800f8da:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 800f8de:	429d      	cmp	r5, r3
 800f8e0:	f67f af1b 	bls.w	800f71a <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 800f8e4:	f8b4 112a 	ldrh.w	r1, [r4, #298]	; 0x12a
 800f8e8:	2907      	cmp	r1, #7
 800f8ea:	d815      	bhi.n	800f918 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b4>
 800f8ec:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 800f8f0:	f936 8033 	ldrsh.w	r8, [r6, r3, lsl #3]
 800f8f4:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 800f8f8:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 800f8fc:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 800f900:	1c4a      	adds	r2, r1, #1
 800f902:	f8a4 212a 	strh.w	r2, [r4, #298]	; 0x12a
 800f906:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 800f90a:	f820 8031 	strh.w	r8, [r0, r1, lsl #3]
 800f90e:	f8a2 e002 	strh.w	lr, [r2, #2]
 800f912:	f8a2 c004 	strh.w	ip, [r2, #4]
 800f916:	80d7      	strh	r7, [r2, #6]
 800f918:	3301      	adds	r3, #1
 800f91a:	b29b      	uxth	r3, r3
 800f91c:	e7df      	b.n	800f8de <_ZN8touchgfx11Application15drawCachedAreasEv+0x27a>
 800f91e:	2b02      	cmp	r3, #2
 800f920:	f040 8136 	bne.w	800fb90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 800f924:	4b2a      	ldr	r3, [pc, #168]	; (800f9d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x36c>)
 800f926:	781b      	ldrb	r3, [r3, #0]
 800f928:	2b01      	cmp	r3, #1
 800f92a:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 800f92e:	f000 809c 	beq.w	800fa6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 800f932:	9b02      	ldr	r3, [sp, #8]
 800f934:	f8b4 20e8 	ldrh.w	r2, [r4, #232]	; 0xe8
 800f938:	f8b3 b000 	ldrh.w	fp, [r3]
 800f93c:	f10b 0b01 	add.w	fp, fp, #1
 800f940:	fa1f fb8b 	uxth.w	fp, fp
 800f944:	2a00      	cmp	r2, #0
 800f946:	d0bc      	beq.n	800f8c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800f948:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 800f94c:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 800f950:	441d      	add	r5, r3
 800f952:	b22d      	sxth	r5, r5
 800f954:	4659      	mov	r1, fp
 800f956:	f04f 0800 	mov.w	r8, #0
 800f95a:	b28b      	uxth	r3, r1
 800f95c:	429a      	cmp	r2, r3
 800f95e:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 800f962:	f240 80c1 	bls.w	800fae8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x484>
 800f966:	4427      	add	r7, r4
 800f968:	eb04 0ec1 	add.w	lr, r4, r1, lsl #3
 800f96c:	f9b7 30aa 	ldrsh.w	r3, [r7, #170]	; 0xaa
 800f970:	f9be c0aa 	ldrsh.w	ip, [lr, #170]	; 0xaa
 800f974:	4563      	cmp	r3, ip
 800f976:	4608      	mov	r0, r1
 800f978:	f340 80a3 	ble.w	800fac2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 800f97c:	f8be 50ae 	ldrh.w	r5, [lr, #174]	; 0xae
 800f980:	4465      	add	r5, ip
 800f982:	b22d      	sxth	r5, r5
 800f984:	429d      	cmp	r5, r3
 800f986:	bfa8      	it	ge
 800f988:	461d      	movge	r5, r3
 800f98a:	3101      	adds	r1, #1
 800f98c:	4680      	mov	r8, r0
 800f98e:	e7e4      	b.n	800f95a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
 800f990:	d10b      	bne.n	800f9aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x346>
 800f992:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 800f996:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 800f99a:	458c      	cmp	ip, r1
 800f99c:	bfb4      	ite	lt
 800f99e:	469c      	movlt	ip, r3
 800f9a0:	46bc      	movge	ip, r7
 800f9a2:	4572      	cmp	r2, lr
 800f9a4:	bfb8      	it	lt
 800f9a6:	4672      	movlt	r2, lr
 800f9a8:	e088      	b.n	800fabc <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 800f9aa:	428a      	cmp	r2, r1
 800f9ac:	bfb8      	it	lt
 800f9ae:	460a      	movlt	r2, r1
 800f9b0:	46bc      	mov	ip, r7
 800f9b2:	e083      	b.n	800fabc <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 800f9b4:	200135e8 	.word	0x200135e8
 800f9b8:	200135f4 	.word	0x200135f4
 800f9bc:	20000084 	.word	0x20000084
 800f9c0:	200135b0 	.word	0x200135b0
 800f9c4:	200135a6 	.word	0x200135a6
 800f9c8:	200135a4 	.word	0x200135a4
 800f9cc:	200135ae 	.word	0x200135ae
 800f9d0:	200135a8 	.word	0x200135a8
 800f9d4:	1961      	adds	r1, r4, r5
 800f9d6:	ab07      	add	r3, sp, #28
 800f9d8:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 800f9dc:	6849      	ldr	r1, [r1, #4]
 800f9de:	c303      	stmia	r3!, {r0, r1}
 800f9e0:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800f9e4:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800f9e8:	2b13      	cmp	r3, #19
 800f9ea:	bfd8      	it	le
 800f9ec:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 800f9f0:	f8ad 201c 	strh.w	r2, [sp, #28]
 800f9f4:	440b      	add	r3, r1
 800f9f6:	1a9b      	subs	r3, r3, r2
 800f9f8:	a807      	add	r0, sp, #28
 800f9fa:	f8ad 3020 	strh.w	r3, [sp, #32]
 800f9fe:	f7ff f819 	bl	800ea34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800fa02:	a807      	add	r0, sp, #28
 800fa04:	f7fb fbc9 	bl	800b19a <_ZNK8touchgfx4Rect7isEmptyEv>
 800fa08:	bb78      	cbnz	r0, 800fa6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 800fa0a:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800fa0e:	f8d8 0000 	ldr.w	r0, [r8]
 800fa12:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800fa16:	f8d0 e000 	ldr.w	lr, [r0]
 800fa1a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800fa1e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800fa22:	f1bc 0f14 	cmp.w	ip, #20
 800fa26:	bfa8      	it	ge
 800fa28:	f04f 0c14 	movge.w	ip, #20
 800fa2c:	fa1f fc8c 	uxth.w	ip, ip
 800fa30:	f8cd c000 	str.w	ip, [sp]
 800fa34:	f8de a090 	ldr.w	sl, [lr, #144]	; 0x90
 800fa38:	47d0      	blx	sl
 800fa3a:	4682      	mov	sl, r0
 800fa3c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800fa40:	a807      	add	r0, sp, #28
 800fa42:	f7fe ffdd 	bl	800ea00 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800fa46:	6823      	ldr	r3, [r4, #0]
 800fa48:	4425      	add	r5, r4
 800fa4a:	4620      	mov	r0, r4
 800fa4c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800fa4e:	a907      	add	r1, sp, #28
 800fa50:	4798      	blx	r3
 800fa52:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 800fa56:	eba0 000a 	sub.w	r0, r0, sl
 800fa5a:	b200      	sxth	r0, r0
 800fa5c:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 800fa60:	b918      	cbnz	r0, 800fa6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 800fa62:	b2b9      	uxth	r1, r7
 800fa64:	4648      	mov	r0, r9
 800fa66:	f7ff faa3 	bl	800efb0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800fa6a:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 800fa6e:	f1bb 0f00 	cmp.w	fp, #0
 800fa72:	f43f af26 	beq.w	800f8c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800fa76:	9b02      	ldr	r3, [sp, #8]
 800fa78:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 800fa7c:	881b      	ldrh	r3, [r3, #0]
 800fa7e:	3301      	adds	r3, #1
 800fa80:	b29b      	uxth	r3, r3
 800fa82:	2700      	movs	r7, #0
 800fa84:	b299      	uxth	r1, r3
 800fa86:	458b      	cmp	fp, r1
 800fa88:	ea4f 05c7 	mov.w	r5, r7, lsl #3
 800fa8c:	d9a2      	bls.n	800f9d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x370>
 800fa8e:	4425      	add	r5, r4
 800fa90:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 800fa94:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 800fa98:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 800fa9c:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 800faa0:	4408      	add	r0, r1
 800faa2:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 800faa6:	4471      	add	r1, lr
 800faa8:	b200      	sxth	r0, r0
 800faaa:	b209      	sxth	r1, r1
 800faac:	4288      	cmp	r0, r1
 800faae:	469c      	mov	ip, r3
 800fab0:	f6bf af6e 	bge.w	800f990 <_ZN8touchgfx11Application15drawCachedAreasEv+0x32c>
 800fab4:	4586      	cmp	lr, r0
 800fab6:	4672      	mov	r2, lr
 800fab8:	bfb8      	it	lt
 800faba:	4602      	movlt	r2, r0
 800fabc:	3301      	adds	r3, #1
 800fabe:	4667      	mov	r7, ip
 800fac0:	e7e0      	b.n	800fa84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x420>
 800fac2:	d10c      	bne.n	800fade <_ZN8touchgfx11Application15drawCachedAreasEv+0x47a>
 800fac4:	f9b7 70ac 	ldrsh.w	r7, [r7, #172]	; 0xac
 800fac8:	f9be 00ac 	ldrsh.w	r0, [lr, #172]	; 0xac
 800facc:	4287      	cmp	r7, r0
 800face:	bfb4      	ite	lt
 800fad0:	4608      	movlt	r0, r1
 800fad2:	4640      	movge	r0, r8
 800fad4:	f8be 70ae 	ldrh.w	r7, [lr, #174]	; 0xae
 800fad8:	443b      	add	r3, r7
 800fada:	b21b      	sxth	r3, r3
 800fadc:	e752      	b.n	800f984 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 800fade:	4565      	cmp	r5, ip
 800fae0:	bfa8      	it	ge
 800fae2:	4665      	movge	r5, ip
 800fae4:	4640      	mov	r0, r8
 800fae6:	e750      	b.n	800f98a <_ZN8touchgfx11Application15drawCachedAreasEv+0x326>
 800fae8:	eb09 0007 	add.w	r0, r9, r7
 800faec:	4427      	add	r7, r4
 800faee:	9203      	str	r2, [sp, #12]
 800faf0:	f9b7 a0ae 	ldrsh.w	sl, [r7, #174]	; 0xae
 800faf4:	f1ba 0f13 	cmp.w	sl, #19
 800faf8:	bfde      	ittt	le
 800fafa:	f8b7 50aa 	ldrhle.w	r5, [r7, #170]	; 0xaa
 800fafe:	4455      	addle	r5, sl
 800fb00:	b22d      	sxthle	r5, r5
 800fb02:	f7fb fb4a 	bl	800b19a <_ZNK8touchgfx4Rect7isEmptyEv>
 800fb06:	9a03      	ldr	r2, [sp, #12]
 800fb08:	2800      	cmp	r0, #0
 800fb0a:	f47f af1b 	bne.w	800f944 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e0>
 800fb0e:	f9b7 20aa 	ldrsh.w	r2, [r7, #170]	; 0xaa
 800fb12:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800fb16:	482a      	ldr	r0, [pc, #168]	; (800fbc0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>)
 800fb18:	f9b7 10a8 	ldrsh.w	r1, [r7, #168]	; 0xa8
 800fb1c:	f9b7 30ac 	ldrsh.w	r3, [r7, #172]	; 0xac
 800fb20:	6800      	ldr	r0, [r0, #0]
 800fb22:	f8ad 101c 	strh.w	r1, [sp, #28]
 800fb26:	1aad      	subs	r5, r5, r2
 800fb28:	2d14      	cmp	r5, #20
 800fb2a:	f8ad 201e 	strh.w	r2, [sp, #30]
 800fb2e:	f8ad 3020 	strh.w	r3, [sp, #32]
 800fb32:	bfa8      	it	ge
 800fb34:	2514      	movge	r5, #20
 800fb36:	f8d0 c000 	ldr.w	ip, [r0]
 800fb3a:	b2ad      	uxth	r5, r5
 800fb3c:	fa1f fa8a 	uxth.w	sl, sl
 800fb40:	4555      	cmp	r5, sl
 800fb42:	bf94      	ite	ls
 800fb44:	9500      	strls	r5, [sp, #0]
 800fb46:	f8cd a000 	strhi.w	sl, [sp]
 800fb4a:	b292      	uxth	r2, r2
 800fb4c:	f8dc 5090 	ldr.w	r5, [ip, #144]	; 0x90
 800fb50:	b29b      	uxth	r3, r3
 800fb52:	b289      	uxth	r1, r1
 800fb54:	47a8      	blx	r5
 800fb56:	6823      	ldr	r3, [r4, #0]
 800fb58:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800fb5c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800fb5e:	a907      	add	r1, sp, #28
 800fb60:	4620      	mov	r0, r4
 800fb62:	4798      	blx	r3
 800fb64:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 800fb68:	f8b7 30ae 	ldrh.w	r3, [r7, #174]	; 0xae
 800fb6c:	f8b7 20aa 	ldrh.w	r2, [r7, #170]	; 0xaa
 800fb70:	1a5b      	subs	r3, r3, r1
 800fb72:	440a      	add	r2, r1
 800fb74:	b21b      	sxth	r3, r3
 800fb76:	f8a7 20aa 	strh.w	r2, [r7, #170]	; 0xaa
 800fb7a:	f8a7 30ae 	strh.w	r3, [r7, #174]	; 0xae
 800fb7e:	2b00      	cmp	r3, #0
 800fb80:	f47f aed7 	bne.w	800f932 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 800fb84:	fa1f f188 	uxth.w	r1, r8
 800fb88:	4648      	mov	r0, r9
 800fb8a:	f7ff fa11 	bl	800efb0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800fb8e:	e6d0      	b.n	800f932 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 800fb90:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800fb94:	42ab      	cmp	r3, r5
 800fb96:	f67f ae94 	bls.w	800f8c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800fb9a:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 800fb9e:	ab07      	add	r3, sp, #28
 800fba0:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800fba4:	6851      	ldr	r1, [r2, #4]
 800fba6:	c303      	stmia	r3!, {r0, r1}
 800fba8:	a807      	add	r0, sp, #28
 800fbaa:	f7fb faf6 	bl	800b19a <_ZNK8touchgfx4Rect7isEmptyEv>
 800fbae:	b920      	cbnz	r0, 800fbba <_ZN8touchgfx11Application15drawCachedAreasEv+0x556>
 800fbb0:	6823      	ldr	r3, [r4, #0]
 800fbb2:	a907      	add	r1, sp, #28
 800fbb4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800fbb6:	4620      	mov	r0, r4
 800fbb8:	4798      	blx	r3
 800fbba:	3501      	adds	r5, #1
 800fbbc:	b2ad      	uxth	r5, r5
 800fbbe:	e7e7      	b.n	800fb90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 800fbc0:	200135b0 	.word	0x200135b0

0800fbc4 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800fbc4:	4b03      	ldr	r3, [pc, #12]	; (800fbd4 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800fbc6:	2200      	movs	r2, #0
 800fbc8:	801a      	strh	r2, [r3, #0]
 800fbca:	805a      	strh	r2, [r3, #2]
 800fbcc:	809a      	strh	r2, [r3, #4]
 800fbce:	80da      	strh	r2, [r3, #6]
 800fbd0:	4770      	bx	lr
 800fbd2:	bf00      	nop
 800fbd4:	200135f4 	.word	0x200135f4

0800fbd8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800fbd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fbdc:	4606      	mov	r6, r0
 800fbde:	b09d      	sub	sp, #116	; 0x74
 800fbe0:	a803      	add	r0, sp, #12
 800fbe2:	4614      	mov	r4, r2
 800fbe4:	468a      	mov	sl, r1
 800fbe6:	461d      	mov	r5, r3
 800fbe8:	f000 fdbf 	bl	801076a <_ZN8touchgfx12TextProviderC1Ev>
 800fbec:	6833      	ldr	r3, [r6, #0]
 800fbee:	4630      	mov	r0, r6
 800fbf0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800fbf2:	4798      	blx	r3
 800fbf4:	6833      	ldr	r3, [r6, #0]
 800fbf6:	4607      	mov	r7, r0
 800fbf8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800fbfa:	4630      	mov	r0, r6
 800fbfc:	4798      	blx	r3
 800fbfe:	462a      	mov	r2, r5
 800fc00:	9000      	str	r0, [sp, #0]
 800fc02:	4621      	mov	r1, r4
 800fc04:	463b      	mov	r3, r7
 800fc06:	a803      	add	r0, sp, #12
 800fc08:	f000 fe0a 	bl	8010820 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800fc0c:	2500      	movs	r5, #0
 800fc0e:	462c      	mov	r4, r5
 800fc10:	46a9      	mov	r9, r5
 800fc12:	46a8      	mov	r8, r5
 800fc14:	f242 0b0b 	movw	fp, #8203	; 0x200b
 800fc18:	2300      	movs	r3, #0
 800fc1a:	9302      	str	r3, [sp, #8]
 800fc1c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800fc20:	429c      	cmp	r4, r3
 800fc22:	d002      	beq.n	800fc2a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 800fc24:	455c      	cmp	r4, fp
 800fc26:	bf18      	it	ne
 800fc28:	4625      	movne	r5, r4
 800fc2a:	ab02      	add	r3, sp, #8
 800fc2c:	4632      	mov	r2, r6
 800fc2e:	4651      	mov	r1, sl
 800fc30:	a803      	add	r0, sp, #12
 800fc32:	f001 f8f7 	bl	8010e24 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800fc36:	4604      	mov	r4, r0
 800fc38:	b108      	cbz	r0, 800fc3e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 800fc3a:	280a      	cmp	r0, #10
 800fc3c:	d10a      	bne.n	800fc54 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 800fc3e:	45c1      	cmp	r9, r8
 800fc40:	bf38      	it	cc
 800fc42:	46c1      	movcc	r9, r8
 800fc44:	f04f 0800 	mov.w	r8, #0
 800fc48:	2c00      	cmp	r4, #0
 800fc4a:	d1e5      	bne.n	800fc18 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800fc4c:	4648      	mov	r0, r9
 800fc4e:	b01d      	add	sp, #116	; 0x74
 800fc50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fc54:	9a02      	ldr	r2, [sp, #8]
 800fc56:	2a00      	cmp	r2, #0
 800fc58:	d0de      	beq.n	800fc18 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800fc5a:	7b57      	ldrb	r7, [r2, #13]
 800fc5c:	6833      	ldr	r3, [r6, #0]
 800fc5e:	8894      	ldrh	r4, [r2, #4]
 800fc60:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800fc62:	007f      	lsls	r7, r7, #1
 800fc64:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800fc68:	7a97      	ldrb	r7, [r2, #10]
 800fc6a:	4629      	mov	r1, r5
 800fc6c:	4307      	orrs	r7, r0
 800fc6e:	4630      	mov	r0, r6
 800fc70:	4798      	blx	r3
 800fc72:	4438      	add	r0, r7
 800fc74:	4480      	add	r8, r0
 800fc76:	fa1f f888 	uxth.w	r8, r8
 800fc7a:	e7e5      	b.n	800fc48 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0800fc7c <_ZNK8touchgfx4Font12getCharWidthEt>:
 800fc7c:	b508      	push	{r3, lr}
 800fc7e:	6803      	ldr	r3, [r0, #0]
 800fc80:	68db      	ldr	r3, [r3, #12]
 800fc82:	4798      	blx	r3
 800fc84:	b128      	cbz	r0, 800fc92 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800fc86:	7b43      	ldrb	r3, [r0, #13]
 800fc88:	7a80      	ldrb	r0, [r0, #10]
 800fc8a:	005b      	lsls	r3, r3, #1
 800fc8c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800fc90:	4318      	orrs	r0, r3
 800fc92:	bd08      	pop	{r3, pc}

0800fc94 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800fc94:	b40e      	push	{r1, r2, r3}
 800fc96:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fc98:	b09e      	sub	sp, #120	; 0x78
 800fc9a:	ab23      	add	r3, sp, #140	; 0x8c
 800fc9c:	4605      	mov	r5, r0
 800fc9e:	f853 4b04 	ldr.w	r4, [r3], #4
 800fca2:	9303      	str	r3, [sp, #12]
 800fca4:	a805      	add	r0, sp, #20
 800fca6:	f000 fd60 	bl	801076a <_ZN8touchgfx12TextProviderC1Ev>
 800fcaa:	682b      	ldr	r3, [r5, #0]
 800fcac:	4628      	mov	r0, r5
 800fcae:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800fcb0:	4798      	blx	r3
 800fcb2:	682b      	ldr	r3, [r5, #0]
 800fcb4:	4606      	mov	r6, r0
 800fcb6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800fcb8:	4628      	mov	r0, r5
 800fcba:	4798      	blx	r3
 800fcbc:	4633      	mov	r3, r6
 800fcbe:	ae1e      	add	r6, sp, #120	; 0x78
 800fcc0:	4621      	mov	r1, r4
 800fcc2:	9000      	str	r0, [sp, #0]
 800fcc4:	9a03      	ldr	r2, [sp, #12]
 800fcc6:	2400      	movs	r4, #0
 800fcc8:	a805      	add	r0, sp, #20
 800fcca:	f000 fda9 	bl	8010820 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800fcce:	f846 4d68 	str.w	r4, [r6, #-104]!
 800fcd2:	462a      	mov	r2, r5
 800fcd4:	4633      	mov	r3, r6
 800fcd6:	4621      	mov	r1, r4
 800fcd8:	a805      	add	r0, sp, #20
 800fcda:	f001 f8a3 	bl	8010e24 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800fcde:	b1f0      	cbz	r0, 800fd1e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 800fce0:	280a      	cmp	r0, #10
 800fce2:	d018      	beq.n	800fd16 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800fce4:	9f04      	ldr	r7, [sp, #16]
 800fce6:	b1b7      	cbz	r7, 800fd16 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800fce8:	7b78      	ldrb	r0, [r7, #13]
 800fcea:	7a3b      	ldrb	r3, [r7, #8]
 800fcec:	88aa      	ldrh	r2, [r5, #4]
 800fcee:	00c1      	lsls	r1, r0, #3
 800fcf0:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800fcf4:	4319      	orrs	r1, r3
 800fcf6:	0643      	lsls	r3, r0, #25
 800fcf8:	bf44      	itt	mi
 800fcfa:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 800fcfe:	b219      	sxthmi	r1, r3
 800fd00:	0100      	lsls	r0, r0, #4
 800fd02:	79fb      	ldrb	r3, [r7, #7]
 800fd04:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800fd08:	4303      	orrs	r3, r0
 800fd0a:	4413      	add	r3, r2
 800fd0c:	1a5b      	subs	r3, r3, r1
 800fd0e:	b29b      	uxth	r3, r3
 800fd10:	42a3      	cmp	r3, r4
 800fd12:	bfc8      	it	gt
 800fd14:	b21c      	sxthgt	r4, r3
 800fd16:	4633      	mov	r3, r6
 800fd18:	462a      	mov	r2, r5
 800fd1a:	2100      	movs	r1, #0
 800fd1c:	e7dc      	b.n	800fcd8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 800fd1e:	b2a0      	uxth	r0, r4
 800fd20:	b01e      	add	sp, #120	; 0x78
 800fd22:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800fd26:	b003      	add	sp, #12
 800fd28:	4770      	bx	lr

0800fd2a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800fd2a:	b40e      	push	{r1, r2, r3}
 800fd2c:	b570      	push	{r4, r5, r6, lr}
 800fd2e:	b09d      	sub	sp, #116	; 0x74
 800fd30:	ab21      	add	r3, sp, #132	; 0x84
 800fd32:	4604      	mov	r4, r0
 800fd34:	f853 5b04 	ldr.w	r5, [r3], #4
 800fd38:	9302      	str	r3, [sp, #8]
 800fd3a:	a803      	add	r0, sp, #12
 800fd3c:	f000 fd15 	bl	801076a <_ZN8touchgfx12TextProviderC1Ev>
 800fd40:	6823      	ldr	r3, [r4, #0]
 800fd42:	4620      	mov	r0, r4
 800fd44:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800fd46:	4798      	blx	r3
 800fd48:	6823      	ldr	r3, [r4, #0]
 800fd4a:	4606      	mov	r6, r0
 800fd4c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800fd4e:	4620      	mov	r0, r4
 800fd50:	4798      	blx	r3
 800fd52:	4633      	mov	r3, r6
 800fd54:	9000      	str	r0, [sp, #0]
 800fd56:	9a02      	ldr	r2, [sp, #8]
 800fd58:	4629      	mov	r1, r5
 800fd5a:	a803      	add	r0, sp, #12
 800fd5c:	f000 fd60 	bl	8010820 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800fd60:	a803      	add	r0, sp, #12
 800fd62:	f001 f92d 	bl	8010fc0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800fd66:	2401      	movs	r4, #1
 800fd68:	b2a3      	uxth	r3, r4
 800fd6a:	b140      	cbz	r0, 800fd7e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 800fd6c:	280a      	cmp	r0, #10
 800fd6e:	bf08      	it	eq
 800fd70:	3301      	addeq	r3, #1
 800fd72:	a803      	add	r0, sp, #12
 800fd74:	bf08      	it	eq
 800fd76:	b21c      	sxtheq	r4, r3
 800fd78:	f001 f922 	bl	8010fc0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800fd7c:	e7f4      	b.n	800fd68 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 800fd7e:	4618      	mov	r0, r3
 800fd80:	b01d      	add	sp, #116	; 0x74
 800fd82:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fd86:	b003      	add	sp, #12
 800fd88:	4770      	bx	lr

0800fd8a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800fd8a:	b40e      	push	{r1, r2, r3}
 800fd8c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fd8e:	b09e      	sub	sp, #120	; 0x78
 800fd90:	ab23      	add	r3, sp, #140	; 0x8c
 800fd92:	4604      	mov	r4, r0
 800fd94:	f853 5b04 	ldr.w	r5, [r3], #4
 800fd98:	9303      	str	r3, [sp, #12]
 800fd9a:	a805      	add	r0, sp, #20
 800fd9c:	f000 fce5 	bl	801076a <_ZN8touchgfx12TextProviderC1Ev>
 800fda0:	6823      	ldr	r3, [r4, #0]
 800fda2:	4620      	mov	r0, r4
 800fda4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800fda6:	4798      	blx	r3
 800fda8:	6823      	ldr	r3, [r4, #0]
 800fdaa:	4606      	mov	r6, r0
 800fdac:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800fdae:	4620      	mov	r0, r4
 800fdb0:	4798      	blx	r3
 800fdb2:	4633      	mov	r3, r6
 800fdb4:	4629      	mov	r1, r5
 800fdb6:	9000      	str	r0, [sp, #0]
 800fdb8:	9a03      	ldr	r2, [sp, #12]
 800fdba:	a805      	add	r0, sp, #20
 800fdbc:	ad1e      	add	r5, sp, #120	; 0x78
 800fdbe:	f000 fd2f 	bl	8010820 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800fdc2:	2100      	movs	r1, #0
 800fdc4:	f845 1d68 	str.w	r1, [r5, #-104]!
 800fdc8:	4622      	mov	r2, r4
 800fdca:	462b      	mov	r3, r5
 800fdcc:	a805      	add	r0, sp, #20
 800fdce:	f001 f829 	bl	8010e24 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800fdd2:	26ff      	movs	r6, #255	; 0xff
 800fdd4:	b1d8      	cbz	r0, 800fe0e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 800fdd6:	280a      	cmp	r0, #10
 800fdd8:	d012      	beq.n	800fe00 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 800fdda:	9804      	ldr	r0, [sp, #16]
 800fddc:	b180      	cbz	r0, 800fe00 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 800fdde:	7b47      	ldrb	r7, [r0, #13]
 800fde0:	7922      	ldrb	r2, [r4, #4]
 800fde2:	00fb      	lsls	r3, r7, #3
 800fde4:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800fde8:	7a03      	ldrb	r3, [r0, #8]
 800fdea:	430b      	orrs	r3, r1
 800fdec:	0679      	lsls	r1, r7, #25
 800fdee:	bf44      	itt	mi
 800fdf0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800fdf4:	b21b      	sxthmi	r3, r3
 800fdf6:	1ad3      	subs	r3, r2, r3
 800fdf8:	b2db      	uxtb	r3, r3
 800fdfa:	429e      	cmp	r6, r3
 800fdfc:	bf28      	it	cs
 800fdfe:	461e      	movcs	r6, r3
 800fe00:	462b      	mov	r3, r5
 800fe02:	4622      	mov	r2, r4
 800fe04:	2100      	movs	r1, #0
 800fe06:	a805      	add	r0, sp, #20
 800fe08:	f001 f80c 	bl	8010e24 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800fe0c:	e7e2      	b.n	800fdd4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 800fe0e:	4630      	mov	r0, r6
 800fe10:	b01e      	add	sp, #120	; 0x78
 800fe12:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800fe16:	b003      	add	sp, #12
 800fe18:	4770      	bx	lr

0800fe1a <_ZNK8touchgfx8Drawable10invalidateEv>:
 800fe1a:	b513      	push	{r0, r1, r4, lr}
 800fe1c:	6803      	ldr	r3, [r0, #0]
 800fe1e:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800fe22:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800fe26:	f8ad 1004 	strh.w	r1, [sp, #4]
 800fe2a:	2400      	movs	r4, #0
 800fe2c:	9400      	str	r4, [sp, #0]
 800fe2e:	f8ad 2006 	strh.w	r2, [sp, #6]
 800fe32:	691b      	ldr	r3, [r3, #16]
 800fe34:	4669      	mov	r1, sp
 800fe36:	4798      	blx	r3
 800fe38:	b002      	add	sp, #8
 800fe3a:	bd10      	pop	{r4, pc}

0800fe3c <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800fe3c:	b538      	push	{r3, r4, r5, lr}
 800fe3e:	680b      	ldr	r3, [r1, #0]
 800fe40:	460c      	mov	r4, r1
 800fe42:	68db      	ldr	r3, [r3, #12]
 800fe44:	4605      	mov	r5, r0
 800fe46:	4798      	blx	r3
 800fe48:	6823      	ldr	r3, [r4, #0]
 800fe4a:	4620      	mov	r0, r4
 800fe4c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fe4e:	4629      	mov	r1, r5
 800fe50:	4798      	blx	r3
 800fe52:	4628      	mov	r0, r5
 800fe54:	bd38      	pop	{r3, r4, r5, pc}

0800fe56 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800fe56:	b410      	push	{r4}
 800fe58:	880a      	ldrh	r2, [r1, #0]
 800fe5a:	8884      	ldrh	r4, [r0, #4]
 800fe5c:	4422      	add	r2, r4
 800fe5e:	800a      	strh	r2, [r1, #0]
 800fe60:	88c4      	ldrh	r4, [r0, #6]
 800fe62:	884a      	ldrh	r2, [r1, #2]
 800fe64:	4422      	add	r2, r4
 800fe66:	804a      	strh	r2, [r1, #2]
 800fe68:	6940      	ldr	r0, [r0, #20]
 800fe6a:	b120      	cbz	r0, 800fe76 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800fe6c:	6803      	ldr	r3, [r0, #0]
 800fe6e:	f85d 4b04 	ldr.w	r4, [sp], #4
 800fe72:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fe74:	4718      	bx	r3
 800fe76:	f85d 4b04 	ldr.w	r4, [sp], #4
 800fe7a:	4770      	bx	lr

0800fe7c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800fe7c:	b570      	push	{r4, r5, r6, lr}
 800fe7e:	8882      	ldrh	r2, [r0, #4]
 800fe80:	880b      	ldrh	r3, [r1, #0]
 800fe82:	4413      	add	r3, r2
 800fe84:	800b      	strh	r3, [r1, #0]
 800fe86:	88c2      	ldrh	r2, [r0, #6]
 800fe88:	884b      	ldrh	r3, [r1, #2]
 800fe8a:	460c      	mov	r4, r1
 800fe8c:	4413      	add	r3, r2
 800fe8e:	804b      	strh	r3, [r1, #2]
 800fe90:	4605      	mov	r5, r0
 800fe92:	1d01      	adds	r1, r0, #4
 800fe94:	4620      	mov	r0, r4
 800fe96:	f7fb f93d 	bl	800b114 <_ZN8touchgfx4RectaNERKS0_>
 800fe9a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800fe9e:	2b00      	cmp	r3, #0
 800fea0:	dd0b      	ble.n	800feba <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800fea2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800fea6:	2b00      	cmp	r3, #0
 800fea8:	dd07      	ble.n	800feba <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800feaa:	6968      	ldr	r0, [r5, #20]
 800feac:	b128      	cbz	r0, 800feba <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800feae:	6803      	ldr	r3, [r0, #0]
 800feb0:	4621      	mov	r1, r4
 800feb2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800feb4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800feb8:	4718      	bx	r3
 800feba:	bd70      	pop	{r4, r5, r6, pc}

0800febc <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800febc:	b570      	push	{r4, r5, r6, lr}
 800febe:	8882      	ldrh	r2, [r0, #4]
 800fec0:	880b      	ldrh	r3, [r1, #0]
 800fec2:	4413      	add	r3, r2
 800fec4:	800b      	strh	r3, [r1, #0]
 800fec6:	88c2      	ldrh	r2, [r0, #6]
 800fec8:	884b      	ldrh	r3, [r1, #2]
 800feca:	460c      	mov	r4, r1
 800fecc:	4413      	add	r3, r2
 800fece:	804b      	strh	r3, [r1, #2]
 800fed0:	4605      	mov	r5, r0
 800fed2:	1d01      	adds	r1, r0, #4
 800fed4:	4620      	mov	r0, r4
 800fed6:	f7fb f91d 	bl	800b114 <_ZN8touchgfx4RectaNERKS0_>
 800feda:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800fede:	2b00      	cmp	r3, #0
 800fee0:	dd18      	ble.n	800ff14 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 800fee2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800fee6:	2b00      	cmp	r3, #0
 800fee8:	dd14      	ble.n	800ff14 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 800feea:	6968      	ldr	r0, [r5, #20]
 800feec:	b128      	cbz	r0, 800fefa <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 800feee:	6803      	ldr	r3, [r0, #0]
 800fef0:	4621      	mov	r1, r4
 800fef2:	691b      	ldr	r3, [r3, #16]
 800fef4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fef8:	4718      	bx	r3
 800fefa:	4b07      	ldr	r3, [pc, #28]	; (800ff18 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 800fefc:	681b      	ldr	r3, [r3, #0]
 800fefe:	3304      	adds	r3, #4
 800ff00:	429d      	cmp	r5, r3
 800ff02:	d107      	bne.n	800ff14 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 800ff04:	f7fe ffb6 	bl	800ee74 <_ZN8touchgfx11Application11getInstanceEv>
 800ff08:	6821      	ldr	r1, [r4, #0]
 800ff0a:	6862      	ldr	r2, [r4, #4]
 800ff0c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ff10:	f7ff b862 	b.w	800efd8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800ff14:	bd70      	pop	{r4, r5, r6, pc}
 800ff16:	bf00      	nop
 800ff18:	200135ec 	.word	0x200135ec

0800ff1c <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800ff1c:	b570      	push	{r4, r5, r6, lr}
 800ff1e:	4604      	mov	r4, r0
 800ff20:	4616      	mov	r6, r2
 800ff22:	460d      	mov	r5, r1
 800ff24:	b901      	cbnz	r1, 800ff28 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800ff26:	b192      	cbz	r2, 800ff4e <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 800ff28:	6823      	ldr	r3, [r4, #0]
 800ff2a:	4620      	mov	r0, r4
 800ff2c:	699b      	ldr	r3, [r3, #24]
 800ff2e:	4798      	blx	r3
 800ff30:	88e2      	ldrh	r2, [r4, #6]
 800ff32:	88a1      	ldrh	r1, [r4, #4]
 800ff34:	4432      	add	r2, r6
 800ff36:	4429      	add	r1, r5
 800ff38:	4620      	mov	r0, r4
 800ff3a:	b212      	sxth	r2, r2
 800ff3c:	b209      	sxth	r1, r1
 800ff3e:	f7f3 fb74 	bl	800362a <_ZN8touchgfx8Drawable5setXYEss>
 800ff42:	6823      	ldr	r3, [r4, #0]
 800ff44:	4620      	mov	r0, r4
 800ff46:	699b      	ldr	r3, [r3, #24]
 800ff48:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ff4c:	4718      	bx	r3
 800ff4e:	bd70      	pop	{r4, r5, r6, pc}

0800ff50 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800ff50:	b510      	push	{r4, lr}
 800ff52:	4604      	mov	r4, r0
 800ff54:	4608      	mov	r0, r1
 800ff56:	2300      	movs	r3, #0
 800ff58:	8023      	strh	r3, [r4, #0]
 800ff5a:	8063      	strh	r3, [r4, #2]
 800ff5c:	6803      	ldr	r3, [r0, #0]
 800ff5e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800ff62:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800ff66:	80a1      	strh	r1, [r4, #4]
 800ff68:	80e2      	strh	r2, [r4, #6]
 800ff6a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ff6c:	4621      	mov	r1, r4
 800ff6e:	4798      	blx	r3
 800ff70:	4620      	mov	r0, r4
 800ff72:	bd10      	pop	{r4, pc}

0800ff74 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 800ff74:	b530      	push	{r4, r5, lr}
 800ff76:	8083      	strh	r3, [r0, #4]
 800ff78:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800ff7c:	f89d 5010 	ldrb.w	r5, [sp, #16]
 800ff80:	7183      	strb	r3, [r0, #6]
 800ff82:	79c3      	ldrb	r3, [r0, #7]
 800ff84:	6101      	str	r1, [r0, #16]
 800ff86:	f365 0306 	bfi	r3, r5, #0, #7
 800ff8a:	f89d 5014 	ldrb.w	r5, [sp, #20]
 800ff8e:	8282      	strh	r2, [r0, #20]
 800ff90:	f365 13c7 	bfi	r3, r5, #7, #1
 800ff94:	71c3      	strb	r3, [r0, #7]
 800ff96:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800ff9a:	7203      	strb	r3, [r0, #8]
 800ff9c:	f89d 301c 	ldrb.w	r3, [sp, #28]
 800ffa0:	7243      	strb	r3, [r0, #9]
 800ffa2:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800ffa6:	8143      	strh	r3, [r0, #10]
 800ffa8:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800ffac:	8183      	strh	r3, [r0, #12]
 800ffae:	4b01      	ldr	r3, [pc, #4]	; (800ffb4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 800ffb0:	6003      	str	r3, [r0, #0]
 800ffb2:	bd30      	pop	{r4, r5, pc}
 800ffb4:	080208f8 	.word	0x080208f8

0800ffb8 <_ZNK8touchgfx9ConstFont4findEt>:
 800ffb8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ffba:	6904      	ldr	r4, [r0, #16]
 800ffbc:	b3bc      	cbz	r4, 801002e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800ffbe:	88a3      	ldrh	r3, [r4, #4]
 800ffc0:	8a82      	ldrh	r2, [r0, #20]
 800ffc2:	1acb      	subs	r3, r1, r3
 800ffc4:	f102 32ff 	add.w	r2, r2, #4294967295
 800ffc8:	d431      	bmi.n	801002e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800ffca:	4293      	cmp	r3, r2
 800ffcc:	dd0c      	ble.n	800ffe8 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 800ffce:	230e      	movs	r3, #14
 800ffd0:	fb03 4302 	mla	r3, r3, r2, r4
 800ffd4:	889b      	ldrh	r3, [r3, #4]
 800ffd6:	1a5b      	subs	r3, r3, r1
 800ffd8:	1ad3      	subs	r3, r2, r3
 800ffda:	429a      	cmp	r2, r3
 800ffdc:	db27      	blt.n	801002e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800ffde:	2b00      	cmp	r3, #0
 800ffe0:	bfbc      	itt	lt
 800ffe2:	2302      	movlt	r3, #2
 800ffe4:	fb92 f3f3 	sdivlt	r3, r2, r3
 800ffe8:	2500      	movs	r5, #0
 800ffea:	260e      	movs	r6, #14
 800ffec:	4295      	cmp	r5, r2
 800ffee:	dc1e      	bgt.n	801002e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800fff0:	fb06 4003 	mla	r0, r6, r3, r4
 800fff4:	8887      	ldrh	r7, [r0, #4]
 800fff6:	42b9      	cmp	r1, r7
 800fff8:	d01a      	beq.n	8010030 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 800fffa:	d20d      	bcs.n	8010018 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 800fffc:	1e5a      	subs	r2, r3, #1
 800fffe:	4295      	cmp	r5, r2
 8010000:	dc15      	bgt.n	801002e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010002:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8010006:	1a5b      	subs	r3, r3, r1
 8010008:	1ad3      	subs	r3, r2, r3
 801000a:	429a      	cmp	r2, r3
 801000c:	db0f      	blt.n	801002e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801000e:	429d      	cmp	r5, r3
 8010010:	ddec      	ble.n	800ffec <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8010012:	1953      	adds	r3, r2, r5
 8010014:	105b      	asrs	r3, r3, #1
 8010016:	e7e9      	b.n	800ffec <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8010018:	1c5d      	adds	r5, r3, #1
 801001a:	42aa      	cmp	r2, r5
 801001c:	db07      	blt.n	801002e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801001e:	8a43      	ldrh	r3, [r0, #18]
 8010020:	1acb      	subs	r3, r1, r3
 8010022:	442b      	add	r3, r5
 8010024:	429d      	cmp	r5, r3
 8010026:	dc02      	bgt.n	801002e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010028:	429a      	cmp	r2, r3
 801002a:	dadf      	bge.n	800ffec <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801002c:	e7f1      	b.n	8010012 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 801002e:	2000      	movs	r0, #0
 8010030:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010032 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8010032:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010034:	4604      	mov	r4, r0
 8010036:	4617      	mov	r7, r2
 8010038:	461e      	mov	r6, r3
 801003a:	b911      	cbnz	r1, 8010042 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 801003c:	2500      	movs	r5, #0
 801003e:	4628      	mov	r0, r5
 8010040:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010042:	290a      	cmp	r1, #10
 8010044:	d0fa      	beq.n	801003c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8010046:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 801004a:	4291      	cmp	r1, r2
 801004c:	d0f6      	beq.n	801003c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801004e:	f242 020b 	movw	r2, #8203	; 0x200b
 8010052:	4291      	cmp	r1, r2
 8010054:	d0f2      	beq.n	801003c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8010056:	f7ff ffaf 	bl	800ffb8 <_ZNK8touchgfx9ConstFont4findEt>
 801005a:	4605      	mov	r5, r0
 801005c:	b950      	cbnz	r0, 8010074 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 801005e:	6823      	ldr	r3, [r4, #0]
 8010060:	4620      	mov	r0, r4
 8010062:	691b      	ldr	r3, [r3, #16]
 8010064:	4798      	blx	r3
 8010066:	4601      	mov	r1, r0
 8010068:	4620      	mov	r0, r4
 801006a:	f7ff ffa5 	bl	800ffb8 <_ZNK8touchgfx9ConstFont4findEt>
 801006e:	4605      	mov	r5, r0
 8010070:	2800      	cmp	r0, #0
 8010072:	d0e3      	beq.n	801003c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8010074:	6823      	ldr	r3, [r4, #0]
 8010076:	4629      	mov	r1, r5
 8010078:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801007a:	4620      	mov	r0, r4
 801007c:	4798      	blx	r3
 801007e:	6038      	str	r0, [r7, #0]
 8010080:	6823      	ldr	r3, [r4, #0]
 8010082:	4620      	mov	r0, r4
 8010084:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010086:	4798      	blx	r3
 8010088:	7030      	strb	r0, [r6, #0]
 801008a:	e7d8      	b.n	801003e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0801008c <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 801008c:	b538      	push	{r3, r4, r5, lr}
 801008e:	4605      	mov	r5, r0
 8010090:	f001 fcea 	bl	8011a68 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010094:	4604      	mov	r4, r0
 8010096:	4628      	mov	r0, r5
 8010098:	f001 fc2a 	bl	80118f0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801009c:	2800      	cmp	r0, #0
 801009e:	bf14      	ite	ne
 80100a0:	2002      	movne	r0, #2
 80100a2:	2000      	moveq	r0, #0
 80100a4:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 80100a8:	b280      	uxth	r0, r0
 80100aa:	bd38      	pop	{r3, r4, r5, pc}

080100ac <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 80100ac:	b538      	push	{r3, r4, r5, lr}
 80100ae:	4605      	mov	r5, r0
 80100b0:	f001 fcda 	bl	8011a68 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80100b4:	4604      	mov	r4, r0
 80100b6:	4628      	mov	r0, r5
 80100b8:	f001 fc1a 	bl	80118f0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80100bc:	2800      	cmp	r0, #0
 80100be:	bf14      	ite	ne
 80100c0:	2002      	movne	r0, #2
 80100c2:	2000      	moveq	r0, #0
 80100c4:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 80100c8:	f040 0001 	orr.w	r0, r0, #1
 80100cc:	b280      	uxth	r0, r0
 80100ce:	bd38      	pop	{r3, r4, r5, pc}

080100d0 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 80100d0:	2000      	movs	r0, #0
 80100d2:	4770      	bx	lr

080100d4 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 80100d4:	2001      	movs	r0, #1
 80100d6:	4770      	bx	lr

080100d8 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 80100d8:	2002      	movs	r0, #2
 80100da:	4770      	bx	lr

080100dc <_ZN8touchgfx6ScreenD1Ev>:
 80100dc:	4770      	bx	lr

080100de <_ZN8touchgfx12GestureEventD1Ev>:
 80100de:	4770      	bx	lr

080100e0 <_ZN8touchgfx9DragEventD1Ev>:
 80100e0:	4770      	bx	lr

080100e2 <_ZN8touchgfx10ClickEventD1Ev>:
 80100e2:	4770      	bx	lr

080100e4 <_ZN8touchgfx10ClickEventD0Ev>:
 80100e4:	b510      	push	{r4, lr}
 80100e6:	210c      	movs	r1, #12
 80100e8:	4604      	mov	r4, r0
 80100ea:	f00d f945 	bl	801d378 <_ZdlPvj>
 80100ee:	4620      	mov	r0, r4
 80100f0:	bd10      	pop	{r4, pc}

080100f2 <_ZN8touchgfx9DragEventD0Ev>:
 80100f2:	b510      	push	{r4, lr}
 80100f4:	2110      	movs	r1, #16
 80100f6:	4604      	mov	r4, r0
 80100f8:	f00d f93e 	bl	801d378 <_ZdlPvj>
 80100fc:	4620      	mov	r0, r4
 80100fe:	bd10      	pop	{r4, pc}

08010100 <_ZN8touchgfx12GestureEventD0Ev>:
 8010100:	b510      	push	{r4, lr}
 8010102:	210c      	movs	r1, #12
 8010104:	4604      	mov	r4, r0
 8010106:	f00d f937 	bl	801d378 <_ZdlPvj>
 801010a:	4620      	mov	r0, r4
 801010c:	bd10      	pop	{r4, pc}

0801010e <_ZN8touchgfx6ScreenD0Ev>:
 801010e:	b510      	push	{r4, lr}
 8010110:	213c      	movs	r1, #60	; 0x3c
 8010112:	4604      	mov	r4, r0
 8010114:	f00d f930 	bl	801d378 <_ZdlPvj>
 8010118:	4620      	mov	r0, r4
 801011a:	bd10      	pop	{r4, pc}

0801011c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 801011c:	b530      	push	{r4, r5, lr}
 801011e:	460d      	mov	r5, r1
 8010120:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8010122:	b087      	sub	sp, #28
 8010124:	4604      	mov	r4, r0
 8010126:	b301      	cbz	r1, 801016a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8010128:	a801      	add	r0, sp, #4
 801012a:	f7ff ff11 	bl	800ff50 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801012e:	892a      	ldrh	r2, [r5, #8]
 8010130:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8010134:	7928      	ldrb	r0, [r5, #4]
 8010136:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801013a:	f88d 0010 	strb.w	r0, [sp, #16]
 801013e:	1ad2      	subs	r2, r2, r3
 8010140:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8010142:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8010144:	f8ad 1012 	strh.w	r1, [sp, #18]
 8010148:	441a      	add	r2, r3
 801014a:	896b      	ldrh	r3, [r5, #10]
 801014c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8010150:	f8ad 2014 	strh.w	r2, [sp, #20]
 8010154:	1b5b      	subs	r3, r3, r5
 8010156:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8010158:	442b      	add	r3, r5
 801015a:	4d05      	ldr	r5, [pc, #20]	; (8010170 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 801015c:	9503      	str	r5, [sp, #12]
 801015e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8010162:	6803      	ldr	r3, [r0, #0]
 8010164:	a903      	add	r1, sp, #12
 8010166:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010168:	4798      	blx	r3
 801016a:	b007      	add	sp, #28
 801016c:	bd30      	pop	{r4, r5, pc}
 801016e:	bf00      	nop
 8010170:	08020978 	.word	0x08020978

08010174 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8010174:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010178:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801017a:	b08a      	sub	sp, #40	; 0x28
 801017c:	4604      	mov	r4, r0
 801017e:	460d      	mov	r5, r1
 8010180:	b113      	cbz	r3, 8010188 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8010182:	790b      	ldrb	r3, [r1, #4]
 8010184:	2b00      	cmp	r3, #0
 8010186:	d044      	beq.n	8010212 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8010188:	f104 0804 	add.w	r8, r4, #4
 801018c:	4641      	mov	r1, r8
 801018e:	a803      	add	r0, sp, #12
 8010190:	f7ff fede 	bl	800ff50 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010194:	792b      	ldrb	r3, [r5, #4]
 8010196:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801019a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801019e:	b983      	cbnz	r3, 80101c2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 80101a0:	892a      	ldrh	r2, [r5, #8]
 80101a2:	88e9      	ldrh	r1, [r5, #6]
 80101a4:	f104 0336 	add.w	r3, r4, #54	; 0x36
 80101a8:	1b92      	subs	r2, r2, r6
 80101aa:	1bc9      	subs	r1, r1, r7
 80101ac:	9301      	str	r3, [sp, #4]
 80101ae:	f104 0334 	add.w	r3, r4, #52	; 0x34
 80101b2:	9300      	str	r3, [sp, #0]
 80101b4:	b212      	sxth	r2, r2
 80101b6:	f104 0330 	add.w	r3, r4, #48	; 0x30
 80101ba:	b209      	sxth	r1, r1
 80101bc:	4640      	mov	r0, r8
 80101be:	f7fa fec5 	bl	800af4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 80101c2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80101c4:	b329      	cbz	r1, 8010212 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80101c6:	a805      	add	r0, sp, #20
 80101c8:	f7ff fec2 	bl	800ff50 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80101cc:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80101d0:	792b      	ldrb	r3, [r5, #4]
 80101d2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80101d4:	f88d 3020 	strb.w	r3, [sp, #32]
 80101d8:	1abf      	subs	r7, r7, r2
 80101da:	88ea      	ldrh	r2, [r5, #6]
 80101dc:	4417      	add	r7, r2
 80101de:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 80101e0:	4417      	add	r7, r2
 80101e2:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 80101e6:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 80101ea:	1ab6      	subs	r6, r6, r2
 80101ec:	892a      	ldrh	r2, [r5, #8]
 80101ee:	4416      	add	r6, r2
 80101f0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80101f2:	4416      	add	r6, r2
 80101f4:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 80101f8:	4a07      	ldr	r2, [pc, #28]	; (8010218 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 80101fa:	9207      	str	r2, [sp, #28]
 80101fc:	2600      	movs	r6, #0
 80101fe:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8010202:	6803      	ldr	r3, [r0, #0]
 8010204:	a907      	add	r1, sp, #28
 8010206:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010208:	4798      	blx	r3
 801020a:	792b      	ldrb	r3, [r5, #4]
 801020c:	b10b      	cbz	r3, 8010212 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801020e:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8010212:	b00a      	add	sp, #40	; 0x28
 8010214:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010218:	08020950 	.word	0x08020950

0801021c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 801021c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010220:	460c      	mov	r4, r1
 8010222:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8010224:	b088      	sub	sp, #32
 8010226:	4605      	mov	r5, r0
 8010228:	2900      	cmp	r1, #0
 801022a:	d06d      	beq.n	8010308 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 801022c:	4668      	mov	r0, sp
 801022e:	f7ff fe8f 	bl	800ff50 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010232:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8010234:	88e3      	ldrh	r3, [r4, #6]
 8010236:	f9bd 8000 	ldrsh.w	r8, [sp]
 801023a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801023e:	440b      	add	r3, r1
 8010240:	b21b      	sxth	r3, r3
 8010242:	4543      	cmp	r3, r8
 8010244:	db31      	blt.n	80102aa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8010246:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801024a:	44c4      	add	ip, r8
 801024c:	fa0f fc8c 	sxth.w	ip, ip
 8010250:	4563      	cmp	r3, ip
 8010252:	da2a      	bge.n	80102aa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8010254:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8010256:	8926      	ldrh	r6, [r4, #8]
 8010258:	4416      	add	r6, r2
 801025a:	b236      	sxth	r6, r6
 801025c:	42be      	cmp	r6, r7
 801025e:	db24      	blt.n	80102aa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8010260:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8010264:	4438      	add	r0, r7
 8010266:	b200      	sxth	r0, r0
 8010268:	4286      	cmp	r6, r0
 801026a:	da1e      	bge.n	80102aa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801026c:	8963      	ldrh	r3, [r4, #10]
 801026e:	4419      	add	r1, r3
 8010270:	b209      	sxth	r1, r1
 8010272:	4541      	cmp	r1, r8
 8010274:	db08      	blt.n	8010288 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8010276:	4561      	cmp	r1, ip
 8010278:	da06      	bge.n	8010288 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801027a:	89a3      	ldrh	r3, [r4, #12]
 801027c:	441a      	add	r2, r3
 801027e:	b212      	sxth	r2, r2
 8010280:	42ba      	cmp	r2, r7
 8010282:	db01      	blt.n	8010288 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8010284:	4282      	cmp	r2, r0
 8010286:	db10      	blt.n	80102aa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8010288:	4b21      	ldr	r3, [pc, #132]	; (8010310 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801028a:	9304      	str	r3, [sp, #16]
 801028c:	2302      	movs	r3, #2
 801028e:	f88d 3014 	strb.w	r3, [sp, #20]
 8010292:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8010294:	2300      	movs	r3, #0
 8010296:	f8ad 3016 	strh.w	r3, [sp, #22]
 801029a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801029e:	f8ad 301a 	strh.w	r3, [sp, #26]
 80102a2:	6803      	ldr	r3, [r0, #0]
 80102a4:	a904      	add	r1, sp, #16
 80102a6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80102a8:	4798      	blx	r3
 80102aa:	1d29      	adds	r1, r5, #4
 80102ac:	a802      	add	r0, sp, #8
 80102ae:	f7ff fe4f 	bl	800ff50 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80102b2:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80102b6:	88e0      	ldrh	r0, [r4, #6]
 80102b8:	7921      	ldrb	r1, [r4, #4]
 80102ba:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 80102be:	8922      	ldrh	r2, [r4, #8]
 80102c0:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 80102c2:	f88d 1014 	strb.w	r1, [sp, #20]
 80102c6:	eba3 0808 	sub.w	r8, r3, r8
 80102ca:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80102ce:	1bdf      	subs	r7, r3, r7
 80102d0:	b2bb      	uxth	r3, r7
 80102d2:	fa1f f888 	uxth.w	r8, r8
 80102d6:	8967      	ldrh	r7, [r4, #10]
 80102d8:	89a4      	ldrh	r4, [r4, #12]
 80102da:	4440      	add	r0, r8
 80102dc:	4460      	add	r0, ip
 80102de:	441a      	add	r2, r3
 80102e0:	44b8      	add	r8, r7
 80102e2:	4423      	add	r3, r4
 80102e4:	f8ad 0016 	strh.w	r0, [sp, #22]
 80102e8:	4433      	add	r3, r6
 80102ea:	4432      	add	r2, r6
 80102ec:	44e0      	add	r8, ip
 80102ee:	4c09      	ldr	r4, [pc, #36]	; (8010314 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 80102f0:	6b28      	ldr	r0, [r5, #48]	; 0x30
 80102f2:	9404      	str	r4, [sp, #16]
 80102f4:	f8ad 2018 	strh.w	r2, [sp, #24]
 80102f8:	f8ad 801a 	strh.w	r8, [sp, #26]
 80102fc:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010300:	6803      	ldr	r3, [r0, #0]
 8010302:	a904      	add	r1, sp, #16
 8010304:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8010306:	4798      	blx	r3
 8010308:	b008      	add	sp, #32
 801030a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801030e:	bf00      	nop
 8010310:	08020950 	.word	0x08020950
 8010314:	08020964 	.word	0x08020964

08010318 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8010318:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801031a:	4604      	mov	r4, r0
 801031c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8010320:	3201      	adds	r2, #1
 8010322:	d112      	bne.n	801034a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8010324:	6803      	ldr	r3, [r0, #0]
 8010326:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801032a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801032e:	f8ad 1004 	strh.w	r1, [sp, #4]
 8010332:	2500      	movs	r5, #0
 8010334:	9500      	str	r5, [sp, #0]
 8010336:	466d      	mov	r5, sp
 8010338:	4629      	mov	r1, r5
 801033a:	f8ad 2006 	strh.w	r2, [sp, #6]
 801033e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010340:	4798      	blx	r3
 8010342:	e895 0003 	ldmia.w	r5, {r0, r1}
 8010346:	e884 0003 	stmia.w	r4, {r0, r1}
 801034a:	4620      	mov	r0, r4
 801034c:	b003      	add	sp, #12
 801034e:	bd30      	pop	{r4, r5, pc}

08010350 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8010350:	b513      	push	{r0, r1, r4, lr}
 8010352:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8010356:	3301      	adds	r3, #1
 8010358:	4604      	mov	r4, r0
 801035a:	d109      	bne.n	8010370 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801035c:	4601      	mov	r1, r0
 801035e:	4668      	mov	r0, sp
 8010360:	f7ff fdf6 	bl	800ff50 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010364:	f8bd 3000 	ldrh.w	r3, [sp]
 8010368:	8423      	strh	r3, [r4, #32]
 801036a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801036e:	8463      	strh	r3, [r4, #34]	; 0x22
 8010370:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8010374:	b002      	add	sp, #8
 8010376:	bd10      	pop	{r4, pc}

08010378 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8010378:	b513      	push	{r0, r1, r4, lr}
 801037a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 801037e:	3301      	adds	r3, #1
 8010380:	4604      	mov	r4, r0
 8010382:	d109      	bne.n	8010398 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8010384:	4601      	mov	r1, r0
 8010386:	4668      	mov	r0, sp
 8010388:	f7ff fde2 	bl	800ff50 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801038c:	f8bd 3000 	ldrh.w	r3, [sp]
 8010390:	8423      	strh	r3, [r4, #32]
 8010392:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010396:	8463      	strh	r3, [r4, #34]	; 0x22
 8010398:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 801039c:	b002      	add	sp, #8
 801039e:	bd10      	pop	{r4, pc}

080103a0 <_ZN8touchgfx6ScreenC1Ev>:
 80103a0:	b570      	push	{r4, r5, r6, lr}
 80103a2:	4605      	mov	r5, r0
 80103a4:	4b16      	ldr	r3, [pc, #88]	; (8010400 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 80103a6:	f845 3b04 	str.w	r3, [r5], #4
 80103aa:	2300      	movs	r3, #0
 80103ac:	8103      	strh	r3, [r0, #8]
 80103ae:	8143      	strh	r3, [r0, #10]
 80103b0:	8183      	strh	r3, [r0, #12]
 80103b2:	81c3      	strh	r3, [r0, #14]
 80103b4:	8203      	strh	r3, [r0, #16]
 80103b6:	8243      	strh	r3, [r0, #18]
 80103b8:	8283      	strh	r3, [r0, #20]
 80103ba:	82c3      	strh	r3, [r0, #22]
 80103bc:	e9c0 3306 	strd	r3, r3, [r0, #24]
 80103c0:	6203      	str	r3, [r0, #32]
 80103c2:	8483      	strh	r3, [r0, #36]	; 0x24
 80103c4:	84c3      	strh	r3, [r0, #38]	; 0x26
 80103c6:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 80103ca:	4a0e      	ldr	r2, [pc, #56]	; (8010404 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 80103cc:	6343      	str	r3, [r0, #52]	; 0x34
 80103ce:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 80103d2:	4b0d      	ldr	r3, [pc, #52]	; (8010408 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 80103d4:	6042      	str	r2, [r0, #4]
 80103d6:	f9b3 6000 	ldrsh.w	r6, [r3]
 80103da:	6b93      	ldr	r3, [r2, #56]	; 0x38
 80103dc:	4a0b      	ldr	r2, [pc, #44]	; (801040c <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 80103de:	4604      	mov	r4, r0
 80103e0:	2101      	movs	r1, #1
 80103e2:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 80103e6:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 80103ea:	f9b2 1000 	ldrsh.w	r1, [r2]
 80103ee:	4628      	mov	r0, r5
 80103f0:	4798      	blx	r3
 80103f2:	6863      	ldr	r3, [r4, #4]
 80103f4:	4628      	mov	r0, r5
 80103f6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80103f8:	4631      	mov	r1, r6
 80103fa:	4798      	blx	r3
 80103fc:	4620      	mov	r0, r4
 80103fe:	bd70      	pop	{r4, r5, r6, pc}
 8010400:	0802098c 	.word	0x0802098c
 8010404:	080203e4 	.word	0x080203e4
 8010408:	200135a6 	.word	0x200135a6
 801040c:	200135a4 	.word	0x200135a4

08010410 <_ZN8touchgfx6Screen4drawEv>:
 8010410:	b507      	push	{r0, r1, r2, lr}
 8010412:	4b09      	ldr	r3, [pc, #36]	; (8010438 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8010414:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010418:	4b08      	ldr	r3, [pc, #32]	; (801043c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801041a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801041e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010422:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010426:	6803      	ldr	r3, [r0, #0]
 8010428:	2100      	movs	r1, #0
 801042a:	9100      	str	r1, [sp, #0]
 801042c:	689b      	ldr	r3, [r3, #8]
 801042e:	4669      	mov	r1, sp
 8010430:	4798      	blx	r3
 8010432:	b003      	add	sp, #12
 8010434:	f85d fb04 	ldr.w	pc, [sp], #4
 8010438:	200135a4 	.word	0x200135a4
 801043c:	200135a6 	.word	0x200135a6

08010440 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8010440:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010444:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8010448:	2b00      	cmp	r3, #0
 801044a:	b089      	sub	sp, #36	; 0x24
 801044c:	4680      	mov	r8, r0
 801044e:	460c      	mov	r4, r1
 8010450:	4615      	mov	r5, r2
 8010452:	dd0e      	ble.n	8010472 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8010454:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8010458:	2b00      	cmp	r3, #0
 801045a:	dd0a      	ble.n	8010472 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801045c:	4628      	mov	r0, r5
 801045e:	f7ff ff5b 	bl	8010318 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8010462:	4621      	mov	r1, r4
 8010464:	f7fe fc27 	bl	800ecb6 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010468:	69eb      	ldr	r3, [r5, #28]
 801046a:	b928      	cbnz	r0, 8010478 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801046c:	461d      	mov	r5, r3
 801046e:	2b00      	cmp	r3, #0
 8010470:	d1f4      	bne.n	801045c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8010472:	b009      	add	sp, #36	; 0x24
 8010474:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010478:	ae04      	add	r6, sp, #16
 801047a:	2b00      	cmp	r3, #0
 801047c:	f000 80b5 	beq.w	80105ea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8010480:	682b      	ldr	r3, [r5, #0]
 8010482:	4629      	mov	r1, r5
 8010484:	68db      	ldr	r3, [r3, #12]
 8010486:	a802      	add	r0, sp, #8
 8010488:	4798      	blx	r3
 801048a:	4628      	mov	r0, r5
 801048c:	f7ff ff60 	bl	8010350 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8010490:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8010494:	4407      	add	r7, r0
 8010496:	4628      	mov	r0, r5
 8010498:	f7ff ff6e 	bl	8010378 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801049c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80104a0:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80104a4:	f8ad 2014 	strh.w	r2, [sp, #20]
 80104a8:	4418      	add	r0, r3
 80104aa:	4621      	mov	r1, r4
 80104ac:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80104b0:	f8ad 0012 	strh.w	r0, [sp, #18]
 80104b4:	b23f      	sxth	r7, r7
 80104b6:	4630      	mov	r0, r6
 80104b8:	f8ad 3016 	strh.w	r3, [sp, #22]
 80104bc:	f8ad 7010 	strh.w	r7, [sp, #16]
 80104c0:	f7fa fe28 	bl	800b114 <_ZN8touchgfx4RectaNERKS0_>
 80104c4:	4628      	mov	r0, r5
 80104c6:	f7ff ff27 	bl	8010318 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80104ca:	4602      	mov	r2, r0
 80104cc:	e896 0003 	ldmia.w	r6, {r0, r1}
 80104d0:	ab06      	add	r3, sp, #24
 80104d2:	e883 0003 	stmia.w	r3, {r0, r1}
 80104d6:	4611      	mov	r1, r2
 80104d8:	4618      	mov	r0, r3
 80104da:	f7fa fe1b 	bl	800b114 <_ZN8touchgfx4RectaNERKS0_>
 80104de:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80104e2:	f9b4 1000 	ldrsh.w	r1, [r4]
 80104e6:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 80104ea:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 80104ee:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 80104f2:	4299      	cmp	r1, r3
 80104f4:	d10b      	bne.n	801050e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80104f6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80104fa:	4552      	cmp	r2, sl
 80104fc:	d107      	bne.n	801050e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80104fe:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8010502:	455a      	cmp	r2, fp
 8010504:	d103      	bne.n	801050e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8010506:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801050a:	454a      	cmp	r2, r9
 801050c:	d06d      	beq.n	80105ea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801050e:	f1bb 0f00 	cmp.w	fp, #0
 8010512:	dd65      	ble.n	80105e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8010514:	f1b9 0f00 	cmp.w	r9, #0
 8010518:	dd62      	ble.n	80105e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801051a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801051e:	fa1f f08a 	uxth.w	r0, sl
 8010522:	4552      	cmp	r2, sl
 8010524:	9000      	str	r0, [sp, #0]
 8010526:	da12      	bge.n	801054e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8010528:	9301      	str	r3, [sp, #4]
 801052a:	9b00      	ldr	r3, [sp, #0]
 801052c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8010530:	f8ad 2012 	strh.w	r2, [sp, #18]
 8010534:	1a9a      	subs	r2, r3, r2
 8010536:	f8ad 1010 	strh.w	r1, [sp, #16]
 801053a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801053e:	f8ad 2016 	strh.w	r2, [sp, #22]
 8010542:	69ea      	ldr	r2, [r5, #28]
 8010544:	4631      	mov	r1, r6
 8010546:	4640      	mov	r0, r8
 8010548:	f7ff ff7a 	bl	8010440 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801054c:	9b01      	ldr	r3, [sp, #4]
 801054e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8010552:	429a      	cmp	r2, r3
 8010554:	b29f      	uxth	r7, r3
 8010556:	da0d      	bge.n	8010574 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8010558:	f8ad 2010 	strh.w	r2, [sp, #16]
 801055c:	1aba      	subs	r2, r7, r2
 801055e:	f8ad a012 	strh.w	sl, [sp, #18]
 8010562:	f8ad 2014 	strh.w	r2, [sp, #20]
 8010566:	f8ad 9016 	strh.w	r9, [sp, #22]
 801056a:	69ea      	ldr	r2, [r5, #28]
 801056c:	4631      	mov	r1, r6
 801056e:	4640      	mov	r0, r8
 8010570:	f7ff ff66 	bl	8010440 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8010574:	8822      	ldrh	r2, [r4, #0]
 8010576:	88a3      	ldrh	r3, [r4, #4]
 8010578:	445f      	add	r7, fp
 801057a:	4413      	add	r3, r2
 801057c:	b29b      	uxth	r3, r3
 801057e:	b2bf      	uxth	r7, r7
 8010580:	b23a      	sxth	r2, r7
 8010582:	b219      	sxth	r1, r3
 8010584:	4291      	cmp	r1, r2
 8010586:	dd0d      	ble.n	80105a4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8010588:	1bdb      	subs	r3, r3, r7
 801058a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801058e:	f8ad a012 	strh.w	sl, [sp, #18]
 8010592:	f8ad 3014 	strh.w	r3, [sp, #20]
 8010596:	f8ad 9016 	strh.w	r9, [sp, #22]
 801059a:	69ea      	ldr	r2, [r5, #28]
 801059c:	4631      	mov	r1, r6
 801059e:	4640      	mov	r0, r8
 80105a0:	f7ff ff4e 	bl	8010440 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80105a4:	88e2      	ldrh	r2, [r4, #6]
 80105a6:	8863      	ldrh	r3, [r4, #2]
 80105a8:	4413      	add	r3, r2
 80105aa:	9a00      	ldr	r2, [sp, #0]
 80105ac:	444a      	add	r2, r9
 80105ae:	b29b      	uxth	r3, r3
 80105b0:	fa1f f982 	uxth.w	r9, r2
 80105b4:	fa0f f289 	sxth.w	r2, r9
 80105b8:	b219      	sxth	r1, r3
 80105ba:	428a      	cmp	r2, r1
 80105bc:	da15      	bge.n	80105ea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80105be:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80105c2:	f9b4 0000 	ldrsh.w	r0, [r4]
 80105c6:	f8ad 1014 	strh.w	r1, [sp, #20]
 80105ca:	eba3 0309 	sub.w	r3, r3, r9
 80105ce:	f8ad 0010 	strh.w	r0, [sp, #16]
 80105d2:	f8ad 2012 	strh.w	r2, [sp, #18]
 80105d6:	f8ad 3016 	strh.w	r3, [sp, #22]
 80105da:	69ea      	ldr	r2, [r5, #28]
 80105dc:	4631      	mov	r1, r6
 80105de:	e001      	b.n	80105e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 80105e0:	69ea      	ldr	r2, [r5, #28]
 80105e2:	4621      	mov	r1, r4
 80105e4:	4640      	mov	r0, r8
 80105e6:	f7ff ff2b 	bl	8010440 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80105ea:	4628      	mov	r0, r5
 80105ec:	f7ff fe94 	bl	8010318 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80105f0:	6861      	ldr	r1, [r4, #4]
 80105f2:	4602      	mov	r2, r0
 80105f4:	6820      	ldr	r0, [r4, #0]
 80105f6:	4633      	mov	r3, r6
 80105f8:	c303      	stmia	r3!, {r0, r1}
 80105fa:	4611      	mov	r1, r2
 80105fc:	4630      	mov	r0, r6
 80105fe:	f7fa fd89 	bl	800b114 <_ZN8touchgfx4RectaNERKS0_>
 8010602:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8010606:	2b00      	cmp	r3, #0
 8010608:	f77f af33 	ble.w	8010472 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801060c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8010610:	2b00      	cmp	r3, #0
 8010612:	f77f af2e 	ble.w	8010472 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8010616:	4628      	mov	r0, r5
 8010618:	f7ff fe9a 	bl	8010350 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801061c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8010620:	1a18      	subs	r0, r3, r0
 8010622:	f8ad 0010 	strh.w	r0, [sp, #16]
 8010626:	4628      	mov	r0, r5
 8010628:	f7ff fea6 	bl	8010378 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801062c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8010630:	1a18      	subs	r0, r3, r0
 8010632:	f8ad 0012 	strh.w	r0, [sp, #18]
 8010636:	682b      	ldr	r3, [r5, #0]
 8010638:	4631      	mov	r1, r6
 801063a:	689b      	ldr	r3, [r3, #8]
 801063c:	4628      	mov	r0, r5
 801063e:	4798      	blx	r3
 8010640:	e717      	b.n	8010472 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08010642 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8010642:	b570      	push	{r4, r5, r6, lr}
 8010644:	460c      	mov	r4, r1
 8010646:	b086      	sub	sp, #24
 8010648:	1d06      	adds	r6, r0, #4
 801064a:	2300      	movs	r3, #0
 801064c:	4631      	mov	r1, r6
 801064e:	4605      	mov	r5, r0
 8010650:	a802      	add	r0, sp, #8
 8010652:	9301      	str	r3, [sp, #4]
 8010654:	f7ff fc7c 	bl	800ff50 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010658:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801065c:	8822      	ldrh	r2, [r4, #0]
 801065e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8010662:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8010666:	f8ad 0014 	strh.w	r0, [sp, #20]
 801066a:	1ad2      	subs	r2, r2, r3
 801066c:	8863      	ldrh	r3, [r4, #2]
 801066e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8010672:	1a5b      	subs	r3, r3, r1
 8010674:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8010678:	f8ad 1016 	strh.w	r1, [sp, #22]
 801067c:	aa01      	add	r2, sp, #4
 801067e:	a904      	add	r1, sp, #16
 8010680:	4630      	mov	r0, r6
 8010682:	f8ad 3012 	strh.w	r3, [sp, #18]
 8010686:	f7fa fe1d 	bl	800b2c4 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801068a:	9a01      	ldr	r2, [sp, #4]
 801068c:	b11a      	cbz	r2, 8010696 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801068e:	4621      	mov	r1, r4
 8010690:	4628      	mov	r0, r5
 8010692:	f7ff fed5 	bl	8010440 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8010696:	b006      	add	sp, #24
 8010698:	bd70      	pop	{r4, r5, r6, pc}

0801069a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801069a:	b530      	push	{r4, r5, lr}
 801069c:	4602      	mov	r2, r0
 801069e:	4604      	mov	r4, r0
 80106a0:	f852 0f08 	ldr.w	r0, [r2, #8]!
 80106a4:	b085      	sub	sp, #20
 80106a6:	460d      	mov	r5, r1
 80106a8:	6851      	ldr	r1, [r2, #4]
 80106aa:	466b      	mov	r3, sp
 80106ac:	c303      	stmia	r3!, {r0, r1}
 80106ae:	4629      	mov	r1, r5
 80106b0:	4668      	mov	r0, sp
 80106b2:	f7fa fd2f 	bl	800b114 <_ZN8touchgfx4RectaNERKS0_>
 80106b6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80106ba:	b12b      	cbz	r3, 80106c8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 80106bc:	4669      	mov	r1, sp
 80106be:	4620      	mov	r0, r4
 80106c0:	f7ff ffbf 	bl	8010642 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 80106c4:	b005      	add	sp, #20
 80106c6:	bd30      	pop	{r4, r5, pc}
 80106c8:	3404      	adds	r4, #4
 80106ca:	4621      	mov	r1, r4
 80106cc:	a802      	add	r0, sp, #8
 80106ce:	f7ff fc3f 	bl	800ff50 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80106d2:	f8bd 3000 	ldrh.w	r3, [sp]
 80106d6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 80106da:	1a9b      	subs	r3, r3, r2
 80106dc:	f8ad 3000 	strh.w	r3, [sp]
 80106e0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80106e4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80106e8:	4669      	mov	r1, sp
 80106ea:	1a9b      	subs	r3, r3, r2
 80106ec:	4620      	mov	r0, r4
 80106ee:	f8ad 3002 	strh.w	r3, [sp, #2]
 80106f2:	f7fa fdae 	bl	800b252 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 80106f6:	e7e5      	b.n	80106c4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

080106f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 80106f8:	680a      	ldr	r2, [r1, #0]
 80106fa:	460b      	mov	r3, r1
 80106fc:	6992      	ldr	r2, [r2, #24]
 80106fe:	1d01      	adds	r1, r0, #4
 8010700:	4618      	mov	r0, r3
 8010702:	4710      	bx	r2

08010704 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8010704:	4298      	cmp	r0, r3
 8010706:	d200      	bcs.n	801070a <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8010708:	b913      	cbnz	r3, 8010710 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 801070a:	440a      	add	r2, r1
 801070c:	b210      	sxth	r0, r2
 801070e:	4770      	bx	lr
 8010710:	ee07 0a90 	vmov	s15, r0
 8010714:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8010718:	ee07 3a90 	vmov	s15, r3
 801071c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010720:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8010724:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010728:	ee37 7a66 	vsub.f32	s14, s14, s13
 801072c:	ee07 2a90 	vmov	s15, r2
 8010730:	ee67 5a07 	vmul.f32	s11, s14, s14
 8010734:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8010738:	eee5 6a87 	vfma.f32	s13, s11, s14
 801073c:	ee07 1a90 	vmov	s15, r1
 8010740:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010744:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8010748:	eee6 7a26 	vfma.f32	s15, s12, s13
 801074c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8010750:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010754:	bfcc      	ite	gt
 8010756:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801075a:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801075e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010762:	ee17 3a90 	vmov	r3, s15
 8010766:	b218      	sxth	r0, r3
 8010768:	4770      	bx	lr

0801076a <_ZN8touchgfx12TextProviderC1Ev>:
 801076a:	b538      	push	{r3, r4, r5, lr}
 801076c:	2500      	movs	r5, #0
 801076e:	2302      	movs	r3, #2
 8010770:	4604      	mov	r4, r0
 8010772:	e9c0 5500 	strd	r5, r5, [r0]
 8010776:	7403      	strb	r3, [r0, #16]
 8010778:	6145      	str	r5, [r0, #20]
 801077a:	7605      	strb	r5, [r0, #24]
 801077c:	83c5      	strh	r5, [r0, #30]
 801077e:	8405      	strh	r5, [r0, #32]
 8010780:	86c5      	strh	r5, [r0, #54]	; 0x36
 8010782:	8705      	strh	r5, [r0, #56]	; 0x38
 8010784:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8010786:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 801078a:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 801078e:	220e      	movs	r2, #14
 8010790:	4629      	mov	r1, r5
 8010792:	304c      	adds	r0, #76	; 0x4c
 8010794:	f00d f823 	bl	801d7de <memset>
 8010798:	2301      	movs	r3, #1
 801079a:	4620      	mov	r0, r4
 801079c:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 80107a0:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80107a4:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 80107a8:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 80107ac:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 80107b0:	f7f4 f944 	bl	8004a3c <_ZN8touchgfx12TextProvider18initializeInternalEv>
 80107b4:	4620      	mov	r0, r4
 80107b6:	bd38      	pop	{r3, r4, r5, pc}

080107b8 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 80107b8:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80107ba:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80107be:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 80107c0:	fab0 f080 	clz	r0, r0
 80107c4:	0940      	lsrs	r0, r0, #5
 80107c6:	4770      	bx	lr

080107c8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 80107c8:	b530      	push	{r4, r5, lr}
 80107ca:	2500      	movs	r5, #0
 80107cc:	2401      	movs	r4, #1
 80107ce:	6843      	ldr	r3, [r0, #4]
 80107d0:	b913      	cbnz	r3, 80107d8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 80107d2:	6803      	ldr	r3, [r0, #0]
 80107d4:	b313      	cbz	r3, 801081c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80107d6:	6043      	str	r3, [r0, #4]
 80107d8:	7e03      	ldrb	r3, [r0, #24]
 80107da:	b143      	cbz	r3, 80107ee <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 80107dc:	6943      	ldr	r3, [r0, #20]
 80107de:	b12b      	cbz	r3, 80107ec <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80107e0:	881a      	ldrh	r2, [r3, #0]
 80107e2:	b11a      	cbz	r2, 80107ec <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80107e4:	1c9a      	adds	r2, r3, #2
 80107e6:	6142      	str	r2, [r0, #20]
 80107e8:	8818      	ldrh	r0, [r3, #0]
 80107ea:	bd30      	pop	{r4, r5, pc}
 80107ec:	7605      	strb	r5, [r0, #24]
 80107ee:	6843      	ldr	r3, [r0, #4]
 80107f0:	8819      	ldrh	r1, [r3, #0]
 80107f2:	b199      	cbz	r1, 801081c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80107f4:	1c9a      	adds	r2, r3, #2
 80107f6:	2902      	cmp	r1, #2
 80107f8:	6042      	str	r2, [r0, #4]
 80107fa:	d1f5      	bne.n	80107e8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 80107fc:	7c03      	ldrb	r3, [r0, #16]
 80107fe:	2b01      	cmp	r3, #1
 8010800:	d8e5      	bhi.n	80107ce <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8010802:	1c5a      	adds	r2, r3, #1
 8010804:	3302      	adds	r3, #2
 8010806:	7402      	strb	r2, [r0, #16]
 8010808:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 801080c:	6143      	str	r3, [r0, #20]
 801080e:	2b00      	cmp	r3, #0
 8010810:	d0dd      	beq.n	80107ce <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8010812:	881b      	ldrh	r3, [r3, #0]
 8010814:	2b00      	cmp	r3, #0
 8010816:	d0da      	beq.n	80107ce <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8010818:	7604      	strb	r4, [r0, #24]
 801081a:	e7d8      	b.n	80107ce <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801081c:	2000      	movs	r0, #0
 801081e:	e7e4      	b.n	80107ea <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08010820 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8010820:	b430      	push	{r4, r5}
 8010822:	6001      	str	r1, [r0, #0]
 8010824:	2100      	movs	r1, #0
 8010826:	6041      	str	r1, [r0, #4]
 8010828:	6815      	ldr	r5, [r2, #0]
 801082a:	6085      	str	r5, [r0, #8]
 801082c:	6852      	ldr	r2, [r2, #4]
 801082e:	6443      	str	r3, [r0, #68]	; 0x44
 8010830:	9b02      	ldr	r3, [sp, #8]
 8010832:	60c2      	str	r2, [r0, #12]
 8010834:	7401      	strb	r1, [r0, #16]
 8010836:	6141      	str	r1, [r0, #20]
 8010838:	7601      	strb	r1, [r0, #24]
 801083a:	8701      	strh	r1, [r0, #56]	; 0x38
 801083c:	8401      	strh	r1, [r0, #32]
 801083e:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8010842:	6483      	str	r3, [r0, #72]	; 0x48
 8010844:	bc30      	pop	{r4, r5}
 8010846:	f7f4 b8f9 	b.w	8004a3c <_ZN8touchgfx12TextProvider18initializeInternalEv>

0801084a <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 801084a:	b408      	push	{r3}
 801084c:	b510      	push	{r4, lr}
 801084e:	b085      	sub	sp, #20
 8010850:	ac07      	add	r4, sp, #28
 8010852:	f854 3b04 	ldr.w	r3, [r4], #4
 8010856:	9300      	str	r3, [sp, #0]
 8010858:	4613      	mov	r3, r2
 801085a:	4622      	mov	r2, r4
 801085c:	9403      	str	r4, [sp, #12]
 801085e:	f7ff ffdf 	bl	8010820 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010862:	b005      	add	sp, #20
 8010864:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010868:	b001      	add	sp, #4
 801086a:	4770      	bx	lr

0801086c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 801086c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801086e:	4605      	mov	r5, r0
 8010870:	4608      	mov	r0, r1
 8010872:	b1e9      	cbz	r1, 80108b0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8010874:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8010878:	460b      	mov	r3, r1
 801087a:	f101 0708 	add.w	r7, r1, #8
 801087e:	4622      	mov	r2, r4
 8010880:	6818      	ldr	r0, [r3, #0]
 8010882:	6859      	ldr	r1, [r3, #4]
 8010884:	4626      	mov	r6, r4
 8010886:	c603      	stmia	r6!, {r0, r1}
 8010888:	3308      	adds	r3, #8
 801088a:	42bb      	cmp	r3, r7
 801088c:	4634      	mov	r4, r6
 801088e:	d1f7      	bne.n	8010880 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8010890:	6818      	ldr	r0, [r3, #0]
 8010892:	6030      	str	r0, [r6, #0]
 8010894:	889b      	ldrh	r3, [r3, #4]
 8010896:	80b3      	strh	r3, [r6, #4]
 8010898:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 801089c:	015b      	lsls	r3, r3, #5
 801089e:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80108a2:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 80108a6:	430b      	orrs	r3, r1
 80108a8:	425b      	negs	r3, r3
 80108aa:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 80108ae:	4610      	mov	r0, r2
 80108b0:	bdf0      	pop	{r4, r5, r6, r7, pc}

080108b2 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 80108b2:	b538      	push	{r3, r4, r5, lr}
 80108b4:	460c      	mov	r4, r1
 80108b6:	6811      	ldr	r1, [r2, #0]
 80108b8:	4610      	mov	r0, r2
 80108ba:	68cd      	ldr	r5, [r1, #12]
 80108bc:	4619      	mov	r1, r3
 80108be:	47a8      	blx	r5
 80108c0:	2800      	cmp	r0, #0
 80108c2:	bf08      	it	eq
 80108c4:	4620      	moveq	r0, r4
 80108c6:	bd38      	pop	{r3, r4, r5, pc}

080108c8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 80108c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80108ca:	4604      	mov	r4, r0
 80108cc:	4615      	mov	r5, r2
 80108ce:	4608      	mov	r0, r1
 80108d0:	b93a      	cbnz	r2, 80108e2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 80108d2:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 80108d6:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 80108da:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 80108de:	4628      	mov	r0, r5
 80108e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80108e2:	f892 c00d 	ldrb.w	ip, [r2, #13]
 80108e6:	8893      	ldrh	r3, [r2, #4]
 80108e8:	ea4f 160c 	mov.w	r6, ip, lsl #4
 80108ec:	f406 7280 	and.w	r2, r6, #256	; 0x100
 80108f0:	79ee      	ldrb	r6, [r5, #7]
 80108f2:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 80108f6:	4316      	orrs	r6, r2
 80108f8:	19da      	adds	r2, r3, r7
 80108fa:	b291      	uxth	r1, r2
 80108fc:	291d      	cmp	r1, #29
 80108fe:	b2b7      	uxth	r7, r6
 8010900:	d87a      	bhi.n	80109f8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8010902:	2201      	movs	r2, #1
 8010904:	408a      	lsls	r2, r1
 8010906:	4975      	ldr	r1, [pc, #468]	; (8010adc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8010908:	420a      	tst	r2, r1
 801090a:	ea4f 06e6 	mov.w	r6, r6, asr #3
 801090e:	d12d      	bne.n	801096c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8010910:	f412 7f60 	tst.w	r2, #896	; 0x380
 8010914:	d070      	beq.n	80109f8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8010916:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 801091a:	462b      	mov	r3, r5
 801091c:	f105 0e08 	add.w	lr, r5, #8
 8010920:	4615      	mov	r5, r2
 8010922:	6818      	ldr	r0, [r3, #0]
 8010924:	6859      	ldr	r1, [r3, #4]
 8010926:	4694      	mov	ip, r2
 8010928:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801092c:	3308      	adds	r3, #8
 801092e:	4573      	cmp	r3, lr
 8010930:	4662      	mov	r2, ip
 8010932:	d1f6      	bne.n	8010922 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8010934:	6818      	ldr	r0, [r3, #0]
 8010936:	f8cc 0000 	str.w	r0, [ip]
 801093a:	889b      	ldrh	r3, [r3, #4]
 801093c:	f8ac 3004 	strh.w	r3, [ip, #4]
 8010940:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8010944:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8010948:	b2b3      	uxth	r3, r6
 801094a:	1aca      	subs	r2, r1, r3
 801094c:	b292      	uxth	r2, r2
 801094e:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8010952:	10d2      	asrs	r2, r2, #3
 8010954:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8010958:	f002 0260 	and.w	r2, r2, #96	; 0x60
 801095c:	4302      	orrs	r2, r0
 801095e:	1bcf      	subs	r7, r1, r7
 8010960:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8010964:	1afb      	subs	r3, r7, r3
 8010966:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801096a:	e7b8      	b.n	80108de <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801096c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801096e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8010972:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8010974:	f640 6333 	movw	r3, #3635	; 0xe33
 8010978:	4299      	cmp	r1, r3
 801097a:	d110      	bne.n	801099e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 801097c:	6803      	ldr	r3, [r0, #0]
 801097e:	68db      	ldr	r3, [r3, #12]
 8010980:	4798      	blx	r3
 8010982:	7b41      	ldrb	r1, [r0, #13]
 8010984:	00cb      	lsls	r3, r1, #3
 8010986:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801098a:	7a03      	ldrb	r3, [r0, #8]
 801098c:	0648      	lsls	r0, r1, #25
 801098e:	ea43 0302 	orr.w	r3, r3, r2
 8010992:	bf44      	itt	mi
 8010994:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8010998:	b21b      	sxthmi	r3, r3
 801099a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801099e:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 80109a2:	443b      	add	r3, r7
 80109a4:	4433      	add	r3, r6
 80109a6:	b29b      	uxth	r3, r3
 80109a8:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 80109ac:	462a      	mov	r2, r5
 80109ae:	f105 0c08 	add.w	ip, r5, #8
 80109b2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80109b6:	4635      	mov	r5, r6
 80109b8:	6810      	ldr	r0, [r2, #0]
 80109ba:	6851      	ldr	r1, [r2, #4]
 80109bc:	4637      	mov	r7, r6
 80109be:	c703      	stmia	r7!, {r0, r1}
 80109c0:	3208      	adds	r2, #8
 80109c2:	4562      	cmp	r2, ip
 80109c4:	463e      	mov	r6, r7
 80109c6:	d1f7      	bne.n	80109b8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 80109c8:	6810      	ldr	r0, [r2, #0]
 80109ca:	6038      	str	r0, [r7, #0]
 80109cc:	8892      	ldrh	r2, [r2, #4]
 80109ce:	80ba      	strh	r2, [r7, #4]
 80109d0:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80109d4:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80109d8:	10db      	asrs	r3, r3, #3
 80109da:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80109de:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80109e2:	4313      	orrs	r3, r2
 80109e4:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80109e8:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 80109ec:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 80109f0:	1a9b      	subs	r3, r3, r2
 80109f2:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 80109f6:	e772      	b.n	80108de <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 80109f8:	f023 0204 	bic.w	r2, r3, #4
 80109fc:	f640 611b 	movw	r1, #3611	; 0xe1b
 8010a00:	428a      	cmp	r2, r1
 8010a02:	d003      	beq.n	8010a0c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8010a04:	f640 621d 	movw	r2, #3613	; 0xe1d
 8010a08:	4293      	cmp	r3, r2
 8010a0a:	d120      	bne.n	8010a4e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8010a0c:	3b01      	subs	r3, #1
 8010a0e:	4602      	mov	r2, r0
 8010a10:	b29b      	uxth	r3, r3
 8010a12:	4629      	mov	r1, r5
 8010a14:	4620      	mov	r0, r4
 8010a16:	f7ff ff4c 	bl	80108b2 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8010a1a:	7b41      	ldrb	r1, [r0, #13]
 8010a1c:	00cb      	lsls	r3, r1, #3
 8010a1e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8010a22:	7a03      	ldrb	r3, [r0, #8]
 8010a24:	0649      	lsls	r1, r1, #25
 8010a26:	ea43 0302 	orr.w	r3, r3, r2
 8010a2a:	bf44      	itt	mi
 8010a2c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8010a30:	b21b      	sxthmi	r3, r3
 8010a32:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8010a36:	7b6b      	ldrb	r3, [r5, #13]
 8010a38:	7aaa      	ldrb	r2, [r5, #10]
 8010a3a:	005b      	lsls	r3, r3, #1
 8010a3c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8010a40:	4313      	orrs	r3, r2
 8010a42:	115a      	asrs	r2, r3, #5
 8010a44:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8010a48:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8010a4c:	e036      	b.n	8010abc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8010a4e:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8010a52:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8010a56:	7a2a      	ldrb	r2, [r5, #8]
 8010a58:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8010a5c:	ea42 0201 	orr.w	r2, r2, r1
 8010a60:	bf1c      	itt	ne
 8010a62:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8010a66:	b212      	sxthne	r2, r2
 8010a68:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8010a6c:	f640 6109 	movw	r1, #3593	; 0xe09
 8010a70:	f023 0210 	bic.w	r2, r3, #16
 8010a74:	428a      	cmp	r2, r1
 8010a76:	d003      	beq.n	8010a80 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8010a78:	f640 6213 	movw	r2, #3603	; 0xe13
 8010a7c:	4293      	cmp	r3, r2
 8010a7e:	d12a      	bne.n	8010ad6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8010a80:	7b6e      	ldrb	r6, [r5, #13]
 8010a82:	0076      	lsls	r6, r6, #1
 8010a84:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8010a88:	7aae      	ldrb	r6, [r5, #10]
 8010a8a:	4316      	orrs	r6, r2
 8010a8c:	f640 6213 	movw	r2, #3603	; 0xe13
 8010a90:	4293      	cmp	r3, r2
 8010a92:	bf18      	it	ne
 8010a94:	f103 33ff 	addne.w	r3, r3, #4294967295
 8010a98:	4602      	mov	r2, r0
 8010a9a:	bf14      	ite	ne
 8010a9c:	b29b      	uxthne	r3, r3
 8010a9e:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8010aa2:	4629      	mov	r1, r5
 8010aa4:	4620      	mov	r0, r4
 8010aa6:	f7ff ff04 	bl	80108b2 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8010aaa:	7b43      	ldrb	r3, [r0, #13]
 8010aac:	7a82      	ldrb	r2, [r0, #10]
 8010aae:	005b      	lsls	r3, r3, #1
 8010ab0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8010ab4:	4313      	orrs	r3, r2
 8010ab6:	1af6      	subs	r6, r6, r3
 8010ab8:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8010abc:	7b69      	ldrb	r1, [r5, #13]
 8010abe:	00cb      	lsls	r3, r1, #3
 8010ac0:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8010ac4:	7a2b      	ldrb	r3, [r5, #8]
 8010ac6:	4313      	orrs	r3, r2
 8010ac8:	064a      	lsls	r2, r1, #25
 8010aca:	bf44      	itt	mi
 8010acc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8010ad0:	b21b      	sxthmi	r3, r3
 8010ad2:	1bdb      	subs	r3, r3, r7
 8010ad4:	e747      	b.n	8010966 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8010ad6:	2300      	movs	r3, #0
 8010ad8:	e7b6      	b.n	8010a48 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8010ada:	bf00      	nop
 8010adc:	3fc00079 	.word	0x3fc00079

08010ae0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8010ae0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010ae4:	4604      	mov	r4, r0
 8010ae6:	b942      	cbnz	r2, 8010afa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8010ae8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8010aec:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8010af0:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8010af4:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8010af8:	e047      	b.n	8010b8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8010afa:	7b51      	ldrb	r1, [r2, #13]
 8010afc:	8893      	ldrh	r3, [r2, #4]
 8010afe:	010d      	lsls	r5, r1, #4
 8010b00:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8010b04:	79d5      	ldrb	r5, [r2, #7]
 8010b06:	4305      	orrs	r5, r0
 8010b08:	2d04      	cmp	r5, #4
 8010b0a:	bfcc      	ite	gt
 8010b0c:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8010b10:	f04f 0e01 	movle.w	lr, #1
 8010b14:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8010b18:	f200 80ab 	bhi.w	8010c72 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8010b1c:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8010b20:	4283      	cmp	r3, r0
 8010b22:	d216      	bcs.n	8010b52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010b24:	f240 605b 	movw	r0, #1627	; 0x65b
 8010b28:	4283      	cmp	r3, r0
 8010b2a:	d859      	bhi.n	8010be0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8010b2c:	f240 6057 	movw	r0, #1623	; 0x657
 8010b30:	4283      	cmp	r3, r0
 8010b32:	d20e      	bcs.n	8010b52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010b34:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8010b38:	d24a      	bcs.n	8010bd0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8010b3a:	f240 604e 	movw	r0, #1614	; 0x64e
 8010b3e:	4283      	cmp	r3, r0
 8010b40:	d207      	bcs.n	8010b52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010b42:	f240 601a 	movw	r0, #1562	; 0x61a
 8010b46:	4283      	cmp	r3, r0
 8010b48:	d02a      	beq.n	8010ba0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8010b4a:	d821      	bhi.n	8010b90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8010b4c:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8010b50:	d35b      	bcc.n	8010c0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8010b52:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8010b56:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8010b5a:	f040 80d0 	bne.w	8010cfe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8010b5e:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8010b62:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8010b66:	f040 80ca 	bne.w	8010cfe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8010b6a:	00cb      	lsls	r3, r1, #3
 8010b6c:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8010b70:	7a13      	ldrb	r3, [r2, #8]
 8010b72:	0649      	lsls	r1, r1, #25
 8010b74:	ea43 0300 	orr.w	r3, r3, r0
 8010b78:	bf44      	itt	mi
 8010b7a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8010b7e:	b21b      	sxthmi	r3, r3
 8010b80:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8010b84:	1b5d      	subs	r5, r3, r5
 8010b86:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8010b8a:	4610      	mov	r0, r2
 8010b8c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010b90:	f240 604b 	movw	r0, #1611	; 0x64b
 8010b94:	4283      	cmp	r3, r0
 8010b96:	d338      	bcc.n	8010c0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8010b98:	f240 604c 	movw	r0, #1612	; 0x64c
 8010b9c:	4283      	cmp	r3, r0
 8010b9e:	d9d8      	bls.n	8010b52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010ba0:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8010ba4:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8010ba8:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8010bac:	f040 80f2 	bne.w	8010d94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8010bb0:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8010bb4:	f040 80ee 	bne.w	8010d94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8010bb8:	00cb      	lsls	r3, r1, #3
 8010bba:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8010bbe:	7a13      	ldrb	r3, [r2, #8]
 8010bc0:	064e      	lsls	r6, r1, #25
 8010bc2:	ea43 0300 	orr.w	r3, r3, r0
 8010bc6:	bf44      	itt	mi
 8010bc8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8010bcc:	b21b      	sxthmi	r3, r3
 8010bce:	e7d9      	b.n	8010b84 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8010bd0:	f240 6054 	movw	r0, #1620	; 0x654
 8010bd4:	4283      	cmp	r3, r0
 8010bd6:	d8e3      	bhi.n	8010ba0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8010bd8:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8010bdc:	d9e0      	bls.n	8010ba0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8010bde:	e7b8      	b.n	8010b52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010be0:	f240 6074 	movw	r0, #1652	; 0x674
 8010be4:	4283      	cmp	r3, r0
 8010be6:	d0b4      	beq.n	8010b52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010be8:	d82d      	bhi.n	8010c46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8010bea:	f240 605e 	movw	r0, #1630	; 0x65e
 8010bee:	4283      	cmp	r3, r0
 8010bf0:	d804      	bhi.n	8010bfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8010bf2:	f240 605d 	movw	r0, #1629	; 0x65d
 8010bf6:	4283      	cmp	r3, r0
 8010bf8:	d3d2      	bcc.n	8010ba0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8010bfa:	e7aa      	b.n	8010b52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010bfc:	f240 605f 	movw	r0, #1631	; 0x65f
 8010c00:	4283      	cmp	r3, r0
 8010c02:	d0cd      	beq.n	8010ba0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8010c04:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8010c08:	d0a3      	beq.n	8010b52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010c0a:	00cb      	lsls	r3, r1, #3
 8010c0c:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8010c10:	7a13      	ldrb	r3, [r2, #8]
 8010c12:	0649      	lsls	r1, r1, #25
 8010c14:	ea43 0300 	orr.w	r3, r3, r0
 8010c18:	bf44      	itt	mi
 8010c1a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8010c1e:	b21b      	sxthmi	r3, r3
 8010c20:	1b5d      	subs	r5, r3, r5
 8010c22:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8010c26:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8010c2a:	7b53      	ldrb	r3, [r2, #13]
 8010c2c:	015b      	lsls	r3, r3, #5
 8010c2e:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8010c32:	7993      	ldrb	r3, [r2, #6]
 8010c34:	430b      	orrs	r3, r1
 8010c36:	005b      	lsls	r3, r3, #1
 8010c38:	2105      	movs	r1, #5
 8010c3a:	fb93 f3f1 	sdiv	r3, r3, r1
 8010c3e:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8010c42:	440b      	add	r3, r1
 8010c44:	e756      	b.n	8010af4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8010c46:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8010c4a:	4283      	cmp	r3, r0
 8010c4c:	d809      	bhi.n	8010c62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8010c4e:	f240 60df 	movw	r0, #1759	; 0x6df
 8010c52:	4283      	cmp	r3, r0
 8010c54:	f4bf af7d 	bcs.w	8010b52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010c58:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8010c5c:	2b05      	cmp	r3, #5
 8010c5e:	d8d4      	bhi.n	8010c0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8010c60:	e777      	b.n	8010b52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010c62:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8010c66:	4283      	cmp	r3, r0
 8010c68:	d09a      	beq.n	8010ba0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8010c6a:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8010c6e:	4283      	cmp	r3, r0
 8010c70:	e7ca      	b.n	8010c08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8010c72:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8010c76:	d22b      	bcs.n	8010cd0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8010c78:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8010c7c:	4283      	cmp	r3, r0
 8010c7e:	d28f      	bcs.n	8010ba0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8010c80:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8010c84:	4283      	cmp	r3, r0
 8010c86:	d816      	bhi.n	8010cb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8010c88:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8010c8c:	4283      	cmp	r3, r0
 8010c8e:	f4bf af60 	bcs.w	8010b52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010c92:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8010c96:	4283      	cmp	r3, r0
 8010c98:	d80a      	bhi.n	8010cb0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8010c9a:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8010c9e:	4283      	cmp	r3, r0
 8010ca0:	f4bf af57 	bcs.w	8010b52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010ca4:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8010ca8:	4283      	cmp	r3, r0
 8010caa:	f43f af79 	beq.w	8010ba0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8010cae:	e7ac      	b.n	8010c0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8010cb0:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8010cb4:	e7f8      	b.n	8010ca8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8010cb6:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8010cba:	4283      	cmp	r3, r0
 8010cbc:	d802      	bhi.n	8010cc4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8010cbe:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8010cc2:	e798      	b.n	8010bf6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8010cc4:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8010cc8:	4283      	cmp	r3, r0
 8010cca:	f47f af42 	bne.w	8010b52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010cce:	e767      	b.n	8010ba0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8010cd0:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8010cd4:	4283      	cmp	r3, r0
 8010cd6:	f43f af63 	beq.w	8010ba0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8010cda:	d802      	bhi.n	8010ce2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8010cdc:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8010ce0:	e7f2      	b.n	8010cc8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8010ce2:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8010ce6:	4283      	cmp	r3, r0
 8010ce8:	d805      	bhi.n	8010cf6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8010cea:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8010cee:	4283      	cmp	r3, r0
 8010cf0:	f4ff af2f 	bcc.w	8010b52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010cf4:	e754      	b.n	8010ba0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8010cf6:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8010cfa:	4283      	cmp	r3, r0
 8010cfc:	e7af      	b.n	8010c5e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8010cfe:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8010d02:	4617      	mov	r7, r2
 8010d04:	f102 0808 	add.w	r8, r2, #8
 8010d08:	4666      	mov	r6, ip
 8010d0a:	6838      	ldr	r0, [r7, #0]
 8010d0c:	6879      	ldr	r1, [r7, #4]
 8010d0e:	46e6      	mov	lr, ip
 8010d10:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8010d14:	3708      	adds	r7, #8
 8010d16:	4547      	cmp	r7, r8
 8010d18:	46f4      	mov	ip, lr
 8010d1a:	d1f6      	bne.n	8010d0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8010d1c:	6838      	ldr	r0, [r7, #0]
 8010d1e:	f8ce 0000 	str.w	r0, [lr]
 8010d22:	88b9      	ldrh	r1, [r7, #4]
 8010d24:	f8ae 1004 	strh.w	r1, [lr, #4]
 8010d28:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8010d2c:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8010d30:	d009      	beq.n	8010d46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8010d32:	7b51      	ldrb	r1, [r2, #13]
 8010d34:	7992      	ldrb	r2, [r2, #6]
 8010d36:	0149      	lsls	r1, r1, #5
 8010d38:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8010d3c:	4311      	orrs	r1, r2
 8010d3e:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8010d42:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8010d46:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8010d4a:	b2ad      	uxth	r5, r5
 8010d4c:	d00d      	beq.n	8010d6a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8010d4e:	442b      	add	r3, r5
 8010d50:	b29b      	uxth	r3, r3
 8010d52:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8010d56:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8010d5a:	10db      	asrs	r3, r3, #3
 8010d5c:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8010d60:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8010d64:	4313      	orrs	r3, r2
 8010d66:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8010d6a:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8010d6e:	00cb      	lsls	r3, r1, #3
 8010d70:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8010d74:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8010d78:	064f      	lsls	r7, r1, #25
 8010d7a:	ea43 0302 	orr.w	r3, r3, r2
 8010d7e:	bf44      	itt	mi
 8010d80:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8010d84:	b21b      	sxthmi	r3, r3
 8010d86:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8010d8a:	1b5b      	subs	r3, r3, r5
 8010d8c:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8010d90:	4632      	mov	r2, r6
 8010d92:	e6fa      	b.n	8010b8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8010d94:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8010d98:	4617      	mov	r7, r2
 8010d9a:	f102 0908 	add.w	r9, r2, #8
 8010d9e:	4666      	mov	r6, ip
 8010da0:	6838      	ldr	r0, [r7, #0]
 8010da2:	6879      	ldr	r1, [r7, #4]
 8010da4:	46e0      	mov	r8, ip
 8010da6:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8010daa:	3708      	adds	r7, #8
 8010dac:	454f      	cmp	r7, r9
 8010dae:	46c4      	mov	ip, r8
 8010db0:	d1f6      	bne.n	8010da0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8010db2:	6838      	ldr	r0, [r7, #0]
 8010db4:	f8c8 0000 	str.w	r0, [r8]
 8010db8:	88b9      	ldrh	r1, [r7, #4]
 8010dba:	f8a8 1004 	strh.w	r1, [r8, #4]
 8010dbe:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8010dc2:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8010dc6:	d009      	beq.n	8010ddc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8010dc8:	7b51      	ldrb	r1, [r2, #13]
 8010dca:	7992      	ldrb	r2, [r2, #6]
 8010dcc:	0149      	lsls	r1, r1, #5
 8010dce:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8010dd2:	4311      	orrs	r1, r2
 8010dd4:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8010dd8:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8010ddc:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8010de0:	d00e      	beq.n	8010e00 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8010de2:	eba3 030e 	sub.w	r3, r3, lr
 8010de6:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8010dea:	b29b      	uxth	r3, r3
 8010dec:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8010df0:	10db      	asrs	r3, r3, #3
 8010df2:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8010df6:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8010dfa:	4313      	orrs	r3, r2
 8010dfc:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8010e00:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8010e04:	00cb      	lsls	r3, r1, #3
 8010e06:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8010e0a:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8010e0e:	0648      	lsls	r0, r1, #25
 8010e10:	ea43 0302 	orr.w	r3, r3, r2
 8010e14:	bf44      	itt	mi
 8010e16:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8010e1a:	b21b      	sxthmi	r3, r3
 8010e1c:	1b5d      	subs	r5, r3, r5
 8010e1e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8010e22:	e7b5      	b.n	8010d90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08010e24 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8010e24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010e28:	461e      	mov	r6, r3
 8010e2a:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8010e2c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8010e30:	4604      	mov	r4, r0
 8010e32:	4617      	mov	r7, r2
 8010e34:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8010e38:	f7f3 fdbe 	bl	80049b8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8010e3c:	4605      	mov	r5, r0
 8010e3e:	b918      	cbnz	r0, 8010e48 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8010e40:	6030      	str	r0, [r6, #0]
 8010e42:	4628      	mov	r0, r5
 8010e44:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010e48:	683b      	ldr	r3, [r7, #0]
 8010e4a:	4601      	mov	r1, r0
 8010e4c:	68db      	ldr	r3, [r3, #12]
 8010e4e:	4638      	mov	r0, r7
 8010e50:	4798      	blx	r3
 8010e52:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8010e56:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8010e5a:	4602      	mov	r2, r0
 8010e5c:	6030      	str	r0, [r6, #0]
 8010e5e:	d213      	bcs.n	8010e88 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8010e60:	4643      	mov	r3, r8
 8010e62:	4639      	mov	r1, r7
 8010e64:	4620      	mov	r0, r4
 8010e66:	f7ff fe3b 	bl	8010ae0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8010e6a:	6030      	str	r0, [r6, #0]
 8010e6c:	6833      	ldr	r3, [r6, #0]
 8010e6e:	b143      	cbz	r3, 8010e82 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8010e70:	7b5a      	ldrb	r2, [r3, #13]
 8010e72:	7a9b      	ldrb	r3, [r3, #10]
 8010e74:	0052      	lsls	r2, r2, #1
 8010e76:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8010e7a:	4313      	orrs	r3, r2
 8010e7c:	bf0c      	ite	eq
 8010e7e:	2301      	moveq	r3, #1
 8010e80:	2300      	movne	r3, #0
 8010e82:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8010e86:	e7dc      	b.n	8010e42 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8010e88:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8010e8c:	b29b      	uxth	r3, r3
 8010e8e:	2b7f      	cmp	r3, #127	; 0x7f
 8010e90:	d804      	bhi.n	8010e9c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8010e92:	4639      	mov	r1, r7
 8010e94:	4620      	mov	r0, r4
 8010e96:	f7ff fd17 	bl	80108c8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8010e9a:	e7e6      	b.n	8010e6a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8010e9c:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8010ea0:	2b00      	cmp	r3, #0
 8010ea2:	d0e3      	beq.n	8010e6c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8010ea4:	f640 1302 	movw	r3, #2306	; 0x902
 8010ea8:	429d      	cmp	r5, r3
 8010eaa:	d1df      	bne.n	8010e6c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8010eac:	4601      	mov	r1, r0
 8010eae:	4620      	mov	r0, r4
 8010eb0:	f7ff fcdc 	bl	801086c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8010eb4:	e7d9      	b.n	8010e6a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08010eb6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8010eb6:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010eba:	461e      	mov	r6, r3
 8010ebc:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8010ebe:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8010ec2:	4604      	mov	r4, r0
 8010ec4:	4617      	mov	r7, r2
 8010ec6:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8010eca:	f7f3 fd75 	bl	80049b8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8010ece:	4605      	mov	r5, r0
 8010ed0:	b918      	cbnz	r0, 8010eda <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8010ed2:	6030      	str	r0, [r6, #0]
 8010ed4:	4628      	mov	r0, r5
 8010ed6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8010eda:	683b      	ldr	r3, [r7, #0]
 8010edc:	4601      	mov	r1, r0
 8010ede:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8010ee2:	4638      	mov	r0, r7
 8010ee4:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8010ee8:	47c8      	blx	r9
 8010eea:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8010eee:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8010ef2:	4602      	mov	r2, r0
 8010ef4:	6030      	str	r0, [r6, #0]
 8010ef6:	d213      	bcs.n	8010f20 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8010ef8:	4643      	mov	r3, r8
 8010efa:	4639      	mov	r1, r7
 8010efc:	4620      	mov	r0, r4
 8010efe:	f7ff fdef 	bl	8010ae0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8010f02:	6030      	str	r0, [r6, #0]
 8010f04:	6833      	ldr	r3, [r6, #0]
 8010f06:	b143      	cbz	r3, 8010f1a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8010f08:	7b5a      	ldrb	r2, [r3, #13]
 8010f0a:	7a9b      	ldrb	r3, [r3, #10]
 8010f0c:	0052      	lsls	r2, r2, #1
 8010f0e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8010f12:	4313      	orrs	r3, r2
 8010f14:	bf0c      	ite	eq
 8010f16:	2301      	moveq	r3, #1
 8010f18:	2300      	movne	r3, #0
 8010f1a:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8010f1e:	e7d9      	b.n	8010ed4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8010f20:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8010f24:	b29b      	uxth	r3, r3
 8010f26:	2b7f      	cmp	r3, #127	; 0x7f
 8010f28:	d804      	bhi.n	8010f34 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8010f2a:	4639      	mov	r1, r7
 8010f2c:	4620      	mov	r0, r4
 8010f2e:	f7ff fccb 	bl	80108c8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8010f32:	e7e6      	b.n	8010f02 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8010f34:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8010f38:	2b00      	cmp	r3, #0
 8010f3a:	d0e3      	beq.n	8010f04 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8010f3c:	f640 1302 	movw	r3, #2306	; 0x902
 8010f40:	429d      	cmp	r5, r3
 8010f42:	d1df      	bne.n	8010f04 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8010f44:	4601      	mov	r1, r0
 8010f46:	4620      	mov	r0, r4
 8010f48:	f7ff fc90 	bl	801086c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8010f4c:	e7d9      	b.n	8010f02 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08010f4e <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8010f4e:	b510      	push	{r4, lr}
 8010f50:	4604      	mov	r4, r0
 8010f52:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8010f56:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8010f58:	b1f1      	cbz	r1, 8010f98 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8010f5a:	2b0a      	cmp	r3, #10
 8010f5c:	d02f      	beq.n	8010fbe <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8010f5e:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8010f60:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8010f64:	3901      	subs	r1, #1
 8010f66:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8010f68:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8010f6c:	1c51      	adds	r1, r2, #1
 8010f6e:	b289      	uxth	r1, r1
 8010f70:	2901      	cmp	r1, #1
 8010f72:	bf84      	itt	hi
 8010f74:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8010f78:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8010f7a:	f103 0201 	add.w	r2, r3, #1
 8010f7e:	8722      	strh	r2, [r4, #56]	; 0x38
 8010f80:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8010f82:	bf98      	it	ls
 8010f84:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 8010f86:	4413      	add	r3, r2
 8010f88:	b29b      	uxth	r3, r3
 8010f8a:	2b09      	cmp	r3, #9
 8010f8c:	bf88      	it	hi
 8010f8e:	3b0a      	subhi	r3, #10
 8010f90:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8010f94:	8458      	strh	r0, [r3, #34]	; 0x22
 8010f96:	e7dc      	b.n	8010f52 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8010f98:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8010f9a:	2b0a      	cmp	r3, #10
 8010f9c:	d00f      	beq.n	8010fbe <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8010f9e:	4620      	mov	r0, r4
 8010fa0:	f7ff fc12 	bl	80107c8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8010fa4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8010fa6:	1c5a      	adds	r2, r3, #1
 8010fa8:	8722      	strh	r2, [r4, #56]	; 0x38
 8010faa:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8010fac:	4413      	add	r3, r2
 8010fae:	b29b      	uxth	r3, r3
 8010fb0:	2b09      	cmp	r3, #9
 8010fb2:	bf88      	it	hi
 8010fb4:	3b0a      	subhi	r3, #10
 8010fb6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8010fba:	8458      	strh	r0, [r3, #34]	; 0x22
 8010fbc:	e7ec      	b.n	8010f98 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8010fbe:	bd10      	pop	{r4, pc}

08010fc0 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8010fc0:	b538      	push	{r3, r4, r5, lr}
 8010fc2:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8010fc4:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8010fc8:	4604      	mov	r4, r0
 8010fca:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8010fcc:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8010fce:	3a01      	subs	r2, #1
 8010fd0:	8702      	strh	r2, [r0, #56]	; 0x38
 8010fd2:	1c5a      	adds	r2, r3, #1
 8010fd4:	b292      	uxth	r2, r2
 8010fd6:	2a09      	cmp	r2, #9
 8010fd8:	bf86      	itte	hi
 8010fda:	3b09      	subhi	r3, #9
 8010fdc:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 8010fde:	86c2      	strhls	r2, [r0, #54]	; 0x36
 8010fe0:	f7ff ffb5 	bl	8010f4e <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8010fe4:	8c23      	ldrh	r3, [r4, #32]
 8010fe6:	2b01      	cmp	r3, #1
 8010fe8:	bf9c      	itt	ls
 8010fea:	3301      	addls	r3, #1
 8010fec:	8423      	strhls	r3, [r4, #32]
 8010fee:	8be3      	ldrh	r3, [r4, #30]
 8010ff0:	b90b      	cbnz	r3, 8010ff6 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8010ff2:	2302      	movs	r3, #2
 8010ff4:	83e3      	strh	r3, [r4, #30]
 8010ff6:	8be3      	ldrh	r3, [r4, #30]
 8010ff8:	3b01      	subs	r3, #1
 8010ffa:	b29b      	uxth	r3, r3
 8010ffc:	83e3      	strh	r3, [r4, #30]
 8010ffe:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011002:	4628      	mov	r0, r5
 8011004:	8365      	strh	r5, [r4, #26]
 8011006:	bd38      	pop	{r3, r4, r5, pc}

08011008 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8011008:	428a      	cmp	r2, r1
 801100a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801100e:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 8011010:	d931      	bls.n	8011076 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 8011012:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8011014:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8011018:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 801101c:	19ee      	adds	r6, r5, r7
 801101e:	1a54      	subs	r4, r2, r1
 8011020:	3e01      	subs	r6, #1
 8011022:	fa1f fe84 	uxth.w	lr, r4
 8011026:	b2b4      	uxth	r4, r6
 8011028:	eba4 090e 	sub.w	r9, r4, lr
 801102c:	fa1f f989 	uxth.w	r9, r9
 8011030:	2c09      	cmp	r4, #9
 8011032:	4626      	mov	r6, r4
 8011034:	bf88      	it	hi
 8011036:	f1a4 060a 	subhi.w	r6, r4, #10
 801103a:	f1bc 0f00 	cmp.w	ip, #0
 801103e:	bf08      	it	eq
 8011040:	f04f 0c02 	moveq.w	ip, #2
 8011044:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8011048:	f10c 3cff 	add.w	ip, ip, #4294967295
 801104c:	fa1f fc8c 	uxth.w	ip, ip
 8011050:	3c01      	subs	r4, #1
 8011052:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 8011056:	b2a4      	uxth	r4, r4
 8011058:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 801105c:	454c      	cmp	r4, r9
 801105e:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 8011062:	d1e5      	bne.n	8011030 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8011064:	eba5 050e 	sub.w	r5, r5, lr
 8011068:	eb0e 0408 	add.w	r4, lr, r8
 801106c:	8705      	strh	r5, [r0, #56]	; 0x38
 801106e:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 8011072:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 8011076:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8011078:	1a64      	subs	r4, r4, r1
 801107a:	4439      	add	r1, r7
 801107c:	b289      	uxth	r1, r1
 801107e:	2909      	cmp	r1, #9
 8011080:	bf88      	it	hi
 8011082:	390a      	subhi	r1, #10
 8011084:	8704      	strh	r4, [r0, #56]	; 0x38
 8011086:	86c1      	strh	r1, [r0, #54]	; 0x36
 8011088:	250a      	movs	r5, #10
 801108a:	b18a      	cbz	r2, 80110b0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 801108c:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 801108e:	3a01      	subs	r2, #1
 8011090:	b292      	uxth	r2, r2
 8011092:	3101      	adds	r1, #1
 8011094:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8011098:	8701      	strh	r1, [r0, #56]	; 0x38
 801109a:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801109c:	b901      	cbnz	r1, 80110a0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801109e:	86c5      	strh	r5, [r0, #54]	; 0x36
 80110a0:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80110a2:	3901      	subs	r1, #1
 80110a4:	b289      	uxth	r1, r1
 80110a6:	86c1      	strh	r1, [r0, #54]	; 0x36
 80110a8:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80110ac:	844c      	strh	r4, [r1, #34]	; 0x22
 80110ae:	e7ec      	b.n	801108a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 80110b0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80110b4:	f7ff bf4b 	b.w	8010f4e <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080110b8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 80110b8:	b570      	push	{r4, r5, r6, lr}
 80110ba:	2500      	movs	r5, #0
 80110bc:	4295      	cmp	r5, r2
 80110be:	d011      	beq.n	80110e4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 80110c0:	8bc4      	ldrh	r4, [r0, #30]
 80110c2:	f831 6b02 	ldrh.w	r6, [r1], #2
 80110c6:	4414      	add	r4, r2
 80110c8:	3c01      	subs	r4, #1
 80110ca:	1b64      	subs	r4, r4, r5
 80110cc:	b2a4      	uxth	r4, r4
 80110ce:	2c01      	cmp	r4, #1
 80110d0:	bf88      	it	hi
 80110d2:	3c02      	subhi	r4, #2
 80110d4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80110d8:	8b64      	ldrh	r4, [r4, #26]
 80110da:	42b4      	cmp	r4, r6
 80110dc:	d117      	bne.n	801110e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 80110de:	3501      	adds	r5, #1
 80110e0:	b2ad      	uxth	r5, r5
 80110e2:	e7eb      	b.n	80110bc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 80110e4:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80110e8:	2400      	movs	r4, #0
 80110ea:	4413      	add	r3, r2
 80110ec:	b2a2      	uxth	r2, r4
 80110ee:	429a      	cmp	r2, r3
 80110f0:	da0f      	bge.n	8011112 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 80110f2:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 80110f4:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 80110f8:	4432      	add	r2, r6
 80110fa:	b292      	uxth	r2, r2
 80110fc:	2a09      	cmp	r2, #9
 80110fe:	bf88      	it	hi
 8011100:	3a0a      	subhi	r2, #10
 8011102:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8011106:	3401      	adds	r4, #1
 8011108:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 801110a:	42aa      	cmp	r2, r5
 801110c:	d0ee      	beq.n	80110ec <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801110e:	2000      	movs	r0, #0
 8011110:	bd70      	pop	{r4, r5, r6, pc}
 8011112:	2001      	movs	r0, #1
 8011114:	e7fc      	b.n	8011110 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08011116 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8011116:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801111a:	4605      	mov	r5, r0
 801111c:	4616      	mov	r6, r2
 801111e:	1c8c      	adds	r4, r1, #2
 8011120:	8809      	ldrh	r1, [r1, #0]
 8011122:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8011126:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 801112a:	42b3      	cmp	r3, r6
 801112c:	d124      	bne.n	8011178 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801112e:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8011132:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8011136:	f001 070f 	and.w	r7, r1, #15
 801113a:	f8cd 8000 	str.w	r8, [sp]
 801113e:	464b      	mov	r3, r9
 8011140:	4652      	mov	r2, sl
 8011142:	4621      	mov	r1, r4
 8011144:	4628      	mov	r0, r5
 8011146:	f7ff ffb7 	bl	80110b8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 801114a:	4683      	mov	fp, r0
 801114c:	b168      	cbz	r0, 801116a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801114e:	eb0a 0109 	add.w	r1, sl, r9
 8011152:	4441      	add	r1, r8
 8011154:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8011158:	463a      	mov	r2, r7
 801115a:	4649      	mov	r1, r9
 801115c:	4628      	mov	r0, r5
 801115e:	f7ff ff53 	bl	8011008 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8011162:	4658      	mov	r0, fp
 8011164:	b003      	add	sp, #12
 8011166:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801116a:	eb07 010a 	add.w	r1, r7, sl
 801116e:	4449      	add	r1, r9
 8011170:	4441      	add	r1, r8
 8011172:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8011176:	e7d2      	b.n	801111e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8011178:	f04f 0b00 	mov.w	fp, #0
 801117c:	e7f1      	b.n	8011162 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801117e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801117e:	b570      	push	{r4, r5, r6, lr}
 8011180:	8810      	ldrh	r0, [r2, #0]
 8011182:	4298      	cmp	r0, r3
 8011184:	d817      	bhi.n	80111b6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8011186:	1e48      	subs	r0, r1, #1
 8011188:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 801118c:	4298      	cmp	r0, r3
 801118e:	d312      	bcc.n	80111b6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8011190:	2400      	movs	r4, #0
 8011192:	428c      	cmp	r4, r1
 8011194:	d20f      	bcs.n	80111b6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8011196:	1860      	adds	r0, r4, r1
 8011198:	1040      	asrs	r0, r0, #1
 801119a:	0085      	lsls	r5, r0, #2
 801119c:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 80111a0:	42b3      	cmp	r3, r6
 80111a2:	d902      	bls.n	80111aa <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 80111a4:	3001      	adds	r0, #1
 80111a6:	b284      	uxth	r4, r0
 80111a8:	e7f3      	b.n	8011192 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80111aa:	d201      	bcs.n	80111b0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 80111ac:	b281      	uxth	r1, r0
 80111ae:	e7f0      	b.n	8011192 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80111b0:	442a      	add	r2, r5
 80111b2:	8850      	ldrh	r0, [r2, #2]
 80111b4:	bd70      	pop	{r4, r5, r6, pc}
 80111b6:	2000      	movs	r0, #0
 80111b8:	e7fc      	b.n	80111b4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

080111ba <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 80111ba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80111be:	6c45      	ldr	r5, [r0, #68]	; 0x44
 80111c0:	886f      	ldrh	r7, [r5, #2]
 80111c2:	4604      	mov	r4, r0
 80111c4:	087f      	lsrs	r7, r7, #1
 80111c6:	260b      	movs	r6, #11
 80111c8:	3e01      	subs	r6, #1
 80111ca:	d013      	beq.n	80111f4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80111cc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80111ce:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80111d2:	462a      	mov	r2, r5
 80111d4:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80111d8:	4639      	mov	r1, r7
 80111da:	4643      	mov	r3, r8
 80111dc:	4620      	mov	r0, r4
 80111de:	f7ff ffce 	bl	801117e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 80111e2:	b138      	cbz	r0, 80111f4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80111e4:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80111e8:	4642      	mov	r2, r8
 80111ea:	4620      	mov	r0, r4
 80111ec:	f7ff ff93 	bl	8011116 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 80111f0:	2800      	cmp	r0, #0
 80111f2:	d1e9      	bne.n	80111c8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 80111f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080111f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80111f8:	b570      	push	{r4, r5, r6, lr}
 80111fa:	694a      	ldr	r2, [r1, #20]
 80111fc:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80111fe:	684b      	ldr	r3, [r1, #4]
 8011200:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8011202:	1b54      	subs	r4, r2, r5
 8011204:	f000 8106 	beq.w	8011414 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8011208:	1b9b      	subs	r3, r3, r6
 801120a:	d003      	beq.n	8011214 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801120c:	4363      	muls	r3, r4
 801120e:	2210      	movs	r2, #16
 8011210:	fb93 f3f2 	sdiv	r3, r3, r2
 8011214:	680c      	ldr	r4, [r1, #0]
 8011216:	698a      	ldr	r2, [r1, #24]
 8011218:	1b65      	subs	r5, r4, r5
 801121a:	f000 80fd 	beq.w	8011418 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801121e:	1b92      	subs	r2, r2, r6
 8011220:	d003      	beq.n	801122a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8011222:	436a      	muls	r2, r5
 8011224:	2410      	movs	r4, #16
 8011226:	fb92 f2f4 	sdiv	r2, r2, r4
 801122a:	1a9b      	subs	r3, r3, r2
 801122c:	ee07 3a90 	vmov	s15, r3
 8011230:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8011454 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8011234:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011238:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801123c:	ee67 7a84 	vmul.f32	s15, s15, s8
 8011240:	460a      	mov	r2, r1
 8011242:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8011246:	4603      	mov	r3, r0
 8011248:	f100 040c 	add.w	r4, r0, #12
 801124c:	eeb1 6a43 	vneg.f32	s12, s6
 8011250:	edd2 7a02 	vldr	s15, [r2, #8]
 8011254:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8011258:	3214      	adds	r2, #20
 801125a:	ece3 6a01 	vstmia	r3!, {s13}
 801125e:	ed52 7a02 	vldr	s15, [r2, #-8]
 8011262:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8011266:	429c      	cmp	r4, r3
 8011268:	edc3 7a02 	vstr	s15, [r3, #8]
 801126c:	ed52 7a01 	vldr	s15, [r2, #-4]
 8011270:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8011274:	edc3 7a05 	vstr	s15, [r3, #20]
 8011278:	d1ea      	bne.n	8011250 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801127a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801127c:	698b      	ldr	r3, [r1, #24]
 801127e:	edd0 4a02 	vldr	s9, [r0, #8]
 8011282:	edd0 3a00 	vldr	s7, [r0]
 8011286:	edd0 6a01 	vldr	s13, [r0, #4]
 801128a:	ed90 5a05 	vldr	s10, [r0, #20]
 801128e:	ed90 2a03 	vldr	s4, [r0, #12]
 8011292:	edd0 5a04 	vldr	s11, [r0, #16]
 8011296:	ed90 1a07 	vldr	s2, [r0, #28]
 801129a:	edd0 2a06 	vldr	s5, [r0, #24]
 801129e:	1a9b      	subs	r3, r3, r2
 80112a0:	ee07 3a90 	vmov	s15, r3
 80112a4:	684b      	ldr	r3, [r1, #4]
 80112a6:	1a9b      	subs	r3, r3, r2
 80112a8:	ee07 3a10 	vmov	s14, r3
 80112ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80112b0:	ee76 6ae4 	vsub.f32	s13, s13, s9
 80112b4:	ee67 7a84 	vmul.f32	s15, s15, s8
 80112b8:	ee73 4ae4 	vsub.f32	s9, s7, s9
 80112bc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80112c0:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 80112c4:	ee27 7a04 	vmul.f32	s14, s14, s8
 80112c8:	ee75 5ac5 	vsub.f32	s11, s11, s10
 80112cc:	eee6 7a87 	vfma.f32	s15, s13, s14
 80112d0:	ee32 5a45 	vsub.f32	s10, s4, s10
 80112d4:	ee67 7a83 	vmul.f32	s15, s15, s6
 80112d8:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 80112dc:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80112de:	694a      	ldr	r2, [r1, #20]
 80112e0:	1b13      	subs	r3, r2, r4
 80112e2:	ee07 3a10 	vmov	s14, r3
 80112e6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80112ea:	680b      	ldr	r3, [r1, #0]
 80112ec:	ee27 7a04 	vmul.f32	s14, s14, s8
 80112f0:	1b1b      	subs	r3, r3, r4
 80112f2:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80112f6:	ee07 3a10 	vmov	s14, r3
 80112fa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80112fe:	ee27 7a04 	vmul.f32	s14, s14, s8
 8011302:	eee6 4a87 	vfma.f32	s9, s13, s14
 8011306:	ee64 4a86 	vmul.f32	s9, s9, s12
 801130a:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 801130e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8011310:	698b      	ldr	r3, [r1, #24]
 8011312:	1a9b      	subs	r3, r3, r2
 8011314:	ee06 3a90 	vmov	s13, r3
 8011318:	684b      	ldr	r3, [r1, #4]
 801131a:	1a9b      	subs	r3, r3, r2
 801131c:	ee07 3a10 	vmov	s14, r3
 8011320:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8011324:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011328:	ee66 6a84 	vmul.f32	s13, s13, s8
 801132c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8011330:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8011334:	eee5 6a87 	vfma.f32	s13, s11, s14
 8011338:	ee66 6a83 	vmul.f32	s13, s13, s6
 801133c:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8011340:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8011342:	694a      	ldr	r2, [r1, #20]
 8011344:	1b13      	subs	r3, r2, r4
 8011346:	ee07 3a10 	vmov	s14, r3
 801134a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801134e:	680b      	ldr	r3, [r1, #0]
 8011350:	ee27 7a04 	vmul.f32	s14, s14, s8
 8011354:	1b1b      	subs	r3, r3, r4
 8011356:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801135a:	ee07 3a10 	vmov	s14, r3
 801135e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011362:	ee27 7a04 	vmul.f32	s14, s14, s8
 8011366:	eea5 5a87 	vfma.f32	s10, s11, s14
 801136a:	edd0 5a08 	vldr	s11, [r0, #32]
 801136e:	ee25 5a06 	vmul.f32	s10, s10, s12
 8011372:	ee31 1a65 	vsub.f32	s2, s2, s11
 8011376:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 801137a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801137c:	698b      	ldr	r3, [r1, #24]
 801137e:	1a9b      	subs	r3, r3, r2
 8011380:	ee07 3a10 	vmov	s14, r3
 8011384:	684b      	ldr	r3, [r1, #4]
 8011386:	1a9b      	subs	r3, r3, r2
 8011388:	ee01 3a90 	vmov	s3, r3
 801138c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011390:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8011394:	ee27 7a04 	vmul.f32	s14, s14, s8
 8011398:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 801139c:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 80113a0:	ee61 1a84 	vmul.f32	s3, s3, s8
 80113a4:	eea1 7a21 	vfma.f32	s14, s2, s3
 80113a8:	ee27 7a03 	vmul.f32	s14, s14, s6
 80113ac:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80113b0:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80113b2:	694a      	ldr	r2, [r1, #20]
 80113b4:	1b13      	subs	r3, r2, r4
 80113b6:	ee03 3a10 	vmov	s6, r3
 80113ba:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80113be:	680b      	ldr	r3, [r1, #0]
 80113c0:	ee23 3a04 	vmul.f32	s6, s6, s8
 80113c4:	1b1b      	subs	r3, r3, r4
 80113c6:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 80113ca:	ee03 3a10 	vmov	s6, r3
 80113ce:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80113d2:	ee23 4a04 	vmul.f32	s8, s6, s8
 80113d6:	eee1 5a04 	vfma.f32	s11, s2, s8
 80113da:	ee25 6a86 	vmul.f32	s12, s11, s12
 80113de:	ee62 5a67 	vnmul.f32	s11, s4, s15
 80113e2:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 80113e6:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80113ea:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80113ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80113f2:	dd13      	ble.n	801141c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80113f4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80113f8:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 80113fc:	63c3      	str	r3, [r0, #60]	; 0x3c
 80113fe:	eee3 7a87 	vfma.f32	s15, s7, s14
 8011402:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8011406:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801140a:	dd15      	ble.n	8011438 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 801140c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8011410:	6403      	str	r3, [r0, #64]	; 0x40
 8011412:	bd70      	pop	{r4, r5, r6, pc}
 8011414:	4623      	mov	r3, r4
 8011416:	e6fd      	b.n	8011214 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8011418:	462a      	mov	r2, r5
 801141a:	e706      	b.n	801122a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801141c:	d502      	bpl.n	8011424 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 801141e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8011422:	e7e9      	b.n	80113f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8011424:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8011428:	eea3 2a85 	vfma.f32	s4, s7, s10
 801142c:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8011430:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011434:	dade      	bge.n	80113f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8011436:	e7f2      	b.n	801141e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8011438:	d502      	bpl.n	8011440 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801143a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801143e:	e7e7      	b.n	8011410 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8011440:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8011444:	eee3 4a86 	vfma.f32	s9, s7, s12
 8011448:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 801144c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011450:	dadc      	bge.n	801140c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8011452:	e7f2      	b.n	801143a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8011454:	3d800000 	.word	0x3d800000

08011458 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8011458:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801145c:	2714      	movs	r7, #20
 801145e:	435f      	muls	r7, r3
 8011460:	eb02 0c07 	add.w	ip, r2, r7
 8011464:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8011468:	f115 0e0f 	adds.w	lr, r5, #15
 801146c:	f100 80a2 	bmi.w	80115b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8011470:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8011474:	9c08      	ldr	r4, [sp, #32]
 8011476:	f8c0 e014 	str.w	lr, [r0, #20]
 801147a:	2614      	movs	r6, #20
 801147c:	4366      	muls	r6, r4
 801147e:	eb02 0806 	add.w	r8, r2, r6
 8011482:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8011486:	f115 040f 	adds.w	r4, r5, #15
 801148a:	f100 809f 	bmi.w	80115cc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801148e:	1124      	asrs	r4, r4, #4
 8011490:	eba4 040e 	sub.w	r4, r4, lr
 8011494:	6184      	str	r4, [r0, #24]
 8011496:	2c00      	cmp	r4, #0
 8011498:	f000 808a 	beq.w	80115b0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 801149c:	f8dc 9004 	ldr.w	r9, [ip, #4]
 80114a0:	f8d8 4004 	ldr.w	r4, [r8, #4]
 80114a4:	5995      	ldr	r5, [r2, r6]
 80114a6:	eba4 0809 	sub.w	r8, r4, r9
 80114aa:	59d4      	ldr	r4, [r2, r7]
 80114ac:	eba5 0a04 	sub.w	sl, r5, r4
 80114b0:	ea4f 150a 	mov.w	r5, sl, lsl #4
 80114b4:	fb0e fe05 	mul.w	lr, lr, r5
 80114b8:	fb0a ee19 	mls	lr, sl, r9, lr
 80114bc:	fb08 e404 	mla	r4, r8, r4, lr
 80114c0:	ea4f 1608 	mov.w	r6, r8, lsl #4
 80114c4:	3c01      	subs	r4, #1
 80114c6:	19a4      	adds	r4, r4, r6
 80114c8:	f100 808c 	bmi.w	80115e4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 80114cc:	fb94 fef6 	sdiv	lr, r4, r6
 80114d0:	f8c0 e000 	str.w	lr, [r0]
 80114d4:	fb06 441e 	mls	r4, r6, lr, r4
 80114d8:	6104      	str	r4, [r0, #16]
 80114da:	2d00      	cmp	r5, #0
 80114dc:	f2c0 8095 	blt.w	801160a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 80114e0:	fb95 f4f6 	sdiv	r4, r5, r6
 80114e4:	6044      	str	r4, [r0, #4]
 80114e6:	fb06 5514 	mls	r5, r6, r4, r5
 80114ea:	6085      	str	r5, [r0, #8]
 80114ec:	60c6      	str	r6, [r0, #12]
 80114ee:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80114f2:	6945      	ldr	r5, [r0, #20]
 80114f4:	59d2      	ldr	r2, [r2, r7]
 80114f6:	eddf 6a4d 	vldr	s13, [pc, #308]	; 801162c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 80114fa:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 80114fe:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8011502:	ee07 4a10 	vmov	s14, r4
 8011506:	6804      	ldr	r4, [r0, #0]
 8011508:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 801150c:	ee07 2a90 	vmov	s15, r2
 8011510:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011514:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011518:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801151c:	ee27 7a26 	vmul.f32	s14, s14, s13
 8011520:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8011524:	edd3 6a00 	vldr	s13, [r3]
 8011528:	eee6 6a07 	vfma.f32	s13, s12, s14
 801152c:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8011530:	eee6 6a27 	vfma.f32	s13, s12, s15
 8011534:	edc0 6a07 	vstr	s13, [r0, #28]
 8011538:	edd0 6a01 	vldr	s13, [r0, #4]
 801153c:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8011540:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8011544:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8011548:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801154c:	ed80 6a08 	vstr	s12, [r0, #32]
 8011550:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8011552:	6242      	str	r2, [r0, #36]	; 0x24
 8011554:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8011558:	ed93 6a03 	vldr	s12, [r3, #12]
 801155c:	eea5 6a87 	vfma.f32	s12, s11, s14
 8011560:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8011564:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8011568:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 801156c:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8011570:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8011574:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8011578:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 801157c:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801157e:	6302      	str	r2, [r0, #48]	; 0x30
 8011580:	ed93 6a06 	vldr	s12, [r3, #24]
 8011584:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8011588:	eea5 6a87 	vfma.f32	s12, s11, s14
 801158c:	eeb0 7a46 	vmov.f32	s14, s12
 8011590:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8011594:	eea6 7a27 	vfma.f32	s14, s12, s15
 8011598:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801159c:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 80115a0:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 80115a4:	eee6 7a87 	vfma.f32	s15, s13, s14
 80115a8:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 80115ac:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 80115ae:	63c3      	str	r3, [r0, #60]	; 0x3c
 80115b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80115b4:	f1c5 0501 	rsb	r5, r5, #1
 80115b8:	f015 050f 	ands.w	r5, r5, #15
 80115bc:	bf18      	it	ne
 80115be:	2501      	movne	r5, #1
 80115c0:	2410      	movs	r4, #16
 80115c2:	fb9e fef4 	sdiv	lr, lr, r4
 80115c6:	ebae 0e05 	sub.w	lr, lr, r5
 80115ca:	e753      	b.n	8011474 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 80115cc:	f1c5 0501 	rsb	r5, r5, #1
 80115d0:	f015 050f 	ands.w	r5, r5, #15
 80115d4:	bf18      	it	ne
 80115d6:	2501      	movne	r5, #1
 80115d8:	f04f 0910 	mov.w	r9, #16
 80115dc:	fb94 f4f9 	sdiv	r4, r4, r9
 80115e0:	1b64      	subs	r4, r4, r5
 80115e2:	e755      	b.n	8011490 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 80115e4:	4264      	negs	r4, r4
 80115e6:	fb94 fef6 	sdiv	lr, r4, r6
 80115ea:	f1ce 0800 	rsb	r8, lr, #0
 80115ee:	fb06 441e 	mls	r4, r6, lr, r4
 80115f2:	f8c0 8000 	str.w	r8, [r0]
 80115f6:	6104      	str	r4, [r0, #16]
 80115f8:	2c00      	cmp	r4, #0
 80115fa:	f43f af6e 	beq.w	80114da <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 80115fe:	ea6f 0e0e 	mvn.w	lr, lr
 8011602:	f8c0 e000 	str.w	lr, [r0]
 8011606:	1b34      	subs	r4, r6, r4
 8011608:	e766      	b.n	80114d8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 801160a:	426d      	negs	r5, r5
 801160c:	fb95 f4f6 	sdiv	r4, r5, r6
 8011610:	f1c4 0e00 	rsb	lr, r4, #0
 8011614:	fb06 5514 	mls	r5, r6, r4, r5
 8011618:	f8c0 e004 	str.w	lr, [r0, #4]
 801161c:	6085      	str	r5, [r0, #8]
 801161e:	2d00      	cmp	r5, #0
 8011620:	f43f af64 	beq.w	80114ec <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8011624:	43e4      	mvns	r4, r4
 8011626:	6044      	str	r4, [r0, #4]
 8011628:	1b75      	subs	r5, r6, r5
 801162a:	e75e      	b.n	80114ea <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 801162c:	3d800000 	.word	0x3d800000

08011630 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8011630:	4b01      	ldr	r3, [pc, #4]	; (8011638 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8011632:	6018      	str	r0, [r3, #0]
 8011634:	4770      	bx	lr
 8011636:	bf00      	nop
 8011638:	20013610 	.word	0x20013610

0801163c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 801163c:	4b06      	ldr	r3, [pc, #24]	; (8011658 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801163e:	881a      	ldrh	r2, [r3, #0]
 8011640:	4282      	cmp	r2, r0
 8011642:	d807      	bhi.n	8011654 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8011644:	4b05      	ldr	r3, [pc, #20]	; (801165c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8011646:	881b      	ldrh	r3, [r3, #0]
 8011648:	4413      	add	r3, r2
 801164a:	4298      	cmp	r0, r3
 801164c:	bfac      	ite	ge
 801164e:	2000      	movge	r0, #0
 8011650:	2001      	movlt	r0, #1
 8011652:	4770      	bx	lr
 8011654:	2000      	movs	r0, #0
 8011656:	4770      	bx	lr
 8011658:	20013630 	.word	0x20013630
 801165c:	20013634 	.word	0x20013634

08011660 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8011660:	b508      	push	{r3, lr}
 8011662:	4601      	mov	r1, r0
 8011664:	f7ff ffea 	bl	801163c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8011668:	b118      	cbz	r0, 8011672 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801166a:	4b02      	ldr	r3, [pc, #8]	; (8011674 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 801166c:	681b      	ldr	r3, [r3, #0]
 801166e:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8011672:	bd08      	pop	{r3, pc}
 8011674:	20013614 	.word	0x20013614

08011678 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8011678:	b5f0      	push	{r4, r5, r6, r7, lr}
 801167a:	4c24      	ldr	r4, [pc, #144]	; (801170c <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 801167c:	6823      	ldr	r3, [r4, #0]
 801167e:	2b00      	cmp	r3, #0
 8011680:	d042      	beq.n	8011708 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8011682:	4a23      	ldr	r2, [pc, #140]	; (8011710 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8011684:	4d23      	ldr	r5, [pc, #140]	; (8011714 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8011686:	8811      	ldrh	r1, [r2, #0]
 8011688:	f8b5 c000 	ldrh.w	ip, [r5]
 801168c:	4822      	ldr	r0, [pc, #136]	; (8011718 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801168e:	4461      	add	r1, ip
 8011690:	1c4a      	adds	r2, r1, #1
 8011692:	f022 0201 	bic.w	r2, r2, #1
 8011696:	008f      	lsls	r7, r1, #2
 8011698:	0412      	lsls	r2, r2, #16
 801169a:	19de      	adds	r6, r3, r7
 801169c:	0c12      	lsrs	r2, r2, #16
 801169e:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 80116a2:	6006      	str	r6, [r0, #0]
 80116a4:	4e1d      	ldr	r6, [pc, #116]	; (801171c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 80116a6:	19da      	adds	r2, r3, r7
 80116a8:	6032      	str	r2, [r6, #0]
 80116aa:	220e      	movs	r2, #14
 80116ac:	fb02 f20c 	mul.w	r2, r2, ip
 80116b0:	3203      	adds	r2, #3
 80116b2:	f022 0203 	bic.w	r2, r2, #3
 80116b6:	443a      	add	r2, r7
 80116b8:	4f19      	ldr	r7, [pc, #100]	; (8011720 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 80116ba:	4413      	add	r3, r2
 80116bc:	603b      	str	r3, [r7, #0]
 80116be:	4f19      	ldr	r7, [pc, #100]	; (8011724 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 80116c0:	2300      	movs	r3, #0
 80116c2:	803b      	strh	r3, [r7, #0]
 80116c4:	4f18      	ldr	r7, [pc, #96]	; (8011728 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 80116c6:	683f      	ldr	r7, [r7, #0]
 80116c8:	1aba      	subs	r2, r7, r2
 80116ca:	4f18      	ldr	r7, [pc, #96]	; (801172c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 80116cc:	603a      	str	r2, [r7, #0]
 80116ce:	4a18      	ldr	r2, [pc, #96]	; (8011730 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 80116d0:	469c      	mov	ip, r3
 80116d2:	8013      	strh	r3, [r2, #0]
 80116d4:	f64f 77ff 	movw	r7, #65535	; 0xffff
 80116d8:	428b      	cmp	r3, r1
 80116da:	d10d      	bne.n	80116f8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 80116dc:	882d      	ldrh	r5, [r5, #0]
 80116de:	6830      	ldr	r0, [r6, #0]
 80116e0:	2300      	movs	r3, #0
 80116e2:	240e      	movs	r4, #14
 80116e4:	429d      	cmp	r5, r3
 80116e6:	d90f      	bls.n	8011708 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80116e8:	fb04 0203 	mla	r2, r4, r3, r0
 80116ec:	3301      	adds	r3, #1
 80116ee:	7b11      	ldrb	r1, [r2, #12]
 80116f0:	f36f 1145 	bfc	r1, #5, #1
 80116f4:	7311      	strb	r1, [r2, #12]
 80116f6:	e7f5      	b.n	80116e4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 80116f8:	6822      	ldr	r2, [r4, #0]
 80116fa:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 80116fe:	6802      	ldr	r2, [r0, #0]
 8011700:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8011704:	3301      	adds	r3, #1
 8011706:	e7e7      	b.n	80116d8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8011708:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801170a:	bf00      	nop
 801170c:	20013614 	.word	0x20013614
 8011710:	20013630 	.word	0x20013630
 8011714:	20013634 	.word	0x20013634
 8011718:	20013628 	.word	0x20013628
 801171c:	20013618 	.word	0x20013618
 8011720:	20013620 	.word	0x20013620
 8011724:	20013632 	.word	0x20013632
 8011728:	2001361c 	.word	0x2001361c
 801172c:	2001362c 	.word	0x2001362c
 8011730:	20013624 	.word	0x20013624

08011734 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8011734:	4b06      	ldr	r3, [pc, #24]	; (8011750 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8011736:	681b      	ldr	r3, [r3, #0]
 8011738:	b943      	cbnz	r3, 801174c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801173a:	b139      	cbz	r1, 801174c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801173c:	4b05      	ldr	r3, [pc, #20]	; (8011754 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 801173e:	801a      	strh	r2, [r3, #0]
 8011740:	4b05      	ldr	r3, [pc, #20]	; (8011758 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8011742:	6019      	str	r1, [r3, #0]
 8011744:	4b05      	ldr	r3, [pc, #20]	; (801175c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8011746:	6018      	str	r0, [r3, #0]
 8011748:	f7ff bf96 	b.w	8011678 <_ZN8touchgfx6Bitmap10clearCacheEv>
 801174c:	4770      	bx	lr
 801174e:	bf00      	nop
 8011750:	20013620 	.word	0x20013620
 8011754:	20013634 	.word	0x20013634
 8011758:	2001361c 	.word	0x2001361c
 801175c:	20013614 	.word	0x20013614

08011760 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8011760:	b470      	push	{r4, r5, r6}
 8011762:	4c07      	ldr	r4, [pc, #28]	; (8011780 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8011764:	6826      	ldr	r6, [r4, #0]
 8011766:	4605      	mov	r5, r0
 8011768:	4610      	mov	r0, r2
 801176a:	9a03      	ldr	r2, [sp, #12]
 801176c:	b936      	cbnz	r6, 801177c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801176e:	6025      	str	r5, [r4, #0]
 8011770:	4c04      	ldr	r4, [pc, #16]	; (8011784 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8011772:	8021      	strh	r1, [r4, #0]
 8011774:	bc70      	pop	{r4, r5, r6}
 8011776:	4619      	mov	r1, r3
 8011778:	f7ff bfdc 	b.w	8011734 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 801177c:	bc70      	pop	{r4, r5, r6}
 801177e:	4770      	bx	lr
 8011780:	20013638 	.word	0x20013638
 8011784:	20013630 	.word	0x20013630

08011788 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8011788:	4a12      	ldr	r2, [pc, #72]	; (80117d4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801178a:	8803      	ldrh	r3, [r0, #0]
 801178c:	8812      	ldrh	r2, [r2, #0]
 801178e:	4293      	cmp	r3, r2
 8011790:	d207      	bcs.n	80117a2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8011792:	4a11      	ldr	r2, [pc, #68]	; (80117d8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8011794:	6812      	ldr	r2, [r2, #0]
 8011796:	2114      	movs	r1, #20
 8011798:	fb01 2303 	mla	r3, r1, r3, r2
 801179c:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80117a0:	4770      	bx	lr
 80117a2:	490e      	ldr	r1, [pc, #56]	; (80117dc <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 80117a4:	8809      	ldrh	r1, [r1, #0]
 80117a6:	4411      	add	r1, r2
 80117a8:	428b      	cmp	r3, r1
 80117aa:	da04      	bge.n	80117b6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 80117ac:	1a9b      	subs	r3, r3, r2
 80117ae:	4a0c      	ldr	r2, [pc, #48]	; (80117e0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 80117b0:	210e      	movs	r1, #14
 80117b2:	6812      	ldr	r2, [r2, #0]
 80117b4:	e7f0      	b.n	8011798 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 80117b6:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80117ba:	4293      	cmp	r3, r2
 80117bc:	d108      	bne.n	80117d0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 80117be:	4b09      	ldr	r3, [pc, #36]	; (80117e4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 80117c0:	781b      	ldrb	r3, [r3, #0]
 80117c2:	b91b      	cbnz	r3, 80117cc <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 80117c4:	4b08      	ldr	r3, [pc, #32]	; (80117e8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 80117c6:	f9b3 0000 	ldrsh.w	r0, [r3]
 80117ca:	4770      	bx	lr
 80117cc:	4b07      	ldr	r3, [pc, #28]	; (80117ec <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 80117ce:	e7fa      	b.n	80117c6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 80117d0:	2000      	movs	r0, #0
 80117d2:	4770      	bx	lr
 80117d4:	20013630 	.word	0x20013630
 80117d8:	20013638 	.word	0x20013638
 80117dc:	20013634 	.word	0x20013634
 80117e0:	20013618 	.word	0x20013618
 80117e4:	200135a8 	.word	0x200135a8
 80117e8:	200135aa 	.word	0x200135aa
 80117ec:	200135ac 	.word	0x200135ac

080117f0 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 80117f0:	4a12      	ldr	r2, [pc, #72]	; (801183c <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 80117f2:	8803      	ldrh	r3, [r0, #0]
 80117f4:	8812      	ldrh	r2, [r2, #0]
 80117f6:	4293      	cmp	r3, r2
 80117f8:	d207      	bcs.n	801180a <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 80117fa:	4a11      	ldr	r2, [pc, #68]	; (8011840 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 80117fc:	6812      	ldr	r2, [r2, #0]
 80117fe:	2114      	movs	r1, #20
 8011800:	fb01 2303 	mla	r3, r1, r3, r2
 8011804:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8011808:	4770      	bx	lr
 801180a:	490e      	ldr	r1, [pc, #56]	; (8011844 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 801180c:	8809      	ldrh	r1, [r1, #0]
 801180e:	4411      	add	r1, r2
 8011810:	428b      	cmp	r3, r1
 8011812:	da04      	bge.n	801181e <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8011814:	1a9b      	subs	r3, r3, r2
 8011816:	4a0c      	ldr	r2, [pc, #48]	; (8011848 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8011818:	210e      	movs	r1, #14
 801181a:	6812      	ldr	r2, [r2, #0]
 801181c:	e7f0      	b.n	8011800 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 801181e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8011822:	4293      	cmp	r3, r2
 8011824:	d108      	bne.n	8011838 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8011826:	4b09      	ldr	r3, [pc, #36]	; (801184c <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8011828:	781b      	ldrb	r3, [r3, #0]
 801182a:	b91b      	cbnz	r3, 8011834 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 801182c:	4b08      	ldr	r3, [pc, #32]	; (8011850 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801182e:	f9b3 0000 	ldrsh.w	r0, [r3]
 8011832:	4770      	bx	lr
 8011834:	4b07      	ldr	r3, [pc, #28]	; (8011854 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8011836:	e7fa      	b.n	801182e <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8011838:	2000      	movs	r0, #0
 801183a:	4770      	bx	lr
 801183c:	20013630 	.word	0x20013630
 8011840:	20013638 	.word	0x20013638
 8011844:	20013634 	.word	0x20013634
 8011848:	20013618 	.word	0x20013618
 801184c:	200135a8 	.word	0x200135a8
 8011850:	200135ac 	.word	0x200135ac
 8011854:	200135aa 	.word	0x200135aa

08011858 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8011858:	b510      	push	{r4, lr}
 801185a:	4a1f      	ldr	r2, [pc, #124]	; (80118d8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 801185c:	880b      	ldrh	r3, [r1, #0]
 801185e:	8812      	ldrh	r2, [r2, #0]
 8011860:	4293      	cmp	r3, r2
 8011862:	d213      	bcs.n	801188c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8011864:	4a1d      	ldr	r2, [pc, #116]	; (80118dc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 8011866:	6812      	ldr	r2, [r2, #0]
 8011868:	2114      	movs	r1, #20
 801186a:	fb01 2303 	mla	r3, r1, r3, r2
 801186e:	8a1a      	ldrh	r2, [r3, #16]
 8011870:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8011874:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8011878:	8a5b      	ldrh	r3, [r3, #18]
 801187a:	8004      	strh	r4, [r0, #0]
 801187c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8011880:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8011884:	8041      	strh	r1, [r0, #2]
 8011886:	8082      	strh	r2, [r0, #4]
 8011888:	80c3      	strh	r3, [r0, #6]
 801188a:	e00e      	b.n	80118aa <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801188c:	4914      	ldr	r1, [pc, #80]	; (80118e0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 801188e:	8809      	ldrh	r1, [r1, #0]
 8011890:	4411      	add	r1, r2
 8011892:	428b      	cmp	r3, r1
 8011894:	da0a      	bge.n	80118ac <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 8011896:	1a9b      	subs	r3, r3, r2
 8011898:	4a12      	ldr	r2, [pc, #72]	; (80118e4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 801189a:	6812      	ldr	r2, [r2, #0]
 801189c:	210e      	movs	r1, #14
 801189e:	fb01 2303 	mla	r3, r1, r3, r2
 80118a2:	681a      	ldr	r2, [r3, #0]
 80118a4:	6002      	str	r2, [r0, #0]
 80118a6:	685a      	ldr	r2, [r3, #4]
 80118a8:	6042      	str	r2, [r0, #4]
 80118aa:	bd10      	pop	{r4, pc}
 80118ac:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80118b0:	4293      	cmp	r3, r2
 80118b2:	d10b      	bne.n	80118cc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 80118b4:	4b0c      	ldr	r3, [pc, #48]	; (80118e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 80118b6:	f9b3 1000 	ldrsh.w	r1, [r3]
 80118ba:	4b0c      	ldr	r3, [pc, #48]	; (80118ec <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 80118bc:	8081      	strh	r1, [r0, #4]
 80118be:	f9b3 2000 	ldrsh.w	r2, [r3]
 80118c2:	80c2      	strh	r2, [r0, #6]
 80118c4:	2300      	movs	r3, #0
 80118c6:	8003      	strh	r3, [r0, #0]
 80118c8:	8043      	strh	r3, [r0, #2]
 80118ca:	e7ee      	b.n	80118aa <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80118cc:	2300      	movs	r3, #0
 80118ce:	8003      	strh	r3, [r0, #0]
 80118d0:	8043      	strh	r3, [r0, #2]
 80118d2:	8083      	strh	r3, [r0, #4]
 80118d4:	e7d8      	b.n	8011888 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 80118d6:	bf00      	nop
 80118d8:	20013630 	.word	0x20013630
 80118dc:	20013638 	.word	0x20013638
 80118e0:	20013634 	.word	0x20013634
 80118e4:	20013618 	.word	0x20013618
 80118e8:	200135a4 	.word	0x200135a4
 80118ec:	200135a6 	.word	0x200135a6

080118f0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 80118f0:	4a17      	ldr	r2, [pc, #92]	; (8011950 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 80118f2:	8803      	ldrh	r3, [r0, #0]
 80118f4:	8812      	ldrh	r2, [r2, #0]
 80118f6:	4293      	cmp	r3, r2
 80118f8:	d213      	bcs.n	8011922 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 80118fa:	4a16      	ldr	r2, [pc, #88]	; (8011954 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 80118fc:	6812      	ldr	r2, [r2, #0]
 80118fe:	2114      	movs	r1, #20
 8011900:	fb01 2303 	mla	r3, r1, r3, r2
 8011904:	8a1a      	ldrh	r2, [r3, #16]
 8011906:	8919      	ldrh	r1, [r3, #8]
 8011908:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801190c:	428a      	cmp	r2, r1
 801190e:	db1d      	blt.n	801194c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8011910:	8a58      	ldrh	r0, [r3, #18]
 8011912:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8011916:	895b      	ldrh	r3, [r3, #10]
 8011918:	4298      	cmp	r0, r3
 801191a:	bfac      	ite	ge
 801191c:	2000      	movge	r0, #0
 801191e:	2001      	movlt	r0, #1
 8011920:	4770      	bx	lr
 8011922:	490d      	ldr	r1, [pc, #52]	; (8011958 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8011924:	8809      	ldrh	r1, [r1, #0]
 8011926:	4411      	add	r1, r2
 8011928:	428b      	cmp	r3, r1
 801192a:	da0d      	bge.n	8011948 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 801192c:	1a9b      	subs	r3, r3, r2
 801192e:	4a0b      	ldr	r2, [pc, #44]	; (801195c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8011930:	6812      	ldr	r2, [r2, #0]
 8011932:	210e      	movs	r1, #14
 8011934:	fb01 2303 	mla	r3, r1, r3, r2
 8011938:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 801193c:	891a      	ldrh	r2, [r3, #8]
 801193e:	4291      	cmp	r1, r2
 8011940:	db04      	blt.n	801194c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8011942:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8011946:	e7e6      	b.n	8011916 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8011948:	2000      	movs	r0, #0
 801194a:	4770      	bx	lr
 801194c:	2001      	movs	r0, #1
 801194e:	4770      	bx	lr
 8011950:	20013630 	.word	0x20013630
 8011954:	20013638 	.word	0x20013638
 8011958:	20013634 	.word	0x20013634
 801195c:	20013618 	.word	0x20013618

08011960 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8011960:	4a12      	ldr	r2, [pc, #72]	; (80119ac <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8011962:	8803      	ldrh	r3, [r0, #0]
 8011964:	8811      	ldrh	r1, [r2, #0]
 8011966:	428b      	cmp	r3, r1
 8011968:	d20b      	bcs.n	8011982 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801196a:	4a11      	ldr	r2, [pc, #68]	; (80119b0 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801196c:	6812      	ldr	r2, [r2, #0]
 801196e:	b112      	cbz	r2, 8011976 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8011970:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8011974:	b9c0      	cbnz	r0, 80119a8 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8011976:	4a0f      	ldr	r2, [pc, #60]	; (80119b4 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8011978:	6811      	ldr	r1, [r2, #0]
 801197a:	2214      	movs	r2, #20
 801197c:	4353      	muls	r3, r2
 801197e:	58c8      	ldr	r0, [r1, r3]
 8011980:	4770      	bx	lr
 8011982:	4a0d      	ldr	r2, [pc, #52]	; (80119b8 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8011984:	8812      	ldrh	r2, [r2, #0]
 8011986:	440a      	add	r2, r1
 8011988:	4293      	cmp	r3, r2
 801198a:	da04      	bge.n	8011996 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 801198c:	4a08      	ldr	r2, [pc, #32]	; (80119b0 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801198e:	6812      	ldr	r2, [r2, #0]
 8011990:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8011994:	4770      	bx	lr
 8011996:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801199a:	4293      	cmp	r3, r2
 801199c:	d103      	bne.n	80119a6 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801199e:	4b07      	ldr	r3, [pc, #28]	; (80119bc <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 80119a0:	681b      	ldr	r3, [r3, #0]
 80119a2:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80119a4:	4770      	bx	lr
 80119a6:	2000      	movs	r0, #0
 80119a8:	4770      	bx	lr
 80119aa:	bf00      	nop
 80119ac:	20013630 	.word	0x20013630
 80119b0:	20013614 	.word	0x20013614
 80119b4:	20013638 	.word	0x20013638
 80119b8:	20013634 	.word	0x20013634
 80119bc:	200135b0 	.word	0x200135b0

080119c0 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 80119c0:	4b24      	ldr	r3, [pc, #144]	; (8011a54 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 80119c2:	8802      	ldrh	r2, [r0, #0]
 80119c4:	8818      	ldrh	r0, [r3, #0]
 80119c6:	4282      	cmp	r2, r0
 80119c8:	d221      	bcs.n	8011a0e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 80119ca:	4b23      	ldr	r3, [pc, #140]	; (8011a58 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 80119cc:	6819      	ldr	r1, [r3, #0]
 80119ce:	2314      	movs	r3, #20
 80119d0:	fb03 1302 	mla	r3, r3, r2, r1
 80119d4:	6858      	ldr	r0, [r3, #4]
 80119d6:	2800      	cmp	r0, #0
 80119d8:	d03a      	beq.n	8011a50 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80119da:	4920      	ldr	r1, [pc, #128]	; (8011a5c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80119dc:	6809      	ldr	r1, [r1, #0]
 80119de:	2900      	cmp	r1, #0
 80119e0:	d036      	beq.n	8011a50 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80119e2:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 80119e6:	2900      	cmp	r1, #0
 80119e8:	d032      	beq.n	8011a50 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80119ea:	891a      	ldrh	r2, [r3, #8]
 80119ec:	8958      	ldrh	r0, [r3, #10]
 80119ee:	4350      	muls	r0, r2
 80119f0:	7c5a      	ldrb	r2, [r3, #17]
 80119f2:	7cdb      	ldrb	r3, [r3, #19]
 80119f4:	0952      	lsrs	r2, r2, #5
 80119f6:	f3c3 1342 	ubfx	r3, r3, #5, #3
 80119fa:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80119fe:	2b0b      	cmp	r3, #11
 8011a00:	bf18      	it	ne
 8011a02:	0040      	lslne	r0, r0, #1
 8011a04:	3003      	adds	r0, #3
 8011a06:	f020 0003 	bic.w	r0, r0, #3
 8011a0a:	4408      	add	r0, r1
 8011a0c:	4770      	bx	lr
 8011a0e:	4b14      	ldr	r3, [pc, #80]	; (8011a60 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8011a10:	881b      	ldrh	r3, [r3, #0]
 8011a12:	4403      	add	r3, r0
 8011a14:	429a      	cmp	r2, r3
 8011a16:	da1a      	bge.n	8011a4e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8011a18:	4b12      	ldr	r3, [pc, #72]	; (8011a64 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8011a1a:	681b      	ldr	r3, [r3, #0]
 8011a1c:	1a10      	subs	r0, r2, r0
 8011a1e:	210e      	movs	r1, #14
 8011a20:	fb01 3000 	mla	r0, r1, r0, r3
 8011a24:	7b03      	ldrb	r3, [r0, #12]
 8011a26:	f003 031f 	and.w	r3, r3, #31
 8011a2a:	2b0b      	cmp	r3, #11
 8011a2c:	d10b      	bne.n	8011a46 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8011a2e:	8903      	ldrh	r3, [r0, #8]
 8011a30:	8940      	ldrh	r0, [r0, #10]
 8011a32:	4358      	muls	r0, r3
 8011a34:	4b09      	ldr	r3, [pc, #36]	; (8011a5c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8011a36:	6819      	ldr	r1, [r3, #0]
 8011a38:	3003      	adds	r0, #3
 8011a3a:	f020 0303 	bic.w	r3, r0, #3
 8011a3e:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8011a42:	4418      	add	r0, r3
 8011a44:	4770      	bx	lr
 8011a46:	2b0d      	cmp	r3, #13
 8011a48:	d101      	bne.n	8011a4e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8011a4a:	300d      	adds	r0, #13
 8011a4c:	4770      	bx	lr
 8011a4e:	2000      	movs	r0, #0
 8011a50:	4770      	bx	lr
 8011a52:	bf00      	nop
 8011a54:	20013630 	.word	0x20013630
 8011a58:	20013638 	.word	0x20013638
 8011a5c:	20013614 	.word	0x20013614
 8011a60:	20013634 	.word	0x20013634
 8011a64:	20013618 	.word	0x20013618

08011a68 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8011a68:	b510      	push	{r4, lr}
 8011a6a:	4a17      	ldr	r2, [pc, #92]	; (8011ac8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8011a6c:	8803      	ldrh	r3, [r0, #0]
 8011a6e:	8812      	ldrh	r2, [r2, #0]
 8011a70:	4293      	cmp	r3, r2
 8011a72:	d20c      	bcs.n	8011a8e <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8011a74:	4a15      	ldr	r2, [pc, #84]	; (8011acc <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8011a76:	6812      	ldr	r2, [r2, #0]
 8011a78:	2114      	movs	r1, #20
 8011a7a:	fb01 2303 	mla	r3, r1, r3, r2
 8011a7e:	7c58      	ldrb	r0, [r3, #17]
 8011a80:	0942      	lsrs	r2, r0, #5
 8011a82:	7cd8      	ldrb	r0, [r3, #19]
 8011a84:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8011a88:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8011a8c:	bd10      	pop	{r4, pc}
 8011a8e:	4910      	ldr	r1, [pc, #64]	; (8011ad0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8011a90:	8809      	ldrh	r1, [r1, #0]
 8011a92:	4411      	add	r1, r2
 8011a94:	428b      	cmp	r3, r1
 8011a96:	da09      	bge.n	8011aac <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8011a98:	1a9b      	subs	r3, r3, r2
 8011a9a:	4a0e      	ldr	r2, [pc, #56]	; (8011ad4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8011a9c:	6812      	ldr	r2, [r2, #0]
 8011a9e:	210e      	movs	r1, #14
 8011aa0:	fb01 2303 	mla	r3, r1, r3, r2
 8011aa4:	7b18      	ldrb	r0, [r3, #12]
 8011aa6:	f000 001f 	and.w	r0, r0, #31
 8011aaa:	e7ef      	b.n	8011a8c <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8011aac:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8011ab0:	4293      	cmp	r3, r2
 8011ab2:	d106      	bne.n	8011ac2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8011ab4:	f7f1 f80e 	bl	8002ad4 <_ZN8touchgfx3HAL3lcdEv>
 8011ab8:	6803      	ldr	r3, [r0, #0]
 8011aba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011abe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011ac0:	4718      	bx	r3
 8011ac2:	2000      	movs	r0, #0
 8011ac4:	e7e2      	b.n	8011a8c <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8011ac6:	bf00      	nop
 8011ac8:	20013630 	.word	0x20013630
 8011acc:	20013638 	.word	0x20013638
 8011ad0:	20013634 	.word	0x20013634
 8011ad4:	20013618 	.word	0x20013618

08011ad8 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8011ad8:	2010      	movs	r0, #16
 8011ada:	4770      	bx	lr

08011adc <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8011adc:	2000      	movs	r0, #0
 8011ade:	4770      	bx	lr

08011ae0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8011ae0:	4b02      	ldr	r3, [pc, #8]	; (8011aec <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8011ae2:	8818      	ldrh	r0, [r3, #0]
 8011ae4:	0040      	lsls	r0, r0, #1
 8011ae6:	b280      	uxth	r0, r0
 8011ae8:	4770      	bx	lr
 8011aea:	bf00      	nop
 8011aec:	200135aa 	.word	0x200135aa

08011af0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8011af0:	2bff      	cmp	r3, #255	; 0xff
 8011af2:	d050      	beq.n	8011b96 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8011af4:	2a0b      	cmp	r2, #11
 8011af6:	d04a      	beq.n	8011b8e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8011af8:	d80e      	bhi.n	8011b18 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8011afa:	2a03      	cmp	r2, #3
 8011afc:	d03f      	beq.n	8011b7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8011afe:	d804      	bhi.n	8011b0a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8011b00:	2a01      	cmp	r2, #1
 8011b02:	d03e      	beq.n	8011b82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8011b04:	d93f      	bls.n	8011b86 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8011b06:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8011b08:	4770      	bx	lr
 8011b0a:	2a09      	cmp	r2, #9
 8011b0c:	d03f      	beq.n	8011b8e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8011b0e:	d83c      	bhi.n	8011b8a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8011b10:	2a08      	cmp	r2, #8
 8011b12:	d03a      	beq.n	8011b8a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8011b14:	2000      	movs	r0, #0
 8011b16:	4770      	bx	lr
 8011b18:	2a2f      	cmp	r2, #47	; 0x2f
 8011b1a:	d024      	beq.n	8011b66 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8011b1c:	d80d      	bhi.n	8011b3a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8011b1e:	2a2d      	cmp	r2, #45	; 0x2d
 8011b20:	d014      	beq.n	8011b4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8011b22:	d826      	bhi.n	8011b72 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8011b24:	2a2c      	cmp	r2, #44	; 0x2c
 8011b26:	d1f5      	bne.n	8011b14 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011b28:	684b      	ldr	r3, [r1, #4]
 8011b2a:	781b      	ldrb	r3, [r3, #0]
 8011b2c:	2b01      	cmp	r3, #1
 8011b2e:	d018      	beq.n	8011b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8011b30:	d323      	bcc.n	8011b7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8011b32:	2b02      	cmp	r3, #2
 8011b34:	d1ee      	bne.n	8011b14 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011b36:	6880      	ldr	r0, [r0, #8]
 8011b38:	4770      	bx	lr
 8011b3a:	2a31      	cmp	r2, #49	; 0x31
 8011b3c:	d004      	beq.n	8011b48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8011b3e:	d328      	bcc.n	8011b92 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8011b40:	2a32      	cmp	r2, #50	; 0x32
 8011b42:	d026      	beq.n	8011b92 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8011b44:	2a33      	cmp	r2, #51	; 0x33
 8011b46:	d1e5      	bne.n	8011b14 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011b48:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8011b4a:	4770      	bx	lr
 8011b4c:	684b      	ldr	r3, [r1, #4]
 8011b4e:	781b      	ldrb	r3, [r3, #0]
 8011b50:	2b01      	cmp	r3, #1
 8011b52:	d004      	beq.n	8011b5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8011b54:	d30b      	bcc.n	8011b6e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8011b56:	2b02      	cmp	r3, #2
 8011b58:	d1dc      	bne.n	8011b14 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011b5a:	6900      	ldr	r0, [r0, #16]
 8011b5c:	4770      	bx	lr
 8011b5e:	6a00      	ldr	r0, [r0, #32]
 8011b60:	4770      	bx	lr
 8011b62:	6980      	ldr	r0, [r0, #24]
 8011b64:	4770      	bx	lr
 8011b66:	684b      	ldr	r3, [r1, #4]
 8011b68:	781b      	ldrb	r3, [r3, #0]
 8011b6a:	2b00      	cmp	r3, #0
 8011b6c:	d1d2      	bne.n	8011b14 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011b6e:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8011b70:	4770      	bx	lr
 8011b72:	684b      	ldr	r3, [r1, #4]
 8011b74:	781b      	ldrb	r3, [r3, #0]
 8011b76:	2b00      	cmp	r3, #0
 8011b78:	d1cc      	bne.n	8011b14 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011b7a:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8011b7c:	4770      	bx	lr
 8011b7e:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8011b80:	4770      	bx	lr
 8011b82:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8011b84:	4770      	bx	lr
 8011b86:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8011b88:	4770      	bx	lr
 8011b8a:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8011b8c:	4770      	bx	lr
 8011b8e:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8011b90:	4770      	bx	lr
 8011b92:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8011b94:	4770      	bx	lr
 8011b96:	2a0b      	cmp	r2, #11
 8011b98:	d049      	beq.n	8011c2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8011b9a:	d80e      	bhi.n	8011bba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8011b9c:	2a03      	cmp	r2, #3
 8011b9e:	d040      	beq.n	8011c22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8011ba0:	d804      	bhi.n	8011bac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8011ba2:	2a01      	cmp	r2, #1
 8011ba4:	d03f      	beq.n	8011c26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8011ba6:	d940      	bls.n	8011c2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8011ba8:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8011baa:	4770      	bx	lr
 8011bac:	2a09      	cmp	r2, #9
 8011bae:	d03e      	beq.n	8011c2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8011bb0:	d801      	bhi.n	8011bb6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8011bb2:	2a08      	cmp	r2, #8
 8011bb4:	d1ae      	bne.n	8011b14 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011bb6:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8011bb8:	4770      	bx	lr
 8011bba:	2a2f      	cmp	r2, #47	; 0x2f
 8011bbc:	d024      	beq.n	8011c08 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8011bbe:	d80d      	bhi.n	8011bdc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8011bc0:	2a2d      	cmp	r2, #45	; 0x2d
 8011bc2:	d014      	beq.n	8011bee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8011bc4:	d826      	bhi.n	8011c14 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8011bc6:	2a2c      	cmp	r2, #44	; 0x2c
 8011bc8:	d1a4      	bne.n	8011b14 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011bca:	684b      	ldr	r3, [r1, #4]
 8011bcc:	781b      	ldrb	r3, [r3, #0]
 8011bce:	2b01      	cmp	r3, #1
 8011bd0:	d018      	beq.n	8011c04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8011bd2:	d324      	bcc.n	8011c1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8011bd4:	2b02      	cmp	r3, #2
 8011bd6:	d19d      	bne.n	8011b14 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011bd8:	68c0      	ldr	r0, [r0, #12]
 8011bda:	4770      	bx	lr
 8011bdc:	2a31      	cmp	r2, #49	; 0x31
 8011bde:	d004      	beq.n	8011bea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8011be0:	d327      	bcc.n	8011c32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8011be2:	2a32      	cmp	r2, #50	; 0x32
 8011be4:	d025      	beq.n	8011c32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8011be6:	2a33      	cmp	r2, #51	; 0x33
 8011be8:	d194      	bne.n	8011b14 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011bea:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8011bec:	4770      	bx	lr
 8011bee:	684b      	ldr	r3, [r1, #4]
 8011bf0:	781b      	ldrb	r3, [r3, #0]
 8011bf2:	2b01      	cmp	r3, #1
 8011bf4:	d004      	beq.n	8011c00 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8011bf6:	d30b      	bcc.n	8011c10 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8011bf8:	2b02      	cmp	r3, #2
 8011bfa:	d18b      	bne.n	8011b14 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011bfc:	6940      	ldr	r0, [r0, #20]
 8011bfe:	4770      	bx	lr
 8011c00:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8011c02:	4770      	bx	lr
 8011c04:	69c0      	ldr	r0, [r0, #28]
 8011c06:	4770      	bx	lr
 8011c08:	684b      	ldr	r3, [r1, #4]
 8011c0a:	781b      	ldrb	r3, [r3, #0]
 8011c0c:	2b00      	cmp	r3, #0
 8011c0e:	d181      	bne.n	8011b14 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011c10:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8011c12:	4770      	bx	lr
 8011c14:	684b      	ldr	r3, [r1, #4]
 8011c16:	781b      	ldrb	r3, [r3, #0]
 8011c18:	2b00      	cmp	r3, #0
 8011c1a:	f47f af7b 	bne.w	8011b14 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011c1e:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8011c20:	4770      	bx	lr
 8011c22:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8011c24:	4770      	bx	lr
 8011c26:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8011c28:	4770      	bx	lr
 8011c2a:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8011c2c:	4770      	bx	lr
 8011c2e:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8011c30:	4770      	bx	lr
 8011c32:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8011c34:	4770      	bx	lr

08011c36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011c36:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011c3a:	b087      	sub	sp, #28
 8011c3c:	9815      	ldr	r0, [sp, #84]	; 0x54
 8011c3e:	9205      	str	r2, [sp, #20]
 8011c40:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8011c44:	9202      	str	r2, [sp, #8]
 8011c46:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8011c4a:	9101      	str	r1, [sp, #4]
 8011c4c:	6841      	ldr	r1, [r0, #4]
 8011c4e:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8011c52:	fb01 2404 	mla	r4, r1, r4, r2
 8011c56:	6802      	ldr	r2, [r0, #0]
 8011c58:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011c5c:	f8de 2000 	ldr.w	r2, [lr]
 8011c60:	9203      	str	r2, [sp, #12]
 8011c62:	f8de 2004 	ldr.w	r2, [lr, #4]
 8011c66:	3204      	adds	r2, #4
 8011c68:	9204      	str	r2, [sp, #16]
 8011c6a:	9a02      	ldr	r2, [sp, #8]
 8011c6c:	43d6      	mvns	r6, r2
 8011c6e:	b2f6      	uxtb	r6, r6
 8011c70:	9a01      	ldr	r2, [sp, #4]
 8011c72:	2a00      	cmp	r2, #0
 8011c74:	dc03      	bgt.n	8011c7e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8011c76:	9a05      	ldr	r2, [sp, #20]
 8011c78:	2a00      	cmp	r2, #0
 8011c7a:	f340 8129 	ble.w	8011ed0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8011c7e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011c80:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8011c84:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8011c88:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011c8c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011c8e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011c92:	2b00      	cmp	r3, #0
 8011c94:	dd0e      	ble.n	8011cb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8011c96:	1408      	asrs	r0, r1, #16
 8011c98:	d405      	bmi.n	8011ca6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011c9a:	4560      	cmp	r0, ip
 8011c9c:	da03      	bge.n	8011ca6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011c9e:	1410      	asrs	r0, r2, #16
 8011ca0:	d401      	bmi.n	8011ca6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011ca2:	42b8      	cmp	r0, r7
 8011ca4:	db07      	blt.n	8011cb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8011ca6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8011ca8:	4401      	add	r1, r0
 8011caa:	9814      	ldr	r0, [sp, #80]	; 0x50
 8011cac:	3b01      	subs	r3, #1
 8011cae:	4402      	add	r2, r0
 8011cb0:	3402      	adds	r4, #2
 8011cb2:	e7ee      	b.n	8011c92 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8011cb4:	d071      	beq.n	8011d9a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011cb6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011cb8:	1e58      	subs	r0, r3, #1
 8011cba:	fb05 1500 	mla	r5, r5, r0, r1
 8011cbe:	142d      	asrs	r5, r5, #16
 8011cc0:	d45f      	bmi.n	8011d82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8011cc2:	4565      	cmp	r5, ip
 8011cc4:	da5d      	bge.n	8011d82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8011cc6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011cc8:	fb05 2000 	mla	r0, r5, r0, r2
 8011ccc:	1400      	asrs	r0, r0, #16
 8011cce:	d458      	bmi.n	8011d82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8011cd0:	42b8      	cmp	r0, r7
 8011cd2:	da56      	bge.n	8011d82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8011cd4:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8011cd8:	4699      	mov	r9, r3
 8011cda:	46a2      	mov	sl, r4
 8011cdc:	f1b9 0f00 	cmp.w	r9, #0
 8011ce0:	dd57      	ble.n	8011d92 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8011ce2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8011ce6:	9803      	ldr	r0, [sp, #12]
 8011ce8:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8011cec:	140d      	asrs	r5, r1, #16
 8011cee:	fb07 000c 	mla	r0, r7, ip, r0
 8011cf2:	f109 39ff 	add.w	r9, r9, #4294967295
 8011cf6:	5d40      	ldrb	r0, [r0, r5]
 8011cf8:	9d04      	ldr	r5, [sp, #16]
 8011cfa:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8011cfe:	f8ba 5000 	ldrh.w	r5, [sl]
 8011d02:	122f      	asrs	r7, r5, #8
 8011d04:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8011d08:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011d0c:	fb17 f706 	smulbb	r7, r7, r6
 8011d10:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8011d14:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011d18:	00ed      	lsls	r5, r5, #3
 8011d1a:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8011d1e:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8011d22:	10c7      	asrs	r7, r0, #3
 8011d24:	b2ed      	uxtb	r5, r5
 8011d26:	00c0      	lsls	r0, r0, #3
 8011d28:	fb18 f806 	smulbb	r8, r8, r6
 8011d2c:	fb15 f506 	smulbb	r5, r5, r6
 8011d30:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011d34:	b2c0      	uxtb	r0, r0
 8011d36:	fa1f fc8c 	uxth.w	ip, ip
 8011d3a:	fb07 870b 	mla	r7, r7, fp, r8
 8011d3e:	fb00 500b 	mla	r0, r0, fp, r5
 8011d42:	b280      	uxth	r0, r0
 8011d44:	b2bf      	uxth	r7, r7
 8011d46:	f10c 0501 	add.w	r5, ip, #1
 8011d4a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011d4e:	f107 0801 	add.w	r8, r7, #1
 8011d52:	1c45      	adds	r5, r0, #1
 8011d54:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8011d58:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8011d5c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8011d5e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011d62:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8011d66:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8011d6a:	ea45 0c0c 	orr.w	ip, r5, ip
 8011d6e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8011d72:	4401      	add	r1, r0
 8011d74:	9814      	ldr	r0, [sp, #80]	; 0x50
 8011d76:	ea4c 0c08 	orr.w	ip, ip, r8
 8011d7a:	f82a cb02 	strh.w	ip, [sl], #2
 8011d7e:	4402      	add	r2, r0
 8011d80:	e7ac      	b.n	8011cdc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8011d82:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8011d86:	f04f 0800 	mov.w	r8, #0
 8011d8a:	eb03 0008 	add.w	r0, r3, r8
 8011d8e:	2800      	cmp	r0, #0
 8011d90:	dc41      	bgt.n	8011e16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8011d92:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011d96:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011d9a:	9b01      	ldr	r3, [sp, #4]
 8011d9c:	2b00      	cmp	r3, #0
 8011d9e:	f340 8097 	ble.w	8011ed0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8011da2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011da6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8011daa:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8011dae:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011db0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011db4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011db8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011dbc:	eef0 6a62 	vmov.f32	s13, s5
 8011dc0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011dc4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011dc8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011dcc:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8011dd0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011dd4:	eef0 6a43 	vmov.f32	s13, s6
 8011dd8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011ddc:	ee12 2a90 	vmov	r2, s5
 8011de0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011de4:	fb92 f3f3 	sdiv	r3, r2, r3
 8011de8:	ee13 2a10 	vmov	r2, s6
 8011dec:	9313      	str	r3, [sp, #76]	; 0x4c
 8011dee:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011df0:	fb92 f3f3 	sdiv	r3, r2, r3
 8011df4:	9314      	str	r3, [sp, #80]	; 0x50
 8011df6:	9b01      	ldr	r3, [sp, #4]
 8011df8:	9a05      	ldr	r2, [sp, #20]
 8011dfa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011dfe:	3b01      	subs	r3, #1
 8011e00:	9301      	str	r3, [sp, #4]
 8011e02:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8011e06:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011e08:	eeb0 3a67 	vmov.f32	s6, s15
 8011e0c:	bf08      	it	eq
 8011e0e:	4613      	moveq	r3, r2
 8011e10:	eef0 2a47 	vmov.f32	s5, s14
 8011e14:	e72c      	b.n	8011c70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8011e16:	140f      	asrs	r7, r1, #16
 8011e18:	d453      	bmi.n	8011ec2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8011e1a:	f8de 5008 	ldr.w	r5, [lr, #8]
 8011e1e:	42bd      	cmp	r5, r7
 8011e20:	dd4f      	ble.n	8011ec2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8011e22:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8011e26:	d44c      	bmi.n	8011ec2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8011e28:	f8de 000c 	ldr.w	r0, [lr, #12]
 8011e2c:	4560      	cmp	r0, ip
 8011e2e:	dd48      	ble.n	8011ec2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8011e30:	9803      	ldr	r0, [sp, #12]
 8011e32:	b22d      	sxth	r5, r5
 8011e34:	fb0c 0505 	mla	r5, ip, r5, r0
 8011e38:	5de8      	ldrb	r0, [r5, r7]
 8011e3a:	9d04      	ldr	r5, [sp, #16]
 8011e3c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8011e40:	f06f 0501 	mvn.w	r5, #1
 8011e44:	fb05 fb08 	mul.w	fp, r5, r8
 8011e48:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8011e4c:	f834 500b 	ldrh.w	r5, [r4, fp]
 8011e50:	122f      	asrs	r7, r5, #8
 8011e52:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011e56:	fb17 f706 	smulbb	r7, r7, r6
 8011e5a:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8011e5e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011e62:	00ed      	lsls	r5, r5, #3
 8011e64:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8011e68:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8011e6c:	10c7      	asrs	r7, r0, #3
 8011e6e:	b2ed      	uxtb	r5, r5
 8011e70:	00c0      	lsls	r0, r0, #3
 8011e72:	fb19 f906 	smulbb	r9, r9, r6
 8011e76:	fb15 f506 	smulbb	r5, r5, r6
 8011e7a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011e7e:	b2c0      	uxtb	r0, r0
 8011e80:	fa1f fc8c 	uxth.w	ip, ip
 8011e84:	fb07 970a 	mla	r7, r7, sl, r9
 8011e88:	fb00 500a 	mla	r0, r0, sl, r5
 8011e8c:	b2bf      	uxth	r7, r7
 8011e8e:	b280      	uxth	r0, r0
 8011e90:	f10c 0501 	add.w	r5, ip, #1
 8011e94:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011e98:	f107 0901 	add.w	r9, r7, #1
 8011e9c:	1c45      	adds	r5, r0, #1
 8011e9e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8011ea2:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8011ea6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011eaa:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8011eae:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8011eb2:	ea45 0c0c 	orr.w	ip, r5, ip
 8011eb6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8011eba:	ea4c 0c09 	orr.w	ip, ip, r9
 8011ebe:	f824 c00b 	strh.w	ip, [r4, fp]
 8011ec2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8011ec4:	4401      	add	r1, r0
 8011ec6:	9814      	ldr	r0, [sp, #80]	; 0x50
 8011ec8:	f108 38ff 	add.w	r8, r8, #4294967295
 8011ecc:	4402      	add	r2, r0
 8011ece:	e75c      	b.n	8011d8a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8011ed0:	b007      	add	sp, #28
 8011ed2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011ed6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011ed6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011eda:	b085      	sub	sp, #20
 8011edc:	4693      	mov	fp, r2
 8011ede:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8011ee0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8011ee2:	6870      	ldr	r0, [r6, #4]
 8011ee4:	9100      	str	r1, [sp, #0]
 8011ee6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8011eea:	fb00 2404 	mla	r4, r0, r4, r2
 8011eee:	6832      	ldr	r2, [r6, #0]
 8011ef0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011ef4:	682a      	ldr	r2, [r5, #0]
 8011ef6:	9201      	str	r2, [sp, #4]
 8011ef8:	686a      	ldr	r2, [r5, #4]
 8011efa:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8011efe:	3204      	adds	r2, #4
 8011f00:	9202      	str	r2, [sp, #8]
 8011f02:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011f06:	9a00      	ldr	r2, [sp, #0]
 8011f08:	2a00      	cmp	r2, #0
 8011f0a:	dc03      	bgt.n	8011f14 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8011f0c:	f1bb 0f00 	cmp.w	fp, #0
 8011f10:	f340 80a0 	ble.w	8012054 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8011f14:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8011f16:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8011f1a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8011f1e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011f22:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011f24:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011f28:	2b00      	cmp	r3, #0
 8011f2a:	dd0c      	ble.n	8011f46 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011f2c:	1406      	asrs	r6, r0, #16
 8011f2e:	d405      	bmi.n	8011f3c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011f30:	454e      	cmp	r6, r9
 8011f32:	da03      	bge.n	8011f3c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011f34:	1416      	asrs	r6, r2, #16
 8011f36:	d401      	bmi.n	8011f3c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011f38:	4546      	cmp	r6, r8
 8011f3a:	db05      	blt.n	8011f48 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011f3c:	4470      	add	r0, lr
 8011f3e:	4462      	add	r2, ip
 8011f40:	3b01      	subs	r3, #1
 8011f42:	3402      	adds	r4, #2
 8011f44:	e7f0      	b.n	8011f28 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8011f46:	d00f      	beq.n	8011f68 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8011f48:	1e5e      	subs	r6, r3, #1
 8011f4a:	fb0e 0706 	mla	r7, lr, r6, r0
 8011f4e:	143f      	asrs	r7, r7, #16
 8011f50:	d541      	bpl.n	8011fd6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8011f52:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8011f56:	4698      	mov	r8, r3
 8011f58:	9603      	str	r6, [sp, #12]
 8011f5a:	f1b8 0f00 	cmp.w	r8, #0
 8011f5e:	dc59      	bgt.n	8012014 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8011f60:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011f64:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011f68:	9b00      	ldr	r3, [sp, #0]
 8011f6a:	2b00      	cmp	r3, #0
 8011f6c:	dd72      	ble.n	8012054 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8011f6e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011f72:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011f76:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011f7a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011f7c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011f80:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011f84:	eeb0 6a62 	vmov.f32	s12, s5
 8011f88:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011f8c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011f90:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011f94:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8011f98:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011f9c:	eeb0 6a43 	vmov.f32	s12, s6
 8011fa0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011fa4:	ee12 2a90 	vmov	r2, s5
 8011fa8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011fac:	fb92 fef3 	sdiv	lr, r2, r3
 8011fb0:	ee13 2a10 	vmov	r2, s6
 8011fb4:	fb92 fcf3 	sdiv	ip, r2, r3
 8011fb8:	9b00      	ldr	r3, [sp, #0]
 8011fba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011fbe:	3b01      	subs	r3, #1
 8011fc0:	9300      	str	r3, [sp, #0]
 8011fc2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8011fc6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011fc8:	eeb0 3a67 	vmov.f32	s6, s15
 8011fcc:	bf08      	it	eq
 8011fce:	465b      	moveq	r3, fp
 8011fd0:	eef0 2a47 	vmov.f32	s5, s14
 8011fd4:	e797      	b.n	8011f06 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8011fd6:	454f      	cmp	r7, r9
 8011fd8:	dabb      	bge.n	8011f52 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8011fda:	fb0c 2606 	mla	r6, ip, r6, r2
 8011fde:	1436      	asrs	r6, r6, #16
 8011fe0:	d4b7      	bmi.n	8011f52 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8011fe2:	4546      	cmp	r6, r8
 8011fe4:	dab5      	bge.n	8011f52 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8011fe6:	461e      	mov	r6, r3
 8011fe8:	46a0      	mov	r8, r4
 8011fea:	2e00      	cmp	r6, #0
 8011fec:	ddb8      	ble.n	8011f60 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8011fee:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8011ff2:	9901      	ldr	r1, [sp, #4]
 8011ff4:	1417      	asrs	r7, r2, #16
 8011ff6:	ea4f 4920 	mov.w	r9, r0, asr #16
 8011ffa:	fb0a 1707 	mla	r7, sl, r7, r1
 8011ffe:	9902      	ldr	r1, [sp, #8]
 8012000:	f817 7009 	ldrb.w	r7, [r7, r9]
 8012004:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8012008:	f828 7b02 	strh.w	r7, [r8], #2
 801200c:	4470      	add	r0, lr
 801200e:	4462      	add	r2, ip
 8012010:	3e01      	subs	r6, #1
 8012012:	e7ea      	b.n	8011fea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8012014:	ea5f 4920 	movs.w	r9, r0, asr #16
 8012018:	d417      	bmi.n	801204a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801201a:	68ae      	ldr	r6, [r5, #8]
 801201c:	454e      	cmp	r6, r9
 801201e:	dd14      	ble.n	801204a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8012020:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8012024:	d411      	bmi.n	801204a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8012026:	68ef      	ldr	r7, [r5, #12]
 8012028:	4557      	cmp	r7, sl
 801202a:	dd0e      	ble.n	801204a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801202c:	9f01      	ldr	r7, [sp, #4]
 801202e:	b236      	sxth	r6, r6
 8012030:	fb0a 7606 	mla	r6, sl, r6, r7
 8012034:	9f02      	ldr	r7, [sp, #8]
 8012036:	f816 6009 	ldrb.w	r6, [r6, r9]
 801203a:	f06f 0101 	mvn.w	r1, #1
 801203e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8012042:	fb01 f608 	mul.w	r6, r1, r8
 8012046:	9903      	ldr	r1, [sp, #12]
 8012048:	538f      	strh	r7, [r1, r6]
 801204a:	4470      	add	r0, lr
 801204c:	4462      	add	r2, ip
 801204e:	f108 38ff 	add.w	r8, r8, #4294967295
 8012052:	e782      	b.n	8011f5a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8012054:	b005      	add	sp, #20
 8012056:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801205a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801205a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801205e:	b087      	sub	sp, #28
 8012060:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8012062:	9205      	str	r2, [sp, #20]
 8012064:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8012068:	9203      	str	r2, [sp, #12]
 801206a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801206e:	9102      	str	r1, [sp, #8]
 8012070:	6861      	ldr	r1, [r4, #4]
 8012072:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8012076:	fb01 2000 	mla	r0, r1, r0, r2
 801207a:	6822      	ldr	r2, [r4, #0]
 801207c:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8012080:	9200      	str	r2, [sp, #0]
 8012082:	f8dc 2000 	ldr.w	r2, [ip]
 8012086:	9204      	str	r2, [sp, #16]
 8012088:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801208c:	3204      	adds	r2, #4
 801208e:	9201      	str	r2, [sp, #4]
 8012090:	9a03      	ldr	r2, [sp, #12]
 8012092:	43d5      	mvns	r5, r2
 8012094:	b2ed      	uxtb	r5, r5
 8012096:	9a02      	ldr	r2, [sp, #8]
 8012098:	2a00      	cmp	r2, #0
 801209a:	dc03      	bgt.n	80120a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801209c:	9a05      	ldr	r2, [sp, #20]
 801209e:	2a00      	cmp	r2, #0
 80120a0:	f340 812c 	ble.w	80122fc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80120a4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80120a6:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 80120aa:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 80120ae:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80120b2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80120b4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80120b8:	2b00      	cmp	r3, #0
 80120ba:	dd10      	ble.n	80120de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80120bc:	140c      	asrs	r4, r1, #16
 80120be:	d405      	bmi.n	80120cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80120c0:	4574      	cmp	r4, lr
 80120c2:	da03      	bge.n	80120cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80120c4:	1414      	asrs	r4, r2, #16
 80120c6:	d401      	bmi.n	80120cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80120c8:	42bc      	cmp	r4, r7
 80120ca:	db09      	blt.n	80120e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80120cc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80120ce:	9800      	ldr	r0, [sp, #0]
 80120d0:	4421      	add	r1, r4
 80120d2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80120d4:	3002      	adds	r0, #2
 80120d6:	4422      	add	r2, r4
 80120d8:	3b01      	subs	r3, #1
 80120da:	9000      	str	r0, [sp, #0]
 80120dc:	e7ec      	b.n	80120b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80120de:	d071      	beq.n	80121c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 80120e0:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80120e2:	1e5c      	subs	r4, r3, #1
 80120e4:	fb06 1604 	mla	r6, r6, r4, r1
 80120e8:	1436      	asrs	r6, r6, #16
 80120ea:	d45d      	bmi.n	80121a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80120ec:	4576      	cmp	r6, lr
 80120ee:	da5b      	bge.n	80121a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80120f0:	9e14      	ldr	r6, [sp, #80]	; 0x50
 80120f2:	fb06 2404 	mla	r4, r6, r4, r2
 80120f6:	1424      	asrs	r4, r4, #16
 80120f8:	d456      	bmi.n	80121a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80120fa:	42bc      	cmp	r4, r7
 80120fc:	da54      	bge.n	80121a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80120fe:	f8dd 9000 	ldr.w	r9, [sp]
 8012102:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8012106:	4698      	mov	r8, r3
 8012108:	f1b8 0f00 	cmp.w	r8, #0
 801210c:	dd54      	ble.n	80121b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801210e:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8012112:	9804      	ldr	r0, [sp, #16]
 8012114:	1414      	asrs	r4, r2, #16
 8012116:	fb07 0404 	mla	r4, r7, r4, r0
 801211a:	140e      	asrs	r6, r1, #16
 801211c:	9801      	ldr	r0, [sp, #4]
 801211e:	f814 e006 	ldrb.w	lr, [r4, r6]
 8012122:	f8b9 4000 	ldrh.w	r4, [r9]
 8012126:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801212a:	eb00 0b0e 	add.w	fp, r0, lr
 801212e:	1227      	asrs	r7, r4, #8
 8012130:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8012134:	f89b b001 	ldrb.w	fp, [fp, #1]
 8012138:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801213c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801213e:	fb16 f60a 	smulbb	r6, r6, sl
 8012142:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012146:	fb07 6705 	mla	r7, r7, r5, r6
 801214a:	10e6      	asrs	r6, r4, #3
 801214c:	00e4      	lsls	r4, r4, #3
 801214e:	b2e4      	uxtb	r4, r4
 8012150:	fb1b fb0a 	smulbb	fp, fp, sl
 8012154:	fb14 f405 	smulbb	r4, r4, r5
 8012158:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801215c:	b2bf      	uxth	r7, r7
 801215e:	fb06 b605 	mla	r6, r6, r5, fp
 8012162:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8012166:	b2b6      	uxth	r6, r6
 8012168:	fa1f fe8e 	uxth.w	lr, lr
 801216c:	1c7c      	adds	r4, r7, #1
 801216e:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8012172:	f106 0b01 	add.w	fp, r6, #1
 8012176:	f10e 0401 	add.w	r4, lr, #1
 801217a:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801217e:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8012182:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8012186:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801218a:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801218e:	4327      	orrs	r7, r4
 8012190:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8012194:	4401      	add	r1, r0
 8012196:	9814      	ldr	r0, [sp, #80]	; 0x50
 8012198:	ea47 070b 	orr.w	r7, r7, fp
 801219c:	f829 7b02 	strh.w	r7, [r9], #2
 80121a0:	4402      	add	r2, r0
 80121a2:	f108 38ff 	add.w	r8, r8, #4294967295
 80121a6:	e7af      	b.n	8012108 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80121a8:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 80121ac:	f04f 0e00 	mov.w	lr, #0
 80121b0:	eb03 040e 	add.w	r4, r3, lr
 80121b4:	2c00      	cmp	r4, #0
 80121b6:	dc43      	bgt.n	8012240 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80121b8:	9a00      	ldr	r2, [sp, #0]
 80121ba:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80121be:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80121c2:	9300      	str	r3, [sp, #0]
 80121c4:	9b02      	ldr	r3, [sp, #8]
 80121c6:	2b00      	cmp	r3, #0
 80121c8:	f340 8098 	ble.w	80122fc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80121cc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80121d0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80121d4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80121d8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80121da:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80121de:	ee31 1a05 	vadd.f32	s2, s2, s10
 80121e2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80121e6:	eef0 6a62 	vmov.f32	s13, s5
 80121ea:	ee61 7a27 	vmul.f32	s15, s2, s15
 80121ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80121f2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80121f6:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 80121fa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80121fe:	eef0 6a43 	vmov.f32	s13, s6
 8012202:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012206:	ee12 2a90 	vmov	r2, s5
 801220a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801220e:	fb92 f3f3 	sdiv	r3, r2, r3
 8012212:	ee13 2a10 	vmov	r2, s6
 8012216:	9313      	str	r3, [sp, #76]	; 0x4c
 8012218:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801221a:	fb92 f3f3 	sdiv	r3, r2, r3
 801221e:	9314      	str	r3, [sp, #80]	; 0x50
 8012220:	9b02      	ldr	r3, [sp, #8]
 8012222:	9a05      	ldr	r2, [sp, #20]
 8012224:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012228:	3b01      	subs	r3, #1
 801222a:	9302      	str	r3, [sp, #8]
 801222c:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8012230:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012232:	eeb0 3a67 	vmov.f32	s6, s15
 8012236:	bf08      	it	eq
 8012238:	4613      	moveq	r3, r2
 801223a:	eef0 2a47 	vmov.f32	s5, s14
 801223e:	e72a      	b.n	8012096 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8012240:	140f      	asrs	r7, r1, #16
 8012242:	d454      	bmi.n	80122ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8012244:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8012248:	42be      	cmp	r6, r7
 801224a:	dd50      	ble.n	80122ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801224c:	ea5f 4822 	movs.w	r8, r2, asr #16
 8012250:	d44d      	bmi.n	80122ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8012252:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8012256:	4544      	cmp	r4, r8
 8012258:	dd49      	ble.n	80122ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801225a:	9c04      	ldr	r4, [sp, #16]
 801225c:	b236      	sxth	r6, r6
 801225e:	fb08 4606 	mla	r6, r8, r6, r4
 8012262:	f06f 0001 	mvn.w	r0, #1
 8012266:	f816 8007 	ldrb.w	r8, [r6, r7]
 801226a:	9c01      	ldr	r4, [sp, #4]
 801226c:	fb00 fa0e 	mul.w	sl, r0, lr
 8012270:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8012274:	9800      	ldr	r0, [sp, #0]
 8012276:	eb04 0b08 	add.w	fp, r4, r8
 801227a:	f830 400a 	ldrh.w	r4, [r0, sl]
 801227e:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8012282:	9801      	ldr	r0, [sp, #4]
 8012284:	f89b b001 	ldrb.w	fp, [fp, #1]
 8012288:	f810 8008 	ldrb.w	r8, [r0, r8]
 801228c:	9800      	ldr	r0, [sp, #0]
 801228e:	1227      	asrs	r7, r4, #8
 8012290:	fb16 f609 	smulbb	r6, r6, r9
 8012294:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012298:	fb07 6705 	mla	r7, r7, r5, r6
 801229c:	10e6      	asrs	r6, r4, #3
 801229e:	00e4      	lsls	r4, r4, #3
 80122a0:	b2e4      	uxtb	r4, r4
 80122a2:	fb1b fb09 	smulbb	fp, fp, r9
 80122a6:	fb14 f405 	smulbb	r4, r4, r5
 80122aa:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80122ae:	b2bf      	uxth	r7, r7
 80122b0:	fb06 b605 	mla	r6, r6, r5, fp
 80122b4:	fb08 4809 	mla	r8, r8, r9, r4
 80122b8:	b2b6      	uxth	r6, r6
 80122ba:	fa1f f888 	uxth.w	r8, r8
 80122be:	1c7c      	adds	r4, r7, #1
 80122c0:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80122c4:	f106 0b01 	add.w	fp, r6, #1
 80122c8:	f108 0401 	add.w	r4, r8, #1
 80122cc:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 80122d0:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80122d4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80122d8:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80122dc:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80122e0:	4327      	orrs	r7, r4
 80122e2:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80122e6:	ea47 070b 	orr.w	r7, r7, fp
 80122ea:	f820 700a 	strh.w	r7, [r0, sl]
 80122ee:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80122f0:	4401      	add	r1, r0
 80122f2:	9814      	ldr	r0, [sp, #80]	; 0x50
 80122f4:	f10e 3eff 	add.w	lr, lr, #4294967295
 80122f8:	4402      	add	r2, r0
 80122fa:	e759      	b.n	80121b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80122fc:	b007      	add	sp, #28
 80122fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08012304 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012304:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012308:	b085      	sub	sp, #20
 801230a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801230e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8012310:	9203      	str	r2, [sp, #12]
 8012312:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8012316:	6870      	ldr	r0, [r6, #4]
 8012318:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801231a:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801231e:	686f      	ldr	r7, [r5, #4]
 8012320:	9101      	str	r1, [sp, #4]
 8012322:	fb00 2404 	mla	r4, r0, r4, r2
 8012326:	6832      	ldr	r2, [r6, #0]
 8012328:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801232c:	682a      	ldr	r2, [r5, #0]
 801232e:	9202      	str	r2, [sp, #8]
 8012330:	3704      	adds	r7, #4
 8012332:	9a01      	ldr	r2, [sp, #4]
 8012334:	2a00      	cmp	r2, #0
 8012336:	dc03      	bgt.n	8012340 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8012338:	9a03      	ldr	r2, [sp, #12]
 801233a:	2a00      	cmp	r2, #0
 801233c:	f340 80cc 	ble.w	80124d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8012340:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8012342:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8012346:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801234a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801234e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8012350:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8012354:	2b00      	cmp	r3, #0
 8012356:	dd0d      	ble.n	8012374 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012358:	1406      	asrs	r6, r0, #16
 801235a:	d405      	bmi.n	8012368 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801235c:	454e      	cmp	r6, r9
 801235e:	da03      	bge.n	8012368 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8012360:	1416      	asrs	r6, r2, #16
 8012362:	d401      	bmi.n	8012368 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8012364:	4546      	cmp	r6, r8
 8012366:	db06      	blt.n	8012376 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8012368:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801236a:	4460      	add	r0, ip
 801236c:	4432      	add	r2, r6
 801236e:	3b01      	subs	r3, #1
 8012370:	3402      	adds	r4, #2
 8012372:	e7ef      	b.n	8012354 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8012374:	d00f      	beq.n	8012396 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8012376:	1e5e      	subs	r6, r3, #1
 8012378:	fb0c 0e06 	mla	lr, ip, r6, r0
 801237c:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8012380:	d543      	bpl.n	801240a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8012382:	4698      	mov	r8, r3
 8012384:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8012388:	f1b8 0f00 	cmp.w	r8, #0
 801238c:	dc71      	bgt.n	8012472 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801238e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012392:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012396:	9b01      	ldr	r3, [sp, #4]
 8012398:	2b00      	cmp	r3, #0
 801239a:	f340 809d 	ble.w	80124d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801239e:	ee30 0a04 	vadd.f32	s0, s0, s8
 80123a2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80123a6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80123aa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80123ac:	ee31 1a05 	vadd.f32	s2, s2, s10
 80123b0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80123b4:	eeb0 6a62 	vmov.f32	s12, s5
 80123b8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80123bc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80123c0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80123c4:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80123c8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80123cc:	eeb0 6a43 	vmov.f32	s12, s6
 80123d0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80123d4:	ee12 2a90 	vmov	r2, s5
 80123d8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80123dc:	fb92 fcf3 	sdiv	ip, r2, r3
 80123e0:	ee13 2a10 	vmov	r2, s6
 80123e4:	fb92 f3f3 	sdiv	r3, r2, r3
 80123e8:	9312      	str	r3, [sp, #72]	; 0x48
 80123ea:	9b01      	ldr	r3, [sp, #4]
 80123ec:	9a03      	ldr	r2, [sp, #12]
 80123ee:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80123f2:	3b01      	subs	r3, #1
 80123f4:	9301      	str	r3, [sp, #4]
 80123f6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80123fa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80123fc:	eeb0 3a67 	vmov.f32	s6, s15
 8012400:	bf08      	it	eq
 8012402:	4613      	moveq	r3, r2
 8012404:	eef0 2a47 	vmov.f32	s5, s14
 8012408:	e793      	b.n	8012332 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801240a:	45ce      	cmp	lr, r9
 801240c:	dab9      	bge.n	8012382 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801240e:	9912      	ldr	r1, [sp, #72]	; 0x48
 8012410:	fb01 2606 	mla	r6, r1, r6, r2
 8012414:	1436      	asrs	r6, r6, #16
 8012416:	d4b4      	bmi.n	8012382 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8012418:	4546      	cmp	r6, r8
 801241a:	dab2      	bge.n	8012382 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801241c:	4698      	mov	r8, r3
 801241e:	46a2      	mov	sl, r4
 8012420:	f1b8 0f00 	cmp.w	r8, #0
 8012424:	ddb3      	ble.n	801238e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8012426:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801242a:	9902      	ldr	r1, [sp, #8]
 801242c:	1416      	asrs	r6, r2, #16
 801242e:	fb09 1606 	mla	r6, r9, r6, r1
 8012432:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8012436:	492a      	ldr	r1, [pc, #168]	; (80124e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8012438:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801243c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8012440:	eb07 0b0e 	add.w	fp, r7, lr
 8012444:	4460      	add	r0, ip
 8012446:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801244a:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801244e:	00f6      	lsls	r6, r6, #3
 8012450:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8012454:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8012458:	ea49 0606 	orr.w	r6, r9, r6
 801245c:	f817 900e 	ldrb.w	r9, [r7, lr]
 8012460:	9912      	ldr	r1, [sp, #72]	; 0x48
 8012462:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8012466:	f82a 6b02 	strh.w	r6, [sl], #2
 801246a:	440a      	add	r2, r1
 801246c:	f108 38ff 	add.w	r8, r8, #4294967295
 8012470:	e7d6      	b.n	8012420 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8012472:	ea5f 4920 	movs.w	r9, r0, asr #16
 8012476:	d429      	bmi.n	80124cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8012478:	68ae      	ldr	r6, [r5, #8]
 801247a:	454e      	cmp	r6, r9
 801247c:	dd26      	ble.n	80124cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801247e:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8012482:	d423      	bmi.n	80124cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8012484:	68e9      	ldr	r1, [r5, #12]
 8012486:	4559      	cmp	r1, fp
 8012488:	dd20      	ble.n	80124cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801248a:	9902      	ldr	r1, [sp, #8]
 801248c:	fa0f fe86 	sxth.w	lr, r6
 8012490:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8012494:	f06f 0101 	mvn.w	r1, #1
 8012498:	f81e e009 	ldrb.w	lr, [lr, r9]
 801249c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80124a0:	eb07 060e 	add.w	r6, r7, lr
 80124a4:	fb01 f908 	mul.w	r9, r1, r8
 80124a8:	f896 b002 	ldrb.w	fp, [r6, #2]
 80124ac:	7876      	ldrb	r6, [r6, #1]
 80124ae:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 80124b2:	00f6      	lsls	r6, r6, #3
 80124b4:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 80124b8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80124bc:	ea4b 0606 	orr.w	r6, fp, r6
 80124c0:	f817 b00e 	ldrb.w	fp, [r7, lr]
 80124c4:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 80124c8:	f82a 6009 	strh.w	r6, [sl, r9]
 80124cc:	9912      	ldr	r1, [sp, #72]	; 0x48
 80124ce:	4460      	add	r0, ip
 80124d0:	440a      	add	r2, r1
 80124d2:	f108 38ff 	add.w	r8, r8, #4294967295
 80124d6:	e757      	b.n	8012388 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80124d8:	b005      	add	sp, #20
 80124da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80124de:	bf00      	nop
 80124e0:	fffff800 	.word	0xfffff800

080124e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80124e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80124e8:	b087      	sub	sp, #28
 80124ea:	468b      	mov	fp, r1
 80124ec:	9815      	ldr	r0, [sp, #84]	; 0x54
 80124ee:	9204      	str	r2, [sp, #16]
 80124f0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80124f4:	9205      	str	r2, [sp, #20]
 80124f6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80124fa:	6841      	ldr	r1, [r0, #4]
 80124fc:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8012500:	fb01 2404 	mla	r4, r1, r4, r2
 8012504:	6802      	ldr	r2, [r0, #0]
 8012506:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801250a:	f8dc 2000 	ldr.w	r2, [ip]
 801250e:	9201      	str	r2, [sp, #4]
 8012510:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8012514:	3204      	adds	r2, #4
 8012516:	9202      	str	r2, [sp, #8]
 8012518:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801251c:	f1bb 0f00 	cmp.w	fp, #0
 8012520:	dc03      	bgt.n	801252a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8012522:	9a04      	ldr	r2, [sp, #16]
 8012524:	2a00      	cmp	r2, #0
 8012526:	f340 8138 	ble.w	801279a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801252a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801252c:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8012530:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8012534:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8012538:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801253a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801253e:	2b00      	cmp	r3, #0
 8012540:	dd0e      	ble.n	8012560 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8012542:	1402      	asrs	r2, r0, #16
 8012544:	d405      	bmi.n	8012552 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8012546:	42ba      	cmp	r2, r7
 8012548:	da03      	bge.n	8012552 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801254a:	140a      	asrs	r2, r1, #16
 801254c:	d401      	bmi.n	8012552 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801254e:	42b2      	cmp	r2, r6
 8012550:	db07      	blt.n	8012562 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8012552:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012554:	4410      	add	r0, r2
 8012556:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012558:	3b01      	subs	r3, #1
 801255a:	4411      	add	r1, r2
 801255c:	3402      	adds	r4, #2
 801255e:	e7ee      	b.n	801253e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8012560:	d019      	beq.n	8012596 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8012562:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8012564:	1e5a      	subs	r2, r3, #1
 8012566:	fb05 0502 	mla	r5, r5, r2, r0
 801256a:	142d      	asrs	r5, r5, #16
 801256c:	d409      	bmi.n	8012582 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801256e:	42bd      	cmp	r5, r7
 8012570:	da07      	bge.n	8012582 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8012572:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8012574:	fb05 1202 	mla	r2, r5, r2, r1
 8012578:	1412      	asrs	r2, r2, #16
 801257a:	d402      	bmi.n	8012582 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801257c:	42b2      	cmp	r2, r6
 801257e:	f2c0 80ac 	blt.w	80126da <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8012582:	f04f 0e00 	mov.w	lr, #0
 8012586:	eb03 020e 	add.w	r2, r3, lr
 801258a:	2a00      	cmp	r2, #0
 801258c:	dc3e      	bgt.n	801260c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801258e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012592:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012596:	f1bb 0f00 	cmp.w	fp, #0
 801259a:	f340 80fe 	ble.w	801279a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801259e:	ee30 0a04 	vadd.f32	s0, s0, s8
 80125a2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80125a6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80125aa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80125ac:	f1bb 0b01 	subs.w	fp, fp, #1
 80125b0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80125b4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80125b8:	eeb0 6a62 	vmov.f32	s12, s5
 80125bc:	ee61 7a27 	vmul.f32	s15, s2, s15
 80125c0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80125c4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80125c8:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80125cc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80125d0:	eeb0 6a43 	vmov.f32	s12, s6
 80125d4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80125d8:	ee12 2a90 	vmov	r2, s5
 80125dc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80125e0:	fb92 f3f3 	sdiv	r3, r2, r3
 80125e4:	ee13 2a10 	vmov	r2, s6
 80125e8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80125ec:	9313      	str	r3, [sp, #76]	; 0x4c
 80125ee:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80125f0:	fb92 f3f3 	sdiv	r3, r2, r3
 80125f4:	9a04      	ldr	r2, [sp, #16]
 80125f6:	9314      	str	r3, [sp, #80]	; 0x50
 80125f8:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80125fc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80125fe:	eeb0 3a67 	vmov.f32	s6, s15
 8012602:	bf08      	it	eq
 8012604:	4613      	moveq	r3, r2
 8012606:	eef0 2a47 	vmov.f32	s5, s14
 801260a:	e787      	b.n	801251c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801260c:	1406      	asrs	r6, r0, #16
 801260e:	d45d      	bmi.n	80126cc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8012610:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8012614:	42b5      	cmp	r5, r6
 8012616:	dd59      	ble.n	80126cc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8012618:	140f      	asrs	r7, r1, #16
 801261a:	d457      	bmi.n	80126cc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801261c:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8012620:	42ba      	cmp	r2, r7
 8012622:	dd53      	ble.n	80126cc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8012624:	9a01      	ldr	r2, [sp, #4]
 8012626:	b22d      	sxth	r5, r5
 8012628:	fb07 2505 	mla	r5, r7, r5, r2
 801262c:	5daa      	ldrb	r2, [r5, r6]
 801262e:	9d02      	ldr	r5, [sp, #8]
 8012630:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8012634:	0e2e      	lsrs	r6, r5, #24
 8012636:	d049      	beq.n	80126cc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8012638:	f06f 0201 	mvn.w	r2, #1
 801263c:	fb02 f20e 	mul.w	r2, r2, lr
 8012640:	9203      	str	r2, [sp, #12]
 8012642:	f834 8002 	ldrh.w	r8, [r4, r2]
 8012646:	9a05      	ldr	r2, [sp, #20]
 8012648:	4356      	muls	r6, r2
 801264a:	1c72      	adds	r2, r6, #1
 801264c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8012650:	1212      	asrs	r2, r2, #8
 8012652:	fa1f f982 	uxth.w	r9, r2
 8012656:	ea4f 2728 	mov.w	r7, r8, asr #8
 801265a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801265e:	43d2      	mvns	r2, r2
 8012660:	b2d2      	uxtb	r2, r2
 8012662:	fb16 f609 	smulbb	r6, r6, r9
 8012666:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801266a:	fb07 6702 	mla	r7, r7, r2, r6
 801266e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8012672:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8012676:	b2ed      	uxtb	r5, r5
 8012678:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801267c:	fa5f f888 	uxtb.w	r8, r8
 8012680:	fb15 f509 	smulbb	r5, r5, r9
 8012684:	fb08 5502 	mla	r5, r8, r2, r5
 8012688:	b2bf      	uxth	r7, r7
 801268a:	fb1a fa09 	smulbb	sl, sl, r9
 801268e:	b2ad      	uxth	r5, r5
 8012690:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012694:	fb06 a602 	mla	r6, r6, r2, sl
 8012698:	1c7a      	adds	r2, r7, #1
 801269a:	f105 0a01 	add.w	sl, r5, #1
 801269e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80126a2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80126a6:	b2b6      	uxth	r6, r6
 80126a8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80126ac:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80126b0:	ea4a 0707 	orr.w	r7, sl, r7
 80126b4:	f106 0a01 	add.w	sl, r6, #1
 80126b8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80126bc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80126c0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80126c4:	9a03      	ldr	r2, [sp, #12]
 80126c6:	ea47 070a 	orr.w	r7, r7, sl
 80126ca:	52a7      	strh	r7, [r4, r2]
 80126cc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80126ce:	4410      	add	r0, r2
 80126d0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80126d2:	f10e 3eff 	add.w	lr, lr, #4294967295
 80126d6:	4411      	add	r1, r2
 80126d8:	e755      	b.n	8012586 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80126da:	f04f 0800 	mov.w	r8, #0
 80126de:	eba3 0208 	sub.w	r2, r3, r8
 80126e2:	2a00      	cmp	r2, #0
 80126e4:	f77f af53 	ble.w	801258e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80126e8:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 80126ec:	9f01      	ldr	r7, [sp, #4]
 80126ee:	140a      	asrs	r2, r1, #16
 80126f0:	1405      	asrs	r5, r0, #16
 80126f2:	fb06 7202 	mla	r2, r6, r2, r7
 80126f6:	5d52      	ldrb	r2, [r2, r5]
 80126f8:	9d02      	ldr	r5, [sp, #8]
 80126fa:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80126fe:	0e2e      	lsrs	r6, r5, #24
 8012700:	d044      	beq.n	801278c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8012702:	9a05      	ldr	r2, [sp, #20]
 8012704:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8012708:	4356      	muls	r6, r2
 801270a:	1c72      	adds	r2, r6, #1
 801270c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8012710:	1212      	asrs	r2, r2, #8
 8012712:	fa1f f982 	uxth.w	r9, r2
 8012716:	ea4f 272e 	mov.w	r7, lr, asr #8
 801271a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801271e:	43d2      	mvns	r2, r2
 8012720:	b2d2      	uxtb	r2, r2
 8012722:	fb16 f609 	smulbb	r6, r6, r9
 8012726:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801272a:	fb07 6702 	mla	r7, r7, r2, r6
 801272e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8012732:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8012736:	b2ed      	uxtb	r5, r5
 8012738:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801273c:	fa5f fe8e 	uxtb.w	lr, lr
 8012740:	fb15 f509 	smulbb	r5, r5, r9
 8012744:	fb0e 5502 	mla	r5, lr, r2, r5
 8012748:	b2bf      	uxth	r7, r7
 801274a:	fb1a fa09 	smulbb	sl, sl, r9
 801274e:	b2ad      	uxth	r5, r5
 8012750:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012754:	fb06 a602 	mla	r6, r6, r2, sl
 8012758:	1c7a      	adds	r2, r7, #1
 801275a:	f105 0a01 	add.w	sl, r5, #1
 801275e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8012762:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012766:	b2b6      	uxth	r6, r6
 8012768:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801276c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8012770:	ea4a 0707 	orr.w	r7, sl, r7
 8012774:	f106 0a01 	add.w	sl, r6, #1
 8012778:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801277c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012780:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8012784:	ea47 070a 	orr.w	r7, r7, sl
 8012788:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801278c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801278e:	4410      	add	r0, r2
 8012790:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012792:	f108 0801 	add.w	r8, r8, #1
 8012796:	4411      	add	r1, r2
 8012798:	e7a1      	b.n	80126de <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801279a:	b007      	add	sp, #28
 801279c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080127a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80127a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80127a4:	b085      	sub	sp, #20
 80127a6:	468b      	mov	fp, r1
 80127a8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80127aa:	9203      	str	r2, [sp, #12]
 80127ac:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80127b0:	6841      	ldr	r1, [r0, #4]
 80127b2:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 80127b6:	fb01 2404 	mla	r4, r1, r4, r2
 80127ba:	6802      	ldr	r2, [r0, #0]
 80127bc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80127c0:	f8de 2000 	ldr.w	r2, [lr]
 80127c4:	9200      	str	r2, [sp, #0]
 80127c6:	f8de 2004 	ldr.w	r2, [lr, #4]
 80127ca:	3204      	adds	r2, #4
 80127cc:	9201      	str	r2, [sp, #4]
 80127ce:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80127d2:	f1bb 0f00 	cmp.w	fp, #0
 80127d6:	dc03      	bgt.n	80127e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80127d8:	9a03      	ldr	r2, [sp, #12]
 80127da:	2a00      	cmp	r2, #0
 80127dc:	f340 8153 	ble.w	8012a86 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80127e0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80127e2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80127e6:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80127ea:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80127ee:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80127f0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80127f4:	2b00      	cmp	r3, #0
 80127f6:	dd0e      	ble.n	8012816 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80127f8:	1408      	asrs	r0, r1, #16
 80127fa:	d405      	bmi.n	8012808 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80127fc:	42b8      	cmp	r0, r7
 80127fe:	da03      	bge.n	8012808 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8012800:	1410      	asrs	r0, r2, #16
 8012802:	d401      	bmi.n	8012808 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8012804:	42b0      	cmp	r0, r6
 8012806:	db07      	blt.n	8012818 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8012808:	9811      	ldr	r0, [sp, #68]	; 0x44
 801280a:	4401      	add	r1, r0
 801280c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801280e:	3b01      	subs	r3, #1
 8012810:	4402      	add	r2, r0
 8012812:	3402      	adds	r4, #2
 8012814:	e7ee      	b.n	80127f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8012816:	d017      	beq.n	8012848 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8012818:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801281a:	1e58      	subs	r0, r3, #1
 801281c:	fb05 1500 	mla	r5, r5, r0, r1
 8012820:	142d      	asrs	r5, r5, #16
 8012822:	d409      	bmi.n	8012838 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8012824:	42bd      	cmp	r5, r7
 8012826:	da07      	bge.n	8012838 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8012828:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801282a:	fb05 2000 	mla	r0, r5, r0, r2
 801282e:	1400      	asrs	r0, r0, #16
 8012830:	d402      	bmi.n	8012838 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8012832:	42b0      	cmp	r0, r6
 8012834:	f2c0 80bc 	blt.w	80129b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8012838:	2600      	movs	r6, #0
 801283a:	1998      	adds	r0, r3, r6
 801283c:	2800      	cmp	r0, #0
 801283e:	dc3e      	bgt.n	80128be <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8012840:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012844:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012848:	f1bb 0f00 	cmp.w	fp, #0
 801284c:	f340 811b 	ble.w	8012a86 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8012850:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012854:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012858:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801285c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801285e:	f1bb 0b01 	subs.w	fp, fp, #1
 8012862:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012866:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801286a:	eeb0 6a62 	vmov.f32	s12, s5
 801286e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012872:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012876:	ee77 2a62 	vsub.f32	s5, s14, s5
 801287a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801287e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012882:	eeb0 6a43 	vmov.f32	s12, s6
 8012886:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801288a:	ee12 2a90 	vmov	r2, s5
 801288e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012892:	fb92 f3f3 	sdiv	r3, r2, r3
 8012896:	ee13 2a10 	vmov	r2, s6
 801289a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801289e:	9311      	str	r3, [sp, #68]	; 0x44
 80128a0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80128a2:	fb92 f3f3 	sdiv	r3, r2, r3
 80128a6:	9a03      	ldr	r2, [sp, #12]
 80128a8:	9312      	str	r3, [sp, #72]	; 0x48
 80128aa:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80128ae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80128b0:	eeb0 3a67 	vmov.f32	s6, s15
 80128b4:	bf08      	it	eq
 80128b6:	4613      	moveq	r3, r2
 80128b8:	eef0 2a47 	vmov.f32	s5, s14
 80128bc:	e789      	b.n	80127d2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80128be:	140f      	asrs	r7, r1, #16
 80128c0:	d426      	bmi.n	8012910 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80128c2:	f8de 5008 	ldr.w	r5, [lr, #8]
 80128c6:	42bd      	cmp	r5, r7
 80128c8:	dd22      	ble.n	8012910 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80128ca:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80128ce:	d41f      	bmi.n	8012910 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80128d0:	f8de 000c 	ldr.w	r0, [lr, #12]
 80128d4:	4560      	cmp	r0, ip
 80128d6:	dd1b      	ble.n	8012910 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80128d8:	9800      	ldr	r0, [sp, #0]
 80128da:	b22d      	sxth	r5, r5
 80128dc:	fb0c 0505 	mla	r5, ip, r5, r0
 80128e0:	5de8      	ldrb	r0, [r5, r7]
 80128e2:	9d01      	ldr	r5, [sp, #4]
 80128e4:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 80128e8:	0e07      	lsrs	r7, r0, #24
 80128ea:	2fff      	cmp	r7, #255	; 0xff
 80128ec:	d116      	bne.n	801291c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80128ee:	f06f 0501 	mvn.w	r5, #1
 80128f2:	fb05 f706 	mul.w	r7, r5, r6
 80128f6:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 80128fa:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80128fe:	0945      	lsrs	r5, r0, #5
 8012900:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8012904:	ea4c 0505 	orr.w	r5, ip, r5
 8012908:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801290c:	4305      	orrs	r5, r0
 801290e:	53e5      	strh	r5, [r4, r7]
 8012910:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012912:	4401      	add	r1, r0
 8012914:	9812      	ldr	r0, [sp, #72]	; 0x48
 8012916:	3e01      	subs	r6, #1
 8012918:	4402      	add	r2, r0
 801291a:	e78e      	b.n	801283a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801291c:	b2fd      	uxtb	r5, r7
 801291e:	2f00      	cmp	r7, #0
 8012920:	d0f6      	beq.n	8012910 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8012922:	f06f 0701 	mvn.w	r7, #1
 8012926:	4377      	muls	r7, r6
 8012928:	fa1f f985 	uxth.w	r9, r5
 801292c:	f834 8007 	ldrh.w	r8, [r4, r7]
 8012930:	9702      	str	r7, [sp, #8]
 8012932:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8012936:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801293a:	43ed      	mvns	r5, r5
 801293c:	b2ed      	uxtb	r5, r5
 801293e:	fb17 f709 	smulbb	r7, r7, r9
 8012942:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012946:	fb0c 7c05 	mla	ip, ip, r5, r7
 801294a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801294e:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8012952:	b2c0      	uxtb	r0, r0
 8012954:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8012958:	fa5f f888 	uxtb.w	r8, r8
 801295c:	fb10 f009 	smulbb	r0, r0, r9
 8012960:	fb08 0005 	mla	r0, r8, r5, r0
 8012964:	b280      	uxth	r0, r0
 8012966:	fa1f fc8c 	uxth.w	ip, ip
 801296a:	fb1a fa09 	smulbb	sl, sl, r9
 801296e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8012972:	fb07 a705 	mla	r7, r7, r5, sl
 8012976:	f100 0a01 	add.w	sl, r0, #1
 801297a:	f10c 0501 	add.w	r5, ip, #1
 801297e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8012982:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8012986:	b2bf      	uxth	r7, r7
 8012988:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801298c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8012990:	ea4a 0c0c 	orr.w	ip, sl, ip
 8012994:	f107 0a01 	add.w	sl, r7, #1
 8012998:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801299c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80129a0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80129a4:	9802      	ldr	r0, [sp, #8]
 80129a6:	ea4c 0c0a 	orr.w	ip, ip, sl
 80129aa:	f824 c000 	strh.w	ip, [r4, r0]
 80129ae:	e7af      	b.n	8012910 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80129b0:	f04f 0800 	mov.w	r8, #0
 80129b4:	eba3 0008 	sub.w	r0, r3, r8
 80129b8:	2800      	cmp	r0, #0
 80129ba:	f77f af41 	ble.w	8012840 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80129be:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80129c2:	9f00      	ldr	r7, [sp, #0]
 80129c4:	1410      	asrs	r0, r2, #16
 80129c6:	140d      	asrs	r5, r1, #16
 80129c8:	fb06 7000 	mla	r0, r6, r0, r7
 80129cc:	5d40      	ldrb	r0, [r0, r5]
 80129ce:	9d01      	ldr	r5, [sp, #4]
 80129d0:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 80129d4:	0e2e      	lsrs	r6, r5, #24
 80129d6:	2eff      	cmp	r6, #255	; 0xff
 80129d8:	d112      	bne.n	8012a00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 80129da:	482c      	ldr	r0, [pc, #176]	; (8012a8c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 80129dc:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 80129e0:	0968      	lsrs	r0, r5, #5
 80129e2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80129e6:	4330      	orrs	r0, r6
 80129e8:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80129ec:	4328      	orrs	r0, r5
 80129ee:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 80129f2:	9811      	ldr	r0, [sp, #68]	; 0x44
 80129f4:	4401      	add	r1, r0
 80129f6:	9812      	ldr	r0, [sp, #72]	; 0x48
 80129f8:	f108 0801 	add.w	r8, r8, #1
 80129fc:	4402      	add	r2, r0
 80129fe:	e7d9      	b.n	80129b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8012a00:	b2f0      	uxtb	r0, r6
 8012a02:	2e00      	cmp	r6, #0
 8012a04:	d0f5      	beq.n	80129f2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8012a06:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8012a0a:	fa1f f980 	uxth.w	r9, r0
 8012a0e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8012a12:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8012a16:	43c0      	mvns	r0, r0
 8012a18:	b2c0      	uxtb	r0, r0
 8012a1a:	fb16 f609 	smulbb	r6, r6, r9
 8012a1e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012a22:	fb07 6700 	mla	r7, r7, r0, r6
 8012a26:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8012a2a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8012a2e:	b2ed      	uxtb	r5, r5
 8012a30:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8012a34:	fa5f fc8c 	uxtb.w	ip, ip
 8012a38:	fb15 f509 	smulbb	r5, r5, r9
 8012a3c:	fb0c 5500 	mla	r5, ip, r0, r5
 8012a40:	b2bf      	uxth	r7, r7
 8012a42:	fb1a fa09 	smulbb	sl, sl, r9
 8012a46:	b2ad      	uxth	r5, r5
 8012a48:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012a4c:	fb06 a600 	mla	r6, r6, r0, sl
 8012a50:	1c78      	adds	r0, r7, #1
 8012a52:	f105 0a01 	add.w	sl, r5, #1
 8012a56:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8012a5a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012a5e:	b2b6      	uxth	r6, r6
 8012a60:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012a64:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8012a68:	ea4a 0707 	orr.w	r7, sl, r7
 8012a6c:	f106 0a01 	add.w	sl, r6, #1
 8012a70:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8012a74:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012a78:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8012a7c:	ea47 070a 	orr.w	r7, r7, sl
 8012a80:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8012a84:	e7b5      	b.n	80129f2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8012a86:	b005      	add	sp, #20
 8012a88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012a8c:	fffff800 	.word	0xfffff800

08012a90 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012a90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012a94:	b087      	sub	sp, #28
 8012a96:	468b      	mov	fp, r1
 8012a98:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8012a9a:	9204      	str	r2, [sp, #16]
 8012a9c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8012aa0:	9205      	str	r2, [sp, #20]
 8012aa2:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8012aa6:	6861      	ldr	r1, [r4, #4]
 8012aa8:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8012aac:	fb01 2000 	mla	r0, r1, r0, r2
 8012ab0:	6822      	ldr	r2, [r4, #0]
 8012ab2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8012ab6:	f8de 2000 	ldr.w	r2, [lr]
 8012aba:	9201      	str	r2, [sp, #4]
 8012abc:	f8de 2004 	ldr.w	r2, [lr, #4]
 8012ac0:	9202      	str	r2, [sp, #8]
 8012ac2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8012ac6:	f1bb 0f00 	cmp.w	fp, #0
 8012aca:	dc03      	bgt.n	8012ad4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8012acc:	9a04      	ldr	r2, [sp, #16]
 8012ace:	2a00      	cmp	r2, #0
 8012ad0:	f340 8142 	ble.w	8012d58 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8012ad4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8012ad6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8012ada:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8012ade:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8012ae2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8012ae4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8012ae8:	2b00      	cmp	r3, #0
 8012aea:	dd0e      	ble.n	8012b0a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8012aec:	140c      	asrs	r4, r1, #16
 8012aee:	d405      	bmi.n	8012afc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8012af0:	42bc      	cmp	r4, r7
 8012af2:	da03      	bge.n	8012afc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8012af4:	1414      	asrs	r4, r2, #16
 8012af6:	d401      	bmi.n	8012afc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8012af8:	42b4      	cmp	r4, r6
 8012afa:	db07      	blt.n	8012b0c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8012afc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8012afe:	4421      	add	r1, r4
 8012b00:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8012b02:	3b01      	subs	r3, #1
 8012b04:	4422      	add	r2, r4
 8012b06:	3002      	adds	r0, #2
 8012b08:	e7ee      	b.n	8012ae8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8012b0a:	d019      	beq.n	8012b40 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8012b0c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8012b0e:	1e5c      	subs	r4, r3, #1
 8012b10:	fb05 1504 	mla	r5, r5, r4, r1
 8012b14:	142d      	asrs	r5, r5, #16
 8012b16:	d409      	bmi.n	8012b2c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8012b18:	42bd      	cmp	r5, r7
 8012b1a:	da07      	bge.n	8012b2c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8012b1c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8012b1e:	fb05 2404 	mla	r4, r5, r4, r2
 8012b22:	1424      	asrs	r4, r4, #16
 8012b24:	d402      	bmi.n	8012b2c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8012b26:	42b4      	cmp	r4, r6
 8012b28:	f2c0 80b1 	blt.w	8012c8e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8012b2c:	f04f 0800 	mov.w	r8, #0
 8012b30:	eb03 0408 	add.w	r4, r3, r8
 8012b34:	2c00      	cmp	r4, #0
 8012b36:	dc3e      	bgt.n	8012bb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8012b38:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012b3c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012b40:	f1bb 0f00 	cmp.w	fp, #0
 8012b44:	f340 8108 	ble.w	8012d58 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8012b48:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012b4c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012b50:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012b54:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012b56:	f1bb 0b01 	subs.w	fp, fp, #1
 8012b5a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012b5e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012b62:	eeb0 6a62 	vmov.f32	s12, s5
 8012b66:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012b6a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012b6e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012b72:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8012b76:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012b7a:	eeb0 6a43 	vmov.f32	s12, s6
 8012b7e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012b82:	ee12 2a90 	vmov	r2, s5
 8012b86:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012b8a:	fb92 f3f3 	sdiv	r3, r2, r3
 8012b8e:	ee13 2a10 	vmov	r2, s6
 8012b92:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012b96:	9313      	str	r3, [sp, #76]	; 0x4c
 8012b98:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012b9a:	fb92 f3f3 	sdiv	r3, r2, r3
 8012b9e:	9a04      	ldr	r2, [sp, #16]
 8012ba0:	9314      	str	r3, [sp, #80]	; 0x50
 8012ba2:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8012ba6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012ba8:	eeb0 3a67 	vmov.f32	s6, s15
 8012bac:	bf08      	it	eq
 8012bae:	4613      	moveq	r3, r2
 8012bb0:	eef0 2a47 	vmov.f32	s5, s14
 8012bb4:	e787      	b.n	8012ac6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8012bb6:	140e      	asrs	r6, r1, #16
 8012bb8:	d462      	bmi.n	8012c80 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8012bba:	f8de 5008 	ldr.w	r5, [lr, #8]
 8012bbe:	42b5      	cmp	r5, r6
 8012bc0:	dd5e      	ble.n	8012c80 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8012bc2:	1417      	asrs	r7, r2, #16
 8012bc4:	d45c      	bmi.n	8012c80 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8012bc6:	f8de 400c 	ldr.w	r4, [lr, #12]
 8012bca:	42bc      	cmp	r4, r7
 8012bcc:	dd58      	ble.n	8012c80 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8012bce:	b22d      	sxth	r5, r5
 8012bd0:	fb07 6505 	mla	r5, r7, r5, r6
 8012bd4:	9c02      	ldr	r4, [sp, #8]
 8012bd6:	5d66      	ldrb	r6, [r4, r5]
 8012bd8:	2e00      	cmp	r6, #0
 8012bda:	d051      	beq.n	8012c80 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8012bdc:	9c01      	ldr	r4, [sp, #4]
 8012bde:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8012be2:	f06f 0401 	mvn.w	r4, #1
 8012be6:	fb04 f408 	mul.w	r4, r4, r8
 8012bea:	9403      	str	r4, [sp, #12]
 8012bec:	5b05      	ldrh	r5, [r0, r4]
 8012bee:	9c05      	ldr	r4, [sp, #20]
 8012bf0:	4366      	muls	r6, r4
 8012bf2:	1c74      	adds	r4, r6, #1
 8012bf4:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8012bf8:	1224      	asrs	r4, r4, #8
 8012bfa:	b2a7      	uxth	r7, r4
 8012bfc:	122e      	asrs	r6, r5, #8
 8012bfe:	43e4      	mvns	r4, r4
 8012c00:	b2e4      	uxtb	r4, r4
 8012c02:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8012c06:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8012c0a:	fb16 f604 	smulbb	r6, r6, r4
 8012c0e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8012c12:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012c16:	00ed      	lsls	r5, r5, #3
 8012c18:	fb0c 6c07 	mla	ip, ip, r7, r6
 8012c1c:	b2ed      	uxtb	r5, r5
 8012c1e:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8012c22:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8012c26:	fb15 f504 	smulbb	r5, r5, r4
 8012c2a:	fa5f f989 	uxtb.w	r9, r9
 8012c2e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8012c32:	fb09 5507 	mla	r5, r9, r7, r5
 8012c36:	fb1a fa04 	smulbb	sl, sl, r4
 8012c3a:	fa1f fc8c 	uxth.w	ip, ip
 8012c3e:	b2ad      	uxth	r5, r5
 8012c40:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012c44:	fb06 a607 	mla	r6, r6, r7, sl
 8012c48:	f10c 0401 	add.w	r4, ip, #1
 8012c4c:	f105 0a01 	add.w	sl, r5, #1
 8012c50:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8012c54:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012c58:	b2b6      	uxth	r6, r6
 8012c5a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012c5e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8012c62:	ea4a 0c0c 	orr.w	ip, sl, ip
 8012c66:	f106 0a01 	add.w	sl, r6, #1
 8012c6a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8012c6e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012c72:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8012c76:	9c03      	ldr	r4, [sp, #12]
 8012c78:	ea4c 0c0a 	orr.w	ip, ip, sl
 8012c7c:	f820 c004 	strh.w	ip, [r0, r4]
 8012c80:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8012c82:	4421      	add	r1, r4
 8012c84:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8012c86:	f108 38ff 	add.w	r8, r8, #4294967295
 8012c8a:	4422      	add	r2, r4
 8012c8c:	e750      	b.n	8012b30 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8012c8e:	f04f 0900 	mov.w	r9, #0
 8012c92:	eba3 0409 	sub.w	r4, r3, r9
 8012c96:	2c00      	cmp	r4, #0
 8012c98:	f77f af4e 	ble.w	8012b38 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8012c9c:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8012ca0:	140d      	asrs	r5, r1, #16
 8012ca2:	1414      	asrs	r4, r2, #16
 8012ca4:	fb06 5404 	mla	r4, r6, r4, r5
 8012ca8:	9d02      	ldr	r5, [sp, #8]
 8012caa:	5d2e      	ldrb	r6, [r5, r4]
 8012cac:	2e00      	cmp	r6, #0
 8012cae:	d04c      	beq.n	8012d4a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8012cb0:	9d01      	ldr	r5, [sp, #4]
 8012cb2:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8012cb6:	9c05      	ldr	r4, [sp, #20]
 8012cb8:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8012cbc:	4366      	muls	r6, r4
 8012cbe:	1c74      	adds	r4, r6, #1
 8012cc0:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8012cc4:	1224      	asrs	r4, r4, #8
 8012cc6:	b2a7      	uxth	r7, r4
 8012cc8:	122e      	asrs	r6, r5, #8
 8012cca:	43e4      	mvns	r4, r4
 8012ccc:	b2e4      	uxtb	r4, r4
 8012cce:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8012cd2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8012cd6:	fb16 f604 	smulbb	r6, r6, r4
 8012cda:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8012cde:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012ce2:	00ed      	lsls	r5, r5, #3
 8012ce4:	fb0c 6c07 	mla	ip, ip, r7, r6
 8012ce8:	b2ed      	uxtb	r5, r5
 8012cea:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8012cee:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8012cf2:	fb15 f504 	smulbb	r5, r5, r4
 8012cf6:	fa5f f888 	uxtb.w	r8, r8
 8012cfa:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8012cfe:	fb08 5507 	mla	r5, r8, r7, r5
 8012d02:	fb1a fa04 	smulbb	sl, sl, r4
 8012d06:	fa1f fc8c 	uxth.w	ip, ip
 8012d0a:	b2ad      	uxth	r5, r5
 8012d0c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012d10:	fb06 a607 	mla	r6, r6, r7, sl
 8012d14:	f10c 0401 	add.w	r4, ip, #1
 8012d18:	f105 0a01 	add.w	sl, r5, #1
 8012d1c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8012d20:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012d24:	b2b6      	uxth	r6, r6
 8012d26:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012d2a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8012d2e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8012d32:	f106 0a01 	add.w	sl, r6, #1
 8012d36:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8012d3a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012d3e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8012d42:	ea4c 0c0a 	orr.w	ip, ip, sl
 8012d46:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8012d4a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8012d4c:	4421      	add	r1, r4
 8012d4e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8012d50:	f109 0901 	add.w	r9, r9, #1
 8012d54:	4422      	add	r2, r4
 8012d56:	e79c      	b.n	8012c92 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8012d58:	b007      	add	sp, #28
 8012d5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012d5e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012d5e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012d62:	b085      	sub	sp, #20
 8012d64:	468b      	mov	fp, r1
 8012d66:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8012d68:	9203      	str	r2, [sp, #12]
 8012d6a:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8012d6e:	6861      	ldr	r1, [r4, #4]
 8012d70:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8012d74:	fb01 2000 	mla	r0, r1, r0, r2
 8012d78:	6822      	ldr	r2, [r4, #0]
 8012d7a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8012d7e:	f8d8 2000 	ldr.w	r2, [r8]
 8012d82:	9200      	str	r2, [sp, #0]
 8012d84:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8012d88:	9201      	str	r2, [sp, #4]
 8012d8a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8012d8e:	f1bb 0f00 	cmp.w	fp, #0
 8012d92:	dc03      	bgt.n	8012d9c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8012d94:	9a03      	ldr	r2, [sp, #12]
 8012d96:	2a00      	cmp	r2, #0
 8012d98:	f340 8146 	ble.w	8013028 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8012d9c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8012d9e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8012da2:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8012da6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8012daa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8012dac:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8012db0:	2b00      	cmp	r3, #0
 8012db2:	dd0e      	ble.n	8012dd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8012db4:	140c      	asrs	r4, r1, #16
 8012db6:	d405      	bmi.n	8012dc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012db8:	42bc      	cmp	r4, r7
 8012dba:	da03      	bge.n	8012dc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012dbc:	1414      	asrs	r4, r2, #16
 8012dbe:	d401      	bmi.n	8012dc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012dc0:	42b4      	cmp	r4, r6
 8012dc2:	db07      	blt.n	8012dd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012dc4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8012dc6:	4421      	add	r1, r4
 8012dc8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8012dca:	3b01      	subs	r3, #1
 8012dcc:	4422      	add	r2, r4
 8012dce:	3002      	adds	r0, #2
 8012dd0:	e7ee      	b.n	8012db0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8012dd2:	d017      	beq.n	8012e04 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8012dd4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8012dd6:	1e5c      	subs	r4, r3, #1
 8012dd8:	fb05 1504 	mla	r5, r5, r4, r1
 8012ddc:	142d      	asrs	r5, r5, #16
 8012dde:	d409      	bmi.n	8012df4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8012de0:	42bd      	cmp	r5, r7
 8012de2:	da07      	bge.n	8012df4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8012de4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8012de6:	fb05 2404 	mla	r4, r5, r4, r2
 8012dea:	1424      	asrs	r4, r4, #16
 8012dec:	d402      	bmi.n	8012df4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8012dee:	42b4      	cmp	r4, r6
 8012df0:	f2c0 80b3 	blt.w	8012f5a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8012df4:	2600      	movs	r6, #0
 8012df6:	199c      	adds	r4, r3, r6
 8012df8:	2c00      	cmp	r4, #0
 8012dfa:	dc3e      	bgt.n	8012e7a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8012dfc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012e00:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012e04:	f1bb 0f00 	cmp.w	fp, #0
 8012e08:	f340 810e 	ble.w	8013028 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8012e0c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012e10:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012e14:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012e18:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012e1a:	f1bb 0b01 	subs.w	fp, fp, #1
 8012e1e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012e22:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012e26:	eeb0 6a62 	vmov.f32	s12, s5
 8012e2a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012e2e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012e32:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012e36:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8012e3a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012e3e:	eeb0 6a43 	vmov.f32	s12, s6
 8012e42:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012e46:	ee12 2a90 	vmov	r2, s5
 8012e4a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012e4e:	fb92 f3f3 	sdiv	r3, r2, r3
 8012e52:	ee13 2a10 	vmov	r2, s6
 8012e56:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012e5a:	9311      	str	r3, [sp, #68]	; 0x44
 8012e5c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012e5e:	fb92 f3f3 	sdiv	r3, r2, r3
 8012e62:	9a03      	ldr	r2, [sp, #12]
 8012e64:	9312      	str	r3, [sp, #72]	; 0x48
 8012e66:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8012e6a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012e6c:	eeb0 3a67 	vmov.f32	s6, s15
 8012e70:	bf08      	it	eq
 8012e72:	4613      	moveq	r3, r2
 8012e74:	eef0 2a47 	vmov.f32	s5, s14
 8012e78:	e789      	b.n	8012d8e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8012e7a:	140f      	asrs	r7, r1, #16
 8012e7c:	d418      	bmi.n	8012eb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8012e7e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8012e82:	42bd      	cmp	r5, r7
 8012e84:	dd14      	ble.n	8012eb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8012e86:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8012e8a:	d411      	bmi.n	8012eb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8012e8c:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8012e90:	4564      	cmp	r4, ip
 8012e92:	dd0d      	ble.n	8012eb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8012e94:	b22d      	sxth	r5, r5
 8012e96:	fb0c 7505 	mla	r5, ip, r5, r7
 8012e9a:	9c01      	ldr	r4, [sp, #4]
 8012e9c:	5d64      	ldrb	r4, [r4, r5]
 8012e9e:	2cff      	cmp	r4, #255	; 0xff
 8012ea0:	d10c      	bne.n	8012ebc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8012ea2:	9c00      	ldr	r4, [sp, #0]
 8012ea4:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8012ea8:	f06f 0401 	mvn.w	r4, #1
 8012eac:	4374      	muls	r4, r6
 8012eae:	5305      	strh	r5, [r0, r4]
 8012eb0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8012eb2:	4421      	add	r1, r4
 8012eb4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8012eb6:	3e01      	subs	r6, #1
 8012eb8:	4422      	add	r2, r4
 8012eba:	e79c      	b.n	8012df6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8012ebc:	2c00      	cmp	r4, #0
 8012ebe:	d0f7      	beq.n	8012eb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8012ec0:	9f00      	ldr	r7, [sp, #0]
 8012ec2:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8012ec6:	f06f 0501 	mvn.w	r5, #1
 8012eca:	4375      	muls	r5, r6
 8012ecc:	9502      	str	r5, [sp, #8]
 8012ece:	5b45      	ldrh	r5, [r0, r5]
 8012ed0:	fa1f fc84 	uxth.w	ip, r4
 8012ed4:	122f      	asrs	r7, r5, #8
 8012ed6:	43e4      	mvns	r4, r4
 8012ed8:	b2e4      	uxtb	r4, r4
 8012eda:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8012ede:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012ee2:	fb17 f704 	smulbb	r7, r7, r4
 8012ee6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8012eea:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8012eee:	00ed      	lsls	r5, r5, #3
 8012ef0:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8012ef4:	b2ed      	uxtb	r5, r5
 8012ef6:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8012efa:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8012efe:	fb15 f504 	smulbb	r5, r5, r4
 8012f02:	fa5f f989 	uxtb.w	r9, r9
 8012f06:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8012f0a:	fb09 550c 	mla	r5, r9, ip, r5
 8012f0e:	fb1a fa04 	smulbb	sl, sl, r4
 8012f12:	fa1f fe8e 	uxth.w	lr, lr
 8012f16:	b2ad      	uxth	r5, r5
 8012f18:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8012f1c:	fb07 a70c 	mla	r7, r7, ip, sl
 8012f20:	f10e 0401 	add.w	r4, lr, #1
 8012f24:	f105 0a01 	add.w	sl, r5, #1
 8012f28:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8012f2c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012f30:	b2bf      	uxth	r7, r7
 8012f32:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012f36:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8012f3a:	ea4a 0e0e 	orr.w	lr, sl, lr
 8012f3e:	f107 0a01 	add.w	sl, r7, #1
 8012f42:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8012f46:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012f4a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8012f4e:	9c02      	ldr	r4, [sp, #8]
 8012f50:	ea4e 0e0a 	orr.w	lr, lr, sl
 8012f54:	f820 e004 	strh.w	lr, [r0, r4]
 8012f58:	e7aa      	b.n	8012eb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8012f5a:	f04f 0900 	mov.w	r9, #0
 8012f5e:	eba3 0409 	sub.w	r4, r3, r9
 8012f62:	2c00      	cmp	r4, #0
 8012f64:	f77f af4a 	ble.w	8012dfc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8012f68:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8012f6c:	1414      	asrs	r4, r2, #16
 8012f6e:	140d      	asrs	r5, r1, #16
 8012f70:	fb06 5504 	mla	r5, r6, r4, r5
 8012f74:	9c01      	ldr	r4, [sp, #4]
 8012f76:	5d64      	ldrb	r4, [r4, r5]
 8012f78:	2cff      	cmp	r4, #255	; 0xff
 8012f7a:	d10b      	bne.n	8012f94 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8012f7c:	9c00      	ldr	r4, [sp, #0]
 8012f7e:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8012f82:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8012f86:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8012f88:	4421      	add	r1, r4
 8012f8a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8012f8c:	f109 0901 	add.w	r9, r9, #1
 8012f90:	4422      	add	r2, r4
 8012f92:	e7e4      	b.n	8012f5e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8012f94:	2c00      	cmp	r4, #0
 8012f96:	d0f6      	beq.n	8012f86 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8012f98:	9e00      	ldr	r6, [sp, #0]
 8012f9a:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8012f9e:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8012fa2:	b2a7      	uxth	r7, r4
 8012fa4:	122e      	asrs	r6, r5, #8
 8012fa6:	43e4      	mvns	r4, r4
 8012fa8:	b2e4      	uxtb	r4, r4
 8012faa:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8012fae:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8012fb2:	fb16 f604 	smulbb	r6, r6, r4
 8012fb6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8012fba:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012fbe:	00ed      	lsls	r5, r5, #3
 8012fc0:	fb0c 6c07 	mla	ip, ip, r7, r6
 8012fc4:	b2ed      	uxtb	r5, r5
 8012fc6:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8012fca:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8012fce:	fb15 f504 	smulbb	r5, r5, r4
 8012fd2:	fa5f fe8e 	uxtb.w	lr, lr
 8012fd6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8012fda:	fb0e 5507 	mla	r5, lr, r7, r5
 8012fde:	fb1a fa04 	smulbb	sl, sl, r4
 8012fe2:	fa1f fc8c 	uxth.w	ip, ip
 8012fe6:	b2ad      	uxth	r5, r5
 8012fe8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012fec:	fb06 a607 	mla	r6, r6, r7, sl
 8012ff0:	f10c 0401 	add.w	r4, ip, #1
 8012ff4:	f105 0a01 	add.w	sl, r5, #1
 8012ff8:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8012ffc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013000:	b2b6      	uxth	r6, r6
 8013002:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013006:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801300a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801300e:	f106 0a01 	add.w	sl, r6, #1
 8013012:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013016:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801301a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801301e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8013022:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8013026:	e7ae      	b.n	8012f86 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8013028:	b005      	add	sp, #20
 801302a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801302e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801302e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013032:	b085      	sub	sp, #20
 8013034:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8013036:	9203      	str	r2, [sp, #12]
 8013038:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801303c:	9201      	str	r2, [sp, #4]
 801303e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8013042:	9100      	str	r1, [sp, #0]
 8013044:	6841      	ldr	r1, [r0, #4]
 8013046:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801304a:	fb01 2404 	mla	r4, r1, r4, r2
 801304e:	6802      	ldr	r2, [r0, #0]
 8013050:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013054:	f8de 2000 	ldr.w	r2, [lr]
 8013058:	9202      	str	r2, [sp, #8]
 801305a:	9a01      	ldr	r2, [sp, #4]
 801305c:	43d6      	mvns	r6, r2
 801305e:	b2f6      	uxtb	r6, r6
 8013060:	9a00      	ldr	r2, [sp, #0]
 8013062:	2a00      	cmp	r2, #0
 8013064:	dc03      	bgt.n	801306e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8013066:	9a03      	ldr	r2, [sp, #12]
 8013068:	2a00      	cmp	r2, #0
 801306a:	f340 8124 	ble.w	80132b6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801306e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8013070:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8013074:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8013078:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801307c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801307e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8013082:	2b00      	cmp	r3, #0
 8013084:	dd0e      	ble.n	80130a4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013086:	1408      	asrs	r0, r1, #16
 8013088:	d405      	bmi.n	8013096 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801308a:	4560      	cmp	r0, ip
 801308c:	da03      	bge.n	8013096 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801308e:	1410      	asrs	r0, r2, #16
 8013090:	d401      	bmi.n	8013096 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013092:	42b8      	cmp	r0, r7
 8013094:	db07      	blt.n	80130a6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8013096:	9811      	ldr	r0, [sp, #68]	; 0x44
 8013098:	4401      	add	r1, r0
 801309a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801309c:	3b01      	subs	r3, #1
 801309e:	4402      	add	r2, r0
 80130a0:	3402      	adds	r4, #2
 80130a2:	e7ee      	b.n	8013082 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80130a4:	d06e      	beq.n	8013184 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80130a6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80130a8:	1e58      	subs	r0, r3, #1
 80130aa:	fb05 1500 	mla	r5, r5, r0, r1
 80130ae:	142d      	asrs	r5, r5, #16
 80130b0:	d45c      	bmi.n	801316c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80130b2:	4565      	cmp	r5, ip
 80130b4:	da5a      	bge.n	801316c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80130b6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80130b8:	fb05 2000 	mla	r0, r5, r0, r2
 80130bc:	1400      	asrs	r0, r0, #16
 80130be:	d455      	bmi.n	801316c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80130c0:	42b8      	cmp	r0, r7
 80130c2:	da53      	bge.n	801316c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80130c4:	f8bd b004 	ldrh.w	fp, [sp, #4]
 80130c8:	4699      	mov	r9, r3
 80130ca:	46a2      	mov	sl, r4
 80130cc:	f1b9 0f00 	cmp.w	r9, #0
 80130d0:	dd54      	ble.n	801317c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80130d2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80130d6:	140d      	asrs	r5, r1, #16
 80130d8:	1410      	asrs	r0, r2, #16
 80130da:	fb07 5000 	mla	r0, r7, r0, r5
 80130de:	9d02      	ldr	r5, [sp, #8]
 80130e0:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80130e4:	f8ba 5000 	ldrh.w	r5, [sl]
 80130e8:	122f      	asrs	r7, r5, #8
 80130ea:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80130ee:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80130f2:	fb17 f706 	smulbb	r7, r7, r6
 80130f6:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80130fa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80130fe:	00ed      	lsls	r5, r5, #3
 8013100:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8013104:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8013108:	10c7      	asrs	r7, r0, #3
 801310a:	b2ed      	uxtb	r5, r5
 801310c:	00c0      	lsls	r0, r0, #3
 801310e:	fb18 f806 	smulbb	r8, r8, r6
 8013112:	fb15 f506 	smulbb	r5, r5, r6
 8013116:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801311a:	b2c0      	uxtb	r0, r0
 801311c:	fa1f fc8c 	uxth.w	ip, ip
 8013120:	fb07 870b 	mla	r7, r7, fp, r8
 8013124:	fb00 500b 	mla	r0, r0, fp, r5
 8013128:	b280      	uxth	r0, r0
 801312a:	b2bf      	uxth	r7, r7
 801312c:	f10c 0501 	add.w	r5, ip, #1
 8013130:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8013134:	f107 0801 	add.w	r8, r7, #1
 8013138:	1c45      	adds	r5, r0, #1
 801313a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801313e:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8013142:	9811      	ldr	r0, [sp, #68]	; 0x44
 8013144:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8013148:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801314c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8013150:	ea45 0c0c 	orr.w	ip, r5, ip
 8013154:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8013158:	4401      	add	r1, r0
 801315a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801315c:	ea4c 0c08 	orr.w	ip, ip, r8
 8013160:	f82a cb02 	strh.w	ip, [sl], #2
 8013164:	4402      	add	r2, r0
 8013166:	f109 39ff 	add.w	r9, r9, #4294967295
 801316a:	e7af      	b.n	80130cc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801316c:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8013170:	f04f 0800 	mov.w	r8, #0
 8013174:	eb03 0008 	add.w	r0, r3, r8
 8013178:	2800      	cmp	r0, #0
 801317a:	dc41      	bgt.n	8013200 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801317c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013180:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013184:	9b00      	ldr	r3, [sp, #0]
 8013186:	2b00      	cmp	r3, #0
 8013188:	f340 8095 	ble.w	80132b6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801318c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013190:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8013194:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8013198:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801319a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801319e:	ee31 1a05 	vadd.f32	s2, s2, s10
 80131a2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80131a6:	eef0 6a62 	vmov.f32	s13, s5
 80131aa:	ee61 7a27 	vmul.f32	s15, s2, s15
 80131ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80131b2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80131b6:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 80131ba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80131be:	eef0 6a43 	vmov.f32	s13, s6
 80131c2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80131c6:	ee12 2a90 	vmov	r2, s5
 80131ca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80131ce:	fb92 f3f3 	sdiv	r3, r2, r3
 80131d2:	ee13 2a10 	vmov	r2, s6
 80131d6:	9311      	str	r3, [sp, #68]	; 0x44
 80131d8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80131da:	fb92 f3f3 	sdiv	r3, r2, r3
 80131de:	9312      	str	r3, [sp, #72]	; 0x48
 80131e0:	9b00      	ldr	r3, [sp, #0]
 80131e2:	9a03      	ldr	r2, [sp, #12]
 80131e4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80131e8:	3b01      	subs	r3, #1
 80131ea:	9300      	str	r3, [sp, #0]
 80131ec:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 80131f0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80131f2:	eeb0 3a67 	vmov.f32	s6, s15
 80131f6:	bf08      	it	eq
 80131f8:	4613      	moveq	r3, r2
 80131fa:	eef0 2a47 	vmov.f32	s5, s14
 80131fe:	e72f      	b.n	8013060 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8013200:	140f      	asrs	r7, r1, #16
 8013202:	d451      	bmi.n	80132a8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8013204:	f8de 5008 	ldr.w	r5, [lr, #8]
 8013208:	42bd      	cmp	r5, r7
 801320a:	dd4d      	ble.n	80132a8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801320c:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8013210:	d44a      	bmi.n	80132a8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8013212:	f8de 000c 	ldr.w	r0, [lr, #12]
 8013216:	4560      	cmp	r0, ip
 8013218:	dd46      	ble.n	80132a8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801321a:	b22d      	sxth	r5, r5
 801321c:	fb0c 7505 	mla	r5, ip, r5, r7
 8013220:	9802      	ldr	r0, [sp, #8]
 8013222:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8013226:	f06f 0501 	mvn.w	r5, #1
 801322a:	fb05 fb08 	mul.w	fp, r5, r8
 801322e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8013232:	f834 500b 	ldrh.w	r5, [r4, fp]
 8013236:	122f      	asrs	r7, r5, #8
 8013238:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801323c:	fb17 f706 	smulbb	r7, r7, r6
 8013240:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8013244:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013248:	00ed      	lsls	r5, r5, #3
 801324a:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801324e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8013252:	10c7      	asrs	r7, r0, #3
 8013254:	b2ed      	uxtb	r5, r5
 8013256:	00c0      	lsls	r0, r0, #3
 8013258:	fb19 f906 	smulbb	r9, r9, r6
 801325c:	fb15 f506 	smulbb	r5, r5, r6
 8013260:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8013264:	b2c0      	uxtb	r0, r0
 8013266:	fa1f fc8c 	uxth.w	ip, ip
 801326a:	fb07 970a 	mla	r7, r7, sl, r9
 801326e:	fb00 500a 	mla	r0, r0, sl, r5
 8013272:	b2bf      	uxth	r7, r7
 8013274:	b280      	uxth	r0, r0
 8013276:	f10c 0501 	add.w	r5, ip, #1
 801327a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801327e:	f107 0901 	add.w	r9, r7, #1
 8013282:	1c45      	adds	r5, r0, #1
 8013284:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8013288:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801328c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8013290:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8013294:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8013298:	ea45 0c0c 	orr.w	ip, r5, ip
 801329c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80132a0:	ea4c 0c09 	orr.w	ip, ip, r9
 80132a4:	f824 c00b 	strh.w	ip, [r4, fp]
 80132a8:	9811      	ldr	r0, [sp, #68]	; 0x44
 80132aa:	4401      	add	r1, r0
 80132ac:	9812      	ldr	r0, [sp, #72]	; 0x48
 80132ae:	f108 38ff 	add.w	r8, r8, #4294967295
 80132b2:	4402      	add	r2, r0
 80132b4:	e75e      	b.n	8013174 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 80132b6:	b005      	add	sp, #20
 80132b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080132bc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80132bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80132c0:	b085      	sub	sp, #20
 80132c2:	4693      	mov	fp, r2
 80132c4:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80132c6:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80132c8:	6870      	ldr	r0, [r6, #4]
 80132ca:	9101      	str	r1, [sp, #4]
 80132cc:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80132d0:	fb00 2404 	mla	r4, r0, r4, r2
 80132d4:	6832      	ldr	r2, [r6, #0]
 80132d6:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 80132da:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80132de:	682a      	ldr	r2, [r5, #0]
 80132e0:	9202      	str	r2, [sp, #8]
 80132e2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80132e6:	9a01      	ldr	r2, [sp, #4]
 80132e8:	2a00      	cmp	r2, #0
 80132ea:	dc03      	bgt.n	80132f4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80132ec:	f1bb 0f00 	cmp.w	fp, #0
 80132f0:	f340 809a 	ble.w	8013428 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80132f4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80132f6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80132fa:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80132fe:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8013302:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013304:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8013308:	2b00      	cmp	r3, #0
 801330a:	dd0c      	ble.n	8013326 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801330c:	1406      	asrs	r6, r0, #16
 801330e:	d405      	bmi.n	801331c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8013310:	454e      	cmp	r6, r9
 8013312:	da03      	bge.n	801331c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8013314:	1416      	asrs	r6, r2, #16
 8013316:	d401      	bmi.n	801331c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8013318:	4546      	cmp	r6, r8
 801331a:	db05      	blt.n	8013328 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801331c:	4470      	add	r0, lr
 801331e:	4462      	add	r2, ip
 8013320:	3b01      	subs	r3, #1
 8013322:	3402      	adds	r4, #2
 8013324:	e7f0      	b.n	8013308 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8013326:	d00f      	beq.n	8013348 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8013328:	1e5e      	subs	r6, r3, #1
 801332a:	fb0e 0706 	mla	r7, lr, r6, r0
 801332e:	143f      	asrs	r7, r7, #16
 8013330:	d541      	bpl.n	80133b6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8013332:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8013336:	4698      	mov	r8, r3
 8013338:	9603      	str	r6, [sp, #12]
 801333a:	f1b8 0f00 	cmp.w	r8, #0
 801333e:	dc56      	bgt.n	80133ee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8013340:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013344:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013348:	9b01      	ldr	r3, [sp, #4]
 801334a:	2b00      	cmp	r3, #0
 801334c:	dd6c      	ble.n	8013428 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801334e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013352:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013356:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801335a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801335c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013360:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013364:	eeb0 6a62 	vmov.f32	s12, s5
 8013368:	ee61 7a27 	vmul.f32	s15, s2, s15
 801336c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013370:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013374:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8013378:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801337c:	eeb0 6a43 	vmov.f32	s12, s6
 8013380:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013384:	ee12 2a90 	vmov	r2, s5
 8013388:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801338c:	fb92 fef3 	sdiv	lr, r2, r3
 8013390:	ee13 2a10 	vmov	r2, s6
 8013394:	fb92 fcf3 	sdiv	ip, r2, r3
 8013398:	9b01      	ldr	r3, [sp, #4]
 801339a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801339e:	3b01      	subs	r3, #1
 80133a0:	9301      	str	r3, [sp, #4]
 80133a2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80133a6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80133a8:	eeb0 3a67 	vmov.f32	s6, s15
 80133ac:	bf08      	it	eq
 80133ae:	465b      	moveq	r3, fp
 80133b0:	eef0 2a47 	vmov.f32	s5, s14
 80133b4:	e797      	b.n	80132e6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80133b6:	454f      	cmp	r7, r9
 80133b8:	dabb      	bge.n	8013332 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80133ba:	fb0c 2606 	mla	r6, ip, r6, r2
 80133be:	1436      	asrs	r6, r6, #16
 80133c0:	d4b7      	bmi.n	8013332 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80133c2:	4546      	cmp	r6, r8
 80133c4:	dab5      	bge.n	8013332 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80133c6:	461e      	mov	r6, r3
 80133c8:	46a0      	mov	r8, r4
 80133ca:	2e00      	cmp	r6, #0
 80133cc:	ddb8      	ble.n	8013340 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80133ce:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80133d2:	9902      	ldr	r1, [sp, #8]
 80133d4:	1417      	asrs	r7, r2, #16
 80133d6:	ea4f 4920 	mov.w	r9, r0, asr #16
 80133da:	fb0a 9707 	mla	r7, sl, r7, r9
 80133de:	4470      	add	r0, lr
 80133e0:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80133e4:	f828 7b02 	strh.w	r7, [r8], #2
 80133e8:	4462      	add	r2, ip
 80133ea:	3e01      	subs	r6, #1
 80133ec:	e7ed      	b.n	80133ca <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 80133ee:	ea5f 4920 	movs.w	r9, r0, asr #16
 80133f2:	d414      	bmi.n	801341e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80133f4:	68ae      	ldr	r6, [r5, #8]
 80133f6:	454e      	cmp	r6, r9
 80133f8:	dd11      	ble.n	801341e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80133fa:	ea5f 4a22 	movs.w	sl, r2, asr #16
 80133fe:	d40e      	bmi.n	801341e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8013400:	68ef      	ldr	r7, [r5, #12]
 8013402:	4557      	cmp	r7, sl
 8013404:	dd0b      	ble.n	801341e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8013406:	b236      	sxth	r6, r6
 8013408:	fb0a 9606 	mla	r6, sl, r6, r9
 801340c:	9f02      	ldr	r7, [sp, #8]
 801340e:	f06f 0101 	mvn.w	r1, #1
 8013412:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8013416:	fb01 f608 	mul.w	r6, r1, r8
 801341a:	9903      	ldr	r1, [sp, #12]
 801341c:	538f      	strh	r7, [r1, r6]
 801341e:	4470      	add	r0, lr
 8013420:	4462      	add	r2, ip
 8013422:	f108 38ff 	add.w	r8, r8, #4294967295
 8013426:	e788      	b.n	801333a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013428:	b005      	add	sp, #20
 801342a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801342e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801342e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013432:	b087      	sub	sp, #28
 8013434:	468b      	mov	fp, r1
 8013436:	9815      	ldr	r0, [sp, #84]	; 0x54
 8013438:	9203      	str	r2, [sp, #12]
 801343a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801343e:	9204      	str	r2, [sp, #16]
 8013440:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8013444:	6841      	ldr	r1, [r0, #4]
 8013446:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801344a:	fb01 2505 	mla	r5, r1, r5, r2
 801344e:	6802      	ldr	r2, [r0, #0]
 8013450:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8013454:	f8d9 2000 	ldr.w	r2, [r9]
 8013458:	9201      	str	r2, [sp, #4]
 801345a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801345e:	f1bb 0f00 	cmp.w	fp, #0
 8013462:	dc03      	bgt.n	801346c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8013464:	9a03      	ldr	r2, [sp, #12]
 8013466:	2a00      	cmp	r2, #0
 8013468:	f340 8159 	ble.w	801371e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801346c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801346e:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8013472:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8013476:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801347a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801347c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8013480:	2b00      	cmp	r3, #0
 8013482:	dd0e      	ble.n	80134a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8013484:	1402      	asrs	r2, r0, #16
 8013486:	d405      	bmi.n	8013494 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013488:	42ba      	cmp	r2, r7
 801348a:	da03      	bge.n	8013494 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801348c:	140a      	asrs	r2, r1, #16
 801348e:	d401      	bmi.n	8013494 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013490:	42b2      	cmp	r2, r6
 8013492:	db07      	blt.n	80134a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013494:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013496:	4410      	add	r0, r2
 8013498:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801349a:	3b01      	subs	r3, #1
 801349c:	4411      	add	r1, r2
 801349e:	3502      	adds	r5, #2
 80134a0:	e7ee      	b.n	8013480 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80134a2:	d017      	beq.n	80134d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80134a4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80134a6:	1e5a      	subs	r2, r3, #1
 80134a8:	fb04 0402 	mla	r4, r4, r2, r0
 80134ac:	1424      	asrs	r4, r4, #16
 80134ae:	d409      	bmi.n	80134c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80134b0:	42bc      	cmp	r4, r7
 80134b2:	da07      	bge.n	80134c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80134b4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80134b6:	fb04 1202 	mla	r2, r4, r2, r1
 80134ba:	1412      	asrs	r2, r2, #16
 80134bc:	d402      	bmi.n	80134c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80134be:	42b2      	cmp	r2, r6
 80134c0:	f2c0 80bf 	blt.w	8013642 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80134c4:	2700      	movs	r7, #0
 80134c6:	19da      	adds	r2, r3, r7
 80134c8:	2a00      	cmp	r2, #0
 80134ca:	dc3e      	bgt.n	801354a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80134cc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80134d0:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80134d4:	f1bb 0f00 	cmp.w	fp, #0
 80134d8:	f340 8121 	ble.w	801371e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80134dc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80134e0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80134e4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80134e8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80134ea:	f1bb 0b01 	subs.w	fp, fp, #1
 80134ee:	ee31 1a05 	vadd.f32	s2, s2, s10
 80134f2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80134f6:	eeb0 6a62 	vmov.f32	s12, s5
 80134fa:	ee61 7a27 	vmul.f32	s15, s2, s15
 80134fe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013502:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013506:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801350a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801350e:	eeb0 6a43 	vmov.f32	s12, s6
 8013512:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013516:	ee12 2a90 	vmov	r2, s5
 801351a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801351e:	fb92 f3f3 	sdiv	r3, r2, r3
 8013522:	ee13 2a10 	vmov	r2, s6
 8013526:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801352a:	9313      	str	r3, [sp, #76]	; 0x4c
 801352c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801352e:	fb92 f3f3 	sdiv	r3, r2, r3
 8013532:	9a03      	ldr	r2, [sp, #12]
 8013534:	9314      	str	r3, [sp, #80]	; 0x50
 8013536:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801353a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801353c:	eeb0 3a67 	vmov.f32	s6, s15
 8013540:	bf08      	it	eq
 8013542:	4613      	moveq	r3, r2
 8013544:	eef0 2a47 	vmov.f32	s5, s14
 8013548:	e789      	b.n	801345e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801354a:	1406      	asrs	r6, r0, #16
 801354c:	d42d      	bmi.n	80135aa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801354e:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8013552:	42b4      	cmp	r4, r6
 8013554:	dd29      	ble.n	80135aa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8013556:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801355a:	d426      	bmi.n	80135aa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801355c:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8013560:	4562      	cmp	r2, ip
 8013562:	dd22      	ble.n	80135aa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8013564:	b224      	sxth	r4, r4
 8013566:	9a01      	ldr	r2, [sp, #4]
 8013568:	fb0c 6404 	mla	r4, ip, r4, r6
 801356c:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8013570:	0e22      	lsrs	r2, r4, #24
 8013572:	d01a      	beq.n	80135aa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8013574:	9e04      	ldr	r6, [sp, #16]
 8013576:	4372      	muls	r2, r6
 8013578:	1c56      	adds	r6, r2, #1
 801357a:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801357e:	1212      	asrs	r2, r2, #8
 8013580:	0a26      	lsrs	r6, r4, #8
 8013582:	2aff      	cmp	r2, #255	; 0xff
 8013584:	9605      	str	r6, [sp, #20]
 8013586:	d116      	bne.n	80135b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8013588:	f06f 0201 	mvn.w	r2, #1
 801358c:	fb02 fc07 	mul.w	ip, r2, r7
 8013590:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8013594:	0962      	lsrs	r2, r4, #5
 8013596:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801359a:	f026 0607 	bic.w	r6, r6, #7
 801359e:	4316      	orrs	r6, r2
 80135a0:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80135a4:	4326      	orrs	r6, r4
 80135a6:	f825 600c 	strh.w	r6, [r5, ip]
 80135aa:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80135ac:	4410      	add	r0, r2
 80135ae:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80135b0:	3f01      	subs	r7, #1
 80135b2:	4411      	add	r1, r2
 80135b4:	e787      	b.n	80134c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80135b6:	f06f 0601 	mvn.w	r6, #1
 80135ba:	437e      	muls	r6, r7
 80135bc:	fa1f fa82 	uxth.w	sl, r2
 80135c0:	f835 8006 	ldrh.w	r8, [r5, r6]
 80135c4:	9602      	str	r6, [sp, #8]
 80135c6:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80135ca:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 80135ce:	43d2      	mvns	r2, r2
 80135d0:	b2d2      	uxtb	r2, r2
 80135d2:	fb1c fc0a 	smulbb	ip, ip, sl
 80135d6:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80135da:	fb0e ce02 	mla	lr, lr, r2, ip
 80135de:	b2e4      	uxtb	r4, r4
 80135e0:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 80135e4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80135e8:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80135ec:	fa5f f888 	uxtb.w	r8, r8
 80135f0:	fb14 f40a 	smulbb	r4, r4, sl
 80135f4:	fb08 4402 	mla	r4, r8, r2, r4
 80135f8:	fa1f fe8e 	uxth.w	lr, lr
 80135fc:	fb16 f60a 	smulbb	r6, r6, sl
 8013600:	b2a4      	uxth	r4, r4
 8013602:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8013606:	fb0c 6c02 	mla	ip, ip, r2, r6
 801360a:	f10e 0201 	add.w	r2, lr, #1
 801360e:	1c66      	adds	r6, r4, #1
 8013610:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8013614:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8013618:	fa1f fc8c 	uxth.w	ip, ip
 801361c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8013620:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8013624:	ea46 0e0e 	orr.w	lr, r6, lr
 8013628:	f10c 0601 	add.w	r6, ip, #1
 801362c:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8013630:	0976      	lsrs	r6, r6, #5
 8013632:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8013636:	9a02      	ldr	r2, [sp, #8]
 8013638:	ea4e 0e06 	orr.w	lr, lr, r6
 801363c:	f825 e002 	strh.w	lr, [r5, r2]
 8013640:	e7b3      	b.n	80135aa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8013642:	f04f 0800 	mov.w	r8, #0
 8013646:	eba3 0208 	sub.w	r2, r3, r8
 801364a:	2a00      	cmp	r2, #0
 801364c:	f77f af3e 	ble.w	80134cc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8013650:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8013654:	1404      	asrs	r4, r0, #16
 8013656:	140a      	asrs	r2, r1, #16
 8013658:	fb06 4202 	mla	r2, r6, r2, r4
 801365c:	9c01      	ldr	r4, [sp, #4]
 801365e:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8013662:	0e22      	lsrs	r2, r4, #24
 8013664:	d016      	beq.n	8013694 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8013666:	9e04      	ldr	r6, [sp, #16]
 8013668:	4372      	muls	r2, r6
 801366a:	1c56      	adds	r6, r2, #1
 801366c:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8013670:	1212      	asrs	r2, r2, #8
 8013672:	2aff      	cmp	r2, #255	; 0xff
 8013674:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8013678:	d113      	bne.n	80136a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801367a:	0962      	lsrs	r2, r4, #5
 801367c:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8013680:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8013684:	f026 0607 	bic.w	r6, r6, #7
 8013688:	4316      	orrs	r6, r2
 801368a:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801368e:	4326      	orrs	r6, r4
 8013690:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8013694:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013696:	4410      	add	r0, r2
 8013698:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801369a:	f108 0801 	add.w	r8, r8, #1
 801369e:	4411      	add	r1, r2
 80136a0:	e7d1      	b.n	8013646 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 80136a2:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 80136a6:	fa1f fa82 	uxth.w	sl, r2
 80136aa:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80136ae:	f3c4 4707 	ubfx	r7, r4, #16, #8
 80136b2:	43d2      	mvns	r2, r2
 80136b4:	b2d2      	uxtb	r2, r2
 80136b6:	fb17 f70a 	smulbb	r7, r7, sl
 80136ba:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80136be:	fb0c 7c02 	mla	ip, ip, r2, r7
 80136c2:	b2e4      	uxtb	r4, r4
 80136c4:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80136c8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80136cc:	fa5f fe8e 	uxtb.w	lr, lr
 80136d0:	fb14 f40a 	smulbb	r4, r4, sl
 80136d4:	fb0e 4402 	mla	r4, lr, r2, r4
 80136d8:	b2f6      	uxtb	r6, r6
 80136da:	fa1f fc8c 	uxth.w	ip, ip
 80136de:	fb16 f60a 	smulbb	r6, r6, sl
 80136e2:	b2a4      	uxth	r4, r4
 80136e4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80136e8:	fb07 6702 	mla	r7, r7, r2, r6
 80136ec:	f10c 0201 	add.w	r2, ip, #1
 80136f0:	1c66      	adds	r6, r4, #1
 80136f2:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80136f6:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80136fa:	b2bf      	uxth	r7, r7
 80136fc:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8013700:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8013704:	ea46 0c0c 	orr.w	ip, r6, ip
 8013708:	1c7e      	adds	r6, r7, #1
 801370a:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801370e:	0976      	lsrs	r6, r6, #5
 8013710:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8013714:	ea4c 0c06 	orr.w	ip, ip, r6
 8013718:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801371c:	e7ba      	b.n	8013694 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801371e:	b007      	add	sp, #28
 8013720:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013724 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013724:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013728:	b085      	sub	sp, #20
 801372a:	468b      	mov	fp, r1
 801372c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801372e:	9203      	str	r2, [sp, #12]
 8013730:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8013734:	6841      	ldr	r1, [r0, #4]
 8013736:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801373a:	fb01 2404 	mla	r4, r1, r4, r2
 801373e:	6802      	ldr	r2, [r0, #0]
 8013740:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013744:	f8d8 2000 	ldr.w	r2, [r8]
 8013748:	9201      	str	r2, [sp, #4]
 801374a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801374e:	f1bb 0f00 	cmp.w	fp, #0
 8013752:	dc03      	bgt.n	801375c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8013754:	9a03      	ldr	r2, [sp, #12]
 8013756:	2a00      	cmp	r2, #0
 8013758:	f340 814f 	ble.w	80139fa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801375c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801375e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8013762:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8013766:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801376a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801376c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8013770:	2b00      	cmp	r3, #0
 8013772:	dd0e      	ble.n	8013792 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8013774:	1408      	asrs	r0, r1, #16
 8013776:	d405      	bmi.n	8013784 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8013778:	42b8      	cmp	r0, r7
 801377a:	da03      	bge.n	8013784 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801377c:	1410      	asrs	r0, r2, #16
 801377e:	d401      	bmi.n	8013784 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8013780:	42b0      	cmp	r0, r6
 8013782:	db07      	blt.n	8013794 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013784:	9811      	ldr	r0, [sp, #68]	; 0x44
 8013786:	4401      	add	r1, r0
 8013788:	9812      	ldr	r0, [sp, #72]	; 0x48
 801378a:	3b01      	subs	r3, #1
 801378c:	4402      	add	r2, r0
 801378e:	3402      	adds	r4, #2
 8013790:	e7ee      	b.n	8013770 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8013792:	d017      	beq.n	80137c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8013794:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8013796:	1e58      	subs	r0, r3, #1
 8013798:	fb05 1500 	mla	r5, r5, r0, r1
 801379c:	142d      	asrs	r5, r5, #16
 801379e:	d409      	bmi.n	80137b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80137a0:	42bd      	cmp	r5, r7
 80137a2:	da07      	bge.n	80137b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80137a4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80137a6:	fb05 2000 	mla	r0, r5, r0, r2
 80137aa:	1400      	asrs	r0, r0, #16
 80137ac:	d402      	bmi.n	80137b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80137ae:	42b0      	cmp	r0, r6
 80137b0:	f2c0 80ba 	blt.w	8013928 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80137b4:	2600      	movs	r6, #0
 80137b6:	1998      	adds	r0, r3, r6
 80137b8:	2800      	cmp	r0, #0
 80137ba:	dc3e      	bgt.n	801383a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80137bc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80137c0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80137c4:	f1bb 0f00 	cmp.w	fp, #0
 80137c8:	f340 8117 	ble.w	80139fa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80137cc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80137d0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80137d4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80137d8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80137da:	f1bb 0b01 	subs.w	fp, fp, #1
 80137de:	ee31 1a05 	vadd.f32	s2, s2, s10
 80137e2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80137e6:	eeb0 6a62 	vmov.f32	s12, s5
 80137ea:	ee61 7a27 	vmul.f32	s15, s2, s15
 80137ee:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80137f2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80137f6:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80137fa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80137fe:	eeb0 6a43 	vmov.f32	s12, s6
 8013802:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013806:	ee12 2a90 	vmov	r2, s5
 801380a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801380e:	fb92 f3f3 	sdiv	r3, r2, r3
 8013812:	ee13 2a10 	vmov	r2, s6
 8013816:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801381a:	9311      	str	r3, [sp, #68]	; 0x44
 801381c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801381e:	fb92 f3f3 	sdiv	r3, r2, r3
 8013822:	9a03      	ldr	r2, [sp, #12]
 8013824:	9312      	str	r3, [sp, #72]	; 0x48
 8013826:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801382a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801382c:	eeb0 3a67 	vmov.f32	s6, s15
 8013830:	bf08      	it	eq
 8013832:	4613      	moveq	r3, r2
 8013834:	eef0 2a47 	vmov.f32	s5, s14
 8013838:	e789      	b.n	801374e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801383a:	140f      	asrs	r7, r1, #16
 801383c:	d424      	bmi.n	8013888 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801383e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8013842:	42bd      	cmp	r5, r7
 8013844:	dd20      	ble.n	8013888 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8013846:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801384a:	d41d      	bmi.n	8013888 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801384c:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8013850:	4560      	cmp	r0, ip
 8013852:	dd19      	ble.n	8013888 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8013854:	b22d      	sxth	r5, r5
 8013856:	fb0c 7505 	mla	r5, ip, r5, r7
 801385a:	9801      	ldr	r0, [sp, #4]
 801385c:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8013860:	0e07      	lsrs	r7, r0, #24
 8013862:	2fff      	cmp	r7, #255	; 0xff
 8013864:	d116      	bne.n	8013894 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013866:	f06f 0501 	mvn.w	r5, #1
 801386a:	fb05 f706 	mul.w	r7, r5, r6
 801386e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8013872:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8013876:	0945      	lsrs	r5, r0, #5
 8013878:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801387c:	ea4c 0505 	orr.w	r5, ip, r5
 8013880:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8013884:	4305      	orrs	r5, r0
 8013886:	53e5      	strh	r5, [r4, r7]
 8013888:	9811      	ldr	r0, [sp, #68]	; 0x44
 801388a:	4401      	add	r1, r0
 801388c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801388e:	3e01      	subs	r6, #1
 8013890:	4402      	add	r2, r0
 8013892:	e790      	b.n	80137b6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8013894:	b2fd      	uxtb	r5, r7
 8013896:	2f00      	cmp	r7, #0
 8013898:	d0f6      	beq.n	8013888 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801389a:	f06f 0701 	mvn.w	r7, #1
 801389e:	4377      	muls	r7, r6
 80138a0:	fa1f f985 	uxth.w	r9, r5
 80138a4:	f834 e007 	ldrh.w	lr, [r4, r7]
 80138a8:	9702      	str	r7, [sp, #8]
 80138aa:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80138ae:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80138b2:	43ed      	mvns	r5, r5
 80138b4:	b2ed      	uxtb	r5, r5
 80138b6:	fb17 f709 	smulbb	r7, r7, r9
 80138ba:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80138be:	fb0c 7c05 	mla	ip, ip, r5, r7
 80138c2:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80138c6:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80138ca:	b2c0      	uxtb	r0, r0
 80138cc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80138d0:	fa5f fe8e 	uxtb.w	lr, lr
 80138d4:	fb10 f009 	smulbb	r0, r0, r9
 80138d8:	fb0e 0005 	mla	r0, lr, r5, r0
 80138dc:	b280      	uxth	r0, r0
 80138de:	fa1f fc8c 	uxth.w	ip, ip
 80138e2:	fb1a fa09 	smulbb	sl, sl, r9
 80138e6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80138ea:	fb07 a705 	mla	r7, r7, r5, sl
 80138ee:	f100 0a01 	add.w	sl, r0, #1
 80138f2:	f10c 0501 	add.w	r5, ip, #1
 80138f6:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80138fa:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80138fe:	b2bf      	uxth	r7, r7
 8013900:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013904:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8013908:	ea4a 0c0c 	orr.w	ip, sl, ip
 801390c:	f107 0a01 	add.w	sl, r7, #1
 8013910:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8013914:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013918:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801391c:	9802      	ldr	r0, [sp, #8]
 801391e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8013922:	f824 c000 	strh.w	ip, [r4, r0]
 8013926:	e7af      	b.n	8013888 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8013928:	f04f 0e00 	mov.w	lr, #0
 801392c:	eba3 000e 	sub.w	r0, r3, lr
 8013930:	2800      	cmp	r0, #0
 8013932:	f77f af43 	ble.w	80137bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8013936:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801393a:	140d      	asrs	r5, r1, #16
 801393c:	1410      	asrs	r0, r2, #16
 801393e:	fb06 5000 	mla	r0, r6, r0, r5
 8013942:	9d01      	ldr	r5, [sp, #4]
 8013944:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8013948:	0e2e      	lsrs	r6, r5, #24
 801394a:	2eff      	cmp	r6, #255	; 0xff
 801394c:	d112      	bne.n	8013974 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801394e:	482c      	ldr	r0, [pc, #176]	; (8013a00 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8013950:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8013954:	0968      	lsrs	r0, r5, #5
 8013956:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801395a:	4330      	orrs	r0, r6
 801395c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8013960:	4328      	orrs	r0, r5
 8013962:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8013966:	9811      	ldr	r0, [sp, #68]	; 0x44
 8013968:	4401      	add	r1, r0
 801396a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801396c:	f10e 0e01 	add.w	lr, lr, #1
 8013970:	4402      	add	r2, r0
 8013972:	e7db      	b.n	801392c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8013974:	b2f0      	uxtb	r0, r6
 8013976:	2e00      	cmp	r6, #0
 8013978:	d0f5      	beq.n	8013966 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801397a:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801397e:	fa1f f980 	uxth.w	r9, r0
 8013982:	ea4f 272c 	mov.w	r7, ip, asr #8
 8013986:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801398a:	43c0      	mvns	r0, r0
 801398c:	b2c0      	uxtb	r0, r0
 801398e:	fb16 f609 	smulbb	r6, r6, r9
 8013992:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013996:	fb07 6700 	mla	r7, r7, r0, r6
 801399a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801399e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80139a2:	b2ed      	uxtb	r5, r5
 80139a4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80139a8:	fa5f fc8c 	uxtb.w	ip, ip
 80139ac:	fb15 f509 	smulbb	r5, r5, r9
 80139b0:	fb0c 5500 	mla	r5, ip, r0, r5
 80139b4:	b2bf      	uxth	r7, r7
 80139b6:	fb1a fa09 	smulbb	sl, sl, r9
 80139ba:	b2ad      	uxth	r5, r5
 80139bc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80139c0:	fb06 a600 	mla	r6, r6, r0, sl
 80139c4:	1c78      	adds	r0, r7, #1
 80139c6:	f105 0a01 	add.w	sl, r5, #1
 80139ca:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80139ce:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80139d2:	b2b6      	uxth	r6, r6
 80139d4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80139d8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80139dc:	ea4a 0707 	orr.w	r7, sl, r7
 80139e0:	f106 0a01 	add.w	sl, r6, #1
 80139e4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80139e8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80139ec:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80139f0:	ea47 070a 	orr.w	r7, r7, sl
 80139f4:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 80139f8:	e7b5      	b.n	8013966 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80139fa:	b005      	add	sp, #20
 80139fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013a00:	fffff800 	.word	0xfffff800

08013a04 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013a04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013a08:	b087      	sub	sp, #28
 8013a0a:	468b      	mov	fp, r1
 8013a0c:	9815      	ldr	r0, [sp, #84]	; 0x54
 8013a0e:	9203      	str	r2, [sp, #12]
 8013a10:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8013a14:	9204      	str	r2, [sp, #16]
 8013a16:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8013a1a:	6841      	ldr	r1, [r0, #4]
 8013a1c:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8013a20:	fb01 2404 	mla	r4, r1, r4, r2
 8013a24:	6802      	ldr	r2, [r0, #0]
 8013a26:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013a2a:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8013a2e:	3201      	adds	r2, #1
 8013a30:	f022 0201 	bic.w	r2, r2, #1
 8013a34:	9200      	str	r2, [sp, #0]
 8013a36:	f8d9 2000 	ldr.w	r2, [r9]
 8013a3a:	9201      	str	r2, [sp, #4]
 8013a3c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8013a40:	f1bb 0f00 	cmp.w	fp, #0
 8013a44:	dc03      	bgt.n	8013a4e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8013a46:	9a03      	ldr	r2, [sp, #12]
 8013a48:	2a00      	cmp	r2, #0
 8013a4a:	f340 8169 	ble.w	8013d20 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8013a4e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8013a50:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8013a54:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8013a58:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8013a5c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8013a5e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8013a62:	2b00      	cmp	r3, #0
 8013a64:	dd0e      	ble.n	8013a84 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8013a66:	1402      	asrs	r2, r0, #16
 8013a68:	d405      	bmi.n	8013a76 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013a6a:	42ba      	cmp	r2, r7
 8013a6c:	da03      	bge.n	8013a76 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013a6e:	140a      	asrs	r2, r1, #16
 8013a70:	d401      	bmi.n	8013a76 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013a72:	42b2      	cmp	r2, r6
 8013a74:	db07      	blt.n	8013a86 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8013a76:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013a78:	4410      	add	r0, r2
 8013a7a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013a7c:	3b01      	subs	r3, #1
 8013a7e:	4411      	add	r1, r2
 8013a80:	3402      	adds	r4, #2
 8013a82:	e7ee      	b.n	8013a62 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8013a84:	d017      	beq.n	8013ab6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8013a86:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8013a88:	1e5a      	subs	r2, r3, #1
 8013a8a:	fb05 0502 	mla	r5, r5, r2, r0
 8013a8e:	142d      	asrs	r5, r5, #16
 8013a90:	d409      	bmi.n	8013aa6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8013a92:	42bd      	cmp	r5, r7
 8013a94:	da07      	bge.n	8013aa6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8013a96:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8013a98:	fb05 1202 	mla	r2, r5, r2, r1
 8013a9c:	1412      	asrs	r2, r2, #16
 8013a9e:	d402      	bmi.n	8013aa6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8013aa0:	42b2      	cmp	r2, r6
 8013aa2:	f2c0 80c7 	blt.w	8013c34 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8013aa6:	2700      	movs	r7, #0
 8013aa8:	19da      	adds	r2, r3, r7
 8013aaa:	2a00      	cmp	r2, #0
 8013aac:	dc3e      	bgt.n	8013b2c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8013aae:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013ab2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013ab6:	f1bb 0f00 	cmp.w	fp, #0
 8013aba:	f340 8131 	ble.w	8013d20 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8013abe:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013ac2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013ac6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013aca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013acc:	f1bb 0b01 	subs.w	fp, fp, #1
 8013ad0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013ad4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013ad8:	eeb0 6a62 	vmov.f32	s12, s5
 8013adc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013ae0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013ae4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013ae8:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8013aec:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013af0:	eeb0 6a43 	vmov.f32	s12, s6
 8013af4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013af8:	ee12 2a90 	vmov	r2, s5
 8013afc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013b00:	fb92 f3f3 	sdiv	r3, r2, r3
 8013b04:	ee13 2a10 	vmov	r2, s6
 8013b08:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013b0c:	9313      	str	r3, [sp, #76]	; 0x4c
 8013b0e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013b10:	fb92 f3f3 	sdiv	r3, r2, r3
 8013b14:	9a03      	ldr	r2, [sp, #12]
 8013b16:	9314      	str	r3, [sp, #80]	; 0x50
 8013b18:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8013b1c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013b1e:	eeb0 3a67 	vmov.f32	s6, s15
 8013b22:	bf08      	it	eq
 8013b24:	4613      	moveq	r3, r2
 8013b26:	eef0 2a47 	vmov.f32	s5, s14
 8013b2a:	e789      	b.n	8013a40 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8013b2c:	1405      	asrs	r5, r0, #16
 8013b2e:	d435      	bmi.n	8013b9c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8013b30:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8013b34:	42aa      	cmp	r2, r5
 8013b36:	dd31      	ble.n	8013b9c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8013b38:	140e      	asrs	r6, r1, #16
 8013b3a:	d42f      	bmi.n	8013b9c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8013b3c:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8013b40:	42b2      	cmp	r2, r6
 8013b42:	dd2b      	ble.n	8013b9c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8013b44:	9a00      	ldr	r2, [sp, #0]
 8013b46:	fb06 5502 	mla	r5, r6, r2, r5
 8013b4a:	086a      	lsrs	r2, r5, #1
 8013b4c:	9e01      	ldr	r6, [sp, #4]
 8013b4e:	5cb2      	ldrb	r2, [r6, r2]
 8013b50:	07ee      	lsls	r6, r5, #31
 8013b52:	bf54      	ite	pl
 8013b54:	f002 020f 	andpl.w	r2, r2, #15
 8013b58:	1112      	asrmi	r2, r2, #4
 8013b5a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8013b5e:	b2d2      	uxtb	r2, r2
 8013b60:	b1e2      	cbz	r2, 8013b9c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8013b62:	9d04      	ldr	r5, [sp, #16]
 8013b64:	436a      	muls	r2, r5
 8013b66:	1c55      	adds	r5, r2, #1
 8013b68:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8013b6c:	4d6e      	ldr	r5, [pc, #440]	; (8013d28 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8013b6e:	682d      	ldr	r5, [r5, #0]
 8013b70:	1212      	asrs	r2, r2, #8
 8013b72:	0a2e      	lsrs	r6, r5, #8
 8013b74:	2aff      	cmp	r2, #255	; 0xff
 8013b76:	9605      	str	r6, [sp, #20]
 8013b78:	d116      	bne.n	8013ba8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8013b7a:	f06f 0201 	mvn.w	r2, #1
 8013b7e:	fb02 fc07 	mul.w	ip, r2, r7
 8013b82:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8013b86:	096a      	lsrs	r2, r5, #5
 8013b88:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8013b8c:	f026 0607 	bic.w	r6, r6, #7
 8013b90:	4316      	orrs	r6, r2
 8013b92:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8013b96:	432e      	orrs	r6, r5
 8013b98:	f824 600c 	strh.w	r6, [r4, ip]
 8013b9c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013b9e:	4410      	add	r0, r2
 8013ba0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013ba2:	3f01      	subs	r7, #1
 8013ba4:	4411      	add	r1, r2
 8013ba6:	e77f      	b.n	8013aa8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8013ba8:	f06f 0601 	mvn.w	r6, #1
 8013bac:	437e      	muls	r6, r7
 8013bae:	fa1f fa82 	uxth.w	sl, r2
 8013bb2:	f834 8006 	ldrh.w	r8, [r4, r6]
 8013bb6:	9602      	str	r6, [sp, #8]
 8013bb8:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8013bbc:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8013bc0:	43d2      	mvns	r2, r2
 8013bc2:	b2d2      	uxtb	r2, r2
 8013bc4:	fb1c fc0a 	smulbb	ip, ip, sl
 8013bc8:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8013bcc:	fb0e ce02 	mla	lr, lr, r2, ip
 8013bd0:	b2ed      	uxtb	r5, r5
 8013bd2:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8013bd6:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8013bda:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8013bde:	fa5f f888 	uxtb.w	r8, r8
 8013be2:	fb15 f50a 	smulbb	r5, r5, sl
 8013be6:	fb08 5502 	mla	r5, r8, r2, r5
 8013bea:	fa1f fe8e 	uxth.w	lr, lr
 8013bee:	fb16 f60a 	smulbb	r6, r6, sl
 8013bf2:	b2ad      	uxth	r5, r5
 8013bf4:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8013bf8:	fb0c 6c02 	mla	ip, ip, r2, r6
 8013bfc:	f10e 0201 	add.w	r2, lr, #1
 8013c00:	1c6e      	adds	r6, r5, #1
 8013c02:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8013c06:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8013c0a:	fa1f fc8c 	uxth.w	ip, ip
 8013c0e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8013c12:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8013c16:	ea46 0e0e 	orr.w	lr, r6, lr
 8013c1a:	f10c 0601 	add.w	r6, ip, #1
 8013c1e:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8013c22:	0976      	lsrs	r6, r6, #5
 8013c24:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8013c28:	9a02      	ldr	r2, [sp, #8]
 8013c2a:	ea4e 0e06 	orr.w	lr, lr, r6
 8013c2e:	f824 e002 	strh.w	lr, [r4, r2]
 8013c32:	e7b3      	b.n	8013b9c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8013c34:	f04f 0800 	mov.w	r8, #0
 8013c38:	eba3 0208 	sub.w	r2, r3, r8
 8013c3c:	2a00      	cmp	r2, #0
 8013c3e:	f77f af36 	ble.w	8013aae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8013c42:	9e00      	ldr	r6, [sp, #0]
 8013c44:	1402      	asrs	r2, r0, #16
 8013c46:	140d      	asrs	r5, r1, #16
 8013c48:	fb06 2505 	mla	r5, r6, r5, r2
 8013c4c:	086a      	lsrs	r2, r5, #1
 8013c4e:	9e01      	ldr	r6, [sp, #4]
 8013c50:	5cb2      	ldrb	r2, [r6, r2]
 8013c52:	07ed      	lsls	r5, r5, #31
 8013c54:	bf54      	ite	pl
 8013c56:	f002 020f 	andpl.w	r2, r2, #15
 8013c5a:	1112      	asrmi	r2, r2, #4
 8013c5c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8013c60:	b2d2      	uxtb	r2, r2
 8013c62:	b1c2      	cbz	r2, 8013c96 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8013c64:	9d04      	ldr	r5, [sp, #16]
 8013c66:	436a      	muls	r2, r5
 8013c68:	1c55      	adds	r5, r2, #1
 8013c6a:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8013c6e:	4d2e      	ldr	r5, [pc, #184]	; (8013d28 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8013c70:	1212      	asrs	r2, r2, #8
 8013c72:	682e      	ldr	r6, [r5, #0]
 8013c74:	2aff      	cmp	r2, #255	; 0xff
 8013c76:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8013c7a:	d113      	bne.n	8013ca4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8013c7c:	0972      	lsrs	r2, r6, #5
 8013c7e:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 8013c82:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8013c86:	f025 0507 	bic.w	r5, r5, #7
 8013c8a:	4315      	orrs	r5, r2
 8013c8c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8013c90:	4335      	orrs	r5, r6
 8013c92:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8013c96:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013c98:	4410      	add	r0, r2
 8013c9a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013c9c:	f108 0801 	add.w	r8, r8, #1
 8013ca0:	4411      	add	r1, r2
 8013ca2:	e7c9      	b.n	8013c38 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8013ca4:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8013ca8:	fa1f fa82 	uxth.w	sl, r2
 8013cac:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8013cb0:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8013cb4:	43d2      	mvns	r2, r2
 8013cb6:	b2d2      	uxtb	r2, r2
 8013cb8:	fb17 f70a 	smulbb	r7, r7, sl
 8013cbc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013cc0:	fb0c 7c02 	mla	ip, ip, r2, r7
 8013cc4:	b2f6      	uxtb	r6, r6
 8013cc6:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8013cca:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013cce:	fa5f fe8e 	uxtb.w	lr, lr
 8013cd2:	fb16 f60a 	smulbb	r6, r6, sl
 8013cd6:	fb0e 6602 	mla	r6, lr, r2, r6
 8013cda:	b2ed      	uxtb	r5, r5
 8013cdc:	fa1f fc8c 	uxth.w	ip, ip
 8013ce0:	fb15 f50a 	smulbb	r5, r5, sl
 8013ce4:	b2b6      	uxth	r6, r6
 8013ce6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8013cea:	fb07 5702 	mla	r7, r7, r2, r5
 8013cee:	f10c 0201 	add.w	r2, ip, #1
 8013cf2:	1c75      	adds	r5, r6, #1
 8013cf4:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8013cf8:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8013cfc:	b2bf      	uxth	r7, r7
 8013cfe:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8013d02:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8013d06:	ea45 0c0c 	orr.w	ip, r5, ip
 8013d0a:	1c7d      	adds	r5, r7, #1
 8013d0c:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8013d10:	096d      	lsrs	r5, r5, #5
 8013d12:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8013d16:	ea4c 0c05 	orr.w	ip, ip, r5
 8013d1a:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8013d1e:	e7ba      	b.n	8013c96 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8013d20:	b007      	add	sp, #28
 8013d22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013d26:	bf00      	nop
 8013d28:	200135b8 	.word	0x200135b8

08013d2c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013d2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013d30:	b087      	sub	sp, #28
 8013d32:	f8df 830c 	ldr.w	r8, [pc, #780]	; 8014040 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8013d36:	9815      	ldr	r0, [sp, #84]	; 0x54
 8013d38:	9205      	str	r2, [sp, #20]
 8013d3a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8013d3e:	9101      	str	r1, [sp, #4]
 8013d40:	6841      	ldr	r1, [r0, #4]
 8013d42:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 8013d46:	fb01 2404 	mla	r4, r1, r4, r2
 8013d4a:	6802      	ldr	r2, [r0, #0]
 8013d4c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013d50:	f8db 2008 	ldr.w	r2, [fp, #8]
 8013d54:	3201      	adds	r2, #1
 8013d56:	f022 0201 	bic.w	r2, r2, #1
 8013d5a:	9202      	str	r2, [sp, #8]
 8013d5c:	f8db 2000 	ldr.w	r2, [fp]
 8013d60:	9203      	str	r2, [sp, #12]
 8013d62:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8013d66:	9a01      	ldr	r2, [sp, #4]
 8013d68:	2a00      	cmp	r2, #0
 8013d6a:	dc03      	bgt.n	8013d74 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8013d6c:	9a05      	ldr	r2, [sp, #20]
 8013d6e:	2a00      	cmp	r2, #0
 8013d70:	f340 8162 	ble.w	8014038 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8013d74:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8013d76:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8013d7a:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8013d7e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8013d82:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8013d84:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8013d88:	2b00      	cmp	r3, #0
 8013d8a:	dd0e      	ble.n	8013daa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013d8c:	1402      	asrs	r2, r0, #16
 8013d8e:	d405      	bmi.n	8013d9c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013d90:	42ba      	cmp	r2, r7
 8013d92:	da03      	bge.n	8013d9c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013d94:	140a      	asrs	r2, r1, #16
 8013d96:	d401      	bmi.n	8013d9c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013d98:	42b2      	cmp	r2, r6
 8013d9a:	db07      	blt.n	8013dac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8013d9c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013d9e:	4410      	add	r0, r2
 8013da0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013da2:	3b01      	subs	r3, #1
 8013da4:	4411      	add	r1, r2
 8013da6:	3402      	adds	r4, #2
 8013da8:	e7ee      	b.n	8013d88 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8013daa:	d017      	beq.n	8013ddc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8013dac:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8013dae:	1e5a      	subs	r2, r3, #1
 8013db0:	fb05 0502 	mla	r5, r5, r2, r0
 8013db4:	142d      	asrs	r5, r5, #16
 8013db6:	d409      	bmi.n	8013dcc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8013db8:	42bd      	cmp	r5, r7
 8013dba:	da07      	bge.n	8013dcc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8013dbc:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8013dbe:	fb05 1202 	mla	r2, r5, r2, r1
 8013dc2:	1412      	asrs	r2, r2, #16
 8013dc4:	d402      	bmi.n	8013dcc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8013dc6:	42b2      	cmp	r2, r6
 8013dc8:	f2c0 80c3 	blt.w	8013f52 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8013dcc:	2500      	movs	r5, #0
 8013dce:	195a      	adds	r2, r3, r5
 8013dd0:	2a00      	cmp	r2, #0
 8013dd2:	dc3f      	bgt.n	8013e54 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8013dd4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013dd8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013ddc:	9b01      	ldr	r3, [sp, #4]
 8013dde:	2b00      	cmp	r3, #0
 8013de0:	f340 812a 	ble.w	8014038 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8013de4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013de8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013dec:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013df0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013df2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013df6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013dfa:	eeb0 6a62 	vmov.f32	s12, s5
 8013dfe:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013e02:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013e06:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013e0a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8013e0e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013e12:	eeb0 6a43 	vmov.f32	s12, s6
 8013e16:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013e1a:	ee12 2a90 	vmov	r2, s5
 8013e1e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013e22:	fb92 f3f3 	sdiv	r3, r2, r3
 8013e26:	ee13 2a10 	vmov	r2, s6
 8013e2a:	9313      	str	r3, [sp, #76]	; 0x4c
 8013e2c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013e2e:	fb92 f3f3 	sdiv	r3, r2, r3
 8013e32:	9314      	str	r3, [sp, #80]	; 0x50
 8013e34:	9b01      	ldr	r3, [sp, #4]
 8013e36:	9a05      	ldr	r2, [sp, #20]
 8013e38:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013e3c:	3b01      	subs	r3, #1
 8013e3e:	9301      	str	r3, [sp, #4]
 8013e40:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8013e44:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013e46:	eeb0 3a67 	vmov.f32	s6, s15
 8013e4a:	bf08      	it	eq
 8013e4c:	4613      	moveq	r3, r2
 8013e4e:	eef0 2a47 	vmov.f32	s5, s14
 8013e52:	e788      	b.n	8013d66 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8013e54:	1406      	asrs	r6, r0, #16
 8013e56:	d42c      	bmi.n	8013eb2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8013e58:	f8db 2008 	ldr.w	r2, [fp, #8]
 8013e5c:	42b2      	cmp	r2, r6
 8013e5e:	dd28      	ble.n	8013eb2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8013e60:	140f      	asrs	r7, r1, #16
 8013e62:	d426      	bmi.n	8013eb2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8013e64:	f8db 200c 	ldr.w	r2, [fp, #12]
 8013e68:	42ba      	cmp	r2, r7
 8013e6a:	dd22      	ble.n	8013eb2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8013e6c:	9a02      	ldr	r2, [sp, #8]
 8013e6e:	fb07 6602 	mla	r6, r7, r2, r6
 8013e72:	0872      	lsrs	r2, r6, #1
 8013e74:	9f03      	ldr	r7, [sp, #12]
 8013e76:	5cba      	ldrb	r2, [r7, r2]
 8013e78:	07f6      	lsls	r6, r6, #31
 8013e7a:	bf54      	ite	pl
 8013e7c:	f002 020f 	andpl.w	r2, r2, #15
 8013e80:	1112      	asrmi	r2, r2, #4
 8013e82:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8013e86:	b2d2      	uxtb	r2, r2
 8013e88:	2aff      	cmp	r2, #255	; 0xff
 8013e8a:	d118      	bne.n	8013ebe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8013e8c:	f8d8 2000 	ldr.w	r2, [r8]
 8013e90:	f06f 0601 	mvn.w	r6, #1
 8013e94:	fb06 f705 	mul.w	r7, r6, r5
 8013e98:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 8013e9c:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8013ea0:	0956      	lsrs	r6, r2, #5
 8013ea2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8013ea6:	ea4c 0606 	orr.w	r6, ip, r6
 8013eaa:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8013eae:	4316      	orrs	r6, r2
 8013eb0:	53e6      	strh	r6, [r4, r7]
 8013eb2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013eb4:	4410      	add	r0, r2
 8013eb6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013eb8:	3d01      	subs	r5, #1
 8013eba:	4411      	add	r1, r2
 8013ebc:	e787      	b.n	8013dce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8013ebe:	2a00      	cmp	r2, #0
 8013ec0:	d0f7      	beq.n	8013eb2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8013ec2:	f06f 0601 	mvn.w	r6, #1
 8013ec6:	436e      	muls	r6, r5
 8013ec8:	f8d8 c000 	ldr.w	ip, [r8]
 8013ecc:	f834 e006 	ldrh.w	lr, [r4, r6]
 8013ed0:	9604      	str	r6, [sp, #16]
 8013ed2:	fa1f f982 	uxth.w	r9, r2
 8013ed6:	ea4f 272e 	mov.w	r7, lr, asr #8
 8013eda:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8013ede:	43d2      	mvns	r2, r2
 8013ee0:	b2d2      	uxtb	r2, r2
 8013ee2:	fb16 f609 	smulbb	r6, r6, r9
 8013ee6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013eea:	fb07 6702 	mla	r7, r7, r2, r6
 8013eee:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8013ef2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8013ef6:	fa5f fc8c 	uxtb.w	ip, ip
 8013efa:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013efe:	fa5f fe8e 	uxtb.w	lr, lr
 8013f02:	fb1c fc09 	smulbb	ip, ip, r9
 8013f06:	fb0e cc02 	mla	ip, lr, r2, ip
 8013f0a:	b2bf      	uxth	r7, r7
 8013f0c:	fb1a fa09 	smulbb	sl, sl, r9
 8013f10:	fa1f fc8c 	uxth.w	ip, ip
 8013f14:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013f18:	fb06 a602 	mla	r6, r6, r2, sl
 8013f1c:	1c7a      	adds	r2, r7, #1
 8013f1e:	f10c 0a01 	add.w	sl, ip, #1
 8013f22:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8013f26:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8013f2a:	b2b6      	uxth	r6, r6
 8013f2c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013f30:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8013f34:	ea4a 0707 	orr.w	r7, sl, r7
 8013f38:	f106 0a01 	add.w	sl, r6, #1
 8013f3c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013f40:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013f44:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8013f48:	9a04      	ldr	r2, [sp, #16]
 8013f4a:	ea47 070a 	orr.w	r7, r7, sl
 8013f4e:	52a7      	strh	r7, [r4, r2]
 8013f50:	e7af      	b.n	8013eb2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8013f52:	f04f 0e00 	mov.w	lr, #0
 8013f56:	eba3 020e 	sub.w	r2, r3, lr
 8013f5a:	2a00      	cmp	r2, #0
 8013f5c:	f77f af3a 	ble.w	8013dd4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8013f60:	9e02      	ldr	r6, [sp, #8]
 8013f62:	1402      	asrs	r2, r0, #16
 8013f64:	140d      	asrs	r5, r1, #16
 8013f66:	fb06 2505 	mla	r5, r6, r5, r2
 8013f6a:	086a      	lsrs	r2, r5, #1
 8013f6c:	9e03      	ldr	r6, [sp, #12]
 8013f6e:	5cb2      	ldrb	r2, [r6, r2]
 8013f70:	07ed      	lsls	r5, r5, #31
 8013f72:	bf54      	ite	pl
 8013f74:	f002 020f 	andpl.w	r2, r2, #15
 8013f78:	1112      	asrmi	r2, r2, #4
 8013f7a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8013f7e:	b2d2      	uxtb	r2, r2
 8013f80:	2aff      	cmp	r2, #255	; 0xff
 8013f82:	d115      	bne.n	8013fb0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8013f84:	f8d8 5000 	ldr.w	r5, [r8]
 8013f88:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 8013f8c:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8013f90:	096a      	lsrs	r2, r5, #5
 8013f92:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8013f96:	4332      	orrs	r2, r6
 8013f98:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8013f9c:	432a      	orrs	r2, r5
 8013f9e:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8013fa2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013fa4:	4410      	add	r0, r2
 8013fa6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013fa8:	f10e 0e01 	add.w	lr, lr, #1
 8013fac:	4411      	add	r1, r2
 8013fae:	e7d2      	b.n	8013f56 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8013fb0:	2a00      	cmp	r2, #0
 8013fb2:	d0f6      	beq.n	8013fa2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8013fb4:	f8d8 7000 	ldr.w	r7, [r8]
 8013fb8:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8013fbc:	fa1f f982 	uxth.w	r9, r2
 8013fc0:	ea4f 262c 	mov.w	r6, ip, asr #8
 8013fc4:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8013fc8:	43d2      	mvns	r2, r2
 8013fca:	b2d2      	uxtb	r2, r2
 8013fcc:	fb15 f509 	smulbb	r5, r5, r9
 8013fd0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8013fd4:	fb06 5602 	mla	r6, r6, r2, r5
 8013fd8:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8013fdc:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8013fe0:	b2ff      	uxtb	r7, r7
 8013fe2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013fe6:	fa5f fc8c 	uxtb.w	ip, ip
 8013fea:	fb17 f709 	smulbb	r7, r7, r9
 8013fee:	fb0c 7702 	mla	r7, ip, r2, r7
 8013ff2:	b2b6      	uxth	r6, r6
 8013ff4:	fb1a fa09 	smulbb	sl, sl, r9
 8013ff8:	b2bf      	uxth	r7, r7
 8013ffa:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8013ffe:	fb05 a502 	mla	r5, r5, r2, sl
 8014002:	1c72      	adds	r2, r6, #1
 8014004:	f107 0a01 	add.w	sl, r7, #1
 8014008:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801400c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8014010:	b2ad      	uxth	r5, r5
 8014012:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014016:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801401a:	ea4a 0606 	orr.w	r6, sl, r6
 801401e:	f105 0a01 	add.w	sl, r5, #1
 8014022:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014026:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801402a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801402e:	ea46 060a 	orr.w	r6, r6, sl
 8014032:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8014036:	e7b4      	b.n	8013fa2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8014038:	b007      	add	sp, #28
 801403a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801403e:	bf00      	nop
 8014040:	200135b8 	.word	0x200135b8

08014044 <_ZN8touchgfx8LCD16bppD1Ev>:
 8014044:	4770      	bx	lr

08014046 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8014046:	4770      	bx	lr

08014048 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8014048:	4770      	bx	lr

0801404a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801404a:	4770      	bx	lr

0801404c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801404c:	4770      	bx	lr

0801404e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801404e:	4770      	bx	lr

08014050 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8014050:	4770      	bx	lr

08014052 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8014052:	4770      	bx	lr

08014054 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8014054:	4770      	bx	lr

08014056 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8014056:	4770      	bx	lr

08014058 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8014058:	4770      	bx	lr

0801405a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801405a:	4770      	bx	lr

0801405c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801405c:	4770      	bx	lr

0801405e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801405e:	4770      	bx	lr

08014060 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8014060:	4770      	bx	lr

08014062 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8014062:	4770      	bx	lr

08014064 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8014064:	4770      	bx	lr

08014066 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8014066:	4770      	bx	lr

08014068 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8014068:	4770      	bx	lr

0801406a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801406a:	4770      	bx	lr

0801406c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801406c:	4770      	bx	lr

0801406e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801406e:	4770      	bx	lr

08014070 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8014070:	4770      	bx	lr

08014072 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8014072:	4770      	bx	lr

08014074 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8014074:	4770      	bx	lr

08014076 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8014076:	4770      	bx	lr

08014078 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8014078:	4770      	bx	lr

0801407a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801407a:	4770      	bx	lr

0801407c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801407c:	4770      	bx	lr

0801407e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801407e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014082:	b088      	sub	sp, #32
 8014084:	ac08      	add	r4, sp, #32
 8014086:	4606      	mov	r6, r0
 8014088:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801408c:	4620      	mov	r0, r4
 801408e:	4688      	mov	r8, r1
 8014090:	4691      	mov	r9, r2
 8014092:	f7fd fc65 	bl	8011960 <_ZNK8touchgfx6Bitmap7getDataEv>
 8014096:	6833      	ldr	r3, [r6, #0]
 8014098:	4605      	mov	r5, r0
 801409a:	4620      	mov	r0, r4
 801409c:	699f      	ldr	r7, [r3, #24]
 801409e:	f7fd fb73 	bl	8011788 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80140a2:	4682      	mov	sl, r0
 80140a4:	4620      	mov	r0, r4
 80140a6:	f7fd fba3 	bl	80117f0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80140aa:	9500      	str	r5, [sp, #0]
 80140ac:	e9cd a001 	strd	sl, r0, [sp, #4]
 80140b0:	464b      	mov	r3, r9
 80140b2:	a806      	add	r0, sp, #24
 80140b4:	4642      	mov	r2, r8
 80140b6:	4631      	mov	r1, r6
 80140b8:	47b8      	blx	r7
 80140ba:	4628      	mov	r0, r5
 80140bc:	b008      	add	sp, #32
 80140be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

080140c4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 80140c4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80140c8:	2300      	movs	r3, #0
 80140ca:	9300      	str	r3, [sp, #0]
 80140cc:	4b3d      	ldr	r3, [pc, #244]	; (80141c4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 80140ce:	781b      	ldrb	r3, [r3, #0]
 80140d0:	2b00      	cmp	r3, #0
 80140d2:	d137      	bne.n	8014144 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 80140d4:	4a3c      	ldr	r2, [pc, #240]	; (80141c8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80140d6:	f9b2 2000 	ldrsh.w	r2, [r2]
 80140da:	f8ad 2004 	strh.w	r2, [sp, #4]
 80140de:	2b00      	cmp	r3, #0
 80140e0:	d132      	bne.n	8014148 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 80140e2:	4b3a      	ldr	r3, [pc, #232]	; (80141cc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 80140e4:	f9b3 3000 	ldrsh.w	r3, [r3]
 80140e8:	6808      	ldr	r0, [r1, #0]
 80140ea:	6849      	ldr	r1, [r1, #4]
 80140ec:	f8ad 3006 	strh.w	r3, [sp, #6]
 80140f0:	ac02      	add	r4, sp, #8
 80140f2:	ab02      	add	r3, sp, #8
 80140f4:	c303      	stmia	r3!, {r0, r1}
 80140f6:	4669      	mov	r1, sp
 80140f8:	4620      	mov	r0, r4
 80140fa:	f7fa fcdf 	bl	800eabc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80140fe:	4668      	mov	r0, sp
 8014100:	f7fa fc98 	bl	800ea34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014104:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8014108:	f8bd 2000 	ldrh.w	r2, [sp]
 801410c:	4d30      	ldr	r5, [pc, #192]	; (80141d0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801410e:	4413      	add	r3, r2
 8014110:	f8ad 3008 	strh.w	r3, [sp, #8]
 8014114:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8014118:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801411c:	6828      	ldr	r0, [r5, #0]
 801411e:	4413      	add	r3, r2
 8014120:	f8ad 300a 	strh.w	r3, [sp, #10]
 8014124:	6803      	ldr	r3, [r0, #0]
 8014126:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014128:	4798      	blx	r3
 801412a:	f010 0f01 	tst.w	r0, #1
 801412e:	462f      	mov	r7, r5
 8014130:	d00c      	beq.n	801414c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8014132:	6828      	ldr	r0, [r5, #0]
 8014134:	6803      	ldr	r3, [r0, #0]
 8014136:	e894 0006 	ldmia.w	r4, {r1, r2}
 801413a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801413c:	4798      	blx	r3
 801413e:	b004      	add	sp, #16
 8014140:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014144:	4a21      	ldr	r2, [pc, #132]	; (80141cc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8014146:	e7c6      	b.n	80140d6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8014148:	4b1f      	ldr	r3, [pc, #124]	; (80141c8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801414a:	e7cb      	b.n	80140e4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801414c:	6838      	ldr	r0, [r7, #0]
 801414e:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8014152:	6803      	ldr	r3, [r0, #0]
 8014154:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8014158:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801415a:	4798      	blx	r3
 801415c:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8014160:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8014164:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8014168:	fb16 3602 	smlabb	r6, r6, r2, r3
 801416c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8014170:	6838      	ldr	r0, [r7, #0]
 8014172:	6803      	ldr	r3, [r0, #0]
 8014174:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014176:	4798      	blx	r3
 8014178:	4a13      	ldr	r2, [pc, #76]	; (80141c8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801417a:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801417e:	8813      	ldrh	r3, [r2, #0]
 8014180:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8014184:	fb03 1404 	mla	r4, r3, r4, r1
 8014188:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801418c:	435d      	muls	r5, r3
 801418e:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8014192:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8014196:	4691      	mov	r9, r2
 8014198:	6838      	ldr	r0, [r7, #0]
 801419a:	42ac      	cmp	r4, r5
 801419c:	6803      	ldr	r3, [r0, #0]
 801419e:	d20e      	bcs.n	80141be <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 80141a0:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 80141a4:	4632      	mov	r2, r6
 80141a6:	4643      	mov	r3, r8
 80141a8:	4621      	mov	r1, r4
 80141aa:	47d0      	blx	sl
 80141ac:	f8b9 3000 	ldrh.w	r3, [r9]
 80141b0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80141b4:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80141b8:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80141bc:	e7ec      	b.n	8014198 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 80141be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80141c0:	4798      	blx	r3
 80141c2:	e7bc      	b.n	801413e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 80141c4:	200135a8 	.word	0x200135a8
 80141c8:	200135aa 	.word	0x200135aa
 80141cc:	200135ac 	.word	0x200135ac
 80141d0:	200135b0 	.word	0x200135b0

080141d4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 80141d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80141d8:	b08b      	sub	sp, #44	; 0x2c
 80141da:	460f      	mov	r7, r1
 80141dc:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 80141e0:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 80141e4:	4616      	mov	r6, r2
 80141e6:	f1bb 0f00 	cmp.w	fp, #0
 80141ea:	d049      	beq.n	8014280 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 80141ec:	6810      	ldr	r0, [r2, #0]
 80141ee:	6851      	ldr	r1, [r2, #4]
 80141f0:	ad06      	add	r5, sp, #24
 80141f2:	c503      	stmia	r5!, {r0, r1}
 80141f4:	6818      	ldr	r0, [r3, #0]
 80141f6:	6859      	ldr	r1, [r3, #4]
 80141f8:	ad08      	add	r5, sp, #32
 80141fa:	c503      	stmia	r5!, {r0, r1}
 80141fc:	a806      	add	r0, sp, #24
 80141fe:	f7fa fc19 	bl	800ea34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014202:	4631      	mov	r1, r6
 8014204:	a808      	add	r0, sp, #32
 8014206:	f7fa fc59 	bl	800eabc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801420a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801420e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8014212:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8014216:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801421a:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801421e:	fb16 2103 	smlabb	r1, r6, r3, r2
 8014222:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8014226:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801422a:	4f5f      	ldr	r7, [pc, #380]	; (80143a8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801422c:	440a      	add	r2, r1
 801422e:	f8ad 2020 	strh.w	r2, [sp, #32]
 8014232:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8014236:	6838      	ldr	r0, [r7, #0]
 8014238:	4413      	add	r3, r2
 801423a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801423e:	6803      	ldr	r3, [r0, #0]
 8014240:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014242:	4798      	blx	r3
 8014244:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8014248:	46b9      	mov	r9, r7
 801424a:	d01c      	beq.n	8014286 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 801424c:	f010 0f04 	tst.w	r0, #4
 8014250:	d01d      	beq.n	801428e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8014252:	f8d9 0000 	ldr.w	r0, [r9]
 8014256:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801425a:	6801      	ldr	r1, [r0, #0]
 801425c:	f8cd b00c 	str.w	fp, [sp, #12]
 8014260:	2700      	movs	r7, #0
 8014262:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8014266:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801426a:	9402      	str	r4, [sp, #8]
 801426c:	b2ad      	uxth	r5, r5
 801426e:	fa1f f488 	uxth.w	r4, r8
 8014272:	9501      	str	r5, [sp, #4]
 8014274:	9400      	str	r4, [sp, #0]
 8014276:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 8014278:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801427c:	4631      	mov	r1, r6
 801427e:	47a0      	blx	r4
 8014280:	b00b      	add	sp, #44	; 0x2c
 8014282:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014286:	b914      	cbnz	r4, 801428e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8014288:	f010 0f01 	tst.w	r0, #1
 801428c:	e7e0      	b.n	8014250 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 801428e:	f8d9 0000 	ldr.w	r0, [r9]
 8014292:	6803      	ldr	r3, [r0, #0]
 8014294:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014296:	4798      	blx	r3
 8014298:	4b44      	ldr	r3, [pc, #272]	; (80143ac <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801429a:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801429e:	881a      	ldrh	r2, [r3, #0]
 80142a0:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 80142a4:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80142a8:	fb02 1404 	mla	r4, r2, r4, r1
 80142ac:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80142b0:	469a      	mov	sl, r3
 80142b2:	fb05 f502 	mul.w	r5, r5, r2
 80142b6:	ea4f 0748 	mov.w	r7, r8, lsl #1
 80142ba:	d059      	beq.n	8014370 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 80142bc:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 80142c0:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80142c4:	fa1f f28b 	uxth.w	r2, fp
 80142c8:	fa1f f989 	uxth.w	r9, r9
 80142cc:	469e      	mov	lr, r3
 80142ce:	42ac      	cmp	r4, r5
 80142d0:	d264      	bcs.n	801439c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80142d2:	eb04 0a07 	add.w	sl, r4, r7
 80142d6:	4554      	cmp	r4, sl
 80142d8:	d23d      	bcs.n	8014356 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 80142da:	8821      	ldrh	r1, [r4, #0]
 80142dc:	f836 3b02 	ldrh.w	r3, [r6], #2
 80142e0:	1208      	asrs	r0, r1, #8
 80142e2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80142e6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80142ea:	fb10 f009 	smulbb	r0, r0, r9
 80142ee:	ea4f 0be1 	mov.w	fp, r1, asr #3
 80142f2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80142f6:	00c9      	lsls	r1, r1, #3
 80142f8:	fb0c 0c02 	mla	ip, ip, r2, r0
 80142fc:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8014300:	10d8      	asrs	r0, r3, #3
 8014302:	b2c9      	uxtb	r1, r1
 8014304:	00db      	lsls	r3, r3, #3
 8014306:	fa1f fc8c 	uxth.w	ip, ip
 801430a:	fb1b fb09 	smulbb	fp, fp, r9
 801430e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8014312:	b2db      	uxtb	r3, r3
 8014314:	fb11 f109 	smulbb	r1, r1, r9
 8014318:	fb00 b002 	mla	r0, r0, r2, fp
 801431c:	fb03 1302 	mla	r3, r3, r2, r1
 8014320:	f10c 0b01 	add.w	fp, ip, #1
 8014324:	b29b      	uxth	r3, r3
 8014326:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801432a:	b280      	uxth	r0, r0
 801432c:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8014330:	f103 0c01 	add.w	ip, r3, #1
 8014334:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8014338:	1c43      	adds	r3, r0, #1
 801433a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801433e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8014342:	0940      	lsrs	r0, r0, #5
 8014344:	ea4c 0c0b 	orr.w	ip, ip, fp
 8014348:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801434c:	ea4c 0c00 	orr.w	ip, ip, r0
 8014350:	f824 cb02 	strh.w	ip, [r4], #2
 8014354:	e7bf      	b.n	80142d6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 8014356:	f8be 3000 	ldrh.w	r3, [lr]
 801435a:	eba3 0308 	sub.w	r3, r3, r8
 801435e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014362:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8014366:	eba3 0308 	sub.w	r3, r3, r8
 801436a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801436e:	e7ae      	b.n	80142ce <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8014370:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8014374:	f8d9 0000 	ldr.w	r0, [r9]
 8014378:	42ac      	cmp	r4, r5
 801437a:	6803      	ldr	r3, [r0, #0]
 801437c:	d20e      	bcs.n	801439c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801437e:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 8014382:	4632      	mov	r2, r6
 8014384:	463b      	mov	r3, r7
 8014386:	4621      	mov	r1, r4
 8014388:	47c0      	blx	r8
 801438a:	f8ba 3000 	ldrh.w	r3, [sl]
 801438e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014392:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8014396:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801439a:	e7eb      	b.n	8014374 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801439c:	4b02      	ldr	r3, [pc, #8]	; (80143a8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801439e:	6818      	ldr	r0, [r3, #0]
 80143a0:	6803      	ldr	r3, [r0, #0]
 80143a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80143a4:	4798      	blx	r3
 80143a6:	e76b      	b.n	8014280 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 80143a8:	200135b0 	.word	0x200135b0
 80143ac:	200135aa 	.word	0x200135aa

080143b0 <_ZN8touchgfx8LCD16bppD0Ev>:
 80143b0:	b510      	push	{r4, lr}
 80143b2:	2178      	movs	r1, #120	; 0x78
 80143b4:	4604      	mov	r4, r0
 80143b6:	f008 ffdf 	bl	801d378 <_ZdlPvj>
 80143ba:	4620      	mov	r0, r4
 80143bc:	bd10      	pop	{r4, pc}

080143be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80143be:	b510      	push	{r4, lr}
 80143c0:	2104      	movs	r1, #4
 80143c2:	4604      	mov	r4, r0
 80143c4:	f008 ffd8 	bl	801d378 <_ZdlPvj>
 80143c8:	4620      	mov	r0, r4
 80143ca:	bd10      	pop	{r4, pc}

080143cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80143cc:	b510      	push	{r4, lr}
 80143ce:	2104      	movs	r1, #4
 80143d0:	4604      	mov	r4, r0
 80143d2:	f008 ffd1 	bl	801d378 <_ZdlPvj>
 80143d6:	4620      	mov	r0, r4
 80143d8:	bd10      	pop	{r4, pc}

080143da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80143da:	b510      	push	{r4, lr}
 80143dc:	2104      	movs	r1, #4
 80143de:	4604      	mov	r4, r0
 80143e0:	f008 ffca 	bl	801d378 <_ZdlPvj>
 80143e4:	4620      	mov	r0, r4
 80143e6:	bd10      	pop	{r4, pc}

080143e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80143e8:	b510      	push	{r4, lr}
 80143ea:	2104      	movs	r1, #4
 80143ec:	4604      	mov	r4, r0
 80143ee:	f008 ffc3 	bl	801d378 <_ZdlPvj>
 80143f2:	4620      	mov	r0, r4
 80143f4:	bd10      	pop	{r4, pc}

080143f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80143f6:	b510      	push	{r4, lr}
 80143f8:	2104      	movs	r1, #4
 80143fa:	4604      	mov	r4, r0
 80143fc:	f008 ffbc 	bl	801d378 <_ZdlPvj>
 8014400:	4620      	mov	r0, r4
 8014402:	bd10      	pop	{r4, pc}

08014404 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8014404:	b510      	push	{r4, lr}
 8014406:	2104      	movs	r1, #4
 8014408:	4604      	mov	r4, r0
 801440a:	f008 ffb5 	bl	801d378 <_ZdlPvj>
 801440e:	4620      	mov	r0, r4
 8014410:	bd10      	pop	{r4, pc}

08014412 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8014412:	b510      	push	{r4, lr}
 8014414:	2104      	movs	r1, #4
 8014416:	4604      	mov	r4, r0
 8014418:	f008 ffae 	bl	801d378 <_ZdlPvj>
 801441c:	4620      	mov	r0, r4
 801441e:	bd10      	pop	{r4, pc}

08014420 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8014420:	b510      	push	{r4, lr}
 8014422:	2104      	movs	r1, #4
 8014424:	4604      	mov	r4, r0
 8014426:	f008 ffa7 	bl	801d378 <_ZdlPvj>
 801442a:	4620      	mov	r0, r4
 801442c:	bd10      	pop	{r4, pc}

0801442e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801442e:	b510      	push	{r4, lr}
 8014430:	2104      	movs	r1, #4
 8014432:	4604      	mov	r4, r0
 8014434:	f008 ffa0 	bl	801d378 <_ZdlPvj>
 8014438:	4620      	mov	r0, r4
 801443a:	bd10      	pop	{r4, pc}

0801443c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801443c:	b510      	push	{r4, lr}
 801443e:	2104      	movs	r1, #4
 8014440:	4604      	mov	r4, r0
 8014442:	f008 ff99 	bl	801d378 <_ZdlPvj>
 8014446:	4620      	mov	r0, r4
 8014448:	bd10      	pop	{r4, pc}

0801444a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801444a:	b510      	push	{r4, lr}
 801444c:	2104      	movs	r1, #4
 801444e:	4604      	mov	r4, r0
 8014450:	f008 ff92 	bl	801d378 <_ZdlPvj>
 8014454:	4620      	mov	r0, r4
 8014456:	bd10      	pop	{r4, pc}

08014458 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8014458:	b510      	push	{r4, lr}
 801445a:	2104      	movs	r1, #4
 801445c:	4604      	mov	r4, r0
 801445e:	f008 ff8b 	bl	801d378 <_ZdlPvj>
 8014462:	4620      	mov	r0, r4
 8014464:	bd10      	pop	{r4, pc}

08014466 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8014466:	b510      	push	{r4, lr}
 8014468:	2104      	movs	r1, #4
 801446a:	4604      	mov	r4, r0
 801446c:	f008 ff84 	bl	801d378 <_ZdlPvj>
 8014470:	4620      	mov	r0, r4
 8014472:	bd10      	pop	{r4, pc}

08014474 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8014474:	b510      	push	{r4, lr}
 8014476:	2104      	movs	r1, #4
 8014478:	4604      	mov	r4, r0
 801447a:	f008 ff7d 	bl	801d378 <_ZdlPvj>
 801447e:	4620      	mov	r0, r4
 8014480:	bd10      	pop	{r4, pc}

08014482 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8014482:	b510      	push	{r4, lr}
 8014484:	2104      	movs	r1, #4
 8014486:	4604      	mov	r4, r0
 8014488:	f008 ff76 	bl	801d378 <_ZdlPvj>
 801448c:	4620      	mov	r0, r4
 801448e:	bd10      	pop	{r4, pc}

08014490 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8014490:	b510      	push	{r4, lr}
 8014492:	2104      	movs	r1, #4
 8014494:	4604      	mov	r4, r0
 8014496:	f008 ff6f 	bl	801d378 <_ZdlPvj>
 801449a:	4620      	mov	r0, r4
 801449c:	bd10      	pop	{r4, pc}

0801449e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801449e:	b510      	push	{r4, lr}
 80144a0:	2104      	movs	r1, #4
 80144a2:	4604      	mov	r4, r0
 80144a4:	f008 ff68 	bl	801d378 <_ZdlPvj>
 80144a8:	4620      	mov	r0, r4
 80144aa:	bd10      	pop	{r4, pc}

080144ac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80144ac:	b510      	push	{r4, lr}
 80144ae:	2104      	movs	r1, #4
 80144b0:	4604      	mov	r4, r0
 80144b2:	f008 ff61 	bl	801d378 <_ZdlPvj>
 80144b6:	4620      	mov	r0, r4
 80144b8:	bd10      	pop	{r4, pc}

080144ba <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80144ba:	b510      	push	{r4, lr}
 80144bc:	2104      	movs	r1, #4
 80144be:	4604      	mov	r4, r0
 80144c0:	f008 ff5a 	bl	801d378 <_ZdlPvj>
 80144c4:	4620      	mov	r0, r4
 80144c6:	bd10      	pop	{r4, pc}

080144c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 80144c8:	b510      	push	{r4, lr}
 80144ca:	2104      	movs	r1, #4
 80144cc:	4604      	mov	r4, r0
 80144ce:	f008 ff53 	bl	801d378 <_ZdlPvj>
 80144d2:	4620      	mov	r0, r4
 80144d4:	bd10      	pop	{r4, pc}

080144d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80144d6:	b510      	push	{r4, lr}
 80144d8:	2104      	movs	r1, #4
 80144da:	4604      	mov	r4, r0
 80144dc:	f008 ff4c 	bl	801d378 <_ZdlPvj>
 80144e0:	4620      	mov	r0, r4
 80144e2:	bd10      	pop	{r4, pc}

080144e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80144e4:	b510      	push	{r4, lr}
 80144e6:	2104      	movs	r1, #4
 80144e8:	4604      	mov	r4, r0
 80144ea:	f008 ff45 	bl	801d378 <_ZdlPvj>
 80144ee:	4620      	mov	r0, r4
 80144f0:	bd10      	pop	{r4, pc}

080144f2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80144f2:	b510      	push	{r4, lr}
 80144f4:	2104      	movs	r1, #4
 80144f6:	4604      	mov	r4, r0
 80144f8:	f008 ff3e 	bl	801d378 <_ZdlPvj>
 80144fc:	4620      	mov	r0, r4
 80144fe:	bd10      	pop	{r4, pc}

08014500 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8014500:	b510      	push	{r4, lr}
 8014502:	2104      	movs	r1, #4
 8014504:	4604      	mov	r4, r0
 8014506:	f008 ff37 	bl	801d378 <_ZdlPvj>
 801450a:	4620      	mov	r0, r4
 801450c:	bd10      	pop	{r4, pc}

0801450e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801450e:	b510      	push	{r4, lr}
 8014510:	2104      	movs	r1, #4
 8014512:	4604      	mov	r4, r0
 8014514:	f008 ff30 	bl	801d378 <_ZdlPvj>
 8014518:	4620      	mov	r0, r4
 801451a:	bd10      	pop	{r4, pc}

0801451c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801451c:	b510      	push	{r4, lr}
 801451e:	2104      	movs	r1, #4
 8014520:	4604      	mov	r4, r0
 8014522:	f008 ff29 	bl	801d378 <_ZdlPvj>
 8014526:	4620      	mov	r0, r4
 8014528:	bd10      	pop	{r4, pc}

0801452a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801452a:	b510      	push	{r4, lr}
 801452c:	2104      	movs	r1, #4
 801452e:	4604      	mov	r4, r0
 8014530:	f008 ff22 	bl	801d378 <_ZdlPvj>
 8014534:	4620      	mov	r0, r4
 8014536:	bd10      	pop	{r4, pc}

08014538 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8014538:	b510      	push	{r4, lr}
 801453a:	2104      	movs	r1, #4
 801453c:	4604      	mov	r4, r0
 801453e:	f008 ff1b 	bl	801d378 <_ZdlPvj>
 8014542:	4620      	mov	r0, r4
 8014544:	bd10      	pop	{r4, pc}
	...

08014548 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8014548:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801454c:	b091      	sub	sp, #68	; 0x44
 801454e:	469b      	mov	fp, r3
 8014550:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 8014554:	4616      	mov	r6, r2
 8014556:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801455a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801455e:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 8014562:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8014566:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801456a:	4604      	mov	r4, r0
 801456c:	460d      	mov	r5, r1
 801456e:	4640      	mov	r0, r8
 8014570:	4659      	mov	r1, fp
 8014572:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8014576:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801457a:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801457e:	f7f6 fdc9 	bl	800b114 <_ZN8touchgfx4RectaNERKS0_>
 8014582:	4631      	mov	r1, r6
 8014584:	4640      	mov	r0, r8
 8014586:	f7f6 fdc5 	bl	800b114 <_ZN8touchgfx4RectaNERKS0_>
 801458a:	4b74      	ldr	r3, [pc, #464]	; (801475c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801458c:	8818      	ldrh	r0, [r3, #0]
 801458e:	4b74      	ldr	r3, [pc, #464]	; (8014760 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 8014590:	8819      	ldrh	r1, [r3, #0]
 8014592:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8014596:	2b00      	cmp	r3, #0
 8014598:	b202      	sxth	r2, r0
 801459a:	b20e      	sxth	r6, r1
 801459c:	da07      	bge.n	80145ae <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801459e:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 80145a2:	4463      	add	r3, ip
 80145a4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80145a8:	2300      	movs	r3, #0
 80145aa:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80145ae:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80145b2:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 80145b6:	1ad2      	subs	r2, r2, r3
 80145b8:	4594      	cmp	ip, r2
 80145ba:	bfc4      	itt	gt
 80145bc:	1ac2      	subgt	r2, r0, r3
 80145be:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 80145c2:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80145c6:	2a00      	cmp	r2, #0
 80145c8:	da07      	bge.n	80145da <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 80145ca:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 80145ce:	4462      	add	r2, ip
 80145d0:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 80145d4:	2200      	movs	r2, #0
 80145d6:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80145da:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 80145de:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 80145e2:	eba6 060a 	sub.w	r6, r6, sl
 80145e6:	42b2      	cmp	r2, r6
 80145e8:	bfc4      	itt	gt
 80145ea:	eba1 020a 	subgt.w	r2, r1, sl
 80145ee:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 80145f2:	4a5c      	ldr	r2, [pc, #368]	; (8014764 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 80145f4:	7812      	ldrb	r2, [r2, #0]
 80145f6:	b9a2      	cbnz	r2, 8014622 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 80145f8:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 80145fc:	4286      	cmp	r6, r0
 80145fe:	4640      	mov	r0, r8
 8014600:	9303      	str	r3, [sp, #12]
 8014602:	bf14      	ite	ne
 8014604:	2600      	movne	r6, #0
 8014606:	2601      	moveq	r6, #1
 8014608:	f7f6 fdc7 	bl	800b19a <_ZNK8touchgfx4Rect7isEmptyEv>
 801460c:	9b03      	ldr	r3, [sp, #12]
 801460e:	b160      	cbz	r0, 801462a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8014610:	2300      	movs	r3, #0
 8014612:	8023      	strh	r3, [r4, #0]
 8014614:	8063      	strh	r3, [r4, #2]
 8014616:	80a3      	strh	r3, [r4, #4]
 8014618:	4620      	mov	r0, r4
 801461a:	80e3      	strh	r3, [r4, #6]
 801461c:	b011      	add	sp, #68	; 0x44
 801461e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014622:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8014626:	428e      	cmp	r6, r1
 8014628:	e7e9      	b.n	80145fe <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801462a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801462e:	9205      	str	r2, [sp, #20]
 8014630:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 8014634:	9206      	str	r2, [sp, #24]
 8014636:	f8bb 2000 	ldrh.w	r2, [fp]
 801463a:	900e      	str	r0, [sp, #56]	; 0x38
 801463c:	1a9b      	subs	r3, r3, r2
 801463e:	b21b      	sxth	r3, r3
 8014640:	9303      	str	r3, [sp, #12]
 8014642:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8014646:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801464a:	ebaa 0a03 	sub.w	sl, sl, r3
 801464e:	fa0f f38a 	sxth.w	r3, sl
 8014652:	9304      	str	r3, [sp, #16]
 8014654:	9b03      	ldr	r3, [sp, #12]
 8014656:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801465a:	9b04      	ldr	r3, [sp, #16]
 801465c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8014660:	9b05      	ldr	r3, [sp, #20]
 8014662:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8014666:	a90e      	add	r1, sp, #56	; 0x38
 8014668:	9b06      	ldr	r3, [sp, #24]
 801466a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801466e:	a80c      	add	r0, sp, #48	; 0x30
 8014670:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 8014674:	f7fa fa22 	bl	800eabc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014678:	4640      	mov	r0, r8
 801467a:	f7fa f9db 	bl	800ea34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801467e:	a80e      	add	r0, sp, #56	; 0x38
 8014680:	f7fa f9d8 	bl	800ea34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014684:	4b38      	ldr	r3, [pc, #224]	; (8014768 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 8014686:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801468a:	881b      	ldrh	r3, [r3, #0]
 801468c:	9307      	str	r3, [sp, #28]
 801468e:	682b      	ldr	r3, [r5, #0]
 8014690:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801476c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8014694:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8014696:	4628      	mov	r0, r5
 8014698:	4798      	blx	r3
 801469a:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801469e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 80146a2:	4681      	mov	r9, r0
 80146a4:	fb1a 3305 	smlabb	r3, sl, r5, r3
 80146a8:	f8db 0000 	ldr.w	r0, [fp]
 80146ac:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80146ae:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80146b2:	6803      	ldr	r3, [r0, #0]
 80146b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80146b6:	4798      	blx	r3
 80146b8:	4607      	mov	r7, r0
 80146ba:	f8db 0000 	ldr.w	r0, [fp]
 80146be:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 80146c2:	6803      	ldr	r3, [r0, #0]
 80146c4:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80146c8:	9109      	str	r1, [sp, #36]	; 0x24
 80146ca:	9208      	str	r2, [sp, #32]
 80146cc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80146ce:	4798      	blx	r3
 80146d0:	f010 0f01 	tst.w	r0, #1
 80146d4:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80146d8:	d012      	beq.n	8014700 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 80146da:	f8db 0000 	ldr.w	r0, [fp]
 80146de:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 80146e2:	6803      	ldr	r3, [r0, #0]
 80146e4:	9200      	str	r2, [sp, #0]
 80146e6:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 80146e8:	e898 0006 	ldmia.w	r8, {r1, r2}
 80146ec:	462b      	mov	r3, r5
 80146ee:	47b0      	blx	r6
 80146f0:	9b03      	ldr	r3, [sp, #12]
 80146f2:	8023      	strh	r3, [r4, #0]
 80146f4:	9b04      	ldr	r3, [sp, #16]
 80146f6:	8063      	strh	r3, [r4, #2]
 80146f8:	9b05      	ldr	r3, [sp, #20]
 80146fa:	80a3      	strh	r3, [r4, #4]
 80146fc:	9b06      	ldr	r3, [sp, #24]
 80146fe:	e78b      	b.n	8014618 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8014700:	fb09 f202 	mul.w	r2, r9, r2
 8014704:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8014708:	440f      	add	r7, r1
 801470a:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801470e:	b166      	cbz	r6, 801472a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8014710:	9a07      	ldr	r2, [sp, #28]
 8014712:	4592      	cmp	sl, r2
 8014714:	d109      	bne.n	801472a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8014716:	f8db 0000 	ldr.w	r0, [fp]
 801471a:	6802      	ldr	r2, [r0, #0]
 801471c:	fb09 f303 	mul.w	r3, r9, r3
 8014720:	6b56      	ldr	r6, [r2, #52]	; 0x34
 8014722:	4629      	mov	r1, r5
 8014724:	463a      	mov	r2, r7
 8014726:	47b0      	blx	r6
 8014728:	e7e2      	b.n	80146f0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801472a:	fb0a f303 	mul.w	r3, sl, r3
 801472e:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801476c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8014732:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 8014736:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801473a:	4545      	cmp	r5, r8
 801473c:	d2d8      	bcs.n	80146f0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801473e:	f8db 0000 	ldr.w	r0, [fp]
 8014742:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8014746:	6802      	ldr	r2, [r0, #0]
 8014748:	4629      	mov	r1, r5
 801474a:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801474e:	005b      	lsls	r3, r3, #1
 8014750:	463a      	mov	r2, r7
 8014752:	47d0      	blx	sl
 8014754:	444f      	add	r7, r9
 8014756:	4435      	add	r5, r6
 8014758:	e7ef      	b.n	801473a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801475a:	bf00      	nop
 801475c:	200135a4 	.word	0x200135a4
 8014760:	200135a6 	.word	0x200135a6
 8014764:	200135a8 	.word	0x200135a8
 8014768:	200135aa 	.word	0x200135aa
 801476c:	200135b0 	.word	0x200135b0

08014770 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8014770:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014772:	4606      	mov	r6, r0
 8014774:	b087      	sub	sp, #28
 8014776:	460c      	mov	r4, r1
 8014778:	4617      	mov	r7, r2
 801477a:	461d      	mov	r5, r3
 801477c:	b333      	cbz	r3, 80147cc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801477e:	4608      	mov	r0, r1
 8014780:	f7f6 fd0b 	bl	800b19a <_ZNK8touchgfx4Rect7isEmptyEv>
 8014784:	bb10      	cbnz	r0, 80147cc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8014786:	6820      	ldr	r0, [r4, #0]
 8014788:	6861      	ldr	r1, [r4, #4]
 801478a:	4c1c      	ldr	r4, [pc, #112]	; (80147fc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801478c:	ab04      	add	r3, sp, #16
 801478e:	c303      	stmia	r3!, {r0, r1}
 8014790:	a804      	add	r0, sp, #16
 8014792:	f7fa f94f 	bl	800ea34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014796:	6820      	ldr	r0, [r4, #0]
 8014798:	6803      	ldr	r3, [r0, #0]
 801479a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801479c:	4798      	blx	r3
 801479e:	2dff      	cmp	r5, #255	; 0xff
 80147a0:	d016      	beq.n	80147d0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 80147a2:	f010 0f08 	tst.w	r0, #8
 80147a6:	6820      	ldr	r0, [r4, #0]
 80147a8:	d015      	beq.n	80147d6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 80147aa:	2400      	movs	r4, #0
 80147ac:	6801      	ldr	r1, [r0, #0]
 80147ae:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80147b2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80147b6:	e9cd 5402 	strd	r5, r4, [sp, #8]
 80147ba:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 80147be:	9401      	str	r4, [sp, #4]
 80147c0:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 80147c4:	9400      	str	r4, [sp, #0]
 80147c6:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 80147c8:	4639      	mov	r1, r7
 80147ca:	47a0      	blx	r4
 80147cc:	b007      	add	sp, #28
 80147ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80147d0:	f010 0f02 	tst.w	r0, #2
 80147d4:	e7e7      	b.n	80147a6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 80147d6:	6803      	ldr	r3, [r0, #0]
 80147d8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80147da:	4798      	blx	r3
 80147dc:	4b08      	ldr	r3, [pc, #32]	; (8014800 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 80147de:	881a      	ldrh	r2, [r3, #0]
 80147e0:	6833      	ldr	r3, [r6, #0]
 80147e2:	e9cd 7500 	strd	r7, r5, [sp]
 80147e6:	4601      	mov	r1, r0
 80147e8:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 80147ea:	4630      	mov	r0, r6
 80147ec:	ab04      	add	r3, sp, #16
 80147ee:	47a8      	blx	r5
 80147f0:	6820      	ldr	r0, [r4, #0]
 80147f2:	6803      	ldr	r3, [r0, #0]
 80147f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80147f6:	4798      	blx	r3
 80147f8:	e7e8      	b.n	80147cc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80147fa:	bf00      	nop
 80147fc:	200135b0 	.word	0x200135b0
 8014800:	200135aa 	.word	0x200135aa

08014804 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8014804:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014808:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801480c:	9e08      	ldr	r6, [sp, #32]
 801480e:	4688      	mov	r8, r1
 8014810:	4614      	mov	r4, r2
 8014812:	461d      	mov	r5, r3
 8014814:	2f00      	cmp	r7, #0
 8014816:	f000 80a9 	beq.w	801496c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801481a:	4618      	mov	r0, r3
 801481c:	f7f6 fcbd 	bl	800b19a <_ZNK8touchgfx4Rect7isEmptyEv>
 8014820:	2800      	cmp	r0, #0
 8014822:	f040 80a3 	bne.w	801496c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8014826:	f9b5 1000 	ldrsh.w	r1, [r5]
 801482a:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801482e:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8014832:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8014836:	fb04 1303 	mla	r3, r4, r3, r1
 801483a:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801483e:	4365      	muls	r5, r4
 8014840:	2fff      	cmp	r7, #255	; 0xff
 8014842:	eba4 0200 	sub.w	r2, r4, r0
 8014846:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801484a:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801484e:	d04a      	beq.n	80148e6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 8014850:	b2bc      	uxth	r4, r7
 8014852:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 8014856:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801485a:	fa5f f788 	uxtb.w	r7, r8
 801485e:	b2f3      	uxtb	r3, r6
 8014860:	0040      	lsls	r0, r0, #1
 8014862:	fb0e fe04 	mul.w	lr, lr, r4
 8014866:	4367      	muls	r7, r4
 8014868:	4363      	muls	r3, r4
 801486a:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801486e:	fa1f fc8c 	uxth.w	ip, ip
 8014872:	42a9      	cmp	r1, r5
 8014874:	d27a      	bcs.n	801496c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8014876:	eb01 0900 	add.w	r9, r1, r0
 801487a:	4549      	cmp	r1, r9
 801487c:	d231      	bcs.n	80148e2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801487e:	880a      	ldrh	r2, [r1, #0]
 8014880:	1214      	asrs	r4, r2, #8
 8014882:	10d6      	asrs	r6, r2, #3
 8014884:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8014888:	00d2      	lsls	r2, r2, #3
 801488a:	b2d2      	uxtb	r2, r2
 801488c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8014890:	fb14 f40c 	smulbb	r4, r4, ip
 8014894:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8014898:	4474      	add	r4, lr
 801489a:	fb12 f20c 	smulbb	r2, r2, ip
 801489e:	b2a4      	uxth	r4, r4
 80148a0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80148a4:	441a      	add	r2, r3
 80148a6:	b292      	uxth	r2, r2
 80148a8:	f104 0a01 	add.w	sl, r4, #1
 80148ac:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80148b0:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80148b4:	fb16 f60c 	smulbb	r6, r6, ip
 80148b8:	f102 0a01 	add.w	sl, r2, #1
 80148bc:	443e      	add	r6, r7
 80148be:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 80148c2:	b2b6      	uxth	r6, r6
 80148c4:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80148c8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80148cc:	4322      	orrs	r2, r4
 80148ce:	1c74      	adds	r4, r6, #1
 80148d0:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 80148d4:	0976      	lsrs	r6, r6, #5
 80148d6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80148da:	4332      	orrs	r2, r6
 80148dc:	f821 2b02 	strh.w	r2, [r1], #2
 80148e0:	e7cb      	b.n	801487a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 80148e2:	4441      	add	r1, r8
 80148e4:	e7c5      	b.n	8014872 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 80148e6:	4f22      	ldr	r7, [pc, #136]	; (8014970 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 80148e8:	0973      	lsrs	r3, r6, #5
 80148ea:	ea08 0707 	and.w	r7, r8, r7
 80148ee:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80148f2:	433b      	orrs	r3, r7
 80148f4:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80148f8:	4333      	orrs	r3, r6
 80148fa:	07e7      	lsls	r7, r4, #31
 80148fc:	b29b      	uxth	r3, r3
 80148fe:	d50b      	bpl.n	8014918 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8014900:	0040      	lsls	r0, r0, #1
 8014902:	0052      	lsls	r2, r2, #1
 8014904:	42a9      	cmp	r1, r5
 8014906:	d231      	bcs.n	801496c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8014908:	180c      	adds	r4, r1, r0
 801490a:	42a1      	cmp	r1, r4
 801490c:	d202      	bcs.n	8014914 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801490e:	f821 3b02 	strh.w	r3, [r1], #2
 8014912:	e7fa      	b.n	801490a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 8014914:	4411      	add	r1, r2
 8014916:	e7f5      	b.n	8014904 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8014918:	078e      	lsls	r6, r1, #30
 801491a:	d008      	beq.n	801492e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801491c:	0066      	lsls	r6, r4, #1
 801491e:	460a      	mov	r2, r1
 8014920:	42aa      	cmp	r2, r5
 8014922:	d202      	bcs.n	801492a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 8014924:	8013      	strh	r3, [r2, #0]
 8014926:	4432      	add	r2, r6
 8014928:	e7fa      	b.n	8014920 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801492a:	3102      	adds	r1, #2
 801492c:	3801      	subs	r0, #1
 801492e:	07c2      	lsls	r2, r0, #31
 8014930:	d50b      	bpl.n	801494a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 8014932:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 8014936:	3a01      	subs	r2, #1
 8014938:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801493c:	0066      	lsls	r6, r4, #1
 801493e:	42aa      	cmp	r2, r5
 8014940:	d202      	bcs.n	8014948 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 8014942:	8013      	strh	r3, [r2, #0]
 8014944:	4432      	add	r2, r6
 8014946:	e7fa      	b.n	801493e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 8014948:	3801      	subs	r0, #1
 801494a:	b178      	cbz	r0, 801496c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801494c:	1040      	asrs	r0, r0, #1
 801494e:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8014952:	0080      	lsls	r0, r0, #2
 8014954:	0064      	lsls	r4, r4, #1
 8014956:	42a9      	cmp	r1, r5
 8014958:	d208      	bcs.n	801496c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801495a:	180e      	adds	r6, r1, r0
 801495c:	460a      	mov	r2, r1
 801495e:	42b2      	cmp	r2, r6
 8014960:	d202      	bcs.n	8014968 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 8014962:	f842 3b04 	str.w	r3, [r2], #4
 8014966:	e7fa      	b.n	801495e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 8014968:	4421      	add	r1, r4
 801496a:	e7f4      	b.n	8014956 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801496c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014970:	00fff800 	.word	0x00fff800

08014974 <_ZN8touchgfx8LCD16bppC1Ev>:
 8014974:	2200      	movs	r2, #0
 8014976:	4910      	ldr	r1, [pc, #64]	; (80149b8 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8014978:	6042      	str	r2, [r0, #4]
 801497a:	6001      	str	r1, [r0, #0]
 801497c:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8014980:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8014984:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8014988:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801498c:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8014990:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8014994:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8014998:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801499c:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 80149a0:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 80149a4:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 80149a8:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 80149ac:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 80149b0:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 80149b4:	4770      	bx	lr
 80149b6:	bf00      	nop
 80149b8:	08020bf0 	.word	0x08020bf0

080149bc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 80149bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80149c0:	460d      	mov	r5, r1
 80149c2:	b08d      	sub	sp, #52	; 0x34
 80149c4:	4604      	mov	r4, r0
 80149c6:	6808      	ldr	r0, [r1, #0]
 80149c8:	6849      	ldr	r1, [r1, #4]
 80149ca:	4699      	mov	r9, r3
 80149cc:	ab08      	add	r3, sp, #32
 80149ce:	c303      	stmia	r3!, {r0, r1}
 80149d0:	6810      	ldr	r0, [r2, #0]
 80149d2:	6851      	ldr	r1, [r2, #4]
 80149d4:	ab0a      	add	r3, sp, #40	; 0x28
 80149d6:	c303      	stmia	r3!, {r0, r1}
 80149d8:	a808      	add	r0, sp, #32
 80149da:	f7fa f82b 	bl	800ea34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80149de:	4629      	mov	r1, r5
 80149e0:	a80a      	add	r0, sp, #40	; 0x28
 80149e2:	f7fa f86b 	bl	800eabc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80149e6:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80149ea:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 80149ee:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 80149f2:	4d63      	ldr	r5, [pc, #396]	; (8014b80 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80149f4:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 80149f8:	6828      	ldr	r0, [r5, #0]
 80149fa:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 80149fe:	fb11 2103 	smlabb	r1, r1, r3, r2
 8014a02:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8014a06:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8014a0a:	440a      	add	r2, r1
 8014a0c:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8014a10:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8014a14:	4413      	add	r3, r2
 8014a16:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8014a1a:	6803      	ldr	r3, [r0, #0]
 8014a1c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014a1e:	4798      	blx	r3
 8014a20:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8014a24:	d119      	bne.n	8014a5a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8014a26:	f010 0f20 	tst.w	r0, #32
 8014a2a:	6828      	ldr	r0, [r5, #0]
 8014a2c:	d018      	beq.n	8014a60 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8014a2e:	2500      	movs	r5, #0
 8014a30:	6801      	ldr	r1, [r0, #0]
 8014a32:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8014a36:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8014a3a:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8014a3e:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 8014a42:	9502      	str	r5, [sp, #8]
 8014a44:	b2b6      	uxth	r6, r6
 8014a46:	fa1f f588 	uxth.w	r5, r8
 8014a4a:	9601      	str	r6, [sp, #4]
 8014a4c:	9500      	str	r5, [sp, #0]
 8014a4e:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 8014a50:	4621      	mov	r1, r4
 8014a52:	47a8      	blx	r5
 8014a54:	b00d      	add	sp, #52	; 0x34
 8014a56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014a5a:	f010 0f40 	tst.w	r0, #64	; 0x40
 8014a5e:	e7e4      	b.n	8014a2a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8014a60:	6803      	ldr	r3, [r0, #0]
 8014a62:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014a64:	4798      	blx	r3
 8014a66:	4947      	ldr	r1, [pc, #284]	; (8014b84 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8014a68:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8014a6c:	880b      	ldrh	r3, [r1, #0]
 8014a6e:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 8014a72:	fb03 5202 	mla	r2, r3, r2, r5
 8014a76:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8014a7a:	4373      	muls	r3, r6
 8014a7c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8014a80:	9307      	str	r3, [sp, #28]
 8014a82:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8014a86:	9306      	str	r3, [sp, #24]
 8014a88:	468a      	mov	sl, r1
 8014a8a:	9b07      	ldr	r3, [sp, #28]
 8014a8c:	4298      	cmp	r0, r3
 8014a8e:	d270      	bcs.n	8014b72 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8014a90:	9b06      	ldr	r3, [sp, #24]
 8014a92:	4621      	mov	r1, r4
 8014a94:	eb00 0b03 	add.w	fp, r0, r3
 8014a98:	4558      	cmp	r0, fp
 8014a9a:	d25d      	bcs.n	8014b58 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8014a9c:	f851 4b04 	ldr.w	r4, [r1], #4
 8014aa0:	0e23      	lsrs	r3, r4, #24
 8014aa2:	d014      	beq.n	8014ace <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8014aa4:	2bff      	cmp	r3, #255	; 0xff
 8014aa6:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8014aaa:	d112      	bne.n	8014ad2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8014aac:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8014ab0:	d10f      	bne.n	8014ad2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8014ab2:	0963      	lsrs	r3, r4, #5
 8014ab4:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8014ab8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014abc:	f02c 0c07 	bic.w	ip, ip, #7
 8014ac0:	ea43 0c0c 	orr.w	ip, r3, ip
 8014ac4:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8014ac8:	ea4c 0404 	orr.w	r4, ip, r4
 8014acc:	8004      	strh	r4, [r0, #0]
 8014ace:	3002      	adds	r0, #2
 8014ad0:	e7e2      	b.n	8014a98 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8014ad2:	fb09 f303 	mul.w	r3, r9, r3
 8014ad6:	8807      	ldrh	r7, [r0, #0]
 8014ad8:	1c5a      	adds	r2, r3, #1
 8014ada:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8014ade:	1212      	asrs	r2, r2, #8
 8014ae0:	123e      	asrs	r6, r7, #8
 8014ae2:	b293      	uxth	r3, r2
 8014ae4:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8014ae8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8014aec:	43d2      	mvns	r2, r2
 8014aee:	b2d2      	uxtb	r2, r2
 8014af0:	10fd      	asrs	r5, r7, #3
 8014af2:	fb1e fe03 	smulbb	lr, lr, r3
 8014af6:	00ff      	lsls	r7, r7, #3
 8014af8:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8014afc:	fb06 e602 	mla	r6, r6, r2, lr
 8014b00:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8014b04:	b2ff      	uxtb	r7, r7
 8014b06:	fa5f fc8c 	uxtb.w	ip, ip
 8014b0a:	b2e4      	uxtb	r4, r4
 8014b0c:	b2b6      	uxth	r6, r6
 8014b0e:	fb1c fc03 	smulbb	ip, ip, r3
 8014b12:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8014b16:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8014b1a:	fb14 f403 	smulbb	r4, r4, r3
 8014b1e:	fb05 c502 	mla	r5, r5, r2, ip
 8014b22:	f106 0e01 	add.w	lr, r6, #1
 8014b26:	fb07 4702 	mla	r7, r7, r2, r4
 8014b2a:	b2ad      	uxth	r5, r5
 8014b2c:	b2bf      	uxth	r7, r7
 8014b2e:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8014b32:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 8014b36:	f105 0c01 	add.w	ip, r5, #1
 8014b3a:	1c7e      	adds	r6, r7, #1
 8014b3c:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8014b40:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8014b44:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8014b48:	096d      	lsrs	r5, r5, #5
 8014b4a:	ea46 060e 	orr.w	r6, r6, lr
 8014b4e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8014b52:	432e      	orrs	r6, r5
 8014b54:	8006      	strh	r6, [r0, #0]
 8014b56:	e7ba      	b.n	8014ace <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8014b58:	f8ba 3000 	ldrh.w	r3, [sl]
 8014b5c:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 8014b60:	eba3 0308 	sub.w	r3, r3, r8
 8014b64:	eba4 0408 	sub.w	r4, r4, r8
 8014b68:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014b6c:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8014b70:	e78b      	b.n	8014a8a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8014b72:	4b03      	ldr	r3, [pc, #12]	; (8014b80 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8014b74:	6818      	ldr	r0, [r3, #0]
 8014b76:	6803      	ldr	r3, [r0, #0]
 8014b78:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014b7a:	4798      	blx	r3
 8014b7c:	e76a      	b.n	8014a54 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8014b7e:	bf00      	nop
 8014b80:	200135b0 	.word	0x200135b0
 8014b84:	200135aa 	.word	0x200135aa

08014b88 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8014b88:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014b8c:	460c      	mov	r4, r1
 8014b8e:	b085      	sub	sp, #20
 8014b90:	6810      	ldr	r0, [r2, #0]
 8014b92:	6851      	ldr	r1, [r2, #4]
 8014b94:	466d      	mov	r5, sp
 8014b96:	c503      	stmia	r5!, {r0, r1}
 8014b98:	6818      	ldr	r0, [r3, #0]
 8014b9a:	6859      	ldr	r1, [r3, #4]
 8014b9c:	4616      	mov	r6, r2
 8014b9e:	c503      	stmia	r5!, {r0, r1}
 8014ba0:	4668      	mov	r0, sp
 8014ba2:	f7f9 ff47 	bl	800ea34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014ba6:	4631      	mov	r1, r6
 8014ba8:	a802      	add	r0, sp, #8
 8014baa:	f7f9 ff87 	bl	800eabc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014bae:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8014bb2:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8014bb6:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8014bba:	4d28      	ldr	r5, [pc, #160]	; (8014c5c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8014bbc:	4e28      	ldr	r6, [pc, #160]	; (8014c60 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8014bbe:	6828      	ldr	r0, [r5, #0]
 8014bc0:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8014bc4:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8014bc8:	fb11 2103 	smlabb	r1, r1, r3, r2
 8014bcc:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8014bd0:	f8bd 1000 	ldrh.w	r1, [sp]
 8014bd4:	440a      	add	r2, r1
 8014bd6:	f8ad 2008 	strh.w	r2, [sp, #8]
 8014bda:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8014bde:	4413      	add	r3, r2
 8014be0:	f8ad 300a 	strh.w	r3, [sp, #10]
 8014be4:	6803      	ldr	r3, [r0, #0]
 8014be6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014be8:	4798      	blx	r3
 8014bea:	8833      	ldrh	r3, [r6, #0]
 8014bec:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8014bf0:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8014bf4:	f8df e06c 	ldr.w	lr, [pc, #108]	; 8014c64 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8014bf8:	fb03 1202 	mla	r2, r3, r2, r1
 8014bfc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8014c00:	fb08 f303 	mul.w	r3, r8, r3
 8014c04:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8014c08:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8014c0c:	4298      	cmp	r0, r3
 8014c0e:	d21d      	bcs.n	8014c4c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8014c10:	eb00 080c 	add.w	r8, r0, ip
 8014c14:	4540      	cmp	r0, r8
 8014c16:	d20f      	bcs.n	8014c38 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8014c18:	f854 1b04 	ldr.w	r1, [r4], #4
 8014c1c:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8014c20:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8014c24:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8014c28:	ea42 0209 	orr.w	r2, r2, r9
 8014c2c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8014c30:	430a      	orrs	r2, r1
 8014c32:	f820 2b02 	strh.w	r2, [r0], #2
 8014c36:	e7ed      	b.n	8014c14 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8014c38:	8832      	ldrh	r2, [r6, #0]
 8014c3a:	1bd2      	subs	r2, r2, r7
 8014c3c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8014c40:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8014c44:	1bd2      	subs	r2, r2, r7
 8014c46:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8014c4a:	e7df      	b.n	8014c0c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8014c4c:	6828      	ldr	r0, [r5, #0]
 8014c4e:	6803      	ldr	r3, [r0, #0]
 8014c50:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014c52:	4798      	blx	r3
 8014c54:	b005      	add	sp, #20
 8014c56:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014c5a:	bf00      	nop
 8014c5c:	200135b0 	.word	0x200135b0
 8014c60:	200135aa 	.word	0x200135aa
 8014c64:	fffff800 	.word	0xfffff800

08014c68 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8014c68:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014c6c:	460e      	mov	r6, r1
 8014c6e:	b08e      	sub	sp, #56	; 0x38
 8014c70:	4604      	mov	r4, r0
 8014c72:	6808      	ldr	r0, [r1, #0]
 8014c74:	6849      	ldr	r1, [r1, #4]
 8014c76:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8014e50 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8014c7a:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 8014e54 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8014c7e:	461d      	mov	r5, r3
 8014c80:	ab0a      	add	r3, sp, #40	; 0x28
 8014c82:	c303      	stmia	r3!, {r0, r1}
 8014c84:	6810      	ldr	r0, [r2, #0]
 8014c86:	6851      	ldr	r1, [r2, #4]
 8014c88:	ab0c      	add	r3, sp, #48	; 0x30
 8014c8a:	c303      	stmia	r3!, {r0, r1}
 8014c8c:	a80a      	add	r0, sp, #40	; 0x28
 8014c8e:	f7f9 fed1 	bl	800ea34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014c92:	4631      	mov	r1, r6
 8014c94:	a80c      	add	r0, sp, #48	; 0x30
 8014c96:	f7f9 ff11 	bl	800eabc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014c9a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8014c9e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8014ca2:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8014ca6:	f8d8 0000 	ldr.w	r0, [r8]
 8014caa:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 8014cae:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8014cb2:	fb11 2103 	smlabb	r1, r1, r3, r2
 8014cb6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8014cba:	440c      	add	r4, r1
 8014cbc:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8014cc0:	440a      	add	r2, r1
 8014cc2:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8014cc6:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 8014cca:	4413      	add	r3, r2
 8014ccc:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8014cd0:	6803      	ldr	r3, [r0, #0]
 8014cd2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014cd4:	4798      	blx	r3
 8014cd6:	2dff      	cmp	r5, #255	; 0xff
 8014cd8:	d124      	bne.n	8014d24 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8014cda:	f010 0f01 	tst.w	r0, #1
 8014cde:	f8d8 0000 	ldr.w	r0, [r8]
 8014ce2:	d022      	beq.n	8014d2a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8014ce4:	2100      	movs	r1, #0
 8014ce6:	f8d0 c000 	ldr.w	ip, [r0]
 8014cea:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8014cee:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8014cf2:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8014cf6:	f04f 0e01 	mov.w	lr, #1
 8014cfa:	f8cd e018 	str.w	lr, [sp, #24]
 8014cfe:	f8b9 e000 	ldrh.w	lr, [r9]
 8014d02:	9503      	str	r5, [sp, #12]
 8014d04:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8014d08:	b2b6      	uxth	r6, r6
 8014d0a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8014d0e:	9102      	str	r1, [sp, #8]
 8014d10:	b2bf      	uxth	r7, r7
 8014d12:	9601      	str	r6, [sp, #4]
 8014d14:	9700      	str	r7, [sp, #0]
 8014d16:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 8014d1a:	4621      	mov	r1, r4
 8014d1c:	47a8      	blx	r5
 8014d1e:	b00e      	add	sp, #56	; 0x38
 8014d20:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014d24:	f010 0f04 	tst.w	r0, #4
 8014d28:	e7d9      	b.n	8014cde <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8014d2a:	6803      	ldr	r3, [r0, #0]
 8014d2c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014d2e:	4798      	blx	r3
 8014d30:	f8b9 3000 	ldrh.w	r3, [r9]
 8014d34:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8014d38:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8014d3c:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8014d40:	fb03 1202 	mla	r2, r3, r2, r1
 8014d44:	ebac 0c07 	sub.w	ip, ip, r7
 8014d48:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8014d4c:	435e      	muls	r6, r3
 8014d4e:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8014d52:	2dff      	cmp	r5, #255	; 0xff
 8014d54:	eba3 0707 	sub.w	r7, r3, r7
 8014d58:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8014d5c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8014d60:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8014d64:	d049      	beq.n	8014dfa <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8014d66:	43eb      	mvns	r3, r5
 8014d68:	fa1f f985 	uxth.w	r9, r5
 8014d6c:	b2db      	uxtb	r3, r3
 8014d6e:	42b0      	cmp	r0, r6
 8014d70:	d266      	bcs.n	8014e40 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8014d72:	eb00 0a0e 	add.w	sl, r0, lr
 8014d76:	4550      	cmp	r0, sl
 8014d78:	4621      	mov	r1, r4
 8014d7a:	f104 0403 	add.w	r4, r4, #3
 8014d7e:	d25b      	bcs.n	8014e38 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8014d80:	8802      	ldrh	r2, [r0, #0]
 8014d82:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8014d86:	ea4f 2822 	mov.w	r8, r2, asr #8
 8014d8a:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8014d8e:	fb11 f109 	smulbb	r1, r1, r9
 8014d92:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8014d96:	10d5      	asrs	r5, r2, #3
 8014d98:	fb08 1803 	mla	r8, r8, r3, r1
 8014d9c:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8014da0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8014da4:	fb11 f109 	smulbb	r1, r1, r9
 8014da8:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8014dac:	fb05 1503 	mla	r5, r5, r3, r1
 8014db0:	00d2      	lsls	r2, r2, #3
 8014db2:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8014db6:	b2d2      	uxtb	r2, r2
 8014db8:	fb11 f109 	smulbb	r1, r1, r9
 8014dbc:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8014dc0:	fa1f f888 	uxth.w	r8, r8
 8014dc4:	fb02 1203 	mla	r2, r2, r3, r1
 8014dc8:	b292      	uxth	r2, r2
 8014dca:	f108 0101 	add.w	r1, r8, #1
 8014dce:	b2ad      	uxth	r5, r5
 8014dd0:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8014dd4:	1c51      	adds	r1, r2, #1
 8014dd6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8014dda:	1c69      	adds	r1, r5, #1
 8014ddc:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8014de0:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8014de4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8014de8:	096d      	lsrs	r5, r5, #5
 8014dea:	ea42 0208 	orr.w	r2, r2, r8
 8014dee:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8014df2:	432a      	orrs	r2, r5
 8014df4:	f820 2b02 	strh.w	r2, [r0], #2
 8014df8:	e7bd      	b.n	8014d76 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8014dfa:	4a14      	ldr	r2, [pc, #80]	; (8014e4c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8014dfc:	42b0      	cmp	r0, r6
 8014dfe:	d21f      	bcs.n	8014e40 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8014e00:	eb00 050e 	add.w	r5, r0, lr
 8014e04:	42a8      	cmp	r0, r5
 8014e06:	4621      	mov	r1, r4
 8014e08:	f104 0403 	add.w	r4, r4, #3
 8014e0c:	d210      	bcs.n	8014e30 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8014e0e:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8014e12:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8014e16:	00db      	lsls	r3, r3, #3
 8014e18:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8014e1c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014e20:	430b      	orrs	r3, r1
 8014e22:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8014e26:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8014e2a:	f820 3b02 	strh.w	r3, [r0], #2
 8014e2e:	e7e9      	b.n	8014e04 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8014e30:	4438      	add	r0, r7
 8014e32:	eb01 040c 	add.w	r4, r1, ip
 8014e36:	e7e1      	b.n	8014dfc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8014e38:	4438      	add	r0, r7
 8014e3a:	eb01 040c 	add.w	r4, r1, ip
 8014e3e:	e796      	b.n	8014d6e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8014e40:	4b03      	ldr	r3, [pc, #12]	; (8014e50 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8014e42:	6818      	ldr	r0, [r3, #0]
 8014e44:	6803      	ldr	r3, [r0, #0]
 8014e46:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014e48:	4798      	blx	r3
 8014e4a:	e768      	b.n	8014d1e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8014e4c:	fffff800 	.word	0xfffff800
 8014e50:	200135b0 	.word	0x200135b0
 8014e54:	200135aa 	.word	0x200135aa

08014e58 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8014e58:	b4f0      	push	{r4, r5, r6, r7}
 8014e5a:	4616      	mov	r6, r2
 8014e5c:	2e01      	cmp	r6, #1
 8014e5e:	461c      	mov	r4, r3
 8014e60:	460d      	mov	r5, r1
 8014e62:	9a04      	ldr	r2, [sp, #16]
 8014e64:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8014e68:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8014e6c:	d012      	beq.n	8014e94 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8014e6e:	d303      	bcc.n	8014e78 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8014e70:	2e02      	cmp	r6, #2
 8014e72:	d00a      	beq.n	8014e8a <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8014e74:	bcf0      	pop	{r4, r5, r6, r7}
 8014e76:	4770      	bx	lr
 8014e78:	6805      	ldr	r5, [r0, #0]
 8014e7a:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8014e7e:	68ed      	ldr	r5, [r5, #12]
 8014e80:	4613      	mov	r3, r2
 8014e82:	46ac      	mov	ip, r5
 8014e84:	4622      	mov	r2, r4
 8014e86:	bcf0      	pop	{r4, r5, r6, r7}
 8014e88:	4760      	bx	ip
 8014e8a:	4621      	mov	r1, r4
 8014e8c:	4628      	mov	r0, r5
 8014e8e:	bcf0      	pop	{r4, r5, r6, r7}
 8014e90:	f7ff bd94 	b.w	80149bc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8014e94:	4621      	mov	r1, r4
 8014e96:	4628      	mov	r0, r5
 8014e98:	bcf0      	pop	{r4, r5, r6, r7}
 8014e9a:	f7ff bee5 	b.w	8014c68 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08014ea0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8014ea0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014ea4:	4681      	mov	r9, r0
 8014ea6:	b093      	sub	sp, #76	; 0x4c
 8014ea8:	6810      	ldr	r0, [r2, #0]
 8014eaa:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8014eae:	4f6d      	ldr	r7, [pc, #436]	; (8015064 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8014eb0:	4688      	mov	r8, r1
 8014eb2:	6851      	ldr	r1, [r2, #4]
 8014eb4:	ac0e      	add	r4, sp, #56	; 0x38
 8014eb6:	c403      	stmia	r4!, {r0, r1}
 8014eb8:	6818      	ldr	r0, [r3, #0]
 8014eba:	6859      	ldr	r1, [r3, #4]
 8014ebc:	ac10      	add	r4, sp, #64	; 0x40
 8014ebe:	4616      	mov	r6, r2
 8014ec0:	c403      	stmia	r4!, {r0, r1}
 8014ec2:	a80e      	add	r0, sp, #56	; 0x38
 8014ec4:	f7f9 fdb6 	bl	800ea34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014ec8:	4631      	mov	r1, r6
 8014eca:	a810      	add	r0, sp, #64	; 0x40
 8014ecc:	f7f9 fdf6 	bl	800eabc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014ed0:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8014ed4:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8014ed8:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8014edc:	4e62      	ldr	r6, [pc, #392]	; (8015068 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8014ede:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 8014ee2:	6830      	ldr	r0, [r6, #0]
 8014ee4:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8014ee8:	fb11 2103 	smlabb	r1, r1, r3, r2
 8014eec:	4489      	add	r9, r1
 8014eee:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8014ef2:	440a      	add	r2, r1
 8014ef4:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8014ef8:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8014efc:	4413      	add	r3, r2
 8014efe:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8014f02:	6803      	ldr	r3, [r0, #0]
 8014f04:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014f06:	4798      	blx	r3
 8014f08:	f010 0f80 	tst.w	r0, #128	; 0x80
 8014f0c:	6830      	ldr	r0, [r6, #0]
 8014f0e:	d01d      	beq.n	8014f4c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8014f10:	2200      	movs	r2, #0
 8014f12:	6801      	ldr	r1, [r0, #0]
 8014f14:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8014f18:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8014f1c:	220b      	movs	r2, #11
 8014f1e:	9207      	str	r2, [sp, #28]
 8014f20:	883a      	ldrh	r2, [r7, #0]
 8014f22:	9206      	str	r2, [sp, #24]
 8014f24:	2201      	movs	r2, #1
 8014f26:	e9cd a204 	strd	sl, r2, [sp, #16]
 8014f2a:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8014f2e:	9203      	str	r2, [sp, #12]
 8014f30:	b2a4      	uxth	r4, r4
 8014f32:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8014f36:	9200      	str	r2, [sp, #0]
 8014f38:	b2ad      	uxth	r5, r5
 8014f3a:	9502      	str	r5, [sp, #8]
 8014f3c:	9401      	str	r4, [sp, #4]
 8014f3e:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8014f40:	4642      	mov	r2, r8
 8014f42:	4649      	mov	r1, r9
 8014f44:	47a0      	blx	r4
 8014f46:	b013      	add	sp, #76	; 0x4c
 8014f48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014f4c:	6803      	ldr	r3, [r0, #0]
 8014f4e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014f50:	4798      	blx	r3
 8014f52:	883b      	ldrh	r3, [r7, #0]
 8014f54:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8014f58:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8014f5c:	fb03 1202 	mla	r2, r3, r2, r1
 8014f60:	435d      	muls	r5, r3
 8014f62:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8014f66:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8014f6a:	920c      	str	r2, [sp, #48]	; 0x30
 8014f6c:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8014f70:	1b12      	subs	r2, r2, r4
 8014f72:	920d      	str	r2, [sp, #52]	; 0x34
 8014f74:	0062      	lsls	r2, r4, #1
 8014f76:	1b1c      	subs	r4, r3, r4
 8014f78:	0063      	lsls	r3, r4, #1
 8014f7a:	920a      	str	r2, [sp, #40]	; 0x28
 8014f7c:	930b      	str	r3, [sp, #44]	; 0x2c
 8014f7e:	f04f 0e04 	mov.w	lr, #4
 8014f82:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014f84:	4298      	cmp	r0, r3
 8014f86:	d266      	bcs.n	8015056 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8014f88:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014f8a:	eb00 0b03 	add.w	fp, r0, r3
 8014f8e:	4558      	cmp	r0, fp
 8014f90:	d25c      	bcs.n	801504c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8014f92:	f819 3b01 	ldrb.w	r3, [r9], #1
 8014f96:	fb1e e303 	smlabb	r3, lr, r3, lr
 8014f9a:	f858 2003 	ldr.w	r2, [r8, r3]
 8014f9e:	0e11      	lsrs	r1, r2, #24
 8014fa0:	d012      	beq.n	8014fc8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8014fa2:	29ff      	cmp	r1, #255	; 0xff
 8014fa4:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8014fa8:	d110      	bne.n	8014fcc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8014faa:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8014fae:	d10d      	bne.n	8014fcc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8014fb0:	0953      	lsrs	r3, r2, #5
 8014fb2:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8014fb6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014fba:	f027 0707 	bic.w	r7, r7, #7
 8014fbe:	431f      	orrs	r7, r3
 8014fc0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8014fc4:	433a      	orrs	r2, r7
 8014fc6:	8002      	strh	r2, [r0, #0]
 8014fc8:	3002      	adds	r0, #2
 8014fca:	e7e0      	b.n	8014f8e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8014fcc:	fb0a f101 	mul.w	r1, sl, r1
 8014fd0:	8806      	ldrh	r6, [r0, #0]
 8014fd2:	1c4b      	adds	r3, r1, #1
 8014fd4:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8014fd8:	1235      	asrs	r5, r6, #8
 8014fda:	10f4      	asrs	r4, r6, #3
 8014fdc:	121b      	asrs	r3, r3, #8
 8014fde:	00f6      	lsls	r6, r6, #3
 8014fe0:	b299      	uxth	r1, r3
 8014fe2:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8014fe6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8014fea:	b2f6      	uxtb	r6, r6
 8014fec:	43db      	mvns	r3, r3
 8014fee:	b2d2      	uxtb	r2, r2
 8014ff0:	b2db      	uxtb	r3, r3
 8014ff2:	fb1c fc01 	smulbb	ip, ip, r1
 8014ff6:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8014ffa:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8014ffe:	fb12 f201 	smulbb	r2, r2, r1
 8015002:	fb05 c503 	mla	r5, r5, r3, ip
 8015006:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801500a:	b2ff      	uxtb	r7, r7
 801500c:	fb06 2203 	mla	r2, r6, r3, r2
 8015010:	b2ad      	uxth	r5, r5
 8015012:	fb17 f701 	smulbb	r7, r7, r1
 8015016:	b292      	uxth	r2, r2
 8015018:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801501c:	fb04 7403 	mla	r4, r4, r3, r7
 8015020:	f105 0c01 	add.w	ip, r5, #1
 8015024:	1c57      	adds	r7, r2, #1
 8015026:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801502a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801502e:	b2a4      	uxth	r4, r4
 8015030:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8015034:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8015038:	433d      	orrs	r5, r7
 801503a:	1c67      	adds	r7, r4, #1
 801503c:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8015040:	0964      	lsrs	r4, r4, #5
 8015042:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8015046:	4325      	orrs	r5, r4
 8015048:	8005      	strh	r5, [r0, #0]
 801504a:	e7bd      	b.n	8014fc8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801504c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801504e:	4418      	add	r0, r3
 8015050:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015052:	4499      	add	r9, r3
 8015054:	e795      	b.n	8014f82 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8015056:	4b04      	ldr	r3, [pc, #16]	; (8015068 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8015058:	6818      	ldr	r0, [r3, #0]
 801505a:	6803      	ldr	r3, [r0, #0]
 801505c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801505e:	4798      	blx	r3
 8015060:	e771      	b.n	8014f46 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8015062:	bf00      	nop
 8015064:	200135aa 	.word	0x200135aa
 8015068:	200135b0 	.word	0x200135b0

0801506c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801506c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015070:	b087      	sub	sp, #28
 8015072:	4680      	mov	r8, r0
 8015074:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8015078:	460d      	mov	r5, r1
 801507a:	4614      	mov	r4, r2
 801507c:	2e00      	cmp	r6, #0
 801507e:	f000 80b9 	beq.w	80151f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8015082:	6810      	ldr	r0, [r2, #0]
 8015084:	6851      	ldr	r1, [r2, #4]
 8015086:	af02      	add	r7, sp, #8
 8015088:	c703      	stmia	r7!, {r0, r1}
 801508a:	6818      	ldr	r0, [r3, #0]
 801508c:	6859      	ldr	r1, [r3, #4]
 801508e:	af04      	add	r7, sp, #16
 8015090:	c703      	stmia	r7!, {r0, r1}
 8015092:	a802      	add	r0, sp, #8
 8015094:	f7f9 fcce 	bl	800ea34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015098:	4621      	mov	r1, r4
 801509a:	a804      	add	r0, sp, #16
 801509c:	f7f9 fd0e 	bl	800eabc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80150a0:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80150a4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80150a8:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 80150ac:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 80150b0:	fb14 2103 	smlabb	r1, r4, r3, r2
 80150b4:	eb08 0401 	add.w	r4, r8, r1
 80150b8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80150bc:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80150c0:	440a      	add	r2, r1
 80150c2:	f8ad 2010 	strh.w	r2, [sp, #16]
 80150c6:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80150ca:	4413      	add	r3, r2
 80150cc:	f8ad 3012 	strh.w	r3, [sp, #18]
 80150d0:	4b4a      	ldr	r3, [pc, #296]	; (80151fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 80150d2:	6818      	ldr	r0, [r3, #0]
 80150d4:	6803      	ldr	r3, [r0, #0]
 80150d6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80150d8:	4798      	blx	r3
 80150da:	4b49      	ldr	r3, [pc, #292]	; (8015200 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 80150dc:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 80150e0:	881a      	ldrh	r2, [r3, #0]
 80150e2:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 80150e6:	2eff      	cmp	r6, #255	; 0xff
 80150e8:	fb02 c101 	mla	r1, r2, r1, ip
 80150ec:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80150f0:	fb02 f207 	mul.w	r2, r2, r7
 80150f4:	f105 0104 	add.w	r1, r5, #4
 80150f8:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 80150fc:	461d      	mov	r5, r3
 80150fe:	d05a      	beq.n	80151b6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8015100:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 8015104:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8015108:	b2b6      	uxth	r6, r6
 801510a:	fa1f fe8e 	uxth.w	lr, lr
 801510e:	9301      	str	r3, [sp, #4]
 8015110:	4282      	cmp	r2, r0
 8015112:	d96a      	bls.n	80151ea <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8015114:	eb00 0b0a 	add.w	fp, r0, sl
 8015118:	4583      	cmp	fp, r0
 801511a:	d940      	bls.n	801519e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801511c:	f814 3b01 	ldrb.w	r3, [r4], #1
 8015120:	8805      	ldrh	r5, [r0, #0]
 8015122:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8015126:	122f      	asrs	r7, r5, #8
 8015128:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801512c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015130:	fb17 f70e 	smulbb	r7, r7, lr
 8015134:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8015138:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801513c:	00ed      	lsls	r5, r5, #3
 801513e:	fb0c 7c06 	mla	ip, ip, r6, r7
 8015142:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8015146:	10df      	asrs	r7, r3, #3
 8015148:	b2ed      	uxtb	r5, r5
 801514a:	00db      	lsls	r3, r3, #3
 801514c:	fa1f fc8c 	uxth.w	ip, ip
 8015150:	fb19 f90e 	smulbb	r9, r9, lr
 8015154:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015158:	b2db      	uxtb	r3, r3
 801515a:	fb15 f50e 	smulbb	r5, r5, lr
 801515e:	fb07 9706 	mla	r7, r7, r6, r9
 8015162:	fb03 5306 	mla	r3, r3, r6, r5
 8015166:	f10c 0901 	add.w	r9, ip, #1
 801516a:	b29b      	uxth	r3, r3
 801516c:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8015170:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8015174:	f103 0c01 	add.w	ip, r3, #1
 8015178:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801517c:	b2bf      	uxth	r7, r7
 801517e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8015182:	ea4c 0c09 	orr.w	ip, ip, r9
 8015186:	f107 0901 	add.w	r9, r7, #1
 801518a:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801518e:	097f      	lsrs	r7, r7, #5
 8015190:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8015194:	ea4c 0c07 	orr.w	ip, ip, r7
 8015198:	f820 cb02 	strh.w	ip, [r0], #2
 801519c:	e7bc      	b.n	8015118 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801519e:	9b01      	ldr	r3, [sp, #4]
 80151a0:	881b      	ldrh	r3, [r3, #0]
 80151a2:	eba3 0308 	sub.w	r3, r3, r8
 80151a6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80151aa:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80151ae:	eba3 0308 	sub.w	r3, r3, r8
 80151b2:	441c      	add	r4, r3
 80151b4:	e7ac      	b.n	8015110 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 80151b6:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80151ba:	4282      	cmp	r2, r0
 80151bc:	d915      	bls.n	80151ea <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 80151be:	eb00 060a 	add.w	r6, r0, sl
 80151c2:	4286      	cmp	r6, r0
 80151c4:	d906      	bls.n	80151d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 80151c6:	f814 3b01 	ldrb.w	r3, [r4], #1
 80151ca:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80151ce:	f820 3b02 	strh.w	r3, [r0], #2
 80151d2:	e7f6      	b.n	80151c2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 80151d4:	882b      	ldrh	r3, [r5, #0]
 80151d6:	eba3 0308 	sub.w	r3, r3, r8
 80151da:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80151de:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80151e2:	eba3 0308 	sub.w	r3, r3, r8
 80151e6:	441c      	add	r4, r3
 80151e8:	e7e7      	b.n	80151ba <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 80151ea:	4b04      	ldr	r3, [pc, #16]	; (80151fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 80151ec:	6818      	ldr	r0, [r3, #0]
 80151ee:	6803      	ldr	r3, [r0, #0]
 80151f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80151f2:	4798      	blx	r3
 80151f4:	b007      	add	sp, #28
 80151f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80151fa:	bf00      	nop
 80151fc:	200135b0 	.word	0x200135b0
 8015200:	200135aa 	.word	0x200135aa

08015204 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8015204:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015208:	b091      	sub	sp, #68	; 0x44
 801520a:	4680      	mov	r8, r0
 801520c:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8015210:	460f      	mov	r7, r1
 8015212:	4614      	mov	r4, r2
 8015214:	2d00      	cmp	r5, #0
 8015216:	d051      	beq.n	80152bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8015218:	6810      	ldr	r0, [r2, #0]
 801521a:	6851      	ldr	r1, [r2, #4]
 801521c:	f8df 9200 	ldr.w	r9, [pc, #512]	; 8015420 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8015220:	ae0c      	add	r6, sp, #48	; 0x30
 8015222:	c603      	stmia	r6!, {r0, r1}
 8015224:	6818      	ldr	r0, [r3, #0]
 8015226:	6859      	ldr	r1, [r3, #4]
 8015228:	ae0e      	add	r6, sp, #56	; 0x38
 801522a:	c603      	stmia	r6!, {r0, r1}
 801522c:	a80c      	add	r0, sp, #48	; 0x30
 801522e:	f7f9 fc01 	bl	800ea34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015232:	4621      	mov	r1, r4
 8015234:	a80e      	add	r0, sp, #56	; 0x38
 8015236:	f7f9 fc41 	bl	800eabc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801523a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801523e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8015242:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8015246:	f8d9 0000 	ldr.w	r0, [r9]
 801524a:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801524e:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 8015252:	fb11 2103 	smlabb	r1, r1, r3, r2
 8015256:	eb08 0401 	add.w	r4, r8, r1
 801525a:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801525e:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8015424 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8015262:	440a      	add	r2, r1
 8015264:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8015268:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801526c:	4413      	add	r3, r2
 801526e:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8015272:	6803      	ldr	r3, [r0, #0]
 8015274:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015276:	4798      	blx	r3
 8015278:	f010 0f80 	tst.w	r0, #128	; 0x80
 801527c:	f8d9 0000 	ldr.w	r0, [r9]
 8015280:	d01f      	beq.n	80152c2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8015282:	2200      	movs	r2, #0
 8015284:	6801      	ldr	r1, [r0, #0]
 8015286:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801528a:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801528e:	220b      	movs	r2, #11
 8015290:	9207      	str	r2, [sp, #28]
 8015292:	f8b8 2000 	ldrh.w	r2, [r8]
 8015296:	9206      	str	r2, [sp, #24]
 8015298:	2201      	movs	r2, #1
 801529a:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801529e:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 80152a2:	9203      	str	r2, [sp, #12]
 80152a4:	fa1f f28a 	uxth.w	r2, sl
 80152a8:	9202      	str	r2, [sp, #8]
 80152aa:	b2b6      	uxth	r6, r6
 80152ac:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80152b0:	9200      	str	r2, [sp, #0]
 80152b2:	9601      	str	r6, [sp, #4]
 80152b4:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 80152b6:	463a      	mov	r2, r7
 80152b8:	4621      	mov	r1, r4
 80152ba:	47a8      	blx	r5
 80152bc:	b011      	add	sp, #68	; 0x44
 80152be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80152c2:	6803      	ldr	r3, [r0, #0]
 80152c4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80152c6:	4798      	blx	r3
 80152c8:	f8b8 2000 	ldrh.w	r2, [r8]
 80152cc:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 80152d0:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 80152d4:	2dff      	cmp	r5, #255	; 0xff
 80152d6:	fb02 1303 	mla	r3, r2, r3, r1
 80152da:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80152de:	ea4f 0946 	mov.w	r9, r6, lsl #1
 80152e2:	fb0a fa02 	mul.w	sl, sl, r2
 80152e6:	d062      	beq.n	80153ae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 80152e8:	ea6f 0c05 	mvn.w	ip, r5
 80152ec:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 80152f0:	930a      	str	r3, [sp, #40]	; 0x28
 80152f2:	b2ad      	uxth	r5, r5
 80152f4:	fa5f fc8c 	uxtb.w	ip, ip
 80152f8:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 80152fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80152fe:	4298      	cmp	r0, r3
 8015300:	f080 8085 	bcs.w	801540e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8015304:	eb00 0b09 	add.w	fp, r0, r9
 8015308:	4558      	cmp	r0, fp
 801530a:	d246      	bcs.n	801539a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801530c:	f814 eb01 	ldrb.w	lr, [r4], #1
 8015310:	2303      	movs	r3, #3
 8015312:	2204      	movs	r2, #4
 8015314:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8015318:	eb07 0a0e 	add.w	sl, r7, lr
 801531c:	8803      	ldrh	r3, [r0, #0]
 801531e:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8015322:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8015326:	1219      	asrs	r1, r3, #8
 8015328:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801532c:	fb18 f805 	smulbb	r8, r8, r5
 8015330:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8015334:	10da      	asrs	r2, r3, #3
 8015336:	fb01 810c 	mla	r1, r1, ip, r8
 801533a:	00db      	lsls	r3, r3, #3
 801533c:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8015340:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8015344:	b2db      	uxtb	r3, r3
 8015346:	fb18 f805 	smulbb	r8, r8, r5
 801534a:	fb1e fe05 	smulbb	lr, lr, r5
 801534e:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8015352:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8015356:	b289      	uxth	r1, r1
 8015358:	fb02 820c 	mla	r2, r2, ip, r8
 801535c:	fb03 e30c 	mla	r3, r3, ip, lr
 8015360:	b292      	uxth	r2, r2
 8015362:	b29b      	uxth	r3, r3
 8015364:	f101 0801 	add.w	r8, r1, #1
 8015368:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801536c:	f103 0e01 	add.w	lr, r3, #1
 8015370:	f102 0801 	add.w	r8, r2, #1
 8015374:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8015378:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801537c:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8015380:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8015384:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8015388:	ea4e 0101 	orr.w	r1, lr, r1
 801538c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8015390:	ea41 0108 	orr.w	r1, r1, r8
 8015394:	f820 1b02 	strh.w	r1, [r0], #2
 8015398:	e7b6      	b.n	8015308 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801539a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801539c:	881b      	ldrh	r3, [r3, #0]
 801539e:	1b9b      	subs	r3, r3, r6
 80153a0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80153a4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80153a8:	1b9b      	subs	r3, r3, r6
 80153aa:	441c      	add	r4, r3
 80153ac:	e7a6      	b.n	80152fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 80153ae:	491b      	ldr	r1, [pc, #108]	; (801541c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 80153b0:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 80153b4:	2203      	movs	r2, #3
 80153b6:	2504      	movs	r5, #4
 80153b8:	4550      	cmp	r0, sl
 80153ba:	d228      	bcs.n	801540e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80153bc:	eb00 0c09 	add.w	ip, r0, r9
 80153c0:	4560      	cmp	r0, ip
 80153c2:	4623      	mov	r3, r4
 80153c4:	d219      	bcs.n	80153fa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 80153c6:	f893 e000 	ldrb.w	lr, [r3]
 80153ca:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 80153ce:	eb07 0b0e 	add.w	fp, r7, lr
 80153d2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80153d6:	f89b 3002 	ldrb.w	r3, [fp, #2]
 80153da:	f89b b001 	ldrb.w	fp, [fp, #1]
 80153de:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 80153e2:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 80153e6:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80153ea:	ea43 030b 	orr.w	r3, r3, fp
 80153ee:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 80153f2:	3401      	adds	r4, #1
 80153f4:	f820 3b02 	strh.w	r3, [r0], #2
 80153f8:	e7e2      	b.n	80153c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 80153fa:	f8b8 3000 	ldrh.w	r3, [r8]
 80153fe:	1b9b      	subs	r3, r3, r6
 8015400:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015404:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8015408:	1b9b      	subs	r3, r3, r6
 801540a:	441c      	add	r4, r3
 801540c:	e7d4      	b.n	80153b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801540e:	4b04      	ldr	r3, [pc, #16]	; (8015420 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8015410:	6818      	ldr	r0, [r3, #0]
 8015412:	6803      	ldr	r3, [r0, #0]
 8015414:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015416:	4798      	blx	r3
 8015418:	e750      	b.n	80152bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801541a:	bf00      	nop
 801541c:	fffff800 	.word	0xfffff800
 8015420:	200135b0 	.word	0x200135b0
 8015424:	200135aa 	.word	0x200135aa

08015428 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8015428:	b430      	push	{r4, r5}
 801542a:	780d      	ldrb	r5, [r1, #0]
 801542c:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8015430:	2d01      	cmp	r5, #1
 8015432:	d00a      	beq.n	801544a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 8015434:	d305      	bcc.n	8015442 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 8015436:	2d02      	cmp	r5, #2
 8015438:	d10b      	bne.n	8015452 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 801543a:	9402      	str	r4, [sp, #8]
 801543c:	bc30      	pop	{r4, r5}
 801543e:	f7ff be15 	b.w	801506c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8015442:	9402      	str	r4, [sp, #8]
 8015444:	bc30      	pop	{r4, r5}
 8015446:	f7ff bd2b 	b.w	8014ea0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801544a:	9402      	str	r4, [sp, #8]
 801544c:	bc30      	pop	{r4, r5}
 801544e:	f7ff bed9 	b.w	8015204 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8015452:	bc30      	pop	{r4, r5}
 8015454:	4770      	bx	lr
	...

08015458 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8015458:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801545c:	4604      	mov	r4, r0
 801545e:	b087      	sub	sp, #28
 8015460:	6810      	ldr	r0, [r2, #0]
 8015462:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 8015466:	f8df 9238 	ldr.w	r9, [pc, #568]	; 80156a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801546a:	460e      	mov	r6, r1
 801546c:	6851      	ldr	r1, [r2, #4]
 801546e:	ad02      	add	r5, sp, #8
 8015470:	c503      	stmia	r5!, {r0, r1}
 8015472:	6818      	ldr	r0, [r3, #0]
 8015474:	6859      	ldr	r1, [r3, #4]
 8015476:	ad04      	add	r5, sp, #16
 8015478:	4617      	mov	r7, r2
 801547a:	c503      	stmia	r5!, {r0, r1}
 801547c:	a802      	add	r0, sp, #8
 801547e:	f7f9 fad9 	bl	800ea34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015482:	4639      	mov	r1, r7
 8015484:	a804      	add	r0, sp, #16
 8015486:	f7f9 fb19 	bl	800eabc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801548a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801548e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8015492:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8015496:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801549a:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801549e:	fb11 2103 	smlabb	r1, r1, r3, r2
 80154a2:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 80154a6:	440e      	add	r6, r1
 80154a8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80154ac:	440a      	add	r2, r1
 80154ae:	f8ad 2010 	strh.w	r2, [sp, #16]
 80154b2:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80154b6:	4413      	add	r3, r2
 80154b8:	f8ad 3012 	strh.w	r3, [sp, #18]
 80154bc:	4b77      	ldr	r3, [pc, #476]	; (801569c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80154be:	6818      	ldr	r0, [r3, #0]
 80154c0:	6803      	ldr	r3, [r0, #0]
 80154c2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80154c4:	4798      	blx	r3
 80154c6:	f8b9 b000 	ldrh.w	fp, [r9]
 80154ca:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80154ce:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80154d2:	fb0b 2303 	mla	r3, fp, r3, r2
 80154d6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80154da:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80154de:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80154e2:	fb05 f50b 	mul.w	r5, r5, fp
 80154e6:	9300      	str	r3, [sp, #0]
 80154e8:	d069      	beq.n	80155be <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 80154ea:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 80154ee:	4558      	cmp	r0, fp
 80154f0:	f080 80cc 	bcs.w	801568c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80154f4:	9b00      	ldr	r3, [sp, #0]
 80154f6:	18c3      	adds	r3, r0, r3
 80154f8:	9301      	str	r3, [sp, #4]
 80154fa:	4631      	mov	r1, r6
 80154fc:	9b01      	ldr	r3, [sp, #4]
 80154fe:	4298      	cmp	r0, r3
 8015500:	d24f      	bcs.n	80155a2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 8015502:	f811 2b01 	ldrb.w	r2, [r1], #1
 8015506:	2a00      	cmp	r2, #0
 8015508:	d048      	beq.n	801559c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801550a:	fb0a f202 	mul.w	r2, sl, r2
 801550e:	1c53      	adds	r3, r2, #1
 8015510:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8015514:	121b      	asrs	r3, r3, #8
 8015516:	d041      	beq.n	801559c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8015518:	8802      	ldrh	r2, [r0, #0]
 801551a:	f8b4 c000 	ldrh.w	ip, [r4]
 801551e:	b29e      	uxth	r6, r3
 8015520:	1215      	asrs	r5, r2, #8
 8015522:	43db      	mvns	r3, r3
 8015524:	b2db      	uxtb	r3, r3
 8015526:	ea4f 272c 	mov.w	r7, ip, asr #8
 801552a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801552e:	fb15 f503 	smulbb	r5, r5, r3
 8015532:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8015536:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801553a:	00d2      	lsls	r2, r2, #3
 801553c:	fb07 5706 	mla	r7, r7, r6, r5
 8015540:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8015544:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8015548:	b2d2      	uxtb	r2, r2
 801554a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801554e:	b2bf      	uxth	r7, r7
 8015550:	fb1e fe03 	smulbb	lr, lr, r3
 8015554:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8015558:	fa5f fc8c 	uxtb.w	ip, ip
 801555c:	fb12 f203 	smulbb	r2, r2, r3
 8015560:	fb05 e506 	mla	r5, r5, r6, lr
 8015564:	fb0c 2c06 	mla	ip, ip, r6, r2
 8015568:	f107 0e01 	add.w	lr, r7, #1
 801556c:	fa1f fc8c 	uxth.w	ip, ip
 8015570:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8015574:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 8015578:	f10c 0701 	add.w	r7, ip, #1
 801557c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8015580:	b2ad      	uxth	r5, r5
 8015582:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8015586:	ea47 070e 	orr.w	r7, r7, lr
 801558a:	f105 0e01 	add.w	lr, r5, #1
 801558e:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8015592:	096d      	lsrs	r5, r5, #5
 8015594:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015598:	432f      	orrs	r7, r5
 801559a:	8007      	strh	r7, [r0, #0]
 801559c:	3002      	adds	r0, #2
 801559e:	3402      	adds	r4, #2
 80155a0:	e7ac      	b.n	80154fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 80155a2:	f8b9 3000 	ldrh.w	r3, [r9]
 80155a6:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80155aa:	eba3 0308 	sub.w	r3, r3, r8
 80155ae:	eba6 0608 	sub.w	r6, r6, r8
 80155b2:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80155b6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80155ba:	440e      	add	r6, r1
 80155bc:	e797      	b.n	80154ee <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 80155be:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80155c2:	42a8      	cmp	r0, r5
 80155c4:	d262      	bcs.n	801568c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80155c6:	9b00      	ldr	r3, [sp, #0]
 80155c8:	4631      	mov	r1, r6
 80155ca:	eb00 0b03 	add.w	fp, r0, r3
 80155ce:	4558      	cmp	r0, fp
 80155d0:	d24e      	bcs.n	8015670 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 80155d2:	f811 3b01 	ldrb.w	r3, [r1], #1
 80155d6:	b12b      	cbz	r3, 80155e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80155d8:	2bff      	cmp	r3, #255	; 0xff
 80155da:	f8b4 e000 	ldrh.w	lr, [r4]
 80155de:	d104      	bne.n	80155ea <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 80155e0:	f8a0 e000 	strh.w	lr, [r0]
 80155e4:	3002      	adds	r0, #2
 80155e6:	3402      	adds	r4, #2
 80155e8:	e7f1      	b.n	80155ce <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 80155ea:	8802      	ldrh	r2, [r0, #0]
 80155ec:	b29f      	uxth	r7, r3
 80155ee:	1216      	asrs	r6, r2, #8
 80155f0:	43db      	mvns	r3, r3
 80155f2:	b2db      	uxtb	r3, r3
 80155f4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80155f8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80155fc:	fb16 f603 	smulbb	r6, r6, r3
 8015600:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8015604:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015608:	00d2      	lsls	r2, r2, #3
 801560a:	fb0c 6c07 	mla	ip, ip, r7, r6
 801560e:	b2d2      	uxtb	r2, r2
 8015610:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8015614:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015618:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801561c:	fb1a fa03 	smulbb	sl, sl, r3
 8015620:	fa1f fc8c 	uxth.w	ip, ip
 8015624:	fb12 f303 	smulbb	r3, r2, r3
 8015628:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801562c:	fa5f fe8e 	uxtb.w	lr, lr
 8015630:	fb06 a607 	mla	r6, r6, r7, sl
 8015634:	f10c 0201 	add.w	r2, ip, #1
 8015638:	fb0e 3307 	mla	r3, lr, r7, r3
 801563c:	b2b6      	uxth	r6, r6
 801563e:	b29b      	uxth	r3, r3
 8015640:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8015644:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 8015648:	f106 0a01 	add.w	sl, r6, #1
 801564c:	f103 0c01 	add.w	ip, r3, #1
 8015650:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8015654:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8015658:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801565c:	0976      	lsrs	r6, r6, #5
 801565e:	ea4c 0c02 	orr.w	ip, ip, r2
 8015662:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015666:	ea4c 0c06 	orr.w	ip, ip, r6
 801566a:	f8a0 c000 	strh.w	ip, [r0]
 801566e:	e7b9      	b.n	80155e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8015670:	f8b9 3000 	ldrh.w	r3, [r9]
 8015674:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8015678:	eba3 0308 	sub.w	r3, r3, r8
 801567c:	eba6 0608 	sub.w	r6, r6, r8
 8015680:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8015684:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015688:	440e      	add	r6, r1
 801568a:	e79a      	b.n	80155c2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801568c:	4b03      	ldr	r3, [pc, #12]	; (801569c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801568e:	6818      	ldr	r0, [r3, #0]
 8015690:	6803      	ldr	r3, [r0, #0]
 8015692:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015694:	4798      	blx	r3
 8015696:	b007      	add	sp, #28
 8015698:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801569c:	200135b0 	.word	0x200135b0
 80156a0:	200135aa 	.word	0x200135aa

080156a4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 80156a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80156a8:	b089      	sub	sp, #36	; 0x24
 80156aa:	4682      	mov	sl, r0
 80156ac:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 80156b0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80156b2:	460f      	mov	r7, r1
 80156b4:	4691      	mov	r9, r2
 80156b6:	4698      	mov	r8, r3
 80156b8:	2e00      	cmp	r6, #0
 80156ba:	d036      	beq.n	801572a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80156bc:	4608      	mov	r0, r1
 80156be:	f7fc f863 	bl	8011788 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80156c2:	4605      	mov	r5, r0
 80156c4:	4638      	mov	r0, r7
 80156c6:	f7fc f893 	bl	80117f0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80156ca:	f8ad 000e 	strh.w	r0, [sp, #14]
 80156ce:	4638      	mov	r0, r7
 80156d0:	f8ad 9008 	strh.w	r9, [sp, #8]
 80156d4:	f8ad 500c 	strh.w	r5, [sp, #12]
 80156d8:	f8ad 800a 	strh.w	r8, [sp, #10]
 80156dc:	f7fc f940 	bl	8011960 <_ZNK8touchgfx6Bitmap7getDataEv>
 80156e0:	4605      	mov	r5, r0
 80156e2:	4638      	mov	r0, r7
 80156e4:	f7fc f96c 	bl	80119c0 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80156e8:	4681      	mov	r9, r0
 80156ea:	4638      	mov	r0, r7
 80156ec:	f7fc f9bc 	bl	8011a68 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80156f0:	280b      	cmp	r0, #11
 80156f2:	d81a      	bhi.n	801572a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80156f4:	e8df f000 	tbb	[pc, r0]
 80156f8:	1906aebd 	.word	0x1906aebd
 80156fc:	19191919 	.word	0x19191919
 8015700:	b5191919 	.word	0xb5191919
 8015704:	4bb0      	ldr	r3, [pc, #704]	; (80159c8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 8015706:	6818      	ldr	r0, [r3, #0]
 8015708:	6803      	ldr	r3, [r0, #0]
 801570a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801570c:	4798      	blx	r3
 801570e:	2eff      	cmp	r6, #255	; 0xff
 8015710:	d121      	bne.n	8015756 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 8015712:	0683      	lsls	r3, r0, #26
 8015714:	d41f      	bmi.n	8015756 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 8015716:	4638      	mov	r0, r7
 8015718:	f7fc f8ea 	bl	80118f0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801571c:	b940      	cbnz	r0, 8015730 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 801571e:	4623      	mov	r3, r4
 8015720:	aa02      	add	r2, sp, #8
 8015722:	4629      	mov	r1, r5
 8015724:	4650      	mov	r0, sl
 8015726:	f7ff fa2f 	bl	8014b88 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801572a:	b009      	add	sp, #36	; 0x24
 801572c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015730:	f10d 0818 	add.w	r8, sp, #24
 8015734:	4639      	mov	r1, r7
 8015736:	4640      	mov	r0, r8
 8015738:	f7fc f88e 	bl	8011858 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801573c:	e898 0003 	ldmia.w	r8, {r0, r1}
 8015740:	af04      	add	r7, sp, #16
 8015742:	e887 0003 	stmia.w	r7, {r0, r1}
 8015746:	4638      	mov	r0, r7
 8015748:	4621      	mov	r1, r4
 801574a:	f7f5 fce3 	bl	800b114 <_ZN8touchgfx4RectaNERKS0_>
 801574e:	4638      	mov	r0, r7
 8015750:	f7f5 fd23 	bl	800b19a <_ZNK8touchgfx4Rect7isEmptyEv>
 8015754:	b130      	cbz	r0, 8015764 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8015756:	4633      	mov	r3, r6
 8015758:	4622      	mov	r2, r4
 801575a:	a902      	add	r1, sp, #8
 801575c:	4628      	mov	r0, r5
 801575e:	f7ff f92d 	bl	80149bc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8015762:	e7e2      	b.n	801572a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8015764:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8015768:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801576c:	4293      	cmp	r3, r2
 801576e:	dd12      	ble.n	8015796 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf2>
 8015770:	1a9b      	subs	r3, r3, r2
 8015772:	f9b4 0000 	ldrsh.w	r0, [r4]
 8015776:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801577a:	f8ad 0018 	strh.w	r0, [sp, #24]
 801577e:	f8ad 201a 	strh.w	r2, [sp, #26]
 8015782:	f8ad 101c 	strh.w	r1, [sp, #28]
 8015786:	f8ad 301e 	strh.w	r3, [sp, #30]
 801578a:	4642      	mov	r2, r8
 801578c:	4633      	mov	r3, r6
 801578e:	a902      	add	r1, sp, #8
 8015790:	4628      	mov	r0, r5
 8015792:	f7ff f913 	bl	80149bc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8015796:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801579a:	f9b4 2000 	ldrsh.w	r2, [r4]
 801579e:	4293      	cmp	r3, r2
 80157a0:	dd12      	ble.n	80157c8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x124>
 80157a2:	1a9b      	subs	r3, r3, r2
 80157a4:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80157a8:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80157ac:	f8ad 2018 	strh.w	r2, [sp, #24]
 80157b0:	f8ad 001a 	strh.w	r0, [sp, #26]
 80157b4:	f8ad 301c 	strh.w	r3, [sp, #28]
 80157b8:	f8ad 101e 	strh.w	r1, [sp, #30]
 80157bc:	23ff      	movs	r3, #255	; 0xff
 80157be:	4642      	mov	r2, r8
 80157c0:	a902      	add	r1, sp, #8
 80157c2:	4628      	mov	r0, r5
 80157c4:	f7ff f8fa 	bl	80149bc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80157c8:	463b      	mov	r3, r7
 80157ca:	aa02      	add	r2, sp, #8
 80157cc:	4629      	mov	r1, r5
 80157ce:	4650      	mov	r0, sl
 80157d0:	f7ff f9da 	bl	8014b88 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 80157d4:	88a2      	ldrh	r2, [r4, #4]
 80157d6:	8823      	ldrh	r3, [r4, #0]
 80157d8:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80157dc:	4413      	add	r3, r2
 80157de:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80157e2:	440a      	add	r2, r1
 80157e4:	b29b      	uxth	r3, r3
 80157e6:	b292      	uxth	r2, r2
 80157e8:	b211      	sxth	r1, r2
 80157ea:	b218      	sxth	r0, r3
 80157ec:	4288      	cmp	r0, r1
 80157ee:	dd12      	ble.n	8015816 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x172>
 80157f0:	1a9b      	subs	r3, r3, r2
 80157f2:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80157f6:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 80157fa:	f8ad 1018 	strh.w	r1, [sp, #24]
 80157fe:	f8ad 301c 	strh.w	r3, [sp, #28]
 8015802:	f8ad 001e 	strh.w	r0, [sp, #30]
 8015806:	23ff      	movs	r3, #255	; 0xff
 8015808:	4642      	mov	r2, r8
 801580a:	a902      	add	r1, sp, #8
 801580c:	4628      	mov	r0, r5
 801580e:	f8ad 601a 	strh.w	r6, [sp, #26]
 8015812:	f7ff f8d3 	bl	80149bc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8015816:	88e2      	ldrh	r2, [r4, #6]
 8015818:	8863      	ldrh	r3, [r4, #2]
 801581a:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801581e:	4413      	add	r3, r2
 8015820:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8015824:	440a      	add	r2, r1
 8015826:	b29b      	uxth	r3, r3
 8015828:	b292      	uxth	r2, r2
 801582a:	b211      	sxth	r1, r2
 801582c:	b218      	sxth	r0, r3
 801582e:	4288      	cmp	r0, r1
 8015830:	f77f af7b 	ble.w	801572a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8015834:	1a9b      	subs	r3, r3, r2
 8015836:	f9b4 6000 	ldrsh.w	r6, [r4]
 801583a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801583e:	f8ad 301e 	strh.w	r3, [sp, #30]
 8015842:	f8ad 6018 	strh.w	r6, [sp, #24]
 8015846:	f8ad 101a 	strh.w	r1, [sp, #26]
 801584a:	f8ad 001c 	strh.w	r0, [sp, #28]
 801584e:	23ff      	movs	r3, #255	; 0xff
 8015850:	4642      	mov	r2, r8
 8015852:	e782      	b.n	801575a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb6>
 8015854:	4633      	mov	r3, r6
 8015856:	4622      	mov	r2, r4
 8015858:	a902      	add	r1, sp, #8
 801585a:	4628      	mov	r0, r5
 801585c:	f7ff fa04 	bl	8014c68 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8015860:	e763      	b.n	801572a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8015862:	9600      	str	r6, [sp, #0]
 8015864:	4623      	mov	r3, r4
 8015866:	aa02      	add	r2, sp, #8
 8015868:	4649      	mov	r1, r9
 801586a:	4628      	mov	r0, r5
 801586c:	f7ff fddc 	bl	8015428 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8015870:	e75b      	b.n	801572a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8015872:	4638      	mov	r0, r7
 8015874:	f7fc f83c 	bl	80118f0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8015878:	b950      	cbnz	r0, 8015890 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ec>
 801587a:	e9cd 6000 	strd	r6, r0, [sp]
 801587e:	f8da 3000 	ldr.w	r3, [sl]
 8015882:	aa02      	add	r2, sp, #8
 8015884:	68de      	ldr	r6, [r3, #12]
 8015886:	4629      	mov	r1, r5
 8015888:	4623      	mov	r3, r4
 801588a:	4650      	mov	r0, sl
 801588c:	47b0      	blx	r6
 801588e:	e74c      	b.n	801572a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8015890:	f10d 0818 	add.w	r8, sp, #24
 8015894:	4639      	mov	r1, r7
 8015896:	4640      	mov	r0, r8
 8015898:	f7fb ffde 	bl	8011858 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801589c:	e898 0003 	ldmia.w	r8, {r0, r1}
 80158a0:	af04      	add	r7, sp, #16
 80158a2:	e887 0003 	stmia.w	r7, {r0, r1}
 80158a6:	4638      	mov	r0, r7
 80158a8:	4621      	mov	r1, r4
 80158aa:	f7f5 fc33 	bl	800b114 <_ZN8touchgfx4RectaNERKS0_>
 80158ae:	4638      	mov	r0, r7
 80158b0:	f7f5 fc73 	bl	800b19a <_ZNK8touchgfx4Rect7isEmptyEv>
 80158b4:	b138      	cbz	r0, 80158c6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x222>
 80158b6:	9600      	str	r6, [sp, #0]
 80158b8:	4623      	mov	r3, r4
 80158ba:	aa02      	add	r2, sp, #8
 80158bc:	4649      	mov	r1, r9
 80158be:	4628      	mov	r0, r5
 80158c0:	f7ff fdca 	bl	8015458 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80158c4:	e731      	b.n	801572a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80158c6:	e9cd 6000 	strd	r6, r0, [sp]
 80158ca:	f8da 3000 	ldr.w	r3, [sl]
 80158ce:	aa02      	add	r2, sp, #8
 80158d0:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 80158d4:	4629      	mov	r1, r5
 80158d6:	463b      	mov	r3, r7
 80158d8:	4650      	mov	r0, sl
 80158da:	47d8      	blx	fp
 80158dc:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80158e0:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80158e4:	4293      	cmp	r3, r2
 80158e6:	dd13      	ble.n	8015910 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26c>
 80158e8:	f9b4 0000 	ldrsh.w	r0, [r4]
 80158ec:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80158f0:	f8ad 0018 	strh.w	r0, [sp, #24]
 80158f4:	1a9b      	subs	r3, r3, r2
 80158f6:	f8ad 201a 	strh.w	r2, [sp, #26]
 80158fa:	f8ad 101c 	strh.w	r1, [sp, #28]
 80158fe:	f8ad 301e 	strh.w	r3, [sp, #30]
 8015902:	9600      	str	r6, [sp, #0]
 8015904:	4643      	mov	r3, r8
 8015906:	aa02      	add	r2, sp, #8
 8015908:	4649      	mov	r1, r9
 801590a:	4628      	mov	r0, r5
 801590c:	f7ff fda4 	bl	8015458 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8015910:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8015914:	f9b4 2000 	ldrsh.w	r2, [r4]
 8015918:	4293      	cmp	r3, r2
 801591a:	dd13      	ble.n	8015944 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a0>
 801591c:	1a9b      	subs	r3, r3, r2
 801591e:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8015922:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8015926:	f8ad 2018 	strh.w	r2, [sp, #24]
 801592a:	f8ad 001a 	strh.w	r0, [sp, #26]
 801592e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8015932:	f8ad 101e 	strh.w	r1, [sp, #30]
 8015936:	9600      	str	r6, [sp, #0]
 8015938:	4643      	mov	r3, r8
 801593a:	aa02      	add	r2, sp, #8
 801593c:	4649      	mov	r1, r9
 801593e:	4628      	mov	r0, r5
 8015940:	f7ff fd8a 	bl	8015458 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8015944:	88a2      	ldrh	r2, [r4, #4]
 8015946:	8823      	ldrh	r3, [r4, #0]
 8015948:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801594c:	4413      	add	r3, r2
 801594e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8015952:	440a      	add	r2, r1
 8015954:	b29b      	uxth	r3, r3
 8015956:	b292      	uxth	r2, r2
 8015958:	b211      	sxth	r1, r2
 801595a:	b218      	sxth	r0, r3
 801595c:	4288      	cmp	r0, r1
 801595e:	dd13      	ble.n	8015988 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e4>
 8015960:	1a9b      	subs	r3, r3, r2
 8015962:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8015966:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801596a:	f8ad 1018 	strh.w	r1, [sp, #24]
 801596e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8015972:	f8ad 001e 	strh.w	r0, [sp, #30]
 8015976:	9600      	str	r6, [sp, #0]
 8015978:	4643      	mov	r3, r8
 801597a:	aa02      	add	r2, sp, #8
 801597c:	4649      	mov	r1, r9
 801597e:	4628      	mov	r0, r5
 8015980:	f8ad 701a 	strh.w	r7, [sp, #26]
 8015984:	f7ff fd68 	bl	8015458 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8015988:	88e2      	ldrh	r2, [r4, #6]
 801598a:	8863      	ldrh	r3, [r4, #2]
 801598c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8015990:	4413      	add	r3, r2
 8015992:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8015996:	440a      	add	r2, r1
 8015998:	b29b      	uxth	r3, r3
 801599a:	b292      	uxth	r2, r2
 801599c:	b211      	sxth	r1, r2
 801599e:	b218      	sxth	r0, r3
 80159a0:	4288      	cmp	r0, r1
 80159a2:	f77f aec2 	ble.w	801572a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80159a6:	f9b4 7000 	ldrsh.w	r7, [r4]
 80159aa:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80159ae:	f8ad 7018 	strh.w	r7, [sp, #24]
 80159b2:	1a9b      	subs	r3, r3, r2
 80159b4:	f8ad 301e 	strh.w	r3, [sp, #30]
 80159b8:	f8ad 101a 	strh.w	r1, [sp, #26]
 80159bc:	f8ad 001c 	strh.w	r0, [sp, #28]
 80159c0:	9600      	str	r6, [sp, #0]
 80159c2:	4643      	mov	r3, r8
 80159c4:	e779      	b.n	80158ba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x216>
 80159c6:	bf00      	nop
 80159c8:	200135b0 	.word	0x200135b0

080159cc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 80159cc:	b180      	cbz	r0, 80159f0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 80159ce:	2903      	cmp	r1, #3
 80159d0:	d81c      	bhi.n	8015a0c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80159d2:	e8df f001 	tbb	[pc, r1]
 80159d6:	1d02      	.short	0x1d02
 80159d8:	1f08      	.short	0x1f08
 80159da:	4b10      	ldr	r3, [pc, #64]	; (8015a1c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80159dc:	8818      	ldrh	r0, [r3, #0]
 80159de:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80159e2:	4240      	negs	r0, r0
 80159e4:	4770      	bx	lr
 80159e6:	4b0d      	ldr	r3, [pc, #52]	; (8015a1c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80159e8:	8818      	ldrh	r0, [r3, #0]
 80159ea:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80159ee:	4770      	bx	lr
 80159f0:	2903      	cmp	r1, #3
 80159f2:	d80b      	bhi.n	8015a0c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80159f4:	a301      	add	r3, pc, #4	; (adr r3, 80159fc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 80159f6:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 80159fa:	bf00      	nop
 80159fc:	08015a11 	.word	0x08015a11
 8015a00:	080159e7 	.word	0x080159e7
 8015a04:	08015a15 	.word	0x08015a15
 8015a08:	080159db 	.word	0x080159db
 8015a0c:	2000      	movs	r0, #0
 8015a0e:	4770      	bx	lr
 8015a10:	2001      	movs	r0, #1
 8015a12:	4770      	bx	lr
 8015a14:	f04f 30ff 	mov.w	r0, #4294967295
 8015a18:	4770      	bx	lr
 8015a1a:	bf00      	nop
 8015a1c:	200135aa 	.word	0x200135aa

08015a20 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8015a20:	b180      	cbz	r0, 8015a44 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 8015a22:	2903      	cmp	r1, #3
 8015a24:	d81c      	bhi.n	8015a60 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8015a26:	e8df f001 	tbb	[pc, r1]
 8015a2a:	021d      	.short	0x021d
 8015a2c:	071f      	.short	0x071f
 8015a2e:	4b10      	ldr	r3, [pc, #64]	; (8015a70 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8015a30:	8818      	ldrh	r0, [r3, #0]
 8015a32:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8015a36:	4770      	bx	lr
 8015a38:	4b0d      	ldr	r3, [pc, #52]	; (8015a70 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8015a3a:	8818      	ldrh	r0, [r3, #0]
 8015a3c:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8015a40:	4240      	negs	r0, r0
 8015a42:	4770      	bx	lr
 8015a44:	2903      	cmp	r1, #3
 8015a46:	d80b      	bhi.n	8015a60 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8015a48:	a301      	add	r3, pc, #4	; (adr r3, 8015a50 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 8015a4a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8015a4e:	bf00      	nop
 8015a50:	08015a2f 	.word	0x08015a2f
 8015a54:	08015a69 	.word	0x08015a69
 8015a58:	08015a39 	.word	0x08015a39
 8015a5c:	08015a65 	.word	0x08015a65
 8015a60:	2000      	movs	r0, #0
 8015a62:	4770      	bx	lr
 8015a64:	2001      	movs	r0, #1
 8015a66:	4770      	bx	lr
 8015a68:	f04f 30ff 	mov.w	r0, #4294967295
 8015a6c:	4770      	bx	lr
 8015a6e:	bf00      	nop
 8015a70:	200135aa 	.word	0x200135aa

08015a74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8015a74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015a78:	b099      	sub	sp, #100	; 0x64
 8015a7a:	910b      	str	r1, [sp, #44]	; 0x2c
 8015a7c:	a914      	add	r1, sp, #80	; 0x50
 8015a7e:	e881 000c 	stmia.w	r1, {r2, r3}
 8015a82:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 8015a86:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 8015a8a:	f891 900d 	ldrb.w	r9, [r1, #13]
 8015a8e:	9309      	str	r3, [sp, #36]	; 0x24
 8015a90:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8015a94:	9310      	str	r3, [sp, #64]	; 0x40
 8015a96:	ea4f 1749 	mov.w	r7, r9, lsl #5
 8015a9a:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 8015a9e:	930c      	str	r3, [sp, #48]	; 0x30
 8015aa0:	f407 7380 	and.w	r3, r7, #256	; 0x100
 8015aa4:	798f      	ldrb	r7, [r1, #6]
 8015aa6:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 8015aaa:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 8015aae:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 8015ab2:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 8015ab6:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8015aba:	431f      	orrs	r7, r3
 8015abc:	f000 8195 	beq.w	8015dea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8015ac0:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8015ac4:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8015ac8:	f891 9007 	ldrb.w	r9, [r1, #7]
 8015acc:	ea59 0903 	orrs.w	r9, r9, r3
 8015ad0:	f000 818b 	beq.w	8015dea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8015ad4:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8015ad8:	b29b      	uxth	r3, r3
 8015ada:	2d00      	cmp	r5, #0
 8015adc:	f000 812e 	beq.w	8015d3c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 8015ae0:	1aed      	subs	r5, r5, r3
 8015ae2:	b2ad      	uxth	r5, r5
 8015ae4:	042b      	lsls	r3, r5, #16
 8015ae6:	d502      	bpl.n	8015aee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8015ae8:	1b64      	subs	r4, r4, r5
 8015aea:	b224      	sxth	r4, r4
 8015aec:	2500      	movs	r5, #0
 8015aee:	f9b2 1000 	ldrsh.w	r1, [r2]
 8015af2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8015af6:	428c      	cmp	r4, r1
 8015af8:	b28b      	uxth	r3, r1
 8015afa:	bfbf      	itttt	lt
 8015afc:	18ed      	addlt	r5, r5, r3
 8015afe:	1b2c      	sublt	r4, r5, r4
 8015b00:	b2a5      	uxthlt	r5, r4
 8015b02:	460c      	movlt	r4, r1
 8015b04:	8891      	ldrh	r1, [r2, #4]
 8015b06:	440b      	add	r3, r1
 8015b08:	b21b      	sxth	r3, r3
 8015b0a:	930f      	str	r3, [sp, #60]	; 0x3c
 8015b0c:	88d3      	ldrh	r3, [r2, #6]
 8015b0e:	8852      	ldrh	r2, [r2, #2]
 8015b10:	4413      	add	r3, r2
 8015b12:	b21b      	sxth	r3, r3
 8015b14:	930d      	str	r3, [sp, #52]	; 0x34
 8015b16:	4bbe      	ldr	r3, [pc, #760]	; (8015e10 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8015b18:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8015b1a:	f893 b000 	ldrb.w	fp, [r3]
 8015b1e:	f10b 3cff 	add.w	ip, fp, #4294967295
 8015b22:	f1dc 0300 	rsbs	r3, ip, #0
 8015b26:	eb43 030c 	adc.w	r3, r3, ip
 8015b2a:	930e      	str	r3, [sp, #56]	; 0x38
 8015b2c:	4621      	mov	r1, r4
 8015b2e:	4653      	mov	r3, sl
 8015b30:	a814      	add	r0, sp, #80	; 0x50
 8015b32:	f7f8 fdf9 	bl	800e728 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8015b36:	4621      	mov	r1, r4
 8015b38:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8015b3c:	4653      	mov	r3, sl
 8015b3e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8015b40:	a814      	add	r0, sp, #80	; 0x50
 8015b42:	f7f8 fe0e 	bl	800e762 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8015b46:	a918      	add	r1, sp, #96	; 0x60
 8015b48:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8015b4c:	a817      	add	r0, sp, #92	; 0x5c
 8015b4e:	f7f8 ff2f 	bl	800e9b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8015b52:	f1ba 0f00 	cmp.w	sl, #0
 8015b56:	f040 80f4 	bne.w	8015d42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 8015b5a:	f1bb 0f01 	cmp.w	fp, #1
 8015b5e:	f040 80f8 	bne.w	8015d52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 8015b62:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015b64:	2b00      	cmp	r3, #0
 8015b66:	f040 8145 	bne.w	8015df4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 8015b6a:	b2ba      	uxth	r2, r7
 8015b6c:	b905      	cbnz	r5, 8015b70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 8015b6e:	b16e      	cbz	r6, 8015b8c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 8015b70:	fb06 5302 	mla	r3, r6, r2, r5
 8015b74:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8015b76:	fb08 f303 	mul.w	r3, r8, r3
 8015b7a:	4631      	mov	r1, r6
 8015b7c:	f003 0607 	and.w	r6, r3, #7
 8015b80:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 8015b84:	9328      	str	r3, [sp, #160]	; 0xa0
 8015b86:	eba9 0301 	sub.w	r3, r9, r1
 8015b8a:	930a      	str	r3, [sp, #40]	; 0x28
 8015b8c:	4651      	mov	r1, sl
 8015b8e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8015b90:	f7ff ff1c 	bl	80159cc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8015b94:	4681      	mov	r9, r0
 8015b96:	980e      	ldr	r0, [sp, #56]	; 0x38
 8015b98:	f7ff ff42 	bl	8015a20 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8015b9c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015b9e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8015ba0:	eba3 0a01 	sub.w	sl, r3, r1
 8015ba4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015ba6:	459a      	cmp	sl, r3
 8015ba8:	bfa8      	it	ge
 8015baa:	469a      	movge	sl, r3
 8015bac:	f1ba 0f00 	cmp.w	sl, #0
 8015bb0:	4683      	mov	fp, r0
 8015bb2:	f340 811a 	ble.w	8015dea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8015bb6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015bb8:	1b64      	subs	r4, r4, r5
 8015bba:	1b1c      	subs	r4, r3, r4
 8015bbc:	42bc      	cmp	r4, r7
 8015bbe:	bfd4      	ite	le
 8015bc0:	ebc5 0504 	rsble	r5, r5, r4
 8015bc4:	ebc5 0507 	rsbgt	r5, r5, r7
 8015bc8:	2d00      	cmp	r5, #0
 8015bca:	f340 810e 	ble.w	8015dea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8015bce:	1b52      	subs	r2, r2, r5
 8015bd0:	fb08 f302 	mul.w	r3, r8, r2
 8015bd4:	930f      	str	r3, [sp, #60]	; 0x3c
 8015bd6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015bd8:	2b00      	cmp	r3, #0
 8015bda:	f040 8116 	bne.w	8015e0a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8015bde:	4b8d      	ldr	r3, [pc, #564]	; (8015e14 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8015be0:	6818      	ldr	r0, [r3, #0]
 8015be2:	6803      	ldr	r3, [r0, #0]
 8015be4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015be6:	4798      	blx	r3
 8015be8:	2301      	movs	r3, #1
 8015bea:	fa03 f308 	lsl.w	r3, r3, r8
 8015bee:	4a8a      	ldr	r2, [pc, #552]	; (8015e18 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8015bf0:	3b01      	subs	r3, #1
 8015bf2:	b2db      	uxtb	r3, r3
 8015bf4:	8811      	ldrh	r1, [r2, #0]
 8015bf6:	930e      	str	r3, [sp, #56]	; 0x38
 8015bf8:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8015bfc:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8015c00:	fb01 2303 	mla	r3, r1, r3, r2
 8015c04:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8015c08:	930a      	str	r3, [sp, #40]	; 0x28
 8015c0a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015c0c:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8015c10:	9313      	str	r3, [sp, #76]	; 0x4c
 8015c12:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015c14:	0a19      	lsrs	r1, r3, #8
 8015c16:	b2cb      	uxtb	r3, r1
 8015c18:	9312      	str	r3, [sp, #72]	; 0x48
 8015c1a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015c1c:	b2db      	uxtb	r3, r3
 8015c1e:	9311      	str	r3, [sp, #68]	; 0x44
 8015c20:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015c22:	095a      	lsrs	r2, r3, #5
 8015c24:	4b7d      	ldr	r3, [pc, #500]	; (8015e1c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8015c26:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015c2a:	400b      	ands	r3, r1
 8015c2c:	4313      	orrs	r3, r2
 8015c2e:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8015c30:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8015c34:	4313      	orrs	r3, r2
 8015c36:	b29b      	uxth	r3, r3
 8015c38:	9310      	str	r3, [sp, #64]	; 0x40
 8015c3a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015c3c:	781a      	ldrb	r2, [r3, #0]
 8015c3e:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8015c42:	4132      	asrs	r2, r6
 8015c44:	fb05 b919 	mls	r9, r5, r9, fp
 8015c48:	fb03 fb05 	mul.w	fp, r3, r5
 8015c4c:	b2d2      	uxtb	r2, r2
 8015c4e:	930d      	str	r3, [sp, #52]	; 0x34
 8015c50:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8015c54:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8015c58:	f0c0 80f5 	bcc.w	8015e46 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 8015c5c:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 8015c60:	46ae      	mov	lr, r5
 8015c62:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8015c66:	f0c0 80dd 	bcc.w	8015e24 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8015c6a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015c6c:	4013      	ands	r3, r2
 8015c6e:	d055      	beq.n	8015d1c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 8015c70:	20ff      	movs	r0, #255	; 0xff
 8015c72:	990e      	ldr	r1, [sp, #56]	; 0x38
 8015c74:	fb90 f1f1 	sdiv	r1, r0, r1
 8015c78:	434b      	muls	r3, r1
 8015c7a:	2bfe      	cmp	r3, #254	; 0xfe
 8015c7c:	dd03      	ble.n	8015c86 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 8015c7e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8015c80:	4281      	cmp	r1, r0
 8015c82:	f000 80cd 	beq.w	8015e20 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8015c86:	990c      	ldr	r1, [sp, #48]	; 0x30
 8015c88:	f8bc 4000 	ldrh.w	r4, [ip]
 8015c8c:	fb11 f303 	smulbb	r3, r1, r3
 8015c90:	b29b      	uxth	r3, r3
 8015c92:	1c59      	adds	r1, r3, #1
 8015c94:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8015c98:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8015c9c:	b29f      	uxth	r7, r3
 8015c9e:	43db      	mvns	r3, r3
 8015ca0:	b2db      	uxtb	r3, r3
 8015ca2:	9309      	str	r3, [sp, #36]	; 0x24
 8015ca4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8015ca6:	1220      	asrs	r0, r4, #8
 8015ca8:	fb13 f907 	smulbb	r9, r3, r7
 8015cac:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8015cb0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015cb2:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8015cb6:	fb00 9003 	mla	r0, r0, r3, r9
 8015cba:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015cbc:	10e1      	asrs	r1, r4, #3
 8015cbe:	fb13 f907 	smulbb	r9, r3, r7
 8015cc2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8015cc6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015cc8:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8015ccc:	fb01 9103 	mla	r1, r1, r3, r9
 8015cd0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015cd2:	00e4      	lsls	r4, r4, #3
 8015cd4:	fb13 f707 	smulbb	r7, r3, r7
 8015cd8:	b2e4      	uxtb	r4, r4
 8015cda:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015cdc:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8015ce0:	fb04 7403 	mla	r4, r4, r3, r7
 8015ce4:	b280      	uxth	r0, r0
 8015ce6:	b2a4      	uxth	r4, r4
 8015ce8:	1c43      	adds	r3, r0, #1
 8015cea:	f104 0901 	add.w	r9, r4, #1
 8015cee:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8015cf2:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8015cf6:	b289      	uxth	r1, r1
 8015cf8:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8015cfc:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8015d00:	ea49 0000 	orr.w	r0, r9, r0
 8015d04:	f101 0901 	add.w	r9, r1, #1
 8015d08:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8015d0c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8015d10:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8015d14:	ea40 0009 	orr.w	r0, r0, r9
 8015d18:	f8ac 0000 	strh.w	r0, [ip]
 8015d1c:	4446      	add	r6, r8
 8015d1e:	b2b6      	uxth	r6, r6
 8015d20:	2e07      	cmp	r6, #7
 8015d22:	bf81      	itttt	hi
 8015d24:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 8015d26:	785a      	ldrbhi	r2, [r3, #1]
 8015d28:	3301      	addhi	r3, #1
 8015d2a:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8015d2c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015d2e:	bf9a      	itte	ls
 8015d30:	fa42 f208 	asrls.w	r2, r2, r8
 8015d34:	b2d2      	uxtbls	r2, r2
 8015d36:	2600      	movhi	r6, #0
 8015d38:	449c      	add	ip, r3
 8015d3a:	e792      	b.n	8015c62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8015d3c:	441c      	add	r4, r3
 8015d3e:	b224      	sxth	r4, r4
 8015d40:	e6d5      	b.n	8015aee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8015d42:	f1ba 0f01 	cmp.w	sl, #1
 8015d46:	f47f af0c 	bne.w	8015b62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8015d4a:	f1bb 0f01 	cmp.w	fp, #1
 8015d4e:	f47f af08 	bne.w	8015b62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8015d52:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 8015e14 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8015d56:	f8db 0000 	ldr.w	r0, [fp]
 8015d5a:	6803      	ldr	r3, [r0, #0]
 8015d5c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015d5e:	4798      	blx	r3
 8015d60:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8015d64:	465a      	mov	r2, fp
 8015d66:	d006      	beq.n	8015d76 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8015d68:	f1b8 0f04 	cmp.w	r8, #4
 8015d6c:	d140      	bne.n	8015df0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8015d6e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015d70:	3300      	adds	r3, #0
 8015d72:	bf18      	it	ne
 8015d74:	2301      	movne	r3, #1
 8015d76:	0580      	lsls	r0, r0, #22
 8015d78:	d56e      	bpl.n	8015e58 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8015d7a:	f1b8 0f08 	cmp.w	r8, #8
 8015d7e:	d16b      	bne.n	8015e58 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8015d80:	2b00      	cmp	r3, #0
 8015d82:	bf0c      	ite	eq
 8015d84:	f44f 7100 	moveq.w	r1, #512	; 0x200
 8015d88:	f44f 7180 	movne.w	r1, #256	; 0x100
 8015d8c:	2d00      	cmp	r5, #0
 8015d8e:	f47f aee8 	bne.w	8015b62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8015d92:	2e00      	cmp	r6, #0
 8015d94:	f47f aee5 	bne.w	8015b62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8015d98:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8015d9a:	19e3      	adds	r3, r4, r7
 8015d9c:	4283      	cmp	r3, r0
 8015d9e:	f73f aee0 	bgt.w	8015b62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8015da2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015da4:	980d      	ldr	r0, [sp, #52]	; 0x34
 8015da6:	444b      	add	r3, r9
 8015da8:	4283      	cmp	r3, r0
 8015daa:	f73f aeda 	bgt.w	8015b62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8015dae:	6810      	ldr	r0, [r2, #0]
 8015db0:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8015db4:	6804      	ldr	r4, [r0, #0]
 8015db6:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8015dba:	b2bf      	uxth	r7, r7
 8015dbc:	f1b8 0f08 	cmp.w	r8, #8
 8015dc0:	f04f 0500 	mov.w	r5, #0
 8015dc4:	bf18      	it	ne
 8015dc6:	3701      	addne	r7, #1
 8015dc8:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8015dcc:	990c      	ldr	r1, [sp, #48]	; 0x30
 8015dce:	9104      	str	r1, [sp, #16]
 8015dd0:	bf18      	it	ne
 8015dd2:	f027 0701 	bicne.w	r7, r7, #1
 8015dd6:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8015dd8:	bf18      	it	ne
 8015dda:	b2bf      	uxthne	r7, r7
 8015ddc:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8015de0:	e9cd 7900 	strd	r7, r9, [sp]
 8015de4:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8015de6:	6d64      	ldr	r4, [r4, #84]	; 0x54
 8015de8:	47a0      	blx	r4
 8015dea:	b019      	add	sp, #100	; 0x64
 8015dec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015df0:	2300      	movs	r3, #0
 8015df2:	e7c0      	b.n	8015d76 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8015df4:	2208      	movs	r2, #8
 8015df6:	fb92 f3f8 	sdiv	r3, r2, r8
 8015dfa:	1e5a      	subs	r2, r3, #1
 8015dfc:	443a      	add	r2, r7
 8015dfe:	fb92 f2f3 	sdiv	r2, r2, r3
 8015e02:	fb12 f203 	smulbb	r2, r2, r3
 8015e06:	b292      	uxth	r2, r2
 8015e08:	e6b0      	b.n	8015b6c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 8015e0a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8015e0c:	e6ec      	b.n	8015be8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8015e0e:	bf00      	nop
 8015e10:	200135a8 	.word	0x200135a8
 8015e14:	200135b0 	.word	0x200135b0
 8015e18:	200135aa 	.word	0x200135aa
 8015e1c:	00fff800 	.word	0x00fff800
 8015e20:	9810      	ldr	r0, [sp, #64]	; 0x40
 8015e22:	e779      	b.n	8015d18 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8015e24:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015e26:	b153      	cbz	r3, 8015e3e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8015e28:	441e      	add	r6, r3
 8015e2a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015e2c:	b2b6      	uxth	r6, r6
 8015e2e:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 8015e32:	f006 0607 	and.w	r6, r6, #7
 8015e36:	781a      	ldrb	r2, [r3, #0]
 8015e38:	9328      	str	r3, [sp, #160]	; 0xa0
 8015e3a:	4132      	asrs	r2, r6
 8015e3c:	b2d2      	uxtb	r2, r2
 8015e3e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015e40:	445b      	add	r3, fp
 8015e42:	930a      	str	r3, [sp, #40]	; 0x28
 8015e44:	e706      	b.n	8015c54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 8015e46:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015e48:	2b00      	cmp	r3, #0
 8015e4a:	d1ce      	bne.n	8015dea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8015e4c:	4b05      	ldr	r3, [pc, #20]	; (8015e64 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 8015e4e:	6818      	ldr	r0, [r3, #0]
 8015e50:	6803      	ldr	r3, [r0, #0]
 8015e52:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015e54:	4798      	blx	r3
 8015e56:	e7c8      	b.n	8015dea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8015e58:	2b00      	cmp	r3, #0
 8015e5a:	f43f ae82 	beq.w	8015b62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8015e5e:	f44f 7180 	mov.w	r1, #256	; 0x100
 8015e62:	e793      	b.n	8015d8c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8015e64:	200135b0 	.word	0x200135b0

08015e68 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8015e68:	b538      	push	{r3, r4, r5, lr}
 8015e6a:	4c15      	ldr	r4, [pc, #84]	; (8015ec0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8015e6c:	7823      	ldrb	r3, [r4, #0]
 8015e6e:	f3bf 8f5b 	dmb	ish
 8015e72:	07da      	lsls	r2, r3, #31
 8015e74:	4605      	mov	r5, r0
 8015e76:	d40b      	bmi.n	8015e90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8015e78:	4620      	mov	r0, r4
 8015e7a:	f007 fa7f 	bl	801d37c <__cxa_guard_acquire>
 8015e7e:	b138      	cbz	r0, 8015e90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8015e80:	4620      	mov	r0, r4
 8015e82:	f007 fa87 	bl	801d394 <__cxa_guard_release>
 8015e86:	4a0f      	ldr	r2, [pc, #60]	; (8015ec4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8015e88:	490f      	ldr	r1, [pc, #60]	; (8015ec8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8015e8a:	4810      	ldr	r0, [pc, #64]	; (8015ecc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8015e8c:	f007 fa6f 	bl	801d36e <__aeabi_atexit>
 8015e90:	4c0f      	ldr	r4, [pc, #60]	; (8015ed0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8015e92:	7823      	ldrb	r3, [r4, #0]
 8015e94:	f3bf 8f5b 	dmb	ish
 8015e98:	07db      	lsls	r3, r3, #31
 8015e9a:	d40b      	bmi.n	8015eb4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8015e9c:	4620      	mov	r0, r4
 8015e9e:	f007 fa6d 	bl	801d37c <__cxa_guard_acquire>
 8015ea2:	b138      	cbz	r0, 8015eb4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8015ea4:	4620      	mov	r0, r4
 8015ea6:	f007 fa75 	bl	801d394 <__cxa_guard_release>
 8015eaa:	4a06      	ldr	r2, [pc, #24]	; (8015ec4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8015eac:	4909      	ldr	r1, [pc, #36]	; (8015ed4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8015eae:	480a      	ldr	r0, [pc, #40]	; (8015ed8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8015eb0:	f007 fa5d 	bl	801d36e <__aeabi_atexit>
 8015eb4:	4b05      	ldr	r3, [pc, #20]	; (8015ecc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8015eb6:	612b      	str	r3, [r5, #16]
 8015eb8:	4b07      	ldr	r3, [pc, #28]	; (8015ed8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8015eba:	616b      	str	r3, [r5, #20]
 8015ebc:	bd38      	pop	{r3, r4, r5, pc}
 8015ebe:	bf00      	nop
 8015ec0:	2001367c 	.word	0x2001367c
 8015ec4:	20000000 	.word	0x20000000
 8015ec8:	08014079 	.word	0x08014079
 8015ecc:	200000c8 	.word	0x200000c8
 8015ed0:	20013680 	.word	0x20013680
 8015ed4:	08014077 	.word	0x08014077
 8015ed8:	200000cc 	.word	0x200000cc

08015edc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8015edc:	b538      	push	{r3, r4, r5, lr}
 8015ede:	4c15      	ldr	r4, [pc, #84]	; (8015f34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8015ee0:	7823      	ldrb	r3, [r4, #0]
 8015ee2:	f3bf 8f5b 	dmb	ish
 8015ee6:	07da      	lsls	r2, r3, #31
 8015ee8:	4605      	mov	r5, r0
 8015eea:	d40b      	bmi.n	8015f04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8015eec:	4620      	mov	r0, r4
 8015eee:	f007 fa45 	bl	801d37c <__cxa_guard_acquire>
 8015ef2:	b138      	cbz	r0, 8015f04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8015ef4:	4620      	mov	r0, r4
 8015ef6:	f007 fa4d 	bl	801d394 <__cxa_guard_release>
 8015efa:	4a0f      	ldr	r2, [pc, #60]	; (8015f38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8015efc:	490f      	ldr	r1, [pc, #60]	; (8015f3c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8015efe:	4810      	ldr	r0, [pc, #64]	; (8015f40 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8015f00:	f007 fa35 	bl	801d36e <__aeabi_atexit>
 8015f04:	4c0f      	ldr	r4, [pc, #60]	; (8015f44 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8015f06:	7823      	ldrb	r3, [r4, #0]
 8015f08:	f3bf 8f5b 	dmb	ish
 8015f0c:	07db      	lsls	r3, r3, #31
 8015f0e:	d40b      	bmi.n	8015f28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8015f10:	4620      	mov	r0, r4
 8015f12:	f007 fa33 	bl	801d37c <__cxa_guard_acquire>
 8015f16:	b138      	cbz	r0, 8015f28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8015f18:	4620      	mov	r0, r4
 8015f1a:	f007 fa3b 	bl	801d394 <__cxa_guard_release>
 8015f1e:	4a06      	ldr	r2, [pc, #24]	; (8015f38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8015f20:	4909      	ldr	r1, [pc, #36]	; (8015f48 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8015f22:	480a      	ldr	r0, [pc, #40]	; (8015f4c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8015f24:	f007 fa23 	bl	801d36e <__aeabi_atexit>
 8015f28:	4b05      	ldr	r3, [pc, #20]	; (8015f40 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8015f2a:	60ab      	str	r3, [r5, #8]
 8015f2c:	4b07      	ldr	r3, [pc, #28]	; (8015f4c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8015f2e:	60eb      	str	r3, [r5, #12]
 8015f30:	bd38      	pop	{r3, r4, r5, pc}
 8015f32:	bf00      	nop
 8015f34:	20013654 	.word	0x20013654
 8015f38:	20000000 	.word	0x20000000
 8015f3c:	0801407d 	.word	0x0801407d
 8015f40:	200000a0 	.word	0x200000a0
 8015f44:	20013658 	.word	0x20013658
 8015f48:	0801407b 	.word	0x0801407b
 8015f4c:	200000a4 	.word	0x200000a4

08015f50 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8015f50:	b510      	push	{r4, lr}
 8015f52:	4604      	mov	r4, r0
 8015f54:	f7ff ff88 	bl	8015e68 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8015f58:	4620      	mov	r0, r4
 8015f5a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015f5e:	f7ff bfbd 	b.w	8015edc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08015f64 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8015f64:	b538      	push	{r3, r4, r5, lr}
 8015f66:	4c15      	ldr	r4, [pc, #84]	; (8015fbc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8015f68:	7823      	ldrb	r3, [r4, #0]
 8015f6a:	f3bf 8f5b 	dmb	ish
 8015f6e:	07da      	lsls	r2, r3, #31
 8015f70:	4605      	mov	r5, r0
 8015f72:	d40b      	bmi.n	8015f8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8015f74:	4620      	mov	r0, r4
 8015f76:	f007 fa01 	bl	801d37c <__cxa_guard_acquire>
 8015f7a:	b138      	cbz	r0, 8015f8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8015f7c:	4620      	mov	r0, r4
 8015f7e:	f007 fa09 	bl	801d394 <__cxa_guard_release>
 8015f82:	4a0f      	ldr	r2, [pc, #60]	; (8015fc0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8015f84:	490f      	ldr	r1, [pc, #60]	; (8015fc4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8015f86:	4810      	ldr	r0, [pc, #64]	; (8015fc8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8015f88:	f007 f9f1 	bl	801d36e <__aeabi_atexit>
 8015f8c:	4c0f      	ldr	r4, [pc, #60]	; (8015fcc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8015f8e:	7823      	ldrb	r3, [r4, #0]
 8015f90:	f3bf 8f5b 	dmb	ish
 8015f94:	07db      	lsls	r3, r3, #31
 8015f96:	d40b      	bmi.n	8015fb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8015f98:	4620      	mov	r0, r4
 8015f9a:	f007 f9ef 	bl	801d37c <__cxa_guard_acquire>
 8015f9e:	b138      	cbz	r0, 8015fb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8015fa0:	4620      	mov	r0, r4
 8015fa2:	f007 f9f7 	bl	801d394 <__cxa_guard_release>
 8015fa6:	4a06      	ldr	r2, [pc, #24]	; (8015fc0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8015fa8:	4909      	ldr	r1, [pc, #36]	; (8015fd0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8015faa:	480a      	ldr	r0, [pc, #40]	; (8015fd4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8015fac:	f007 f9df 	bl	801d36e <__aeabi_atexit>
 8015fb0:	4b05      	ldr	r3, [pc, #20]	; (8015fc8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8015fb2:	622b      	str	r3, [r5, #32]
 8015fb4:	4b07      	ldr	r3, [pc, #28]	; (8015fd4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8015fb6:	626b      	str	r3, [r5, #36]	; 0x24
 8015fb8:	bd38      	pop	{r3, r4, r5, pc}
 8015fba:	bf00      	nop
 8015fbc:	20013684 	.word	0x20013684
 8015fc0:	20000000 	.word	0x20000000
 8015fc4:	08014071 	.word	0x08014071
 8015fc8:	200000d0 	.word	0x200000d0
 8015fcc:	20013688 	.word	0x20013688
 8015fd0:	0801406f 	.word	0x0801406f
 8015fd4:	200000d4 	.word	0x200000d4

08015fd8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8015fd8:	b538      	push	{r3, r4, r5, lr}
 8015fda:	4c15      	ldr	r4, [pc, #84]	; (8016030 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8015fdc:	7823      	ldrb	r3, [r4, #0]
 8015fde:	f3bf 8f5b 	dmb	ish
 8015fe2:	07da      	lsls	r2, r3, #31
 8015fe4:	4605      	mov	r5, r0
 8015fe6:	d40b      	bmi.n	8016000 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8015fe8:	4620      	mov	r0, r4
 8015fea:	f007 f9c7 	bl	801d37c <__cxa_guard_acquire>
 8015fee:	b138      	cbz	r0, 8016000 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8015ff0:	4620      	mov	r0, r4
 8015ff2:	f007 f9cf 	bl	801d394 <__cxa_guard_release>
 8015ff6:	4a0f      	ldr	r2, [pc, #60]	; (8016034 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8015ff8:	490f      	ldr	r1, [pc, #60]	; (8016038 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8015ffa:	4810      	ldr	r0, [pc, #64]	; (801603c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8015ffc:	f007 f9b7 	bl	801d36e <__aeabi_atexit>
 8016000:	4c0f      	ldr	r4, [pc, #60]	; (8016040 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8016002:	7823      	ldrb	r3, [r4, #0]
 8016004:	f3bf 8f5b 	dmb	ish
 8016008:	07db      	lsls	r3, r3, #31
 801600a:	d40b      	bmi.n	8016024 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801600c:	4620      	mov	r0, r4
 801600e:	f007 f9b5 	bl	801d37c <__cxa_guard_acquire>
 8016012:	b138      	cbz	r0, 8016024 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8016014:	4620      	mov	r0, r4
 8016016:	f007 f9bd 	bl	801d394 <__cxa_guard_release>
 801601a:	4a06      	ldr	r2, [pc, #24]	; (8016034 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801601c:	4909      	ldr	r1, [pc, #36]	; (8016044 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801601e:	480a      	ldr	r0, [pc, #40]	; (8016048 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8016020:	f007 f9a5 	bl	801d36e <__aeabi_atexit>
 8016024:	4b05      	ldr	r3, [pc, #20]	; (801603c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8016026:	61ab      	str	r3, [r5, #24]
 8016028:	4b07      	ldr	r3, [pc, #28]	; (8016048 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801602a:	61eb      	str	r3, [r5, #28]
 801602c:	bd38      	pop	{r3, r4, r5, pc}
 801602e:	bf00      	nop
 8016030:	2001365c 	.word	0x2001365c
 8016034:	20000000 	.word	0x20000000
 8016038:	08014075 	.word	0x08014075
 801603c:	200000a8 	.word	0x200000a8
 8016040:	20013660 	.word	0x20013660
 8016044:	08014073 	.word	0x08014073
 8016048:	200000ac 	.word	0x200000ac

0801604c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801604c:	b510      	push	{r4, lr}
 801604e:	4604      	mov	r4, r0
 8016050:	f7ff ff88 	bl	8015f64 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8016054:	4620      	mov	r0, r4
 8016056:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801605a:	f7ff bfbd 	b.w	8015fd8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08016060 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8016060:	b538      	push	{r3, r4, r5, lr}
 8016062:	4c15      	ldr	r4, [pc, #84]	; (80160b8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8016064:	7823      	ldrb	r3, [r4, #0]
 8016066:	f3bf 8f5b 	dmb	ish
 801606a:	07da      	lsls	r2, r3, #31
 801606c:	4605      	mov	r5, r0
 801606e:	d40b      	bmi.n	8016088 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8016070:	4620      	mov	r0, r4
 8016072:	f007 f983 	bl	801d37c <__cxa_guard_acquire>
 8016076:	b138      	cbz	r0, 8016088 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8016078:	4620      	mov	r0, r4
 801607a:	f007 f98b 	bl	801d394 <__cxa_guard_release>
 801607e:	4a0f      	ldr	r2, [pc, #60]	; (80160bc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8016080:	490f      	ldr	r1, [pc, #60]	; (80160c0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8016082:	4810      	ldr	r0, [pc, #64]	; (80160c4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8016084:	f007 f973 	bl	801d36e <__aeabi_atexit>
 8016088:	4c0f      	ldr	r4, [pc, #60]	; (80160c8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801608a:	7823      	ldrb	r3, [r4, #0]
 801608c:	f3bf 8f5b 	dmb	ish
 8016090:	07db      	lsls	r3, r3, #31
 8016092:	d40b      	bmi.n	80160ac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8016094:	4620      	mov	r0, r4
 8016096:	f007 f971 	bl	801d37c <__cxa_guard_acquire>
 801609a:	b138      	cbz	r0, 80160ac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801609c:	4620      	mov	r0, r4
 801609e:	f007 f979 	bl	801d394 <__cxa_guard_release>
 80160a2:	4a06      	ldr	r2, [pc, #24]	; (80160bc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80160a4:	4909      	ldr	r1, [pc, #36]	; (80160cc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 80160a6:	480a      	ldr	r0, [pc, #40]	; (80160d0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80160a8:	f007 f961 	bl	801d36e <__aeabi_atexit>
 80160ac:	4b05      	ldr	r3, [pc, #20]	; (80160c4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80160ae:	632b      	str	r3, [r5, #48]	; 0x30
 80160b0:	4b07      	ldr	r3, [pc, #28]	; (80160d0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80160b2:	636b      	str	r3, [r5, #52]	; 0x34
 80160b4:	bd38      	pop	{r3, r4, r5, pc}
 80160b6:	bf00      	nop
 80160b8:	20013694 	.word	0x20013694
 80160bc:	20000000 	.word	0x20000000
 80160c0:	08014069 	.word	0x08014069
 80160c4:	200000e0 	.word	0x200000e0
 80160c8:	20013698 	.word	0x20013698
 80160cc:	08014067 	.word	0x08014067
 80160d0:	200000e4 	.word	0x200000e4

080160d4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 80160d4:	b538      	push	{r3, r4, r5, lr}
 80160d6:	4c15      	ldr	r4, [pc, #84]	; (801612c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 80160d8:	7823      	ldrb	r3, [r4, #0]
 80160da:	f3bf 8f5b 	dmb	ish
 80160de:	07da      	lsls	r2, r3, #31
 80160e0:	4605      	mov	r5, r0
 80160e2:	d40b      	bmi.n	80160fc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80160e4:	4620      	mov	r0, r4
 80160e6:	f007 f949 	bl	801d37c <__cxa_guard_acquire>
 80160ea:	b138      	cbz	r0, 80160fc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80160ec:	4620      	mov	r0, r4
 80160ee:	f007 f951 	bl	801d394 <__cxa_guard_release>
 80160f2:	4a0f      	ldr	r2, [pc, #60]	; (8016130 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80160f4:	490f      	ldr	r1, [pc, #60]	; (8016134 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 80160f6:	4810      	ldr	r0, [pc, #64]	; (8016138 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80160f8:	f007 f939 	bl	801d36e <__aeabi_atexit>
 80160fc:	4c0f      	ldr	r4, [pc, #60]	; (801613c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 80160fe:	7823      	ldrb	r3, [r4, #0]
 8016100:	f3bf 8f5b 	dmb	ish
 8016104:	07db      	lsls	r3, r3, #31
 8016106:	d40b      	bmi.n	8016120 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8016108:	4620      	mov	r0, r4
 801610a:	f007 f937 	bl	801d37c <__cxa_guard_acquire>
 801610e:	b138      	cbz	r0, 8016120 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8016110:	4620      	mov	r0, r4
 8016112:	f007 f93f 	bl	801d394 <__cxa_guard_release>
 8016116:	4a06      	ldr	r2, [pc, #24]	; (8016130 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8016118:	4909      	ldr	r1, [pc, #36]	; (8016140 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801611a:	480a      	ldr	r0, [pc, #40]	; (8016144 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801611c:	f007 f927 	bl	801d36e <__aeabi_atexit>
 8016120:	4b05      	ldr	r3, [pc, #20]	; (8016138 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8016122:	62ab      	str	r3, [r5, #40]	; 0x28
 8016124:	4b07      	ldr	r3, [pc, #28]	; (8016144 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8016126:	62eb      	str	r3, [r5, #44]	; 0x2c
 8016128:	bd38      	pop	{r3, r4, r5, pc}
 801612a:	bf00      	nop
 801612c:	20013664 	.word	0x20013664
 8016130:	20000000 	.word	0x20000000
 8016134:	0801406d 	.word	0x0801406d
 8016138:	200000b0 	.word	0x200000b0
 801613c:	20013668 	.word	0x20013668
 8016140:	0801406b 	.word	0x0801406b
 8016144:	200000b4 	.word	0x200000b4

08016148 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8016148:	b510      	push	{r4, lr}
 801614a:	4604      	mov	r4, r0
 801614c:	f7ff ff88 	bl	8016060 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8016150:	4620      	mov	r0, r4
 8016152:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016156:	f7ff bfbd 	b.w	80160d4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801615c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801615c:	b538      	push	{r3, r4, r5, lr}
 801615e:	4c15      	ldr	r4, [pc, #84]	; (80161b4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8016160:	7823      	ldrb	r3, [r4, #0]
 8016162:	f3bf 8f5b 	dmb	ish
 8016166:	07da      	lsls	r2, r3, #31
 8016168:	4605      	mov	r5, r0
 801616a:	d40b      	bmi.n	8016184 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801616c:	4620      	mov	r0, r4
 801616e:	f007 f905 	bl	801d37c <__cxa_guard_acquire>
 8016172:	b138      	cbz	r0, 8016184 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8016174:	4620      	mov	r0, r4
 8016176:	f007 f90d 	bl	801d394 <__cxa_guard_release>
 801617a:	4a0f      	ldr	r2, [pc, #60]	; (80161b8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801617c:	490f      	ldr	r1, [pc, #60]	; (80161bc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801617e:	4810      	ldr	r0, [pc, #64]	; (80161c0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8016180:	f007 f8f5 	bl	801d36e <__aeabi_atexit>
 8016184:	4c0f      	ldr	r4, [pc, #60]	; (80161c4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8016186:	7823      	ldrb	r3, [r4, #0]
 8016188:	f3bf 8f5b 	dmb	ish
 801618c:	07db      	lsls	r3, r3, #31
 801618e:	d40b      	bmi.n	80161a8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8016190:	4620      	mov	r0, r4
 8016192:	f007 f8f3 	bl	801d37c <__cxa_guard_acquire>
 8016196:	b138      	cbz	r0, 80161a8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8016198:	4620      	mov	r0, r4
 801619a:	f007 f8fb 	bl	801d394 <__cxa_guard_release>
 801619e:	4a06      	ldr	r2, [pc, #24]	; (80161b8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80161a0:	4909      	ldr	r1, [pc, #36]	; (80161c8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 80161a2:	480a      	ldr	r0, [pc, #40]	; (80161cc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80161a4:	f007 f8e3 	bl	801d36e <__aeabi_atexit>
 80161a8:	4b05      	ldr	r3, [pc, #20]	; (80161c0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80161aa:	652b      	str	r3, [r5, #80]	; 0x50
 80161ac:	4b07      	ldr	r3, [pc, #28]	; (80161cc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80161ae:	656b      	str	r3, [r5, #84]	; 0x54
 80161b0:	bd38      	pop	{r3, r4, r5, pc}
 80161b2:	bf00      	nop
 80161b4:	2001369c 	.word	0x2001369c
 80161b8:	20000000 	.word	0x20000000
 80161bc:	08014059 	.word	0x08014059
 80161c0:	200000e8 	.word	0x200000e8
 80161c4:	200136a0 	.word	0x200136a0
 80161c8:	08014057 	.word	0x08014057
 80161cc:	200000ec 	.word	0x200000ec

080161d0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 80161d0:	b538      	push	{r3, r4, r5, lr}
 80161d2:	4c15      	ldr	r4, [pc, #84]	; (8016228 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 80161d4:	7823      	ldrb	r3, [r4, #0]
 80161d6:	f3bf 8f5b 	dmb	ish
 80161da:	07da      	lsls	r2, r3, #31
 80161dc:	4605      	mov	r5, r0
 80161de:	d40b      	bmi.n	80161f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80161e0:	4620      	mov	r0, r4
 80161e2:	f007 f8cb 	bl	801d37c <__cxa_guard_acquire>
 80161e6:	b138      	cbz	r0, 80161f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80161e8:	4620      	mov	r0, r4
 80161ea:	f007 f8d3 	bl	801d394 <__cxa_guard_release>
 80161ee:	4a0f      	ldr	r2, [pc, #60]	; (801622c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80161f0:	490f      	ldr	r1, [pc, #60]	; (8016230 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 80161f2:	4810      	ldr	r0, [pc, #64]	; (8016234 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80161f4:	f007 f8bb 	bl	801d36e <__aeabi_atexit>
 80161f8:	4c0f      	ldr	r4, [pc, #60]	; (8016238 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 80161fa:	7823      	ldrb	r3, [r4, #0]
 80161fc:	f3bf 8f5b 	dmb	ish
 8016200:	07db      	lsls	r3, r3, #31
 8016202:	d40b      	bmi.n	801621c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8016204:	4620      	mov	r0, r4
 8016206:	f007 f8b9 	bl	801d37c <__cxa_guard_acquire>
 801620a:	b138      	cbz	r0, 801621c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801620c:	4620      	mov	r0, r4
 801620e:	f007 f8c1 	bl	801d394 <__cxa_guard_release>
 8016212:	4a06      	ldr	r2, [pc, #24]	; (801622c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8016214:	4909      	ldr	r1, [pc, #36]	; (801623c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8016216:	480a      	ldr	r0, [pc, #40]	; (8016240 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8016218:	f007 f8a9 	bl	801d36e <__aeabi_atexit>
 801621c:	4b05      	ldr	r3, [pc, #20]	; (8016234 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801621e:	64ab      	str	r3, [r5, #72]	; 0x48
 8016220:	4b07      	ldr	r3, [pc, #28]	; (8016240 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8016222:	64eb      	str	r3, [r5, #76]	; 0x4c
 8016224:	bd38      	pop	{r3, r4, r5, pc}
 8016226:	bf00      	nop
 8016228:	200136a4 	.word	0x200136a4
 801622c:	20000000 	.word	0x20000000
 8016230:	0801405d 	.word	0x0801405d
 8016234:	200000f0 	.word	0x200000f0
 8016238:	200136a8 	.word	0x200136a8
 801623c:	0801405b 	.word	0x0801405b
 8016240:	200000f4 	.word	0x200000f4

08016244 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8016244:	b538      	push	{r3, r4, r5, lr}
 8016246:	4c15      	ldr	r4, [pc, #84]	; (801629c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8016248:	7823      	ldrb	r3, [r4, #0]
 801624a:	f3bf 8f5b 	dmb	ish
 801624e:	07da      	lsls	r2, r3, #31
 8016250:	4605      	mov	r5, r0
 8016252:	d40b      	bmi.n	801626c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8016254:	4620      	mov	r0, r4
 8016256:	f007 f891 	bl	801d37c <__cxa_guard_acquire>
 801625a:	b138      	cbz	r0, 801626c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801625c:	4620      	mov	r0, r4
 801625e:	f007 f899 	bl	801d394 <__cxa_guard_release>
 8016262:	4a0f      	ldr	r2, [pc, #60]	; (80162a0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8016264:	490f      	ldr	r1, [pc, #60]	; (80162a4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8016266:	4810      	ldr	r0, [pc, #64]	; (80162a8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8016268:	f007 f881 	bl	801d36e <__aeabi_atexit>
 801626c:	4c0f      	ldr	r4, [pc, #60]	; (80162ac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801626e:	7823      	ldrb	r3, [r4, #0]
 8016270:	f3bf 8f5b 	dmb	ish
 8016274:	07db      	lsls	r3, r3, #31
 8016276:	d40b      	bmi.n	8016290 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8016278:	4620      	mov	r0, r4
 801627a:	f007 f87f 	bl	801d37c <__cxa_guard_acquire>
 801627e:	b138      	cbz	r0, 8016290 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8016280:	4620      	mov	r0, r4
 8016282:	f007 f887 	bl	801d394 <__cxa_guard_release>
 8016286:	4a06      	ldr	r2, [pc, #24]	; (80162a0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8016288:	4909      	ldr	r1, [pc, #36]	; (80162b0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801628a:	480a      	ldr	r0, [pc, #40]	; (80162b4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801628c:	f007 f86f 	bl	801d36e <__aeabi_atexit>
 8016290:	4b05      	ldr	r3, [pc, #20]	; (80162a8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8016292:	642b      	str	r3, [r5, #64]	; 0x40
 8016294:	4b07      	ldr	r3, [pc, #28]	; (80162b4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8016296:	646b      	str	r3, [r5, #68]	; 0x44
 8016298:	bd38      	pop	{r3, r4, r5, pc}
 801629a:	bf00      	nop
 801629c:	2001366c 	.word	0x2001366c
 80162a0:	20000000 	.word	0x20000000
 80162a4:	08014061 	.word	0x08014061
 80162a8:	200000b8 	.word	0x200000b8
 80162ac:	20013670 	.word	0x20013670
 80162b0:	0801405f 	.word	0x0801405f
 80162b4:	200000bc 	.word	0x200000bc

080162b8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 80162b8:	b538      	push	{r3, r4, r5, lr}
 80162ba:	4c15      	ldr	r4, [pc, #84]	; (8016310 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 80162bc:	7823      	ldrb	r3, [r4, #0]
 80162be:	f3bf 8f5b 	dmb	ish
 80162c2:	07da      	lsls	r2, r3, #31
 80162c4:	4605      	mov	r5, r0
 80162c6:	d40b      	bmi.n	80162e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80162c8:	4620      	mov	r0, r4
 80162ca:	f007 f857 	bl	801d37c <__cxa_guard_acquire>
 80162ce:	b138      	cbz	r0, 80162e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80162d0:	4620      	mov	r0, r4
 80162d2:	f007 f85f 	bl	801d394 <__cxa_guard_release>
 80162d6:	4a0f      	ldr	r2, [pc, #60]	; (8016314 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80162d8:	490f      	ldr	r1, [pc, #60]	; (8016318 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 80162da:	4810      	ldr	r0, [pc, #64]	; (801631c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80162dc:	f007 f847 	bl	801d36e <__aeabi_atexit>
 80162e0:	4c0f      	ldr	r4, [pc, #60]	; (8016320 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 80162e2:	7823      	ldrb	r3, [r4, #0]
 80162e4:	f3bf 8f5b 	dmb	ish
 80162e8:	07db      	lsls	r3, r3, #31
 80162ea:	d40b      	bmi.n	8016304 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80162ec:	4620      	mov	r0, r4
 80162ee:	f007 f845 	bl	801d37c <__cxa_guard_acquire>
 80162f2:	b138      	cbz	r0, 8016304 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80162f4:	4620      	mov	r0, r4
 80162f6:	f007 f84d 	bl	801d394 <__cxa_guard_release>
 80162fa:	4a06      	ldr	r2, [pc, #24]	; (8016314 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80162fc:	4909      	ldr	r1, [pc, #36]	; (8016324 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 80162fe:	480a      	ldr	r0, [pc, #40]	; (8016328 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8016300:	f007 f835 	bl	801d36e <__aeabi_atexit>
 8016304:	4b05      	ldr	r3, [pc, #20]	; (801631c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8016306:	63ab      	str	r3, [r5, #56]	; 0x38
 8016308:	4b07      	ldr	r3, [pc, #28]	; (8016328 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801630a:	63eb      	str	r3, [r5, #60]	; 0x3c
 801630c:	bd38      	pop	{r3, r4, r5, pc}
 801630e:	bf00      	nop
 8016310:	2001368c 	.word	0x2001368c
 8016314:	20000000 	.word	0x20000000
 8016318:	08014065 	.word	0x08014065
 801631c:	200000d8 	.word	0x200000d8
 8016320:	20013690 	.word	0x20013690
 8016324:	08014063 	.word	0x08014063
 8016328:	200000dc 	.word	0x200000dc

0801632c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801632c:	b510      	push	{r4, lr}
 801632e:	4604      	mov	r4, r0
 8016330:	f7ff ff14 	bl	801615c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8016334:	4620      	mov	r0, r4
 8016336:	f7ff ff85 	bl	8016244 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801633a:	4620      	mov	r0, r4
 801633c:	f7ff ff48 	bl	80161d0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8016340:	4620      	mov	r0, r4
 8016342:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016346:	f7ff bfb7 	b.w	80162b8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801634c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801634c:	b538      	push	{r3, r4, r5, lr}
 801634e:	4c15      	ldr	r4, [pc, #84]	; (80163a4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8016350:	7823      	ldrb	r3, [r4, #0]
 8016352:	f3bf 8f5b 	dmb	ish
 8016356:	07da      	lsls	r2, r3, #31
 8016358:	4605      	mov	r5, r0
 801635a:	d40b      	bmi.n	8016374 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801635c:	4620      	mov	r0, r4
 801635e:	f007 f80d 	bl	801d37c <__cxa_guard_acquire>
 8016362:	b138      	cbz	r0, 8016374 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8016364:	4620      	mov	r0, r4
 8016366:	f007 f815 	bl	801d394 <__cxa_guard_release>
 801636a:	4a0f      	ldr	r2, [pc, #60]	; (80163a8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801636c:	490f      	ldr	r1, [pc, #60]	; (80163ac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801636e:	4810      	ldr	r0, [pc, #64]	; (80163b0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8016370:	f006 fffd 	bl	801d36e <__aeabi_atexit>
 8016374:	4c0f      	ldr	r4, [pc, #60]	; (80163b4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8016376:	7823      	ldrb	r3, [r4, #0]
 8016378:	f3bf 8f5b 	dmb	ish
 801637c:	07db      	lsls	r3, r3, #31
 801637e:	d40b      	bmi.n	8016398 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8016380:	4620      	mov	r0, r4
 8016382:	f006 fffb 	bl	801d37c <__cxa_guard_acquire>
 8016386:	b138      	cbz	r0, 8016398 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8016388:	4620      	mov	r0, r4
 801638a:	f007 f803 	bl	801d394 <__cxa_guard_release>
 801638e:	4a06      	ldr	r2, [pc, #24]	; (80163a8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8016390:	4909      	ldr	r1, [pc, #36]	; (80163b8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8016392:	480a      	ldr	r0, [pc, #40]	; (80163bc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8016394:	f006 ffeb 	bl	801d36e <__aeabi_atexit>
 8016398:	4b05      	ldr	r3, [pc, #20]	; (80163b0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801639a:	662b      	str	r3, [r5, #96]	; 0x60
 801639c:	4b07      	ldr	r3, [pc, #28]	; (80163bc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801639e:	666b      	str	r3, [r5, #100]	; 0x64
 80163a0:	bd38      	pop	{r3, r4, r5, pc}
 80163a2:	bf00      	nop
 80163a4:	20013674 	.word	0x20013674
 80163a8:	20000000 	.word	0x20000000
 80163ac:	08014051 	.word	0x08014051
 80163b0:	200000c0 	.word	0x200000c0
 80163b4:	20013678 	.word	0x20013678
 80163b8:	0801404f 	.word	0x0801404f
 80163bc:	200000c4 	.word	0x200000c4

080163c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 80163c0:	b538      	push	{r3, r4, r5, lr}
 80163c2:	4c15      	ldr	r4, [pc, #84]	; (8016418 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 80163c4:	7823      	ldrb	r3, [r4, #0]
 80163c6:	f3bf 8f5b 	dmb	ish
 80163ca:	07da      	lsls	r2, r3, #31
 80163cc:	4605      	mov	r5, r0
 80163ce:	d40b      	bmi.n	80163e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80163d0:	4620      	mov	r0, r4
 80163d2:	f006 ffd3 	bl	801d37c <__cxa_guard_acquire>
 80163d6:	b138      	cbz	r0, 80163e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80163d8:	4620      	mov	r0, r4
 80163da:	f006 ffdb 	bl	801d394 <__cxa_guard_release>
 80163de:	4a0f      	ldr	r2, [pc, #60]	; (801641c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80163e0:	490f      	ldr	r1, [pc, #60]	; (8016420 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 80163e2:	4810      	ldr	r0, [pc, #64]	; (8016424 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80163e4:	f006 ffc3 	bl	801d36e <__aeabi_atexit>
 80163e8:	4c0f      	ldr	r4, [pc, #60]	; (8016428 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 80163ea:	7823      	ldrb	r3, [r4, #0]
 80163ec:	f3bf 8f5b 	dmb	ish
 80163f0:	07db      	lsls	r3, r3, #31
 80163f2:	d40b      	bmi.n	801640c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80163f4:	4620      	mov	r0, r4
 80163f6:	f006 ffc1 	bl	801d37c <__cxa_guard_acquire>
 80163fa:	b138      	cbz	r0, 801640c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80163fc:	4620      	mov	r0, r4
 80163fe:	f006 ffc9 	bl	801d394 <__cxa_guard_release>
 8016402:	4a06      	ldr	r2, [pc, #24]	; (801641c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8016404:	4909      	ldr	r1, [pc, #36]	; (801642c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8016406:	480a      	ldr	r0, [pc, #40]	; (8016430 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8016408:	f006 ffb1 	bl	801d36e <__aeabi_atexit>
 801640c:	4b05      	ldr	r3, [pc, #20]	; (8016424 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801640e:	65ab      	str	r3, [r5, #88]	; 0x58
 8016410:	4b07      	ldr	r3, [pc, #28]	; (8016430 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8016412:	65eb      	str	r3, [r5, #92]	; 0x5c
 8016414:	bd38      	pop	{r3, r4, r5, pc}
 8016416:	bf00      	nop
 8016418:	2001364c 	.word	0x2001364c
 801641c:	20000000 	.word	0x20000000
 8016420:	08014055 	.word	0x08014055
 8016424:	20000098 	.word	0x20000098
 8016428:	20013650 	.word	0x20013650
 801642c:	08014053 	.word	0x08014053
 8016430:	2000009c 	.word	0x2000009c

08016434 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8016434:	b510      	push	{r4, lr}
 8016436:	4604      	mov	r4, r0
 8016438:	f7ff ff88 	bl	801634c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801643c:	4620      	mov	r0, r4
 801643e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016442:	f7ff bfbd 	b.w	80163c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08016448 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8016448:	b538      	push	{r3, r4, r5, lr}
 801644a:	4c15      	ldr	r4, [pc, #84]	; (80164a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801644c:	7823      	ldrb	r3, [r4, #0]
 801644e:	f3bf 8f5b 	dmb	ish
 8016452:	07da      	lsls	r2, r3, #31
 8016454:	4605      	mov	r5, r0
 8016456:	d40b      	bmi.n	8016470 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8016458:	4620      	mov	r0, r4
 801645a:	f006 ff8f 	bl	801d37c <__cxa_guard_acquire>
 801645e:	b138      	cbz	r0, 8016470 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8016460:	4620      	mov	r0, r4
 8016462:	f006 ff97 	bl	801d394 <__cxa_guard_release>
 8016466:	4a0f      	ldr	r2, [pc, #60]	; (80164a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8016468:	490f      	ldr	r1, [pc, #60]	; (80164a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801646a:	4810      	ldr	r0, [pc, #64]	; (80164ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801646c:	f006 ff7f 	bl	801d36e <__aeabi_atexit>
 8016470:	4c0f      	ldr	r4, [pc, #60]	; (80164b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8016472:	7823      	ldrb	r3, [r4, #0]
 8016474:	f3bf 8f5b 	dmb	ish
 8016478:	07db      	lsls	r3, r3, #31
 801647a:	d40b      	bmi.n	8016494 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801647c:	4620      	mov	r0, r4
 801647e:	f006 ff7d 	bl	801d37c <__cxa_guard_acquire>
 8016482:	b138      	cbz	r0, 8016494 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8016484:	4620      	mov	r0, r4
 8016486:	f006 ff85 	bl	801d394 <__cxa_guard_release>
 801648a:	4a06      	ldr	r2, [pc, #24]	; (80164a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801648c:	4909      	ldr	r1, [pc, #36]	; (80164b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801648e:	480a      	ldr	r0, [pc, #40]	; (80164b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8016490:	f006 ff6d 	bl	801d36e <__aeabi_atexit>
 8016494:	4b05      	ldr	r3, [pc, #20]	; (80164ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8016496:	672b      	str	r3, [r5, #112]	; 0x70
 8016498:	4b07      	ldr	r3, [pc, #28]	; (80164b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801649a:	676b      	str	r3, [r5, #116]	; 0x74
 801649c:	bd38      	pop	{r3, r4, r5, pc}
 801649e:	bf00      	nop
 80164a0:	20013644 	.word	0x20013644
 80164a4:	20000000 	.word	0x20000000
 80164a8:	08014049 	.word	0x08014049
 80164ac:	20000090 	.word	0x20000090
 80164b0:	20013648 	.word	0x20013648
 80164b4:	08014047 	.word	0x08014047
 80164b8:	20000094 	.word	0x20000094

080164bc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 80164bc:	b538      	push	{r3, r4, r5, lr}
 80164be:	4c15      	ldr	r4, [pc, #84]	; (8016514 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 80164c0:	7823      	ldrb	r3, [r4, #0]
 80164c2:	f3bf 8f5b 	dmb	ish
 80164c6:	07da      	lsls	r2, r3, #31
 80164c8:	4605      	mov	r5, r0
 80164ca:	d40b      	bmi.n	80164e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80164cc:	4620      	mov	r0, r4
 80164ce:	f006 ff55 	bl	801d37c <__cxa_guard_acquire>
 80164d2:	b138      	cbz	r0, 80164e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80164d4:	4620      	mov	r0, r4
 80164d6:	f006 ff5d 	bl	801d394 <__cxa_guard_release>
 80164da:	4a0f      	ldr	r2, [pc, #60]	; (8016518 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80164dc:	490f      	ldr	r1, [pc, #60]	; (801651c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 80164de:	4810      	ldr	r0, [pc, #64]	; (8016520 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80164e0:	f006 ff45 	bl	801d36e <__aeabi_atexit>
 80164e4:	4c0f      	ldr	r4, [pc, #60]	; (8016524 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 80164e6:	7823      	ldrb	r3, [r4, #0]
 80164e8:	f3bf 8f5b 	dmb	ish
 80164ec:	07db      	lsls	r3, r3, #31
 80164ee:	d40b      	bmi.n	8016508 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80164f0:	4620      	mov	r0, r4
 80164f2:	f006 ff43 	bl	801d37c <__cxa_guard_acquire>
 80164f6:	b138      	cbz	r0, 8016508 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80164f8:	4620      	mov	r0, r4
 80164fa:	f006 ff4b 	bl	801d394 <__cxa_guard_release>
 80164fe:	4a06      	ldr	r2, [pc, #24]	; (8016518 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8016500:	4909      	ldr	r1, [pc, #36]	; (8016528 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8016502:	480a      	ldr	r0, [pc, #40]	; (801652c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8016504:	f006 ff33 	bl	801d36e <__aeabi_atexit>
 8016508:	4b05      	ldr	r3, [pc, #20]	; (8016520 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801650a:	66ab      	str	r3, [r5, #104]	; 0x68
 801650c:	4b07      	ldr	r3, [pc, #28]	; (801652c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801650e:	66eb      	str	r3, [r5, #108]	; 0x6c
 8016510:	bd38      	pop	{r3, r4, r5, pc}
 8016512:	bf00      	nop
 8016514:	2001363c 	.word	0x2001363c
 8016518:	20000000 	.word	0x20000000
 801651c:	0801404d 	.word	0x0801404d
 8016520:	20000088 	.word	0x20000088
 8016524:	20013640 	.word	0x20013640
 8016528:	0801404b 	.word	0x0801404b
 801652c:	2000008c 	.word	0x2000008c

08016530 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8016530:	b510      	push	{r4, lr}
 8016532:	4604      	mov	r4, r0
 8016534:	f7ff ff88 	bl	8016448 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8016538:	4620      	mov	r0, r4
 801653a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801653e:	f7ff bfbd 	b.w	80164bc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08016542 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8016542:	b510      	push	{r4, lr}
 8016544:	4604      	mov	r4, r0
 8016546:	f7ff fff3 	bl	8016530 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801654a:	4620      	mov	r0, r4
 801654c:	f7ff ff72 	bl	8016434 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8016550:	4620      	mov	r0, r4
 8016552:	f7ff fdf9 	bl	8016148 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8016556:	4620      	mov	r0, r4
 8016558:	f7ff fcfa 	bl	8015f50 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801655c:	4620      	mov	r0, r4
 801655e:	f7ff fd75 	bl	801604c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8016562:	4620      	mov	r0, r4
 8016564:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016568:	f7ff bee0 	b.w	801632c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801656c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801656c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016570:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 8016574:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 8016578:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801657c:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 8016580:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 8016584:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 8016588:	8808      	ldrh	r0, [r1, #0]
 801658a:	fb05 4c0e 	mla	ip, r5, lr, r4
 801658e:	2d00      	cmp	r5, #0
 8016590:	eb02 0a0c 	add.w	sl, r2, ip
 8016594:	f2c0 80b0 	blt.w	80166f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8016598:	45ab      	cmp	fp, r5
 801659a:	f340 80ad 	ble.w	80166f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801659e:	2c00      	cmp	r4, #0
 80165a0:	f2c0 80a8 	blt.w	80166f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80165a4:	45a6      	cmp	lr, r4
 80165a6:	f340 80a5 	ble.w	80166f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80165aa:	f812 200c 	ldrb.w	r2, [r2, ip]
 80165ae:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 80165b2:	1c62      	adds	r2, r4, #1
 80165b4:	f100 80a3 	bmi.w	80166fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80165b8:	4596      	cmp	lr, r2
 80165ba:	f340 80a0 	ble.w	80166fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80165be:	f1b9 0f00 	cmp.w	r9, #0
 80165c2:	f000 809c 	beq.w	80166fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80165c6:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80165ca:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 80165ce:	3501      	adds	r5, #1
 80165d0:	f100 8099 	bmi.w	8016706 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80165d4:	45ab      	cmp	fp, r5
 80165d6:	f340 8096 	ble.w	8016706 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80165da:	2f00      	cmp	r7, #0
 80165dc:	f000 8093 	beq.w	8016706 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80165e0:	2c00      	cmp	r4, #0
 80165e2:	f2c0 808e 	blt.w	8016702 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 80165e6:	45a6      	cmp	lr, r4
 80165e8:	f340 808b 	ble.w	8016702 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 80165ec:	f81a 200e 	ldrb.w	r2, [sl, lr]
 80165f0:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 80165f4:	3401      	adds	r4, #1
 80165f6:	f100 8089 	bmi.w	801670c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80165fa:	45a6      	cmp	lr, r4
 80165fc:	f340 8086 	ble.w	801670c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8016600:	f1b9 0f00 	cmp.w	r9, #0
 8016604:	f000 8082 	beq.w	801670c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8016608:	44d6      	add	lr, sl
 801660a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801660e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8016612:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8016616:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801661a:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801661e:	fb19 fe07 	smulbb	lr, r9, r7
 8016622:	ea44 0808 	orr.w	r8, r4, r8
 8016626:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801662a:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801662e:	f1c7 0210 	rsb	r2, r7, #16
 8016632:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8016636:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801663a:	ea44 0c0c 	orr.w	ip, r4, ip
 801663e:	eba2 0209 	sub.w	r2, r2, r9
 8016642:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8016646:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801664a:	fb04 f40c 	mul.w	r4, r4, ip
 801664e:	fb02 4808 	mla	r8, r2, r8, r4
 8016652:	041a      	lsls	r2, r3, #16
 8016654:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8016658:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801665c:	4313      	orrs	r3, r2
 801665e:	042a      	lsls	r2, r5, #16
 8016660:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8016664:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8016668:	fb0e 8303 	mla	r3, lr, r3, r8
 801666c:	432a      	orrs	r2, r5
 801666e:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8016672:	fb07 3202 	mla	r2, r7, r2, r3
 8016676:	0d53      	lsrs	r3, r2, #21
 8016678:	0952      	lsrs	r2, r2, #5
 801667a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801667e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016682:	431a      	orrs	r2, r3
 8016684:	b293      	uxth	r3, r2
 8016686:	b2b4      	uxth	r4, r6
 8016688:	1202      	asrs	r2, r0, #8
 801668a:	43f6      	mvns	r6, r6
 801668c:	b2f6      	uxtb	r6, r6
 801668e:	121d      	asrs	r5, r3, #8
 8016690:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8016694:	fb12 f206 	smulbb	r2, r2, r6
 8016698:	10c7      	asrs	r7, r0, #3
 801669a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801669e:	00c0      	lsls	r0, r0, #3
 80166a0:	fb05 2504 	mla	r5, r5, r4, r2
 80166a4:	b2c0      	uxtb	r0, r0
 80166a6:	10da      	asrs	r2, r3, #3
 80166a8:	00db      	lsls	r3, r3, #3
 80166aa:	b2db      	uxtb	r3, r3
 80166ac:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80166b0:	fb10 f006 	smulbb	r0, r0, r6
 80166b4:	b2ad      	uxth	r5, r5
 80166b6:	fb03 0004 	mla	r0, r3, r4, r0
 80166ba:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80166be:	fb17 f706 	smulbb	r7, r7, r6
 80166c2:	b280      	uxth	r0, r0
 80166c4:	1c6b      	adds	r3, r5, #1
 80166c6:	fb02 7204 	mla	r2, r2, r4, r7
 80166ca:	b292      	uxth	r2, r2
 80166cc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80166d0:	1c43      	adds	r3, r0, #1
 80166d2:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80166d6:	1c50      	adds	r0, r2, #1
 80166d8:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80166dc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80166e0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80166e4:	0952      	lsrs	r2, r2, #5
 80166e6:	432b      	orrs	r3, r5
 80166e8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80166ec:	4313      	orrs	r3, r2
 80166ee:	800b      	strh	r3, [r1, #0]
 80166f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80166f4:	4680      	mov	r8, r0
 80166f6:	e75c      	b.n	80165b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 80166f8:	4684      	mov	ip, r0
 80166fa:	4680      	mov	r8, r0
 80166fc:	e767      	b.n	80165ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 80166fe:	4684      	mov	ip, r0
 8016700:	e765      	b.n	80165ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8016702:	4605      	mov	r5, r0
 8016704:	e776      	b.n	80165f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 8016706:	4603      	mov	r3, r0
 8016708:	4605      	mov	r5, r0
 801670a:	e782      	b.n	8016612 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801670c:	4603      	mov	r3, r0
 801670e:	e780      	b.n	8016612 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08016710 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016710:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016714:	b099      	sub	sp, #100	; 0x64
 8016716:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801671a:	9215      	str	r2, [sp, #84]	; 0x54
 801671c:	9309      	str	r3, [sp, #36]	; 0x24
 801671e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8016720:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 8016724:	930d      	str	r3, [sp, #52]	; 0x34
 8016726:	910c      	str	r1, [sp, #48]	; 0x30
 8016728:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801672c:	9016      	str	r0, [sp, #88]	; 0x58
 801672e:	6850      	ldr	r0, [r2, #4]
 8016730:	6812      	ldr	r2, [r2, #0]
 8016732:	fb00 1303 	mla	r3, r0, r3, r1
 8016736:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801673a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801673c:	681b      	ldr	r3, [r3, #0]
 801673e:	930b      	str	r3, [sp, #44]	; 0x2c
 8016740:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016742:	685e      	ldr	r6, [r3, #4]
 8016744:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016746:	43db      	mvns	r3, r3
 8016748:	b2db      	uxtb	r3, r3
 801674a:	3604      	adds	r6, #4
 801674c:	930a      	str	r3, [sp, #40]	; 0x28
 801674e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016750:	2b00      	cmp	r3, #0
 8016752:	dc03      	bgt.n	801675c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8016754:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8016756:	2b00      	cmp	r3, #0
 8016758:	f340 8225 	ble.w	8016ba6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801675c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801675e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016762:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8016766:	1e48      	subs	r0, r1, #1
 8016768:	1e57      	subs	r7, r2, #1
 801676a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801676c:	2b00      	cmp	r3, #0
 801676e:	f340 80e3 	ble.w	8016938 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8016772:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8016776:	ea4f 4325 	mov.w	r3, r5, asr #16
 801677a:	d406      	bmi.n	801678a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801677c:	4584      	cmp	ip, r0
 801677e:	da04      	bge.n	801678a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8016780:	2b00      	cmp	r3, #0
 8016782:	db02      	blt.n	801678a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8016784:	42bb      	cmp	r3, r7
 8016786:	f2c0 80d8 	blt.w	801693a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801678a:	f11c 0c01 	adds.w	ip, ip, #1
 801678e:	f100 80c9 	bmi.w	8016924 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8016792:	4561      	cmp	r1, ip
 8016794:	f2c0 80c6 	blt.w	8016924 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8016798:	3301      	adds	r3, #1
 801679a:	f100 80c3 	bmi.w	8016924 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801679e:	429a      	cmp	r2, r3
 80167a0:	f2c0 80c0 	blt.w	8016924 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80167a4:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80167a8:	4647      	mov	r7, r8
 80167aa:	f1bb 0f00 	cmp.w	fp, #0
 80167ae:	f340 80e3 	ble.w	8016978 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 80167b2:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80167b4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80167b6:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80167ba:	689b      	ldr	r3, [r3, #8]
 80167bc:	ea5f 422a 	movs.w	r2, sl, asr #16
 80167c0:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80167c4:	f3ca 3003 	ubfx	r0, sl, #12, #4
 80167c8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80167cc:	f100 8121 	bmi.w	8016a12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80167d0:	f103 39ff 	add.w	r9, r3, #4294967295
 80167d4:	454a      	cmp	r2, r9
 80167d6:	f280 811c 	bge.w	8016a12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80167da:	f1bc 0f00 	cmp.w	ip, #0
 80167de:	f2c0 8118 	blt.w	8016a12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80167e2:	f10e 39ff 	add.w	r9, lr, #4294967295
 80167e6:	45cc      	cmp	ip, r9
 80167e8:	f280 8113 	bge.w	8016a12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80167ec:	b21b      	sxth	r3, r3
 80167ee:	fb0c 2203 	mla	r2, ip, r3, r2
 80167f2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80167f4:	eb04 0902 	add.w	r9, r4, r2
 80167f8:	5ca2      	ldrb	r2, [r4, r2]
 80167fa:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 80167fe:	2800      	cmp	r0, #0
 8016800:	f000 80fe 	beq.w	8016a00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8016804:	f899 2001 	ldrb.w	r2, [r9, #1]
 8016808:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801680c:	9211      	str	r2, [sp, #68]	; 0x44
 801680e:	b151      	cbz	r1, 8016826 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8016810:	eb09 0203 	add.w	r2, r9, r3
 8016814:	f819 3003 	ldrb.w	r3, [r9, r3]
 8016818:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801681c:	930f      	str	r3, [sp, #60]	; 0x3c
 801681e:	7853      	ldrb	r3, [r2, #1]
 8016820:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8016824:	9312      	str	r3, [sp, #72]	; 0x48
 8016826:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016828:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801682a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801682e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8016832:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016836:	ea4c 0c03 	orr.w	ip, ip, r3
 801683a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801683c:	041b      	lsls	r3, r3, #16
 801683e:	fb10 f201 	smulbb	r2, r0, r1
 8016842:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8016846:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801684a:	10d2      	asrs	r2, r2, #3
 801684c:	4323      	orrs	r3, r4
 801684e:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8016852:	4353      	muls	r3, r2
 8016854:	fb09 330c 	mla	r3, r9, ip, r3
 8016858:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801685c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8016860:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8016864:	ea4c 0e0e 	orr.w	lr, ip, lr
 8016868:	f1c1 0c10 	rsb	ip, r1, #16
 801686c:	ebac 0c00 	sub.w	ip, ip, r0
 8016870:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8016874:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8016878:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801687a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801687c:	0418      	lsls	r0, r3, #16
 801687e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8016882:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016886:	4318      	orrs	r0, r3
 8016888:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801688c:	fb02 c200 	mla	r2, r2, r0, ip
 8016890:	0d53      	lsrs	r3, r2, #21
 8016892:	0952      	lsrs	r2, r2, #5
 8016894:	8838      	ldrh	r0, [r7, #0]
 8016896:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801689a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801689e:	431a      	orrs	r2, r3
 80168a0:	b292      	uxth	r2, r2
 80168a2:	1201      	asrs	r1, r0, #8
 80168a4:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 80168a8:	ea4f 2c22 	mov.w	ip, r2, asr #8
 80168ac:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80168b0:	fb11 f104 	smulbb	r1, r1, r4
 80168b4:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 80168b8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80168bc:	00c0      	lsls	r0, r0, #3
 80168be:	fb0c 1c03 	mla	ip, ip, r3, r1
 80168c2:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80168c6:	10d1      	asrs	r1, r2, #3
 80168c8:	b2c0      	uxtb	r0, r0
 80168ca:	00d2      	lsls	r2, r2, #3
 80168cc:	b2d2      	uxtb	r2, r2
 80168ce:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80168d2:	fb1e fe04 	smulbb	lr, lr, r4
 80168d6:	fb10 f004 	smulbb	r0, r0, r4
 80168da:	fa1f fc8c 	uxth.w	ip, ip
 80168de:	fb01 e103 	mla	r1, r1, r3, lr
 80168e2:	fb02 0303 	mla	r3, r2, r3, r0
 80168e6:	b29a      	uxth	r2, r3
 80168e8:	f10c 0301 	add.w	r3, ip, #1
 80168ec:	b289      	uxth	r1, r1
 80168ee:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80168f2:	1c53      	adds	r3, r2, #1
 80168f4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80168f8:	1c4a      	adds	r2, r1, #1
 80168fa:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80168fe:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016902:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8016906:	0949      	lsrs	r1, r1, #5
 8016908:	ea43 030c 	orr.w	r3, r3, ip
 801690c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016910:	430b      	orrs	r3, r1
 8016912:	803b      	strh	r3, [r7, #0]
 8016914:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8016916:	449a      	add	sl, r3
 8016918:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801691a:	3702      	adds	r7, #2
 801691c:	441d      	add	r5, r3
 801691e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8016922:	e742      	b.n	80167aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8016924:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8016926:	449a      	add	sl, r3
 8016928:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801692a:	441d      	add	r5, r3
 801692c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801692e:	3b01      	subs	r3, #1
 8016930:	9309      	str	r3, [sp, #36]	; 0x24
 8016932:	f108 0802 	add.w	r8, r8, #2
 8016936:	e718      	b.n	801676a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8016938:	d023      	beq.n	8016982 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801693a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801693c:	9825      	ldr	r0, [sp, #148]	; 0x94
 801693e:	3b01      	subs	r3, #1
 8016940:	fb00 a003 	mla	r0, r0, r3, sl
 8016944:	1400      	asrs	r0, r0, #16
 8016946:	f53f af2d 	bmi.w	80167a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801694a:	3901      	subs	r1, #1
 801694c:	4288      	cmp	r0, r1
 801694e:	f6bf af29 	bge.w	80167a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8016952:	9926      	ldr	r1, [sp, #152]	; 0x98
 8016954:	fb01 5303 	mla	r3, r1, r3, r5
 8016958:	141b      	asrs	r3, r3, #16
 801695a:	f53f af23 	bmi.w	80167a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801695e:	3a01      	subs	r2, #1
 8016960:	4293      	cmp	r3, r2
 8016962:	f6bf af1f 	bge.w	80167a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8016966:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801696a:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801696e:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8016972:	f1be 0f00 	cmp.w	lr, #0
 8016976:	dc6c      	bgt.n	8016a52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8016978:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801697a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801697e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8016982:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016984:	2b00      	cmp	r3, #0
 8016986:	f340 810e 	ble.w	8016ba6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801698a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801698e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016992:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8016996:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8016998:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801699c:	ee31 1a05 	vadd.f32	s2, s2, s10
 80169a0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80169a4:	eef0 6a62 	vmov.f32	s13, s5
 80169a8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80169ac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80169b0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80169b4:	ee16 aa90 	vmov	sl, s13
 80169b8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80169bc:	eef0 6a43 	vmov.f32	s13, s6
 80169c0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80169c4:	ee12 2a90 	vmov	r2, s5
 80169c8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80169cc:	fb92 f3f3 	sdiv	r3, r2, r3
 80169d0:	ee13 2a10 	vmov	r2, s6
 80169d4:	9325      	str	r3, [sp, #148]	; 0x94
 80169d6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80169d8:	fb92 f3f3 	sdiv	r3, r2, r3
 80169dc:	9326      	str	r3, [sp, #152]	; 0x98
 80169de:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80169e0:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80169e2:	3b01      	subs	r3, #1
 80169e4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80169e8:	930c      	str	r3, [sp, #48]	; 0x30
 80169ea:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80169ec:	bf08      	it	eq
 80169ee:	4613      	moveq	r3, r2
 80169f0:	ee16 5a90 	vmov	r5, s13
 80169f4:	9309      	str	r3, [sp, #36]	; 0x24
 80169f6:	eeb0 3a67 	vmov.f32	s6, s15
 80169fa:	eef0 2a47 	vmov.f32	s5, s14
 80169fe:	e6a6      	b.n	801674e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8016a00:	2900      	cmp	r1, #0
 8016a02:	f43f af10 	beq.w	8016826 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8016a06:	f819 3003 	ldrb.w	r3, [r9, r3]
 8016a0a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8016a0e:	930f      	str	r3, [sp, #60]	; 0x3c
 8016a10:	e709      	b.n	8016826 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8016a12:	f112 0901 	adds.w	r9, r2, #1
 8016a16:	f53f af7d 	bmi.w	8016914 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8016a1a:	454b      	cmp	r3, r9
 8016a1c:	f6ff af7a 	blt.w	8016914 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8016a20:	f11c 0901 	adds.w	r9, ip, #1
 8016a24:	f53f af76 	bmi.w	8016914 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8016a28:	45ce      	cmp	lr, r9
 8016a2a:	f6ff af73 	blt.w	8016914 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8016a2e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016a30:	9202      	str	r2, [sp, #8]
 8016a32:	b21b      	sxth	r3, r3
 8016a34:	fa0f f28e 	sxth.w	r2, lr
 8016a38:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8016a3c:	e9cd c003 	strd	ip, r0, [sp, #12]
 8016a40:	9201      	str	r2, [sp, #4]
 8016a42:	9300      	str	r3, [sp, #0]
 8016a44:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8016a46:	9816      	ldr	r0, [sp, #88]	; 0x58
 8016a48:	4633      	mov	r3, r6
 8016a4a:	4639      	mov	r1, r7
 8016a4c:	f7ff fd8e 	bl	801656c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8016a50:	e760      	b.n	8016914 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8016a52:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016a54:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016a56:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8016a5a:	ea4f 422a 	mov.w	r2, sl, asr #16
 8016a5e:	1429      	asrs	r1, r5, #16
 8016a60:	fb03 2101 	mla	r1, r3, r1, r2
 8016a64:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8016a66:	440a      	add	r2, r1
 8016a68:	5c61      	ldrb	r1, [r4, r1]
 8016a6a:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8016a6e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8016a72:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8016a76:	f1bc 0f00 	cmp.w	ip, #0
 8016a7a:	f000 808c 	beq.w	8016b96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8016a7e:	7857      	ldrb	r7, [r2, #1]
 8016a80:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8016a84:	9413      	str	r4, [sp, #76]	; 0x4c
 8016a86:	b140      	cbz	r0, 8016a9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8016a88:	18d7      	adds	r7, r2, r3
 8016a8a:	5cd3      	ldrb	r3, [r2, r3]
 8016a8c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8016a90:	9310      	str	r3, [sp, #64]	; 0x40
 8016a92:	787b      	ldrb	r3, [r7, #1]
 8016a94:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8016a98:	9314      	str	r3, [sp, #80]	; 0x50
 8016a9a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8016a9c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016a9e:	fb1c f200 	smulbb	r2, ip, r0
 8016aa2:	041f      	lsls	r7, r3, #16
 8016aa4:	10d2      	asrs	r2, r2, #3
 8016aa6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016aaa:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8016aae:	431f      	orrs	r7, r3
 8016ab0:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8016ab4:	9317      	str	r3, [sp, #92]	; 0x5c
 8016ab6:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8016ab8:	041b      	lsls	r3, r3, #16
 8016aba:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8016abe:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8016ac2:	ea43 030b 	orr.w	r3, r3, fp
 8016ac6:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8016ac8:	4353      	muls	r3, r2
 8016aca:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8016ace:	fb04 3707 	mla	r7, r4, r7, r3
 8016ad2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8016ad6:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8016ada:	ea43 0b01 	orr.w	fp, r3, r1
 8016ade:	f1c0 0110 	rsb	r1, r0, #16
 8016ae2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016ae4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8016ae6:	eba1 0c0c 	sub.w	ip, r1, ip
 8016aea:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8016aee:	fb0c 770b 	mla	r7, ip, fp, r7
 8016af2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8016af6:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8016afa:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8016afe:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8016b02:	ea4c 0c0b 	orr.w	ip, ip, fp
 8016b06:	fb02 770c 	mla	r7, r2, ip, r7
 8016b0a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8016b0c:	0d79      	lsrs	r1, r7, #21
 8016b0e:	097f      	lsrs	r7, r7, #5
 8016b10:	8812      	ldrh	r2, [r2, #0]
 8016b12:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016b16:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8016b1a:	430f      	orrs	r7, r1
 8016b1c:	b2bb      	uxth	r3, r7
 8016b1e:	1211      	asrs	r1, r2, #8
 8016b20:	1218      	asrs	r0, r3, #8
 8016b22:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8016b26:	fb11 f104 	smulbb	r1, r1, r4
 8016b2a:	10d7      	asrs	r7, r2, #3
 8016b2c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016b30:	00d2      	lsls	r2, r2, #3
 8016b32:	fb00 1009 	mla	r0, r0, r9, r1
 8016b36:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016b3a:	10d9      	asrs	r1, r3, #3
 8016b3c:	b2d2      	uxtb	r2, r2
 8016b3e:	00db      	lsls	r3, r3, #3
 8016b40:	fb17 f704 	smulbb	r7, r7, r4
 8016b44:	fb12 f204 	smulbb	r2, r2, r4
 8016b48:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8016b4c:	b2db      	uxtb	r3, r3
 8016b4e:	b280      	uxth	r0, r0
 8016b50:	fb01 7109 	mla	r1, r1, r9, r7
 8016b54:	fb03 2309 	mla	r3, r3, r9, r2
 8016b58:	b29b      	uxth	r3, r3
 8016b5a:	b289      	uxth	r1, r1
 8016b5c:	1c42      	adds	r2, r0, #1
 8016b5e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8016b62:	1c4f      	adds	r7, r1, #1
 8016b64:	1c5a      	adds	r2, r3, #1
 8016b66:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8016b6a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8016b6e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8016b72:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016b76:	0949      	lsrs	r1, r1, #5
 8016b78:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016b7a:	4310      	orrs	r0, r2
 8016b7c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016b80:	4308      	orrs	r0, r1
 8016b82:	f823 0b02 	strh.w	r0, [r3], #2
 8016b86:	930e      	str	r3, [sp, #56]	; 0x38
 8016b88:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8016b8a:	449a      	add	sl, r3
 8016b8c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016b8e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8016b92:	441d      	add	r5, r3
 8016b94:	e6ed      	b.n	8016972 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 8016b96:	2800      	cmp	r0, #0
 8016b98:	f43f af7f 	beq.w	8016a9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8016b9c:	5cd3      	ldrb	r3, [r2, r3]
 8016b9e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8016ba2:	9310      	str	r3, [sp, #64]	; 0x40
 8016ba4:	e779      	b.n	8016a9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8016ba6:	b019      	add	sp, #100	; 0x64
 8016ba8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016bac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8016bac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016bb0:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 8016bb4:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8016bb8:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 8016bbc:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8016bc0:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8016bc4:	8808      	ldrh	r0, [r1, #0]
 8016bc6:	fb08 470e 	mla	r7, r8, lr, r4
 8016bca:	f1b8 0f00 	cmp.w	r8, #0
 8016bce:	eb02 0907 	add.w	r9, r2, r7
 8016bd2:	db67      	blt.n	8016ca4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8016bd4:	45c2      	cmp	sl, r8
 8016bd6:	dd65      	ble.n	8016ca4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8016bd8:	2c00      	cmp	r4, #0
 8016bda:	db61      	blt.n	8016ca0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8016bdc:	45a6      	cmp	lr, r4
 8016bde:	dd5f      	ble.n	8016ca0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8016be0:	5dd2      	ldrb	r2, [r2, r7]
 8016be2:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8016be6:	1c62      	adds	r2, r4, #1
 8016be8:	d45f      	bmi.n	8016caa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8016bea:	4596      	cmp	lr, r2
 8016bec:	dd5d      	ble.n	8016caa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8016bee:	2d00      	cmp	r5, #0
 8016bf0:	d05b      	beq.n	8016caa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8016bf2:	f899 2001 	ldrb.w	r2, [r9, #1]
 8016bf6:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8016bfa:	f118 0801 	adds.w	r8, r8, #1
 8016bfe:	d458      	bmi.n	8016cb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8016c00:	45c2      	cmp	sl, r8
 8016c02:	dd56      	ble.n	8016cb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8016c04:	2e00      	cmp	r6, #0
 8016c06:	d054      	beq.n	8016cb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8016c08:	2c00      	cmp	r4, #0
 8016c0a:	db50      	blt.n	8016cae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8016c0c:	45a6      	cmp	lr, r4
 8016c0e:	dd4e      	ble.n	8016cae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8016c10:	f819 200e 	ldrb.w	r2, [r9, lr]
 8016c14:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8016c18:	3401      	adds	r4, #1
 8016c1a:	d407      	bmi.n	8016c2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8016c1c:	45a6      	cmp	lr, r4
 8016c1e:	dd05      	ble.n	8016c2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8016c20:	b125      	cbz	r5, 8016c2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8016c22:	44ce      	add	lr, r9
 8016c24:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8016c28:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8016c2c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8016c30:	fb15 f406 	smulbb	r4, r5, r6
 8016c34:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8016c38:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8016c3c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8016c40:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8016c44:	ea43 0c0c 	orr.w	ip, r3, ip
 8016c48:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8016c4c:	f1c6 0310 	rsb	r3, r6, #16
 8016c50:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8016c54:	1b5b      	subs	r3, r3, r5
 8016c56:	ea4e 0707 	orr.w	r7, lr, r7
 8016c5a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8016c5e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8016c62:	437d      	muls	r5, r7
 8016c64:	fb03 5c0c 	mla	ip, r3, ip, r5
 8016c68:	0403      	lsls	r3, r0, #16
 8016c6a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8016c6e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8016c72:	4318      	orrs	r0, r3
 8016c74:	0413      	lsls	r3, r2, #16
 8016c76:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8016c7a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016c7e:	4313      	orrs	r3, r2
 8016c80:	fb04 c000 	mla	r0, r4, r0, ip
 8016c84:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8016c88:	fb06 0003 	mla	r0, r6, r3, r0
 8016c8c:	0d43      	lsrs	r3, r0, #21
 8016c8e:	0940      	lsrs	r0, r0, #5
 8016c90:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016c94:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8016c98:	4318      	orrs	r0, r3
 8016c9a:	8008      	strh	r0, [r1, #0]
 8016c9c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016ca0:	4684      	mov	ip, r0
 8016ca2:	e7a0      	b.n	8016be6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8016ca4:	4607      	mov	r7, r0
 8016ca6:	4684      	mov	ip, r0
 8016ca8:	e7a7      	b.n	8016bfa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8016caa:	4607      	mov	r7, r0
 8016cac:	e7a5      	b.n	8016bfa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8016cae:	4602      	mov	r2, r0
 8016cb0:	e7b2      	b.n	8016c18 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8016cb2:	4602      	mov	r2, r0
 8016cb4:	e7ba      	b.n	8016c2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08016cb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016cb6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016cba:	b093      	sub	sp, #76	; 0x4c
 8016cbc:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8016cc0:	920f      	str	r2, [sp, #60]	; 0x3c
 8016cc2:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8016cc4:	9108      	str	r1, [sp, #32]
 8016cc6:	9306      	str	r3, [sp, #24]
 8016cc8:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8016ccc:	9010      	str	r0, [sp, #64]	; 0x40
 8016cce:	6850      	ldr	r0, [r2, #4]
 8016cd0:	6812      	ldr	r2, [r2, #0]
 8016cd2:	fb00 1303 	mla	r3, r0, r3, r1
 8016cd6:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8016cda:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016cdc:	681b      	ldr	r3, [r3, #0]
 8016cde:	9307      	str	r3, [sp, #28]
 8016ce0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016ce2:	685f      	ldr	r7, [r3, #4]
 8016ce4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016ce8:	3704      	adds	r7, #4
 8016cea:	9b08      	ldr	r3, [sp, #32]
 8016cec:	2b00      	cmp	r3, #0
 8016cee:	dc03      	bgt.n	8016cf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8016cf0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8016cf2:	2b00      	cmp	r3, #0
 8016cf4:	f340 81b2 	ble.w	801705c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8016cf8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016cfa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016cfe:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8016d02:	1e48      	subs	r0, r1, #1
 8016d04:	f102 3cff 	add.w	ip, r2, #4294967295
 8016d08:	9b06      	ldr	r3, [sp, #24]
 8016d0a:	2b00      	cmp	r3, #0
 8016d0c:	f340 80a9 	ble.w	8016e62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8016d10:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8016d14:	ea4f 4326 	mov.w	r3, r6, asr #16
 8016d18:	d406      	bmi.n	8016d28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016d1a:	4586      	cmp	lr, r0
 8016d1c:	da04      	bge.n	8016d28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016d1e:	2b00      	cmp	r3, #0
 8016d20:	db02      	blt.n	8016d28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016d22:	4563      	cmp	r3, ip
 8016d24:	f2c0 809e 	blt.w	8016e64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8016d28:	f11e 0e01 	adds.w	lr, lr, #1
 8016d2c:	f100 808f 	bmi.w	8016e4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016d30:	4571      	cmp	r1, lr
 8016d32:	f2c0 808c 	blt.w	8016e4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016d36:	3301      	adds	r3, #1
 8016d38:	f100 8089 	bmi.w	8016e4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016d3c:	429a      	cmp	r2, r3
 8016d3e:	f2c0 8086 	blt.w	8016e4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016d42:	f8dd b018 	ldr.w	fp, [sp, #24]
 8016d46:	46c8      	mov	r8, r9
 8016d48:	f1bb 0f00 	cmp.w	fp, #0
 8016d4c:	f340 80a6 	ble.w	8016e9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8016d50:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8016d52:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016d54:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8016d58:	689b      	ldr	r3, [r3, #8]
 8016d5a:	1422      	asrs	r2, r4, #16
 8016d5c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8016d60:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8016d64:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8016d68:	f100 80e3 	bmi.w	8016f32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8016d6c:	f103 3aff 	add.w	sl, r3, #4294967295
 8016d70:	4552      	cmp	r2, sl
 8016d72:	f280 80de 	bge.w	8016f32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8016d76:	f1bc 0f00 	cmp.w	ip, #0
 8016d7a:	f2c0 80da 	blt.w	8016f32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8016d7e:	f10e 3aff 	add.w	sl, lr, #4294967295
 8016d82:	45d4      	cmp	ip, sl
 8016d84:	f280 80d5 	bge.w	8016f32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8016d88:	b21b      	sxth	r3, r3
 8016d8a:	fb0c 2203 	mla	r2, ip, r3, r2
 8016d8e:	9d07      	ldr	r5, [sp, #28]
 8016d90:	eb05 0a02 	add.w	sl, r5, r2
 8016d94:	5caa      	ldrb	r2, [r5, r2]
 8016d96:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8016d9a:	2800      	cmp	r0, #0
 8016d9c:	f000 80c0 	beq.w	8016f20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8016da0:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8016da4:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8016da8:	920b      	str	r2, [sp, #44]	; 0x2c
 8016daa:	b151      	cbz	r1, 8016dc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8016dac:	eb0a 0203 	add.w	r2, sl, r3
 8016db0:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8016db4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8016db8:	9309      	str	r3, [sp, #36]	; 0x24
 8016dba:	7853      	ldrb	r3, [r2, #1]
 8016dbc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8016dc0:	930c      	str	r3, [sp, #48]	; 0x30
 8016dc2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016dc4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8016dc6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8016dca:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8016dce:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016dd2:	ea4c 0c03 	orr.w	ip, ip, r3
 8016dd6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016dd8:	041b      	lsls	r3, r3, #16
 8016dda:	fb10 f201 	smulbb	r2, r0, r1
 8016dde:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8016de2:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8016de6:	10d2      	asrs	r2, r2, #3
 8016de8:	432b      	orrs	r3, r5
 8016dea:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8016dee:	4353      	muls	r3, r2
 8016df0:	fb0a 330c 	mla	r3, sl, ip, r3
 8016df4:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8016df8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8016dfc:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8016e00:	ea4c 0e0e 	orr.w	lr, ip, lr
 8016e04:	f1c1 0c10 	rsb	ip, r1, #16
 8016e08:	ebac 0c00 	sub.w	ip, ip, r0
 8016e0c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8016e10:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8016e14:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016e16:	0418      	lsls	r0, r3, #16
 8016e18:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8016e1c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016e20:	4318      	orrs	r0, r3
 8016e22:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8016e26:	fb02 c200 	mla	r2, r2, r0, ip
 8016e2a:	0d53      	lsrs	r3, r2, #21
 8016e2c:	0952      	lsrs	r2, r2, #5
 8016e2e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016e32:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016e36:	431a      	orrs	r2, r3
 8016e38:	f8a8 2000 	strh.w	r2, [r8]
 8016e3c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8016e3e:	441c      	add	r4, r3
 8016e40:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8016e42:	f108 0802 	add.w	r8, r8, #2
 8016e46:	441e      	add	r6, r3
 8016e48:	f10b 3bff 	add.w	fp, fp, #4294967295
 8016e4c:	e77c      	b.n	8016d48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016e4e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8016e50:	441c      	add	r4, r3
 8016e52:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8016e54:	441e      	add	r6, r3
 8016e56:	9b06      	ldr	r3, [sp, #24]
 8016e58:	3b01      	subs	r3, #1
 8016e5a:	9306      	str	r3, [sp, #24]
 8016e5c:	f109 0902 	add.w	r9, r9, #2
 8016e60:	e752      	b.n	8016d08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8016e62:	d020      	beq.n	8016ea6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8016e64:	9b06      	ldr	r3, [sp, #24]
 8016e66:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8016e68:	3b01      	subs	r3, #1
 8016e6a:	fb00 4003 	mla	r0, r0, r3, r4
 8016e6e:	1400      	asrs	r0, r0, #16
 8016e70:	f53f af67 	bmi.w	8016d42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8016e74:	3901      	subs	r1, #1
 8016e76:	4288      	cmp	r0, r1
 8016e78:	f6bf af63 	bge.w	8016d42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8016e7c:	9920      	ldr	r1, [sp, #128]	; 0x80
 8016e7e:	fb01 6303 	mla	r3, r1, r3, r6
 8016e82:	141b      	asrs	r3, r3, #16
 8016e84:	f53f af5d 	bmi.w	8016d42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8016e88:	3a01      	subs	r2, #1
 8016e8a:	4293      	cmp	r3, r2
 8016e8c:	f6bf af59 	bge.w	8016d42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8016e90:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8016e94:	46ca      	mov	sl, r9
 8016e96:	f1b8 0f00 	cmp.w	r8, #0
 8016e9a:	dc67      	bgt.n	8016f6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8016e9c:	9b06      	ldr	r3, [sp, #24]
 8016e9e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8016ea2:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8016ea6:	9b08      	ldr	r3, [sp, #32]
 8016ea8:	2b00      	cmp	r3, #0
 8016eaa:	f340 80d7 	ble.w	801705c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8016eae:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016eb2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016eb6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016eba:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8016ebc:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016ec0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016ec4:	eeb0 6a62 	vmov.f32	s12, s5
 8016ec8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016ecc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016ed0:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016ed4:	ee16 4a10 	vmov	r4, s12
 8016ed8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016edc:	eeb0 6a43 	vmov.f32	s12, s6
 8016ee0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016ee4:	ee12 2a90 	vmov	r2, s5
 8016ee8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016eec:	fb92 f3f3 	sdiv	r3, r2, r3
 8016ef0:	ee13 2a10 	vmov	r2, s6
 8016ef4:	931f      	str	r3, [sp, #124]	; 0x7c
 8016ef6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8016ef8:	fb92 f3f3 	sdiv	r3, r2, r3
 8016efc:	9320      	str	r3, [sp, #128]	; 0x80
 8016efe:	9b08      	ldr	r3, [sp, #32]
 8016f00:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016f02:	3b01      	subs	r3, #1
 8016f04:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016f08:	9308      	str	r3, [sp, #32]
 8016f0a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8016f0c:	bf08      	it	eq
 8016f0e:	4613      	moveq	r3, r2
 8016f10:	ee16 6a10 	vmov	r6, s12
 8016f14:	9306      	str	r3, [sp, #24]
 8016f16:	eeb0 3a67 	vmov.f32	s6, s15
 8016f1a:	eef0 2a47 	vmov.f32	s5, s14
 8016f1e:	e6e4      	b.n	8016cea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8016f20:	2900      	cmp	r1, #0
 8016f22:	f43f af4e 	beq.w	8016dc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8016f26:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8016f2a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8016f2e:	9309      	str	r3, [sp, #36]	; 0x24
 8016f30:	e747      	b.n	8016dc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8016f32:	f112 0a01 	adds.w	sl, r2, #1
 8016f36:	d481      	bmi.n	8016e3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016f38:	4553      	cmp	r3, sl
 8016f3a:	f6ff af7f 	blt.w	8016e3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016f3e:	f11c 0a01 	adds.w	sl, ip, #1
 8016f42:	f53f af7b 	bmi.w	8016e3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016f46:	45d6      	cmp	lr, sl
 8016f48:	f6ff af78 	blt.w	8016e3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016f4c:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8016f50:	b21b      	sxth	r3, r3
 8016f52:	fa0f f28e 	sxth.w	r2, lr
 8016f56:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8016f5a:	9201      	str	r2, [sp, #4]
 8016f5c:	9300      	str	r3, [sp, #0]
 8016f5e:	9a07      	ldr	r2, [sp, #28]
 8016f60:	9810      	ldr	r0, [sp, #64]	; 0x40
 8016f62:	463b      	mov	r3, r7
 8016f64:	4641      	mov	r1, r8
 8016f66:	f7ff fe21 	bl	8016bac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8016f6a:	e767      	b.n	8016e3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016f6c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016f6e:	9d07      	ldr	r5, [sp, #28]
 8016f70:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8016f74:	1422      	asrs	r2, r4, #16
 8016f76:	1431      	asrs	r1, r6, #16
 8016f78:	fb03 2101 	mla	r1, r3, r1, r2
 8016f7c:	9a07      	ldr	r2, [sp, #28]
 8016f7e:	440a      	add	r2, r1
 8016f80:	5c69      	ldrb	r1, [r5, r1]
 8016f82:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8016f86:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8016f8a:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8016f8e:	f1be 0f00 	cmp.w	lr, #0
 8016f92:	d05c      	beq.n	801704e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8016f94:	f892 c001 	ldrb.w	ip, [r2, #1]
 8016f98:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8016f9c:	950d      	str	r5, [sp, #52]	; 0x34
 8016f9e:	b150      	cbz	r0, 8016fb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8016fa0:	eb02 0c03 	add.w	ip, r2, r3
 8016fa4:	5cd3      	ldrb	r3, [r2, r3]
 8016fa6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8016faa:	930a      	str	r3, [sp, #40]	; 0x28
 8016fac:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8016fb0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8016fb4:	930e      	str	r3, [sp, #56]	; 0x38
 8016fb6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016fb8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8016fba:	fb1e f200 	smulbb	r2, lr, r0
 8016fbe:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8016fc2:	10d2      	asrs	r2, r2, #3
 8016fc4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016fc8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8016fcc:	ea4c 0c03 	orr.w	ip, ip, r3
 8016fd0:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8016fd4:	9311      	str	r3, [sp, #68]	; 0x44
 8016fd6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016fd8:	041b      	lsls	r3, r3, #16
 8016fda:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8016fde:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8016fe2:	ea43 030b 	orr.w	r3, r3, fp
 8016fe6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8016fe8:	4353      	muls	r3, r2
 8016fea:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8016fee:	fb05 3c0c 	mla	ip, r5, ip, r3
 8016ff2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8016ff6:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8016ffa:	ea43 0b01 	orr.w	fp, r3, r1
 8016ffe:	f1c0 0110 	rsb	r1, r0, #16
 8017002:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017004:	eba1 0e0e 	sub.w	lr, r1, lr
 8017008:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801700c:	fb0e cc0b 	mla	ip, lr, fp, ip
 8017010:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8017014:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8017018:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801701c:	ea4b 0e0e 	orr.w	lr, fp, lr
 8017020:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8017024:	fb02 cc0e 	mla	ip, r2, lr, ip
 8017028:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801702c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8017030:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017034:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8017038:	ea43 0c0c 	orr.w	ip, r3, ip
 801703c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801703e:	f82a cb02 	strh.w	ip, [sl], #2
 8017042:	441c      	add	r4, r3
 8017044:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8017046:	f108 38ff 	add.w	r8, r8, #4294967295
 801704a:	441e      	add	r6, r3
 801704c:	e723      	b.n	8016e96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801704e:	2800      	cmp	r0, #0
 8017050:	d0b1      	beq.n	8016fb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8017052:	5cd3      	ldrb	r3, [r2, r3]
 8017054:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8017058:	930a      	str	r3, [sp, #40]	; 0x28
 801705a:	e7ac      	b.n	8016fb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801705c:	b013      	add	sp, #76	; 0x4c
 801705e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017062 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8017062:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017066:	880d      	ldrh	r5, [r1, #0]
 8017068:	b087      	sub	sp, #28
 801706a:	10ef      	asrs	r7, r5, #3
 801706c:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8017070:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017074:	00ed      	lsls	r5, r5, #3
 8017076:	9701      	str	r7, [sp, #4]
 8017078:	b2ed      	uxtb	r5, r5
 801707a:	9502      	str	r5, [sp, #8]
 801707c:	9d01      	ldr	r5, [sp, #4]
 801707e:	9103      	str	r1, [sp, #12]
 8017080:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8017084:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 8017088:	9902      	ldr	r1, [sp, #8]
 801708a:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801708e:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 8017092:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 8017096:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 801709a:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 801709e:	022d      	lsls	r5, r5, #8
 80170a0:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 80170a4:	fb06 0709 	mla	r7, r6, r9, r0
 80170a8:	430d      	orrs	r5, r1
 80170aa:	2e00      	cmp	r6, #0
 80170ac:	eb02 0c07 	add.w	ip, r2, r7
 80170b0:	9505      	str	r5, [sp, #20]
 80170b2:	f2c0 80b6 	blt.w	8017222 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 80170b6:	45b3      	cmp	fp, r6
 80170b8:	f340 80b3 	ble.w	8017222 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 80170bc:	2800      	cmp	r0, #0
 80170be:	f2c0 80ae 	blt.w	801721e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 80170c2:	4581      	cmp	r9, r0
 80170c4:	f340 80ab 	ble.w	801721e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 80170c8:	5dd7      	ldrb	r7, [r2, r7]
 80170ca:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80170ce:	441f      	add	r7, r3
 80170d0:	1c42      	adds	r2, r0, #1
 80170d2:	f100 80a9 	bmi.w	8017228 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80170d6:	4591      	cmp	r9, r2
 80170d8:	f340 80a6 	ble.w	8017228 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80170dc:	2c00      	cmp	r4, #0
 80170de:	f000 80a3 	beq.w	8017228 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80170e2:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80170e6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80170ea:	441d      	add	r5, r3
 80170ec:	3601      	adds	r6, #1
 80170ee:	f100 809f 	bmi.w	8017230 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80170f2:	45b3      	cmp	fp, r6
 80170f4:	f340 809c 	ble.w	8017230 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80170f8:	f1be 0f00 	cmp.w	lr, #0
 80170fc:	f000 8098 	beq.w	8017230 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8017100:	2800      	cmp	r0, #0
 8017102:	f2c0 8093 	blt.w	801722c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8017106:	4581      	cmp	r9, r0
 8017108:	f340 8090 	ble.w	801722c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801710c:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8017110:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8017114:	441e      	add	r6, r3
 8017116:	3001      	adds	r0, #1
 8017118:	f100 808d 	bmi.w	8017236 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801711c:	4581      	cmp	r9, r0
 801711e:	f340 808a 	ble.w	8017236 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8017122:	2c00      	cmp	r4, #0
 8017124:	f000 8087 	beq.w	8017236 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8017128:	44e1      	add	r9, ip
 801712a:	f899 2001 	ldrb.w	r2, [r9, #1]
 801712e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017132:	4413      	add	r3, r2
 8017134:	b2a4      	uxth	r4, r4
 8017136:	fa1f fe8e 	uxth.w	lr, lr
 801713a:	fb04 fb0e 	mul.w	fp, r4, lr
 801713e:	0124      	lsls	r4, r4, #4
 8017140:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8017144:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 8017148:	eba4 040b 	sub.w	r4, r4, fp
 801714c:	fa1f f08e 	uxth.w	r0, lr
 8017150:	b2a2      	uxth	r2, r4
 8017152:	78ac      	ldrb	r4, [r5, #2]
 8017154:	f897 c002 	ldrb.w	ip, [r7, #2]
 8017158:	9901      	ldr	r1, [sp, #4]
 801715a:	eba9 0900 	sub.w	r9, r9, r0
 801715e:	fa1f f989 	uxth.w	r9, r9
 8017162:	4354      	muls	r4, r2
 8017164:	fb09 440c 	mla	r4, r9, ip, r4
 8017168:	f896 c002 	ldrb.w	ip, [r6, #2]
 801716c:	fb00 440c 	mla	r4, r0, ip, r4
 8017170:	f893 c002 	ldrb.w	ip, [r3, #2]
 8017174:	fa1f fe88 	uxth.w	lr, r8
 8017178:	ea6f 0808 	mvn.w	r8, r8
 801717c:	fa5f f888 	uxtb.w	r8, r8
 8017180:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8017184:	fb1a fa08 	smulbb	sl, sl, r8
 8017188:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801718c:	fb0c ac0e 	mla	ip, ip, lr, sl
 8017190:	f895 a001 	ldrb.w	sl, [r5, #1]
 8017194:	787c      	ldrb	r4, [r7, #1]
 8017196:	782d      	ldrb	r5, [r5, #0]
 8017198:	783f      	ldrb	r7, [r7, #0]
 801719a:	fb02 fa0a 	mul.w	sl, r2, sl
 801719e:	fb09 aa04 	mla	sl, r9, r4, sl
 80171a2:	7874      	ldrb	r4, [r6, #1]
 80171a4:	436a      	muls	r2, r5
 80171a6:	7835      	ldrb	r5, [r6, #0]
 80171a8:	fb00 aa04 	mla	sl, r0, r4, sl
 80171ac:	fb09 2207 	mla	r2, r9, r7, r2
 80171b0:	785c      	ldrb	r4, [r3, #1]
 80171b2:	781b      	ldrb	r3, [r3, #0]
 80171b4:	fb00 2005 	mla	r0, r0, r5, r2
 80171b8:	fb0b a404 	mla	r4, fp, r4, sl
 80171bc:	fb0b 0b03 	mla	fp, fp, r3, r0
 80171c0:	9b02      	ldr	r3, [sp, #8]
 80171c2:	fb11 fa08 	smulbb	sl, r1, r8
 80171c6:	fa1f fc8c 	uxth.w	ip, ip
 80171ca:	fb13 f808 	smulbb	r8, r3, r8
 80171ce:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 80171d2:	f3c4 2407 	ubfx	r4, r4, #8, #8
 80171d6:	fb04 a40e 	mla	r4, r4, lr, sl
 80171da:	f10c 0301 	add.w	r3, ip, #1
 80171de:	fb0b 8e0e 	mla	lr, fp, lr, r8
 80171e2:	fa1f fe8e 	uxth.w	lr, lr
 80171e6:	b2a4      	uxth	r4, r4
 80171e8:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80171ec:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 80171f0:	f104 0a01 	add.w	sl, r4, #1
 80171f4:	f10e 0c01 	add.w	ip, lr, #1
 80171f8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80171fc:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8017200:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8017204:	0964      	lsrs	r4, r4, #5
 8017206:	ea4c 0c03 	orr.w	ip, ip, r3
 801720a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801720e:	9b03      	ldr	r3, [sp, #12]
 8017210:	ea4c 0c04 	orr.w	ip, ip, r4
 8017214:	f8a3 c000 	strh.w	ip, [r3]
 8017218:	b007      	add	sp, #28
 801721a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801721e:	af05      	add	r7, sp, #20
 8017220:	e756      	b.n	80170d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 8017222:	ad05      	add	r5, sp, #20
 8017224:	462f      	mov	r7, r5
 8017226:	e761      	b.n	80170ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8017228:	ad05      	add	r5, sp, #20
 801722a:	e75f      	b.n	80170ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801722c:	ae05      	add	r6, sp, #20
 801722e:	e772      	b.n	8017116 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8017230:	ab05      	add	r3, sp, #20
 8017232:	461e      	mov	r6, r3
 8017234:	e77e      	b.n	8017134 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8017236:	ab05      	add	r3, sp, #20
 8017238:	e77c      	b.n	8017134 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801723a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801723a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801723e:	b095      	sub	sp, #84	; 0x54
 8017240:	9212      	str	r2, [sp, #72]	; 0x48
 8017242:	9309      	str	r3, [sp, #36]	; 0x24
 8017244:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8017246:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 801724a:	930f      	str	r3, [sp, #60]	; 0x3c
 801724c:	910e      	str	r1, [sp, #56]	; 0x38
 801724e:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 8017252:	9013      	str	r0, [sp, #76]	; 0x4c
 8017254:	6850      	ldr	r0, [r2, #4]
 8017256:	6812      	ldr	r2, [r2, #0]
 8017258:	fb00 1303 	mla	r3, r0, r3, r1
 801725c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017260:	930a      	str	r3, [sp, #40]	; 0x28
 8017262:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017264:	681b      	ldr	r3, [r3, #0]
 8017266:	930d      	str	r3, [sp, #52]	; 0x34
 8017268:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801726a:	685c      	ldr	r4, [r3, #4]
 801726c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801726e:	43db      	mvns	r3, r3
 8017270:	b2db      	uxtb	r3, r3
 8017272:	3404      	adds	r4, #4
 8017274:	930b      	str	r3, [sp, #44]	; 0x2c
 8017276:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017278:	2b00      	cmp	r3, #0
 801727a:	dc03      	bgt.n	8017284 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801727c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801727e:	2b00      	cmp	r3, #0
 8017280:	f340 8255 	ble.w	801772e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8017284:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017286:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801728a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801728e:	1e48      	subs	r0, r1, #1
 8017290:	1e55      	subs	r5, r2, #1
 8017292:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017294:	2b00      	cmp	r3, #0
 8017296:	f340 80f9 	ble.w	801748c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801729a:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801729c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801729e:	1436      	asrs	r6, r6, #16
 80172a0:	ea4f 4323 	mov.w	r3, r3, asr #16
 80172a4:	d406      	bmi.n	80172b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80172a6:	4286      	cmp	r6, r0
 80172a8:	da04      	bge.n	80172b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80172aa:	2b00      	cmp	r3, #0
 80172ac:	db02      	blt.n	80172b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80172ae:	42ab      	cmp	r3, r5
 80172b0:	f2c0 80ed 	blt.w	801748e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 80172b4:	3601      	adds	r6, #1
 80172b6:	f100 80da 	bmi.w	801746e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80172ba:	42b1      	cmp	r1, r6
 80172bc:	f2c0 80d7 	blt.w	801746e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80172c0:	3301      	adds	r3, #1
 80172c2:	f100 80d4 	bmi.w	801746e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80172c6:	429a      	cmp	r2, r3
 80172c8:	f2c0 80d1 	blt.w	801746e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80172cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80172ce:	9311      	str	r3, [sp, #68]	; 0x44
 80172d0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80172d2:	930c      	str	r3, [sp, #48]	; 0x30
 80172d4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80172d6:	2b00      	cmp	r3, #0
 80172d8:	f340 80fa 	ble.w	80174d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 80172dc:	9826      	ldr	r0, [sp, #152]	; 0x98
 80172de:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80172e0:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80172e2:	68c6      	ldr	r6, [r0, #12]
 80172e4:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80172e6:	141d      	asrs	r5, r3, #16
 80172e8:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80172ec:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80172ee:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80172f0:	1400      	asrs	r0, r0, #16
 80172f2:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80172f6:	6892      	ldr	r2, [r2, #8]
 80172f8:	f100 813e 	bmi.w	8017578 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80172fc:	1e57      	subs	r7, r2, #1
 80172fe:	42b8      	cmp	r0, r7
 8017300:	f280 813a 	bge.w	8017578 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8017304:	2d00      	cmp	r5, #0
 8017306:	f2c0 8137 	blt.w	8017578 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801730a:	1e77      	subs	r7, r6, #1
 801730c:	42bd      	cmp	r5, r7
 801730e:	f280 8133 	bge.w	8017578 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8017312:	b212      	sxth	r2, r2
 8017314:	fb05 0002 	mla	r0, r5, r2, r0
 8017318:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801731a:	f815 a000 	ldrb.w	sl, [r5, r0]
 801731e:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8017322:	182e      	adds	r6, r5, r0
 8017324:	eb04 050a 	add.w	r5, r4, sl
 8017328:	2b00      	cmp	r3, #0
 801732a:	f000 8117 	beq.w	801755c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801732e:	f896 c001 	ldrb.w	ip, [r6, #1]
 8017332:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8017336:	44a4      	add	ip, r4
 8017338:	2900      	cmp	r1, #0
 801733a:	f000 8117 	beq.w	801756c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801733e:	18b0      	adds	r0, r6, r2
 8017340:	5cb2      	ldrb	r2, [r6, r2]
 8017342:	7840      	ldrb	r0, [r0, #1]
 8017344:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017348:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801734c:	4422      	add	r2, r4
 801734e:	4420      	add	r0, r4
 8017350:	b29b      	uxth	r3, r3
 8017352:	b289      	uxth	r1, r1
 8017354:	fb03 f901 	mul.w	r9, r3, r1
 8017358:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801735c:	011b      	lsls	r3, r3, #4
 801735e:	b289      	uxth	r1, r1
 8017360:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8017364:	f895 b002 	ldrb.w	fp, [r5, #2]
 8017368:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801736a:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801736e:	f8b6 e000 	ldrh.w	lr, [r6]
 8017372:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8017376:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801737a:	eba3 0309 	sub.w	r3, r3, r9
 801737e:	b29b      	uxth	r3, r3
 8017380:	eba8 0801 	sub.w	r8, r8, r1
 8017384:	fa1f f888 	uxth.w	r8, r8
 8017388:	435f      	muls	r7, r3
 801738a:	fb08 770b 	mla	r7, r8, fp, r7
 801738e:	f892 b002 	ldrb.w	fp, [r2, #2]
 8017392:	9310      	str	r3, [sp, #64]	; 0x40
 8017394:	fb01 770b 	mla	r7, r1, fp, r7
 8017398:	f890 b002 	ldrb.w	fp, [r0, #2]
 801739c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801739e:	fb09 770b 	mla	r7, r9, fp, r7
 80173a2:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 80173a6:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80173aa:	fb1b fb03 	smulbb	fp, fp, r3
 80173ae:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80173b2:	fb07 b706 	mla	r7, r7, r6, fp
 80173b6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80173b8:	f895 b001 	ldrb.w	fp, [r5, #1]
 80173bc:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80173c0:	f89c c000 	ldrb.w	ip, [ip]
 80173c4:	435d      	muls	r5, r3
 80173c6:	fb08 550b 	mla	r5, r8, fp, r5
 80173ca:	f892 b001 	ldrb.w	fp, [r2, #1]
 80173ce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80173d0:	fb01 550b 	mla	r5, r1, fp, r5
 80173d4:	f890 b001 	ldrb.w	fp, [r0, #1]
 80173d8:	fb09 550b 	mla	r5, r9, fp, r5
 80173dc:	ea4f 0bee 	mov.w	fp, lr, asr #3
 80173e0:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80173e4:	fb1b fb03 	smulbb	fp, fp, r3
 80173e8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80173ea:	fb03 f30c 	mul.w	r3, r3, ip
 80173ee:	f892 c000 	ldrb.w	ip, [r2]
 80173f2:	fb08 330a 	mla	r3, r8, sl, r3
 80173f6:	fb01 330c 	mla	r3, r1, ip, r3
 80173fa:	f890 c000 	ldrb.w	ip, [r0]
 80173fe:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8017402:	fb09 3c0c 	mla	ip, r9, ip, r3
 8017406:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017408:	fa5f fe8e 	uxtb.w	lr, lr
 801740c:	b2bf      	uxth	r7, r7
 801740e:	fb1e fe03 	smulbb	lr, lr, r3
 8017412:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8017416:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801741a:	fb05 b506 	mla	r5, r5, r6, fp
 801741e:	1c7b      	adds	r3, r7, #1
 8017420:	fb0c e606 	mla	r6, ip, r6, lr
 8017424:	b2ad      	uxth	r5, r5
 8017426:	b2b6      	uxth	r6, r6
 8017428:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801742c:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 8017430:	f105 0b01 	add.w	fp, r5, #1
 8017434:	1c77      	adds	r7, r6, #1
 8017436:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801743a:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801743e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8017442:	096d      	lsrs	r5, r5, #5
 8017444:	431f      	orrs	r7, r3
 8017446:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801744a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801744c:	433d      	orrs	r5, r7
 801744e:	801d      	strh	r5, [r3, #0]
 8017450:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017452:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8017454:	3302      	adds	r3, #2
 8017456:	930c      	str	r3, [sp, #48]	; 0x30
 8017458:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801745a:	4413      	add	r3, r2
 801745c:	931f      	str	r3, [sp, #124]	; 0x7c
 801745e:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8017460:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8017462:	4413      	add	r3, r2
 8017464:	9320      	str	r3, [sp, #128]	; 0x80
 8017466:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017468:	3b01      	subs	r3, #1
 801746a:	9311      	str	r3, [sp, #68]	; 0x44
 801746c:	e732      	b.n	80172d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801746e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8017470:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8017472:	4433      	add	r3, r6
 8017474:	931f      	str	r3, [sp, #124]	; 0x7c
 8017476:	9e22      	ldr	r6, [sp, #136]	; 0x88
 8017478:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801747a:	4433      	add	r3, r6
 801747c:	9320      	str	r3, [sp, #128]	; 0x80
 801747e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017480:	3b01      	subs	r3, #1
 8017482:	9309      	str	r3, [sp, #36]	; 0x24
 8017484:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017486:	3302      	adds	r3, #2
 8017488:	930a      	str	r3, [sp, #40]	; 0x28
 801748a:	e702      	b.n	8017292 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801748c:	d027      	beq.n	80174de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801748e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017490:	9821      	ldr	r0, [sp, #132]	; 0x84
 8017492:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8017494:	3b01      	subs	r3, #1
 8017496:	fb00 5003 	mla	r0, r0, r3, r5
 801749a:	1400      	asrs	r0, r0, #16
 801749c:	f53f af16 	bmi.w	80172cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80174a0:	3901      	subs	r1, #1
 80174a2:	4288      	cmp	r0, r1
 80174a4:	f6bf af12 	bge.w	80172cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80174a8:	9922      	ldr	r1, [sp, #136]	; 0x88
 80174aa:	9820      	ldr	r0, [sp, #128]	; 0x80
 80174ac:	fb01 0303 	mla	r3, r1, r3, r0
 80174b0:	141b      	asrs	r3, r3, #16
 80174b2:	f53f af0b 	bmi.w	80172cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80174b6:	3a01      	subs	r2, #1
 80174b8:	4293      	cmp	r3, r2
 80174ba:	f6bf af07 	bge.w	80172cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80174be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80174c0:	9311      	str	r3, [sp, #68]	; 0x44
 80174c2:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 80174c6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80174c8:	930c      	str	r3, [sp, #48]	; 0x30
 80174ca:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80174cc:	2b00      	cmp	r3, #0
 80174ce:	dc70      	bgt.n	80175b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80174d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80174d2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80174d4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80174d8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80174dc:	930a      	str	r3, [sp, #40]	; 0x28
 80174de:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80174e0:	2b00      	cmp	r3, #0
 80174e2:	f340 8124 	ble.w	801772e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 80174e6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80174ea:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80174ee:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80174f2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80174f4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80174f8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80174fc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017500:	eef0 6a62 	vmov.f32	s13, s5
 8017504:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017508:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801750c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017510:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8017514:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017518:	eef0 6a43 	vmov.f32	s13, s6
 801751c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017520:	ee12 2a90 	vmov	r2, s5
 8017524:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017528:	fb92 f3f3 	sdiv	r3, r2, r3
 801752c:	ee13 2a10 	vmov	r2, s6
 8017530:	9321      	str	r3, [sp, #132]	; 0x84
 8017532:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8017534:	fb92 f3f3 	sdiv	r3, r2, r3
 8017538:	9322      	str	r3, [sp, #136]	; 0x88
 801753a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801753c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801753e:	3b01      	subs	r3, #1
 8017540:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017544:	930e      	str	r3, [sp, #56]	; 0x38
 8017546:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8017548:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801754c:	bf08      	it	eq
 801754e:	4613      	moveq	r3, r2
 8017550:	9309      	str	r3, [sp, #36]	; 0x24
 8017552:	eeb0 3a67 	vmov.f32	s6, s15
 8017556:	eef0 2a47 	vmov.f32	s5, s14
 801755a:	e68c      	b.n	8017276 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801755c:	b149      	cbz	r1, 8017572 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801755e:	5cb2      	ldrb	r2, [r6, r2]
 8017560:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017564:	4422      	add	r2, r4
 8017566:	4628      	mov	r0, r5
 8017568:	46ac      	mov	ip, r5
 801756a:	e6f1      	b.n	8017350 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801756c:	4628      	mov	r0, r5
 801756e:	462a      	mov	r2, r5
 8017570:	e6ee      	b.n	8017350 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8017572:	4628      	mov	r0, r5
 8017574:	462a      	mov	r2, r5
 8017576:	e7f7      	b.n	8017568 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8017578:	1c47      	adds	r7, r0, #1
 801757a:	f53f af69 	bmi.w	8017450 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801757e:	42ba      	cmp	r2, r7
 8017580:	f6ff af66 	blt.w	8017450 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8017584:	1c6f      	adds	r7, r5, #1
 8017586:	f53f af63 	bmi.w	8017450 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801758a:	42be      	cmp	r6, r7
 801758c:	f6ff af60 	blt.w	8017450 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8017590:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8017592:	9002      	str	r0, [sp, #8]
 8017594:	b236      	sxth	r6, r6
 8017596:	b212      	sxth	r2, r2
 8017598:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801759c:	e9cd 5303 	strd	r5, r3, [sp, #12]
 80175a0:	9200      	str	r2, [sp, #0]
 80175a2:	9601      	str	r6, [sp, #4]
 80175a4:	4623      	mov	r3, r4
 80175a6:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 80175aa:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80175ac:	f7ff fd59 	bl	8017062 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 80175b0:	e74e      	b.n	8017450 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80175b2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80175b4:	9820      	ldr	r0, [sp, #128]	; 0x80
 80175b6:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 80175b8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80175ba:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80175be:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80175c0:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80175c4:	142d      	asrs	r5, r5, #16
 80175c6:	1400      	asrs	r0, r0, #16
 80175c8:	fb02 5000 	mla	r0, r2, r0, r5
 80175cc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80175ce:	f815 9000 	ldrb.w	r9, [r5, r0]
 80175d2:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80175d6:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 80175da:	182e      	adds	r6, r5, r0
 80175dc:	eb04 0509 	add.w	r5, r4, r9
 80175e0:	2b00      	cmp	r3, #0
 80175e2:	f000 8096 	beq.w	8017712 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 80175e6:	7877      	ldrb	r7, [r6, #1]
 80175e8:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80175ec:	4427      	add	r7, r4
 80175ee:	2900      	cmp	r1, #0
 80175f0:	f000 8097 	beq.w	8017722 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 80175f4:	18b0      	adds	r0, r6, r2
 80175f6:	5cb2      	ldrb	r2, [r6, r2]
 80175f8:	7840      	ldrb	r0, [r0, #1]
 80175fa:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80175fe:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8017602:	4422      	add	r2, r4
 8017604:	4420      	add	r0, r4
 8017606:	b29b      	uxth	r3, r3
 8017608:	b289      	uxth	r1, r1
 801760a:	fb03 f801 	mul.w	r8, r3, r1
 801760e:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8017610:	f895 b002 	ldrb.w	fp, [r5, #2]
 8017614:	f8b6 c000 	ldrh.w	ip, [r6]
 8017618:	78be      	ldrb	r6, [r7, #2]
 801761a:	f814 9009 	ldrb.w	r9, [r4, r9]
 801761e:	011b      	lsls	r3, r3, #4
 8017620:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8017624:	b289      	uxth	r1, r1
 8017626:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801762a:	eba3 0308 	sub.w	r3, r3, r8
 801762e:	b29b      	uxth	r3, r3
 8017630:	ebae 0e01 	sub.w	lr, lr, r1
 8017634:	fa1f fe8e 	uxth.w	lr, lr
 8017638:	435e      	muls	r6, r3
 801763a:	fb0e 660b 	mla	r6, lr, fp, r6
 801763e:	f892 b002 	ldrb.w	fp, [r2, #2]
 8017642:	9310      	str	r3, [sp, #64]	; 0x40
 8017644:	fb01 660b 	mla	r6, r1, fp, r6
 8017648:	f890 b002 	ldrb.w	fp, [r0, #2]
 801764c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801764e:	fb08 660b 	mla	r6, r8, fp, r6
 8017652:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8017656:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801765a:	fb1b fb03 	smulbb	fp, fp, r3
 801765e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8017662:	fb06 b60a 	mla	r6, r6, sl, fp
 8017666:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017668:	f895 b001 	ldrb.w	fp, [r5, #1]
 801766c:	787d      	ldrb	r5, [r7, #1]
 801766e:	783f      	ldrb	r7, [r7, #0]
 8017670:	435d      	muls	r5, r3
 8017672:	fb0e 550b 	mla	r5, lr, fp, r5
 8017676:	f892 b001 	ldrb.w	fp, [r2, #1]
 801767a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801767c:	fb01 550b 	mla	r5, r1, fp, r5
 8017680:	f890 b001 	ldrb.w	fp, [r0, #1]
 8017684:	fb08 550b 	mla	r5, r8, fp, r5
 8017688:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801768c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8017690:	fb1b fb03 	smulbb	fp, fp, r3
 8017694:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017696:	437b      	muls	r3, r7
 8017698:	7817      	ldrb	r7, [r2, #0]
 801769a:	fb0e 3309 	mla	r3, lr, r9, r3
 801769e:	fb01 3307 	mla	r3, r1, r7, r3
 80176a2:	7807      	ldrb	r7, [r0, #0]
 80176a4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80176a8:	fb08 3707 	mla	r7, r8, r7, r3
 80176ac:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80176ae:	fa5f fc8c 	uxtb.w	ip, ip
 80176b2:	fb1c fc03 	smulbb	ip, ip, r3
 80176b6:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80176ba:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80176be:	fb05 b50a 	mla	r5, r5, sl, fp
 80176c2:	fb07 c70a 	mla	r7, r7, sl, ip
 80176c6:	b2b6      	uxth	r6, r6
 80176c8:	b2ad      	uxth	r5, r5
 80176ca:	b2bf      	uxth	r7, r7
 80176cc:	1c73      	adds	r3, r6, #1
 80176ce:	1c7a      	adds	r2, r7, #1
 80176d0:	f105 0b01 	add.w	fp, r5, #1
 80176d4:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80176d8:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80176dc:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80176e0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80176e4:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80176e8:	096d      	lsrs	r5, r5, #5
 80176ea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80176ec:	4316      	orrs	r6, r2
 80176ee:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80176f2:	432e      	orrs	r6, r5
 80176f4:	f823 6b02 	strh.w	r6, [r3], #2
 80176f8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80176fa:	930c      	str	r3, [sp, #48]	; 0x30
 80176fc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80176fe:	4413      	add	r3, r2
 8017700:	931f      	str	r3, [sp, #124]	; 0x7c
 8017702:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8017704:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8017706:	4413      	add	r3, r2
 8017708:	9320      	str	r3, [sp, #128]	; 0x80
 801770a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801770c:	3b01      	subs	r3, #1
 801770e:	9311      	str	r3, [sp, #68]	; 0x44
 8017710:	e6db      	b.n	80174ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8017712:	b149      	cbz	r1, 8017728 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8017714:	5cb2      	ldrb	r2, [r6, r2]
 8017716:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801771a:	4422      	add	r2, r4
 801771c:	4628      	mov	r0, r5
 801771e:	462f      	mov	r7, r5
 8017720:	e771      	b.n	8017606 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8017722:	4628      	mov	r0, r5
 8017724:	462a      	mov	r2, r5
 8017726:	e76e      	b.n	8017606 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8017728:	4628      	mov	r0, r5
 801772a:	462a      	mov	r2, r5
 801772c:	e7f7      	b.n	801771e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801772e:	b015      	add	sp, #84	; 0x54
 8017730:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017734 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8017734:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017738:	880f      	ldrh	r7, [r1, #0]
 801773a:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801773e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8017742:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 8017746:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801774a:	023c      	lsls	r4, r7, #8
 801774c:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 8017750:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 8017754:	017c      	lsls	r4, r7, #5
 8017756:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801775a:	00ff      	lsls	r7, r7, #3
 801775c:	ea4b 0404 	orr.w	r4, fp, r4
 8017760:	b2ff      	uxtb	r7, r7
 8017762:	fb05 ca0e 	mla	sl, r5, lr, ip
 8017766:	4327      	orrs	r7, r4
 8017768:	2d00      	cmp	r5, #0
 801776a:	eb02 080a 	add.w	r8, r2, sl
 801776e:	9701      	str	r7, [sp, #4]
 8017770:	db7e      	blt.n	8017870 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8017772:	45a9      	cmp	r9, r5
 8017774:	dd7c      	ble.n	8017870 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8017776:	f1bc 0f00 	cmp.w	ip, #0
 801777a:	db77      	blt.n	801786c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801777c:	45e6      	cmp	lr, ip
 801777e:	dd75      	ble.n	801786c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8017780:	f812 700a 	ldrb.w	r7, [r2, sl]
 8017784:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8017788:	441f      	add	r7, r3
 801778a:	f11c 0201 	adds.w	r2, ip, #1
 801778e:	d472      	bmi.n	8017876 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8017790:	4596      	cmp	lr, r2
 8017792:	dd70      	ble.n	8017876 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8017794:	2800      	cmp	r0, #0
 8017796:	d06e      	beq.n	8017876 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8017798:	f898 4001 	ldrb.w	r4, [r8, #1]
 801779c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80177a0:	441c      	add	r4, r3
 80177a2:	3501      	adds	r5, #1
 80177a4:	d46b      	bmi.n	801787e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80177a6:	45a9      	cmp	r9, r5
 80177a8:	dd69      	ble.n	801787e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80177aa:	2e00      	cmp	r6, #0
 80177ac:	d067      	beq.n	801787e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80177ae:	f1bc 0f00 	cmp.w	ip, #0
 80177b2:	db62      	blt.n	801787a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 80177b4:	45e6      	cmp	lr, ip
 80177b6:	dd60      	ble.n	801787a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 80177b8:	f818 500e 	ldrb.w	r5, [r8, lr]
 80177bc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80177c0:	441d      	add	r5, r3
 80177c2:	f11c 0201 	adds.w	r2, ip, #1
 80177c6:	d45d      	bmi.n	8017884 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 80177c8:	4596      	cmp	lr, r2
 80177ca:	dd5b      	ble.n	8017884 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 80177cc:	2800      	cmp	r0, #0
 80177ce:	d059      	beq.n	8017884 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 80177d0:	44c6      	add	lr, r8
 80177d2:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80177d6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80177da:	4413      	add	r3, r2
 80177dc:	b280      	uxth	r0, r0
 80177de:	b2b2      	uxth	r2, r6
 80177e0:	fb00 f602 	mul.w	r6, r0, r2
 80177e4:	0100      	lsls	r0, r0, #4
 80177e6:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 80177ea:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 80177ee:	1b80      	subs	r0, r0, r6
 80177f0:	fa1f fc82 	uxth.w	ip, r2
 80177f4:	b282      	uxth	r2, r0
 80177f6:	78a0      	ldrb	r0, [r4, #2]
 80177f8:	f897 e002 	ldrb.w	lr, [r7, #2]
 80177fc:	f897 9000 	ldrb.w	r9, [r7]
 8017800:	787f      	ldrb	r7, [r7, #1]
 8017802:	eba8 080c 	sub.w	r8, r8, ip
 8017806:	fa1f f888 	uxth.w	r8, r8
 801780a:	4350      	muls	r0, r2
 801780c:	fb08 0e0e 	mla	lr, r8, lr, r0
 8017810:	78a8      	ldrb	r0, [r5, #2]
 8017812:	fb0c e000 	mla	r0, ip, r0, lr
 8017816:	f893 e002 	ldrb.w	lr, [r3, #2]
 801781a:	fb06 0e0e 	mla	lr, r6, lr, r0
 801781e:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 8017822:	f894 e000 	ldrb.w	lr, [r4]
 8017826:	fb02 fe0e 	mul.w	lr, r2, lr
 801782a:	fb08 e909 	mla	r9, r8, r9, lr
 801782e:	f895 e000 	ldrb.w	lr, [r5]
 8017832:	fb0c 990e 	mla	r9, ip, lr, r9
 8017836:	f893 e000 	ldrb.w	lr, [r3]
 801783a:	785b      	ldrb	r3, [r3, #1]
 801783c:	fb06 9e0e 	mla	lr, r6, lr, r9
 8017840:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8017844:	ea4e 0e00 	orr.w	lr, lr, r0
 8017848:	7860      	ldrb	r0, [r4, #1]
 801784a:	4350      	muls	r0, r2
 801784c:	786a      	ldrb	r2, [r5, #1]
 801784e:	fb08 0007 	mla	r0, r8, r7, r0
 8017852:	fb0c 0202 	mla	r2, ip, r2, r0
 8017856:	fb06 2303 	mla	r3, r6, r3, r2
 801785a:	095b      	lsrs	r3, r3, #5
 801785c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017860:	ea4e 0303 	orr.w	r3, lr, r3
 8017864:	800b      	strh	r3, [r1, #0]
 8017866:	b003      	add	sp, #12
 8017868:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801786c:	af01      	add	r7, sp, #4
 801786e:	e78c      	b.n	801778a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8017870:	ac01      	add	r4, sp, #4
 8017872:	4627      	mov	r7, r4
 8017874:	e795      	b.n	80177a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8017876:	ac01      	add	r4, sp, #4
 8017878:	e793      	b.n	80177a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801787a:	ad01      	add	r5, sp, #4
 801787c:	e7a1      	b.n	80177c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801787e:	ab01      	add	r3, sp, #4
 8017880:	461d      	mov	r5, r3
 8017882:	e7ab      	b.n	80177dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8017884:	ab01      	add	r3, sp, #4
 8017886:	e7a9      	b.n	80177dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08017888 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017888:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801788c:	b08f      	sub	sp, #60	; 0x3c
 801788e:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 8017892:	920c      	str	r2, [sp, #48]	; 0x30
 8017894:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8017896:	910a      	str	r1, [sp, #40]	; 0x28
 8017898:	9306      	str	r3, [sp, #24]
 801789a:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801789e:	900d      	str	r0, [sp, #52]	; 0x34
 80178a0:	6850      	ldr	r0, [r2, #4]
 80178a2:	6812      	ldr	r2, [r2, #0]
 80178a4:	fb00 1303 	mla	r3, r0, r3, r1
 80178a8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80178ac:	9307      	str	r3, [sp, #28]
 80178ae:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80178b0:	681b      	ldr	r3, [r3, #0]
 80178b2:	9308      	str	r3, [sp, #32]
 80178b4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80178b6:	685c      	ldr	r4, [r3, #4]
 80178b8:	3404      	adds	r4, #4
 80178ba:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80178bc:	2b00      	cmp	r3, #0
 80178be:	dc03      	bgt.n	80178c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80178c0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80178c2:	2b00      	cmp	r3, #0
 80178c4:	f340 81d6 	ble.w	8017c74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 80178c8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80178ca:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80178ce:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80178d2:	1e48      	subs	r0, r1, #1
 80178d4:	1e56      	subs	r6, r2, #1
 80178d6:	9b06      	ldr	r3, [sp, #24]
 80178d8:	2b00      	cmp	r3, #0
 80178da:	f340 80b7 	ble.w	8017a4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 80178de:	ea5f 472b 	movs.w	r7, fp, asr #16
 80178e2:	ea4f 4325 	mov.w	r3, r5, asr #16
 80178e6:	d406      	bmi.n	80178f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80178e8:	4287      	cmp	r7, r0
 80178ea:	da04      	bge.n	80178f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80178ec:	2b00      	cmp	r3, #0
 80178ee:	db02      	blt.n	80178f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80178f0:	42b3      	cmp	r3, r6
 80178f2:	f2c0 80ac 	blt.w	8017a4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 80178f6:	3701      	adds	r7, #1
 80178f8:	f100 809d 	bmi.w	8017a36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80178fc:	42b9      	cmp	r1, r7
 80178fe:	f2c0 809a 	blt.w	8017a36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8017902:	3301      	adds	r3, #1
 8017904:	f100 8097 	bmi.w	8017a36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8017908:	429a      	cmp	r2, r3
 801790a:	f2c0 8094 	blt.w	8017a36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801790e:	9b06      	ldr	r3, [sp, #24]
 8017910:	930b      	str	r3, [sp, #44]	; 0x2c
 8017912:	9b07      	ldr	r3, [sp, #28]
 8017914:	9309      	str	r3, [sp, #36]	; 0x24
 8017916:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017918:	2b00      	cmp	r3, #0
 801791a:	f340 80b5 	ble.w	8017a88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801791e:	9820      	ldr	r0, [sp, #128]	; 0x80
 8017920:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8017922:	68c7      	ldr	r7, [r0, #12]
 8017924:	6892      	ldr	r2, [r2, #8]
 8017926:	ea5f 402b 	movs.w	r0, fp, asr #16
 801792a:	ea4f 4625 	mov.w	r6, r5, asr #16
 801792e:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8017932:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8017936:	f100 80fb 	bmi.w	8017b30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801793a:	f102 3cff 	add.w	ip, r2, #4294967295
 801793e:	4560      	cmp	r0, ip
 8017940:	f280 80f6 	bge.w	8017b30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8017944:	2e00      	cmp	r6, #0
 8017946:	f2c0 80f3 	blt.w	8017b30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801794a:	f107 3cff 	add.w	ip, r7, #4294967295
 801794e:	4566      	cmp	r6, ip
 8017950:	f280 80ee 	bge.w	8017b30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8017954:	b212      	sxth	r2, r2
 8017956:	fb06 0002 	mla	r0, r6, r2, r0
 801795a:	9e08      	ldr	r6, [sp, #32]
 801795c:	1837      	adds	r7, r6, r0
 801795e:	5c30      	ldrb	r0, [r6, r0]
 8017960:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8017964:	eb04 0c08 	add.w	ip, r4, r8
 8017968:	2b00      	cmp	r3, #0
 801796a:	f000 80d3 	beq.w	8017b14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801796e:	787e      	ldrb	r6, [r7, #1]
 8017970:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8017974:	4426      	add	r6, r4
 8017976:	2900      	cmp	r1, #0
 8017978:	f000 80d4 	beq.w	8017b24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801797c:	18b8      	adds	r0, r7, r2
 801797e:	5cba      	ldrb	r2, [r7, r2]
 8017980:	7840      	ldrb	r0, [r0, #1]
 8017982:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017986:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801798a:	4422      	add	r2, r4
 801798c:	4420      	add	r0, r4
 801798e:	b29b      	uxth	r3, r3
 8017990:	b289      	uxth	r1, r1
 8017992:	fb03 f901 	mul.w	r9, r3, r1
 8017996:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801799a:	011b      	lsls	r3, r3, #4
 801799c:	b289      	uxth	r1, r1
 801799e:	78b7      	ldrb	r7, [r6, #2]
 80179a0:	f89c a002 	ldrb.w	sl, [ip, #2]
 80179a4:	f89c c001 	ldrb.w	ip, [ip, #1]
 80179a8:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80179ac:	eba3 0309 	sub.w	r3, r3, r9
 80179b0:	b29b      	uxth	r3, r3
 80179b2:	ebae 0e01 	sub.w	lr, lr, r1
 80179b6:	fa1f fe8e 	uxth.w	lr, lr
 80179ba:	435f      	muls	r7, r3
 80179bc:	fb0e 770a 	mla	r7, lr, sl, r7
 80179c0:	f892 a002 	ldrb.w	sl, [r2, #2]
 80179c4:	fb01 770a 	mla	r7, r1, sl, r7
 80179c8:	f890 a002 	ldrb.w	sl, [r0, #2]
 80179cc:	fb09 7a0a 	mla	sl, r9, sl, r7
 80179d0:	f814 7008 	ldrb.w	r7, [r4, r8]
 80179d4:	f896 8000 	ldrb.w	r8, [r6]
 80179d8:	7876      	ldrb	r6, [r6, #1]
 80179da:	fb03 f808 	mul.w	r8, r3, r8
 80179de:	fb0e 8807 	mla	r8, lr, r7, r8
 80179e2:	7817      	ldrb	r7, [r2, #0]
 80179e4:	fb01 8807 	mla	r8, r1, r7, r8
 80179e8:	7807      	ldrb	r7, [r0, #0]
 80179ea:	fb09 8707 	mla	r7, r9, r7, r8
 80179ee:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 80179f2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80179f6:	ea47 070a 	orr.w	r7, r7, sl
 80179fa:	4373      	muls	r3, r6
 80179fc:	f892 a001 	ldrb.w	sl, [r2, #1]
 8017a00:	fb0e 330c 	mla	r3, lr, ip, r3
 8017a04:	fb01 310a 	mla	r1, r1, sl, r3
 8017a08:	f890 a001 	ldrb.w	sl, [r0, #1]
 8017a0c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017a0e:	fb09 1a0a 	mla	sl, r9, sl, r1
 8017a12:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017a16:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017a1a:	ea47 070a 	orr.w	r7, r7, sl
 8017a1e:	801f      	strh	r7, [r3, #0]
 8017a20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017a22:	3302      	adds	r3, #2
 8017a24:	9309      	str	r3, [sp, #36]	; 0x24
 8017a26:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8017a28:	449b      	add	fp, r3
 8017a2a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8017a2c:	441d      	add	r5, r3
 8017a2e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017a30:	3b01      	subs	r3, #1
 8017a32:	930b      	str	r3, [sp, #44]	; 0x2c
 8017a34:	e76f      	b.n	8017916 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8017a36:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8017a38:	449b      	add	fp, r3
 8017a3a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8017a3c:	441d      	add	r5, r3
 8017a3e:	9b06      	ldr	r3, [sp, #24]
 8017a40:	3b01      	subs	r3, #1
 8017a42:	9306      	str	r3, [sp, #24]
 8017a44:	9b07      	ldr	r3, [sp, #28]
 8017a46:	3302      	adds	r3, #2
 8017a48:	9307      	str	r3, [sp, #28]
 8017a4a:	e744      	b.n	80178d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8017a4c:	d023      	beq.n	8017a96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8017a4e:	9b06      	ldr	r3, [sp, #24]
 8017a50:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8017a52:	3b01      	subs	r3, #1
 8017a54:	fb00 b003 	mla	r0, r0, r3, fp
 8017a58:	1400      	asrs	r0, r0, #16
 8017a5a:	f53f af58 	bmi.w	801790e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8017a5e:	3901      	subs	r1, #1
 8017a60:	4288      	cmp	r0, r1
 8017a62:	f6bf af54 	bge.w	801790e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8017a66:	991c      	ldr	r1, [sp, #112]	; 0x70
 8017a68:	fb01 5303 	mla	r3, r1, r3, r5
 8017a6c:	141b      	asrs	r3, r3, #16
 8017a6e:	f53f af4e 	bmi.w	801790e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8017a72:	3a01      	subs	r2, #1
 8017a74:	4293      	cmp	r3, r2
 8017a76:	f6bf af4a 	bge.w	801790e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8017a7a:	9b06      	ldr	r3, [sp, #24]
 8017a7c:	9309      	str	r3, [sp, #36]	; 0x24
 8017a7e:	9b07      	ldr	r3, [sp, #28]
 8017a80:	930b      	str	r3, [sp, #44]	; 0x2c
 8017a82:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017a84:	2b00      	cmp	r3, #0
 8017a86:	dc70      	bgt.n	8017b6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8017a88:	9b06      	ldr	r3, [sp, #24]
 8017a8a:	9a07      	ldr	r2, [sp, #28]
 8017a8c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017a90:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017a94:	9307      	str	r3, [sp, #28]
 8017a96:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017a98:	2b00      	cmp	r3, #0
 8017a9a:	f340 80eb 	ble.w	8017c74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8017a9e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017aa2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017aa6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8017aaa:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8017aac:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017ab0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017ab4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017ab8:	eef0 6a62 	vmov.f32	s13, s5
 8017abc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017ac0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017ac4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017ac8:	ee16 ba90 	vmov	fp, s13
 8017acc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017ad0:	eef0 6a43 	vmov.f32	s13, s6
 8017ad4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017ad8:	ee12 2a90 	vmov	r2, s5
 8017adc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017ae0:	fb92 f3f3 	sdiv	r3, r2, r3
 8017ae4:	ee13 2a10 	vmov	r2, s6
 8017ae8:	931b      	str	r3, [sp, #108]	; 0x6c
 8017aea:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8017aec:	fb92 f3f3 	sdiv	r3, r2, r3
 8017af0:	931c      	str	r3, [sp, #112]	; 0x70
 8017af2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017af4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8017af6:	3b01      	subs	r3, #1
 8017af8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017afc:	930a      	str	r3, [sp, #40]	; 0x28
 8017afe:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8017b00:	bf08      	it	eq
 8017b02:	4613      	moveq	r3, r2
 8017b04:	ee16 5a90 	vmov	r5, s13
 8017b08:	9306      	str	r3, [sp, #24]
 8017b0a:	eeb0 3a67 	vmov.f32	s6, s15
 8017b0e:	eef0 2a47 	vmov.f32	s5, s14
 8017b12:	e6d2      	b.n	80178ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8017b14:	b149      	cbz	r1, 8017b2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8017b16:	5cba      	ldrb	r2, [r7, r2]
 8017b18:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017b1c:	4422      	add	r2, r4
 8017b1e:	4660      	mov	r0, ip
 8017b20:	4666      	mov	r6, ip
 8017b22:	e734      	b.n	801798e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8017b24:	4660      	mov	r0, ip
 8017b26:	4662      	mov	r2, ip
 8017b28:	e731      	b.n	801798e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8017b2a:	4660      	mov	r0, ip
 8017b2c:	4662      	mov	r2, ip
 8017b2e:	e7f7      	b.n	8017b20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8017b30:	f110 0c01 	adds.w	ip, r0, #1
 8017b34:	f53f af74 	bmi.w	8017a20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017b38:	4562      	cmp	r2, ip
 8017b3a:	f6ff af71 	blt.w	8017a20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017b3e:	f116 0c01 	adds.w	ip, r6, #1
 8017b42:	f53f af6d 	bmi.w	8017a20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017b46:	4567      	cmp	r7, ip
 8017b48:	f6ff af6a 	blt.w	8017a20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017b4c:	b23f      	sxth	r7, r7
 8017b4e:	b212      	sxth	r2, r2
 8017b50:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8017b54:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8017b58:	9200      	str	r2, [sp, #0]
 8017b5a:	9701      	str	r7, [sp, #4]
 8017b5c:	4623      	mov	r3, r4
 8017b5e:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8017b62:	980d      	ldr	r0, [sp, #52]	; 0x34
 8017b64:	f7ff fde6 	bl	8017734 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8017b68:	e75a      	b.n	8017a20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017b6a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8017b6c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8017b70:	ea4f 462b 	mov.w	r6, fp, asr #16
 8017b74:	1428      	asrs	r0, r5, #16
 8017b76:	fb02 6000 	mla	r0, r2, r0, r6
 8017b7a:	9e08      	ldr	r6, [sp, #32]
 8017b7c:	f816 8000 	ldrb.w	r8, [r6, r0]
 8017b80:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8017b84:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8017b88:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8017b8c:	1837      	adds	r7, r6, r0
 8017b8e:	eb04 0c08 	add.w	ip, r4, r8
 8017b92:	2b00      	cmp	r3, #0
 8017b94:	d060      	beq.n	8017c58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8017b96:	787e      	ldrb	r6, [r7, #1]
 8017b98:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8017b9c:	4426      	add	r6, r4
 8017b9e:	2900      	cmp	r1, #0
 8017ba0:	d062      	beq.n	8017c68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 8017ba2:	18b8      	adds	r0, r7, r2
 8017ba4:	5cba      	ldrb	r2, [r7, r2]
 8017ba6:	7840      	ldrb	r0, [r0, #1]
 8017ba8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017bac:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8017bb0:	4422      	add	r2, r4
 8017bb2:	4420      	add	r0, r4
 8017bb4:	b29b      	uxth	r3, r3
 8017bb6:	b289      	uxth	r1, r1
 8017bb8:	fb03 f901 	mul.w	r9, r3, r1
 8017bbc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8017bc0:	011b      	lsls	r3, r3, #4
 8017bc2:	b289      	uxth	r1, r1
 8017bc4:	78b7      	ldrb	r7, [r6, #2]
 8017bc6:	f89c a002 	ldrb.w	sl, [ip, #2]
 8017bca:	f89c c001 	ldrb.w	ip, [ip, #1]
 8017bce:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8017bd2:	eba3 0309 	sub.w	r3, r3, r9
 8017bd6:	b29b      	uxth	r3, r3
 8017bd8:	ebae 0e01 	sub.w	lr, lr, r1
 8017bdc:	fa1f fe8e 	uxth.w	lr, lr
 8017be0:	435f      	muls	r7, r3
 8017be2:	fb0e 770a 	mla	r7, lr, sl, r7
 8017be6:	f892 a002 	ldrb.w	sl, [r2, #2]
 8017bea:	fb01 770a 	mla	r7, r1, sl, r7
 8017bee:	f890 a002 	ldrb.w	sl, [r0, #2]
 8017bf2:	fb09 7a0a 	mla	sl, r9, sl, r7
 8017bf6:	f814 7008 	ldrb.w	r7, [r4, r8]
 8017bfa:	f896 8000 	ldrb.w	r8, [r6]
 8017bfe:	7876      	ldrb	r6, [r6, #1]
 8017c00:	fb03 f808 	mul.w	r8, r3, r8
 8017c04:	fb0e 8807 	mla	r8, lr, r7, r8
 8017c08:	7817      	ldrb	r7, [r2, #0]
 8017c0a:	fb01 8807 	mla	r8, r1, r7, r8
 8017c0e:	7807      	ldrb	r7, [r0, #0]
 8017c10:	fb09 8707 	mla	r7, r9, r7, r8
 8017c14:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8017c18:	4373      	muls	r3, r6
 8017c1a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8017c1e:	7856      	ldrb	r6, [r2, #1]
 8017c20:	ea47 070a 	orr.w	r7, r7, sl
 8017c24:	fb0e 330c 	mla	r3, lr, ip, r3
 8017c28:	f890 a001 	ldrb.w	sl, [r0, #1]
 8017c2c:	fb01 3306 	mla	r3, r1, r6, r3
 8017c30:	fb09 3a0a 	mla	sl, r9, sl, r3
 8017c34:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017c38:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017c3a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017c3e:	ea47 070a 	orr.w	r7, r7, sl
 8017c42:	f823 7b02 	strh.w	r7, [r3], #2
 8017c46:	930b      	str	r3, [sp, #44]	; 0x2c
 8017c48:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8017c4a:	449b      	add	fp, r3
 8017c4c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8017c4e:	441d      	add	r5, r3
 8017c50:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017c52:	3b01      	subs	r3, #1
 8017c54:	9309      	str	r3, [sp, #36]	; 0x24
 8017c56:	e714      	b.n	8017a82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8017c58:	b149      	cbz	r1, 8017c6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8017c5a:	5cba      	ldrb	r2, [r7, r2]
 8017c5c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017c60:	4422      	add	r2, r4
 8017c62:	4660      	mov	r0, ip
 8017c64:	4666      	mov	r6, ip
 8017c66:	e7a5      	b.n	8017bb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8017c68:	4660      	mov	r0, ip
 8017c6a:	4662      	mov	r2, ip
 8017c6c:	e7a2      	b.n	8017bb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8017c6e:	4660      	mov	r0, ip
 8017c70:	4662      	mov	r2, ip
 8017c72:	e7f7      	b.n	8017c64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8017c74:	b00f      	add	sp, #60	; 0x3c
 8017c76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017c7a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8017c7a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017c7e:	b085      	sub	sp, #20
 8017c80:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 8017c84:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8017c88:	9102      	str	r1, [sp, #8]
 8017c8a:	2c00      	cmp	r4, #0
 8017c8c:	fb04 710c 	mla	r1, r4, ip, r7
 8017c90:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8017c94:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 8017c98:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8017c9c:	eb02 0e01 	add.w	lr, r2, r1
 8017ca0:	f2c0 8122 	blt.w	8017ee8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8017ca4:	45a0      	cmp	r8, r4
 8017ca6:	f340 811f 	ble.w	8017ee8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8017caa:	2f00      	cmp	r7, #0
 8017cac:	f2c0 811a 	blt.w	8017ee4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8017cb0:	45bc      	cmp	ip, r7
 8017cb2:	f340 8117 	ble.w	8017ee4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8017cb6:	5c52      	ldrb	r2, [r2, r1]
 8017cb8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8017cbc:	1c7a      	adds	r2, r7, #1
 8017cbe:	f100 8116 	bmi.w	8017eee <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8017cc2:	4594      	cmp	ip, r2
 8017cc4:	f340 8113 	ble.w	8017eee <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8017cc8:	2e00      	cmp	r6, #0
 8017cca:	f000 8112 	beq.w	8017ef2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 8017cce:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8017cd2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8017cd6:	3401      	adds	r4, #1
 8017cd8:	f100 810f 	bmi.w	8017efa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8017cdc:	45a0      	cmp	r8, r4
 8017cde:	f340 810c 	ble.w	8017efa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8017ce2:	2800      	cmp	r0, #0
 8017ce4:	f000 810c 	beq.w	8017f00 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8017ce8:	2f00      	cmp	r7, #0
 8017cea:	f2c0 8104 	blt.w	8017ef6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8017cee:	45bc      	cmp	ip, r7
 8017cf0:	f340 8101 	ble.w	8017ef6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8017cf4:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8017cf8:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8017cfc:	3701      	adds	r7, #1
 8017cfe:	f100 8102 	bmi.w	8017f06 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8017d02:	45bc      	cmp	ip, r7
 8017d04:	f340 80ff 	ble.w	8017f06 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8017d08:	2e00      	cmp	r6, #0
 8017d0a:	f000 80fe 	beq.w	8017f0a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8017d0e:	44f4      	add	ip, lr
 8017d10:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8017d14:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8017d18:	b2b6      	uxth	r6, r6
 8017d1a:	b280      	uxth	r0, r0
 8017d1c:	fb00 fe06 	mul.w	lr, r0, r6
 8017d20:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8017d24:	0136      	lsls	r6, r6, #4
 8017d26:	eba6 070e 	sub.w	r7, r6, lr
 8017d2a:	b280      	uxth	r0, r0
 8017d2c:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8017d30:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8017d34:	b2bf      	uxth	r7, r7
 8017d36:	1a1b      	subs	r3, r3, r0
 8017d38:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8017d3c:	b29b      	uxth	r3, r3
 8017d3e:	fb0a f607 	mul.w	r6, sl, r7
 8017d42:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8017d46:	fb0b 6603 	mla	r6, fp, r3, r6
 8017d4a:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8017d4e:	fb00 6609 	mla	r6, r0, r9, r6
 8017d52:	fb0e 6608 	mla	r6, lr, r8, r6
 8017d56:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8017d5a:	9600      	str	r6, [sp, #0]
 8017d5c:	2e00      	cmp	r6, #0
 8017d5e:	f000 80be 	beq.w	8017ede <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8017d62:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8017d66:	fb0b fc0c 	mul.w	ip, fp, ip
 8017d6a:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8017d6e:	fb0b f505 	mul.w	r5, fp, r5
 8017d72:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8017d76:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8017d7a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8017d7e:	44dc      	add	ip, fp
 8017d80:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017d84:	9501      	str	r5, [sp, #4]
 8017d86:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8017d8a:	9503      	str	r5, [sp, #12]
 8017d8c:	9d01      	ldr	r5, [sp, #4]
 8017d8e:	9e02      	ldr	r6, [sp, #8]
 8017d90:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8017d94:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8017d98:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8017d9c:	fb0a fc0c 	mul.w	ip, sl, ip
 8017da0:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8017da4:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8017da8:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8017dac:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8017db0:	4465      	add	r5, ip
 8017db2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8017db6:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8017dba:	fb09 fc0c 	mul.w	ip, r9, ip
 8017dbe:	fb09 f904 	mul.w	r9, r9, r4
 8017dc2:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8017dc6:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8017dca:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8017dce:	fb08 f404 	mul.w	r4, r8, r4
 8017dd2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8017dd6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8017dda:	fb08 f802 	mul.w	r8, r8, r2
 8017dde:	fb0a fa01 	mul.w	sl, sl, r1
 8017de2:	0a22      	lsrs	r2, r4, #8
 8017de4:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8017de8:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8017dec:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8017df0:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8017df4:	4414      	add	r4, r2
 8017df6:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8017dfa:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8017dfe:	0a2d      	lsrs	r5, r5, #8
 8017e00:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8017e04:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8017e08:	9a03      	ldr	r2, [sp, #12]
 8017e0a:	8836      	ldrh	r6, [r6, #0]
 8017e0c:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8017e10:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8017e14:	437d      	muls	r5, r7
 8017e16:	4461      	add	r1, ip
 8017e18:	0a24      	lsrs	r4, r4, #8
 8017e1a:	fb02 5503 	mla	r5, r2, r3, r5
 8017e1e:	0a09      	lsrs	r1, r1, #8
 8017e20:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8017e24:	fb04 540e 	mla	r4, r4, lr, r5
 8017e28:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8017e2c:	fb01 4100 	mla	r1, r1, r0, r4
 8017e30:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017e34:	0a09      	lsrs	r1, r1, #8
 8017e36:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017e3a:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8017e3e:	fb07 f70a 	mul.w	r7, r7, sl
 8017e42:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8017e46:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8017e4a:	fb03 7101 	mla	r1, r3, r1, r7
 8017e4e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017e52:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8017e56:	fb0e 1e08 	mla	lr, lr, r8, r1
 8017e5a:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8017e5e:	fb00 e101 	mla	r1, r0, r1, lr
 8017e62:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8017e66:	9a00      	ldr	r2, [sp, #0]
 8017e68:	b287      	uxth	r7, r0
 8017e6a:	437a      	muls	r2, r7
 8017e6c:	0a09      	lsrs	r1, r1, #8
 8017e6e:	1c53      	adds	r3, r2, #1
 8017e70:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8017e74:	4321      	orrs	r1, r4
 8017e76:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8017e7a:	1235      	asrs	r5, r6, #8
 8017e7c:	0c0a      	lsrs	r2, r1, #16
 8017e7e:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8017e82:	b2db      	uxtb	r3, r3
 8017e84:	fb12 f207 	smulbb	r2, r2, r7
 8017e88:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017e8c:	fb05 2503 	mla	r5, r5, r3, r2
 8017e90:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8017e94:	10f2      	asrs	r2, r6, #3
 8017e96:	b2c8      	uxtb	r0, r1
 8017e98:	00f6      	lsls	r6, r6, #3
 8017e9a:	fb14 f407 	smulbb	r4, r4, r7
 8017e9e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8017ea2:	b2f6      	uxtb	r6, r6
 8017ea4:	fb10 f007 	smulbb	r0, r0, r7
 8017ea8:	fb02 4203 	mla	r2, r2, r3, r4
 8017eac:	b2ad      	uxth	r5, r5
 8017eae:	fb06 0303 	mla	r3, r6, r3, r0
 8017eb2:	b299      	uxth	r1, r3
 8017eb4:	b294      	uxth	r4, r2
 8017eb6:	1c6b      	adds	r3, r5, #1
 8017eb8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8017ebc:	1c62      	adds	r2, r4, #1
 8017ebe:	1c4b      	adds	r3, r1, #1
 8017ec0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8017ec4:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8017ec8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8017ecc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8017ed0:	0952      	lsrs	r2, r2, #5
 8017ed2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017ed6:	432b      	orrs	r3, r5
 8017ed8:	4313      	orrs	r3, r2
 8017eda:	9a02      	ldr	r2, [sp, #8]
 8017edc:	8013      	strh	r3, [r2, #0]
 8017ede:	b005      	add	sp, #20
 8017ee0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017ee4:	2500      	movs	r5, #0
 8017ee6:	e6e9      	b.n	8017cbc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8017ee8:	2100      	movs	r1, #0
 8017eea:	460d      	mov	r5, r1
 8017eec:	e6f3      	b.n	8017cd6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8017eee:	2100      	movs	r1, #0
 8017ef0:	e6f1      	b.n	8017cd6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8017ef2:	4631      	mov	r1, r6
 8017ef4:	e6ef      	b.n	8017cd6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8017ef6:	2400      	movs	r4, #0
 8017ef8:	e700      	b.n	8017cfc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 8017efa:	2200      	movs	r2, #0
 8017efc:	4614      	mov	r4, r2
 8017efe:	e70b      	b.n	8017d18 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8017f00:	4602      	mov	r2, r0
 8017f02:	4604      	mov	r4, r0
 8017f04:	e708      	b.n	8017d18 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8017f06:	2200      	movs	r2, #0
 8017f08:	e706      	b.n	8017d18 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8017f0a:	4632      	mov	r2, r6
 8017f0c:	e704      	b.n	8017d18 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

08017f0e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017f0e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017f12:	b09f      	sub	sp, #124	; 0x7c
 8017f14:	921b      	str	r2, [sp, #108]	; 0x6c
 8017f16:	9309      	str	r3, [sp, #36]	; 0x24
 8017f18:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8017f1a:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8017f1e:	931c      	str	r3, [sp, #112]	; 0x70
 8017f20:	9119      	str	r1, [sp, #100]	; 0x64
 8017f22:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8017f26:	901d      	str	r0, [sp, #116]	; 0x74
 8017f28:	6850      	ldr	r0, [r2, #4]
 8017f2a:	6812      	ldr	r2, [r2, #0]
 8017f2c:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8017f2e:	fb00 1303 	mla	r3, r0, r3, r1
 8017f32:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017f36:	930c      	str	r3, [sp, #48]	; 0x30
 8017f38:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017f3a:	681b      	ldr	r3, [r3, #0]
 8017f3c:	9312      	str	r3, [sp, #72]	; 0x48
 8017f3e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017f40:	685e      	ldr	r6, [r3, #4]
 8017f42:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8017f46:	930d      	str	r3, [sp, #52]	; 0x34
 8017f48:	3604      	adds	r6, #4
 8017f4a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8017f4c:	2b00      	cmp	r3, #0
 8017f4e:	dc03      	bgt.n	8017f58 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8017f50:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8017f52:	2b00      	cmp	r3, #0
 8017f54:	f340 8388 	ble.w	8018668 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8017f58:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017f5a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017f5e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017f62:	1e48      	subs	r0, r1, #1
 8017f64:	1e57      	subs	r7, r2, #1
 8017f66:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017f68:	2b00      	cmp	r3, #0
 8017f6a:	f340 8195 	ble.w	8018298 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8017f6e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8017f70:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8017f74:	ea4f 4325 	mov.w	r3, r5, asr #16
 8017f78:	d406      	bmi.n	8017f88 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8017f7a:	4584      	cmp	ip, r0
 8017f7c:	da04      	bge.n	8017f88 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8017f7e:	2b00      	cmp	r3, #0
 8017f80:	db02      	blt.n	8017f88 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8017f82:	42bb      	cmp	r3, r7
 8017f84:	f2c0 8189 	blt.w	801829a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8017f88:	f11c 0c01 	adds.w	ip, ip, #1
 8017f8c:	f100 8177 	bmi.w	801827e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8017f90:	4561      	cmp	r1, ip
 8017f92:	f2c0 8174 	blt.w	801827e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8017f96:	3301      	adds	r3, #1
 8017f98:	f100 8171 	bmi.w	801827e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8017f9c:	429a      	cmp	r2, r3
 8017f9e:	f2c0 816e 	blt.w	801827e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8017fa2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017fa4:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8017fa6:	931a      	str	r3, [sp, #104]	; 0x68
 8017fa8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8017faa:	2b00      	cmp	r3, #0
 8017fac:	f340 8193 	ble.w	80182d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8017fb0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017fb2:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017fb6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017fb8:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8017fbc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017fbe:	141b      	asrs	r3, r3, #16
 8017fc0:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8017fc4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8017fc8:	f100 81d6 	bmi.w	8018378 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8017fcc:	f100 38ff 	add.w	r8, r0, #4294967295
 8017fd0:	4543      	cmp	r3, r8
 8017fd2:	f280 81d1 	bge.w	8018378 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8017fd6:	f1bc 0f00 	cmp.w	ip, #0
 8017fda:	f2c0 81cd 	blt.w	8018378 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8017fde:	f10e 38ff 	add.w	r8, lr, #4294967295
 8017fe2:	45c4      	cmp	ip, r8
 8017fe4:	f280 81c8 	bge.w	8018378 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8017fe8:	b200      	sxth	r0, r0
 8017fea:	fb0c 3300 	mla	r3, ip, r0, r3
 8017fee:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8017ff0:	eb04 0803 	add.w	r8, r4, r3
 8017ff4:	5ce3      	ldrb	r3, [r4, r3]
 8017ff6:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8017ffa:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8017ffe:	2a00      	cmp	r2, #0
 8018000:	f000 81af 	beq.w	8018362 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8018004:	f898 c001 	ldrb.w	ip, [r8, #1]
 8018008:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801800c:	940e      	str	r4, [sp, #56]	; 0x38
 801800e:	0e24      	lsrs	r4, r4, #24
 8018010:	9415      	str	r4, [sp, #84]	; 0x54
 8018012:	b179      	cbz	r1, 8018034 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8018014:	eb08 0c00 	add.w	ip, r8, r0
 8018018:	f818 0000 	ldrb.w	r0, [r8, r0]
 801801c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8018020:	900a      	str	r0, [sp, #40]	; 0x28
 8018022:	0e00      	lsrs	r0, r0, #24
 8018024:	9013      	str	r0, [sp, #76]	; 0x4c
 8018026:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801802a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801802e:	900f      	str	r0, [sp, #60]	; 0x3c
 8018030:	0e00      	lsrs	r0, r0, #24
 8018032:	9016      	str	r0, [sp, #88]	; 0x58
 8018034:	b292      	uxth	r2, r2
 8018036:	b289      	uxth	r1, r1
 8018038:	fb02 f901 	mul.w	r9, r2, r1
 801803c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8018040:	0112      	lsls	r2, r2, #4
 8018042:	eba2 0809 	sub.w	r8, r2, r9
 8018046:	b289      	uxth	r1, r1
 8018048:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801804c:	9815      	ldr	r0, [sp, #84]	; 0x54
 801804e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018050:	fa1f f888 	uxth.w	r8, r8
 8018054:	1a52      	subs	r2, r2, r1
 8018056:	b292      	uxth	r2, r2
 8018058:	fb08 f000 	mul.w	r0, r8, r0
 801805c:	fb02 000e 	mla	r0, r2, lr, r0
 8018060:	fb01 0004 	mla	r0, r1, r4, r0
 8018064:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8018066:	fb09 0004 	mla	r0, r9, r4, r0
 801806a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801806e:	2800      	cmp	r0, #0
 8018070:	f000 80fa 	beq.w	8018268 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8018074:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8018078:	d01b      	beq.n	80180b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801807a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801807e:	fb0e fa0a 	mul.w	sl, lr, sl
 8018082:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018086:	fb0e fe03 	mul.w	lr, lr, r3
 801808a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801808e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018092:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8018096:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801809a:	4453      	add	r3, sl
 801809c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80180a0:	0a1b      	lsrs	r3, r3, #8
 80180a2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80180a6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80180aa:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80180ae:	ea43 030c 	orr.w	r3, r3, ip
 80180b2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80180b4:	2cff      	cmp	r4, #255	; 0xff
 80180b6:	d021      	beq.n	80180fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80180b8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80180ba:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80180be:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80180c0:	fb04 fb0b 	mul.w	fp, r4, fp
 80180c4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80180c6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80180ca:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80180cc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80180d0:	fb04 fa0a 	mul.w	sl, r4, sl
 80180d4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80180d8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80180dc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80180e0:	44de      	add	lr, fp
 80180e2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80180e6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80180ea:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80180ee:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80180f2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80180f6:	ea4e 040a 	orr.w	r4, lr, sl
 80180fa:	940e      	str	r4, [sp, #56]	; 0x38
 80180fc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80180fe:	2cff      	cmp	r4, #255	; 0xff
 8018100:	d021      	beq.n	8018146 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8018102:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8018104:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8018108:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801810a:	fb04 fb0b 	mul.w	fp, r4, fp
 801810e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8018110:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8018114:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018116:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801811a:	fb04 fa0a 	mul.w	sl, r4, sl
 801811e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018122:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8018126:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801812a:	44de      	add	lr, fp
 801812c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018130:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018134:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018138:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801813c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018140:	ea4e 040a 	orr.w	r4, lr, sl
 8018144:	940a      	str	r4, [sp, #40]	; 0x28
 8018146:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8018148:	2cff      	cmp	r4, #255	; 0xff
 801814a:	d021      	beq.n	8018190 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801814c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801814e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8018152:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8018154:	fb04 fb0b 	mul.w	fp, r4, fp
 8018158:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801815a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801815e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8018160:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8018164:	fb04 fa0a 	mul.w	sl, r4, sl
 8018168:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801816c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8018170:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8018174:	44de      	add	lr, fp
 8018176:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801817a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801817e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018182:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018186:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801818a:	ea4e 040a 	orr.w	r4, lr, sl
 801818e:	940f      	str	r4, [sp, #60]	; 0x3c
 8018190:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8018192:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8018196:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8018198:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801819c:	fb08 fc0c 	mul.w	ip, r8, ip
 80181a0:	fb02 cc0e 	mla	ip, r2, lr, ip
 80181a4:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80181a8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80181aa:	fb01 cc0e 	mla	ip, r1, lr, ip
 80181ae:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80181b2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80181b4:	fb09 cc0e 	mla	ip, r9, lr, ip
 80181b8:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80181bc:	fb08 f80e 	mul.w	r8, r8, lr
 80181c0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80181c4:	fb02 8303 	mla	r3, r2, r3, r8
 80181c8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80181ca:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80181cc:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80181d0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80181d2:	fb01 330a 	mla	r3, r1, sl, r3
 80181d6:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 80181da:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80181dc:	fb09 3901 	mla	r9, r9, r1, r3
 80181e0:	4342      	muls	r2, r0
 80181e2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80181e6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80181ea:	883b      	ldrh	r3, [r7, #0]
 80181ec:	1c50      	adds	r0, r2, #1
 80181ee:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80181f2:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80181f6:	ea4c 0c09 	orr.w	ip, ip, r9
 80181fa:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80181fe:	1219      	asrs	r1, r3, #8
 8018200:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8018204:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8018208:	b2c0      	uxtb	r0, r0
 801820a:	fb12 f204 	smulbb	r2, r2, r4
 801820e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8018212:	fb01 2100 	mla	r1, r1, r0, r2
 8018216:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801821a:	10da      	asrs	r2, r3, #3
 801821c:	fa5f fc8c 	uxtb.w	ip, ip
 8018220:	00db      	lsls	r3, r3, #3
 8018222:	fb1c fc04 	smulbb	ip, ip, r4
 8018226:	b2db      	uxtb	r3, r3
 8018228:	b289      	uxth	r1, r1
 801822a:	fb03 c300 	mla	r3, r3, r0, ip
 801822e:	fa1f fc83 	uxth.w	ip, r3
 8018232:	1c4b      	adds	r3, r1, #1
 8018234:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8018238:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801823c:	fb1e fe04 	smulbb	lr, lr, r4
 8018240:	f10c 0301 	add.w	r3, ip, #1
 8018244:	fb02 e200 	mla	r2, r2, r0, lr
 8018248:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801824c:	b292      	uxth	r2, r2
 801824e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8018252:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018256:	430b      	orrs	r3, r1
 8018258:	1c51      	adds	r1, r2, #1
 801825a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801825e:	0952      	lsrs	r2, r2, #5
 8018260:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018264:	4313      	orrs	r3, r2
 8018266:	803b      	strh	r3, [r7, #0]
 8018268:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801826a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801826c:	441a      	add	r2, r3
 801826e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018270:	9229      	str	r2, [sp, #164]	; 0xa4
 8018272:	441d      	add	r5, r3
 8018274:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8018276:	3b01      	subs	r3, #1
 8018278:	3702      	adds	r7, #2
 801827a:	931a      	str	r3, [sp, #104]	; 0x68
 801827c:	e694      	b.n	8017fa8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801827e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8018280:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8018282:	441c      	add	r4, r3
 8018284:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018286:	9429      	str	r4, [sp, #164]	; 0xa4
 8018288:	441d      	add	r5, r3
 801828a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801828c:	3b01      	subs	r3, #1
 801828e:	9309      	str	r3, [sp, #36]	; 0x24
 8018290:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018292:	3302      	adds	r3, #2
 8018294:	930c      	str	r3, [sp, #48]	; 0x30
 8018296:	e666      	b.n	8017f66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8018298:	d024      	beq.n	80182e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801829a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801829c:	982b      	ldr	r0, [sp, #172]	; 0xac
 801829e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80182a0:	3b01      	subs	r3, #1
 80182a2:	fb00 4003 	mla	r0, r0, r3, r4
 80182a6:	1400      	asrs	r0, r0, #16
 80182a8:	f53f ae7b 	bmi.w	8017fa2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80182ac:	3901      	subs	r1, #1
 80182ae:	4288      	cmp	r0, r1
 80182b0:	f6bf ae77 	bge.w	8017fa2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80182b4:	992c      	ldr	r1, [sp, #176]	; 0xb0
 80182b6:	fb01 5303 	mla	r3, r1, r3, r5
 80182ba:	141b      	asrs	r3, r3, #16
 80182bc:	f53f ae71 	bmi.w	8017fa2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80182c0:	3a01      	subs	r2, #1
 80182c2:	4293      	cmp	r3, r2
 80182c4:	f6bf ae6d 	bge.w	8017fa2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80182c8:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80182cc:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80182d0:	f1bb 0f00 	cmp.w	fp, #0
 80182d4:	dc70      	bgt.n	80183b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 80182d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80182d8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80182dc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80182de:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80182e2:	930c      	str	r3, [sp, #48]	; 0x30
 80182e4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80182e6:	2b00      	cmp	r3, #0
 80182e8:	f340 81be 	ble.w	8018668 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 80182ec:	ee30 0a04 	vadd.f32	s0, s0, s8
 80182f0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80182f4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80182f8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80182fa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80182fe:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018302:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018306:	eef0 6a62 	vmov.f32	s13, s5
 801830a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801830e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018312:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018316:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801831a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801831e:	eef0 6a43 	vmov.f32	s13, s6
 8018322:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018326:	ee12 2a90 	vmov	r2, s5
 801832a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801832e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018332:	ee13 2a10 	vmov	r2, s6
 8018336:	932b      	str	r3, [sp, #172]	; 0xac
 8018338:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801833a:	fb92 f3f3 	sdiv	r3, r2, r3
 801833e:	932c      	str	r3, [sp, #176]	; 0xb0
 8018340:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8018342:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8018344:	3b01      	subs	r3, #1
 8018346:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801834a:	9319      	str	r3, [sp, #100]	; 0x64
 801834c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801834e:	bf08      	it	eq
 8018350:	4613      	moveq	r3, r2
 8018352:	ee16 5a90 	vmov	r5, s13
 8018356:	9309      	str	r3, [sp, #36]	; 0x24
 8018358:	eeb0 3a67 	vmov.f32	s6, s15
 801835c:	eef0 2a47 	vmov.f32	s5, s14
 8018360:	e5f3      	b.n	8017f4a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8018362:	2900      	cmp	r1, #0
 8018364:	f43f ae66 	beq.w	8018034 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8018368:	f818 0000 	ldrb.w	r0, [r8, r0]
 801836c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8018370:	900a      	str	r0, [sp, #40]	; 0x28
 8018372:	0e00      	lsrs	r0, r0, #24
 8018374:	9013      	str	r0, [sp, #76]	; 0x4c
 8018376:	e65d      	b.n	8018034 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8018378:	f113 0801 	adds.w	r8, r3, #1
 801837c:	f53f af74 	bmi.w	8018268 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8018380:	4540      	cmp	r0, r8
 8018382:	f6ff af71 	blt.w	8018268 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8018386:	f11c 0801 	adds.w	r8, ip, #1
 801838a:	f53f af6d 	bmi.w	8018268 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801838e:	45c6      	cmp	lr, r8
 8018390:	f6ff af6a 	blt.w	8018268 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8018394:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8018396:	9302      	str	r3, [sp, #8]
 8018398:	b200      	sxth	r0, r0
 801839a:	fa0f f38e 	sxth.w	r3, lr
 801839e:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80183a2:	e9cd c203 	strd	ip, r2, [sp, #12]
 80183a6:	9301      	str	r3, [sp, #4]
 80183a8:	9000      	str	r0, [sp, #0]
 80183aa:	4633      	mov	r3, r6
 80183ac:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80183ae:	981d      	ldr	r0, [sp, #116]	; 0x74
 80183b0:	4639      	mov	r1, r7
 80183b2:	f7ff fc62 	bl	8017c7a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 80183b6:	e757      	b.n	8018268 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80183b8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80183ba:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80183bc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80183c0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80183c2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80183c6:	1427      	asrs	r7, r4, #16
 80183c8:	142b      	asrs	r3, r5, #16
 80183ca:	fb01 7303 	mla	r3, r1, r3, r7
 80183ce:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80183d0:	18e7      	adds	r7, r4, r3
 80183d2:	5ce3      	ldrb	r3, [r4, r3]
 80183d4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80183d8:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80183dc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80183e0:	2a00      	cmp	r2, #0
 80183e2:	f000 8137 	beq.w	8018654 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80183e6:	f897 e001 	ldrb.w	lr, [r7, #1]
 80183ea:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80183ee:	9410      	str	r4, [sp, #64]	; 0x40
 80183f0:	0e24      	lsrs	r4, r4, #24
 80183f2:	9417      	str	r4, [sp, #92]	; 0x5c
 80183f4:	b170      	cbz	r0, 8018414 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80183f6:	eb07 0e01 	add.w	lr, r7, r1
 80183fa:	5c79      	ldrb	r1, [r7, r1]
 80183fc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018400:	910b      	str	r1, [sp, #44]	; 0x2c
 8018402:	0e09      	lsrs	r1, r1, #24
 8018404:	9114      	str	r1, [sp, #80]	; 0x50
 8018406:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801840a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801840e:	9111      	str	r1, [sp, #68]	; 0x44
 8018410:	0e09      	lsrs	r1, r1, #24
 8018412:	9118      	str	r1, [sp, #96]	; 0x60
 8018414:	b292      	uxth	r2, r2
 8018416:	b280      	uxth	r0, r0
 8018418:	fb02 f800 	mul.w	r8, r2, r0
 801841c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8018420:	0112      	lsls	r2, r2, #4
 8018422:	eba2 0e08 	sub.w	lr, r2, r8
 8018426:	b280      	uxth	r0, r0
 8018428:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801842c:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801842e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018430:	fa1f fe8e 	uxth.w	lr, lr
 8018434:	1a12      	subs	r2, r2, r0
 8018436:	b292      	uxth	r2, r2
 8018438:	fb0e f101 	mul.w	r1, lr, r1
 801843c:	fb02 110c 	mla	r1, r2, ip, r1
 8018440:	fb00 1104 	mla	r1, r0, r4, r1
 8018444:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8018446:	fb08 1104 	mla	r1, r8, r4, r1
 801844a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801844e:	2900      	cmp	r1, #0
 8018450:	f000 80f5 	beq.w	801863e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8018454:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8018458:	d019      	beq.n	801848e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801845a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801845e:	fb0c fa0a 	mul.w	sl, ip, sl
 8018462:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018466:	fb0c fc03 	mul.w	ip, ip, r3
 801846a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801846e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018472:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8018476:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801847a:	4453      	add	r3, sl
 801847c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8018480:	0a1b      	lsrs	r3, r3, #8
 8018482:	0a3f      	lsrs	r7, r7, #8
 8018484:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018488:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801848c:	433b      	orrs	r3, r7
 801848e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8018490:	2cff      	cmp	r4, #255	; 0xff
 8018492:	d020      	beq.n	80184d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8018494:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8018496:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801849a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801849c:	4367      	muls	r7, r4
 801849e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80184a0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80184a4:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80184a6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80184aa:	fb04 fa0a 	mul.w	sl, r4, sl
 80184ae:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80184b2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80184b6:	44bc      	add	ip, r7
 80184b8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80184bc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80184c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80184c4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80184c8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80184cc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80184d0:	ea4c 040a 	orr.w	r4, ip, sl
 80184d4:	9410      	str	r4, [sp, #64]	; 0x40
 80184d6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80184d8:	2cff      	cmp	r4, #255	; 0xff
 80184da:	d020      	beq.n	801851e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 80184dc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80184de:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80184e2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80184e4:	4367      	muls	r7, r4
 80184e6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80184e8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80184ec:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80184ee:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80184f2:	fb04 fa0a 	mul.w	sl, r4, sl
 80184f6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80184fa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80184fe:	44bc      	add	ip, r7
 8018500:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8018504:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018508:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801850c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018510:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018514:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018518:	ea4c 040a 	orr.w	r4, ip, sl
 801851c:	940b      	str	r4, [sp, #44]	; 0x2c
 801851e:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8018520:	2cff      	cmp	r4, #255	; 0xff
 8018522:	d020      	beq.n	8018566 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8018524:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8018526:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801852a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801852c:	4367      	muls	r7, r4
 801852e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8018530:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8018534:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8018536:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801853a:	fb04 fa0a 	mul.w	sl, r4, sl
 801853e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8018542:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018546:	44bc      	add	ip, r7
 8018548:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801854c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018550:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018554:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018558:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801855c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018560:	ea4c 040a 	orr.w	r4, ip, sl
 8018564:	9411      	str	r4, [sp, #68]	; 0x44
 8018566:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8018568:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801856c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801856e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8018572:	fb0e f707 	mul.w	r7, lr, r7
 8018576:	fb02 770c 	mla	r7, r2, ip, r7
 801857a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801857e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8018580:	fb00 770c 	mla	r7, r0, ip, r7
 8018584:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8018588:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801858a:	fb08 770c 	mla	r7, r8, ip, r7
 801858e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8018592:	fb0e fe0c 	mul.w	lr, lr, ip
 8018596:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801859a:	fb02 e303 	mla	r3, r2, r3, lr
 801859e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80185a0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80185a2:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80185a6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80185a8:	fb00 330a 	mla	r3, r0, sl, r3
 80185ac:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80185b0:	fb08 3c0c 	mla	ip, r8, ip, r3
 80185b4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80185b6:	f8b9 0000 	ldrh.w	r0, [r9]
 80185ba:	434b      	muls	r3, r1
 80185bc:	0a3f      	lsrs	r7, r7, #8
 80185be:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80185c2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80185c6:	1c59      	adds	r1, r3, #1
 80185c8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80185cc:	ea47 070c 	orr.w	r7, r7, ip
 80185d0:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80185d4:	1202      	asrs	r2, r0, #8
 80185d6:	0c3b      	lsrs	r3, r7, #16
 80185d8:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80185dc:	b2c9      	uxtb	r1, r1
 80185de:	fb13 f304 	smulbb	r3, r3, r4
 80185e2:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80185e6:	fb02 3201 	mla	r2, r2, r1, r3
 80185ea:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80185ee:	10c3      	asrs	r3, r0, #3
 80185f0:	b2ff      	uxtb	r7, r7
 80185f2:	00c0      	lsls	r0, r0, #3
 80185f4:	b292      	uxth	r2, r2
 80185f6:	fb1c fc04 	smulbb	ip, ip, r4
 80185fa:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80185fe:	b2c0      	uxtb	r0, r0
 8018600:	fb17 f704 	smulbb	r7, r7, r4
 8018604:	fb03 c301 	mla	r3, r3, r1, ip
 8018608:	fb00 7001 	mla	r0, r0, r1, r7
 801860c:	f102 0c01 	add.w	ip, r2, #1
 8018610:	b280      	uxth	r0, r0
 8018612:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8018616:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 801861a:	1c42      	adds	r2, r0, #1
 801861c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8018620:	b29b      	uxth	r3, r3
 8018622:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018626:	ea42 020c 	orr.w	r2, r2, ip
 801862a:	f103 0c01 	add.w	ip, r3, #1
 801862e:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8018632:	095b      	lsrs	r3, r3, #5
 8018634:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018638:	431a      	orrs	r2, r3
 801863a:	f8a9 2000 	strh.w	r2, [r9]
 801863e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8018640:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8018642:	441a      	add	r2, r3
 8018644:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018646:	9229      	str	r2, [sp, #164]	; 0xa4
 8018648:	f109 0902 	add.w	r9, r9, #2
 801864c:	441d      	add	r5, r3
 801864e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8018652:	e63d      	b.n	80182d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8018654:	2800      	cmp	r0, #0
 8018656:	f43f aedd 	beq.w	8018414 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801865a:	5c79      	ldrb	r1, [r7, r1]
 801865c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018660:	910b      	str	r1, [sp, #44]	; 0x2c
 8018662:	0e09      	lsrs	r1, r1, #24
 8018664:	9114      	str	r1, [sp, #80]	; 0x50
 8018666:	e6d5      	b.n	8018414 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8018668:	b01f      	add	sp, #124	; 0x7c
 801866a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801866e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801866e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018672:	b089      	sub	sp, #36	; 0x24
 8018674:	9101      	str	r1, [sp, #4]
 8018676:	9801      	ldr	r0, [sp, #4]
 8018678:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 801867c:	8800      	ldrh	r0, [r0, #0]
 801867e:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8018682:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8018686:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 801868a:	1206      	asrs	r6, r0, #8
 801868c:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 8018690:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8018694:	9602      	str	r6, [sp, #8]
 8018696:	10c6      	asrs	r6, r0, #3
 8018698:	00c0      	lsls	r0, r0, #3
 801869a:	b2c0      	uxtb	r0, r0
 801869c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80186a0:	9004      	str	r0, [sp, #16]
 80186a2:	2f00      	cmp	r7, #0
 80186a4:	fb07 100c 	mla	r0, r7, ip, r1
 80186a8:	9603      	str	r6, [sp, #12]
 80186aa:	eb02 0e00 	add.w	lr, r2, r0
 80186ae:	f2c0 810a 	blt.w	80188c6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 80186b2:	45b8      	cmp	r8, r7
 80186b4:	f340 8107 	ble.w	80188c6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 80186b8:	2900      	cmp	r1, #0
 80186ba:	f2c0 8102 	blt.w	80188c2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 80186be:	458c      	cmp	ip, r1
 80186c0:	f340 80ff 	ble.w	80188c2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 80186c4:	5c12      	ldrb	r2, [r2, r0]
 80186c6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80186ca:	1c4a      	adds	r2, r1, #1
 80186cc:	f100 80fe 	bmi.w	80188cc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 80186d0:	4594      	cmp	ip, r2
 80186d2:	f340 80fb 	ble.w	80188cc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 80186d6:	2d00      	cmp	r5, #0
 80186d8:	f000 80fa 	beq.w	80188d0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 80186dc:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80186e0:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80186e4:	3701      	adds	r7, #1
 80186e6:	f100 80f7 	bmi.w	80188d8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80186ea:	45b8      	cmp	r8, r7
 80186ec:	f340 80f4 	ble.w	80188d8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80186f0:	2c00      	cmp	r4, #0
 80186f2:	f000 80f4 	beq.w	80188de <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 80186f6:	2900      	cmp	r1, #0
 80186f8:	eb0e 020c 	add.w	r2, lr, ip
 80186fc:	f2c0 80ea 	blt.w	80188d4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8018700:	458c      	cmp	ip, r1
 8018702:	f340 80e7 	ble.w	80188d4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8018706:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801870a:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801870e:	3101      	adds	r1, #1
 8018710:	f100 80e8 	bmi.w	80188e4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8018714:	458c      	cmp	ip, r1
 8018716:	f340 80e5 	ble.w	80188e4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801871a:	2d00      	cmp	r5, #0
 801871c:	f000 80e4 	beq.w	80188e8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8018720:	7852      	ldrb	r2, [r2, #1]
 8018722:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8018726:	0e0b      	lsrs	r3, r1, #24
 8018728:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801872c:	9300      	str	r3, [sp, #0]
 801872e:	b2a4      	uxth	r4, r4
 8018730:	b2ab      	uxth	r3, r5
 8018732:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 8018736:	fb03 f904 	mul.w	r9, r3, r4
 801873a:	fb0a f505 	mul.w	r5, sl, r5
 801873e:	011b      	lsls	r3, r3, #4
 8018740:	eba3 0e09 	sub.w	lr, r3, r9
 8018744:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 8018748:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 801874c:	0a28      	lsrs	r0, r5, #8
 801874e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8018752:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 8018756:	4405      	add	r5, r0
 8018758:	0a2d      	lsrs	r5, r5, #8
 801875a:	fb0a f303 	mul.w	r3, sl, r3
 801875e:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8018762:	9005      	str	r0, [sp, #20]
 8018764:	f503 7080 	add.w	r0, r3, #256	; 0x100
 8018768:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801876c:	0a1b      	lsrs	r3, r3, #8
 801876e:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8018772:	9306      	str	r3, [sp, #24]
 8018774:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 8018778:	fb0b f303 	mul.w	r3, fp, r3
 801877c:	0a1d      	lsrs	r5, r3, #8
 801877e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018782:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8018786:	fb0b f606 	mul.w	r6, fp, r6
 801878a:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801878e:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8018792:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8018796:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801879a:	fb08 f707 	mul.w	r7, r8, r7
 801879e:	441d      	add	r5, r3
 80187a0:	f506 7380 	add.w	r3, r6, #256	; 0x100
 80187a4:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80187a8:	f507 7380 	add.w	r3, r7, #256	; 0x100
 80187ac:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 80187b0:	fb08 fc0c 	mul.w	ip, r8, ip
 80187b4:	0a1b      	lsrs	r3, r3, #8
 80187b6:	9307      	str	r3, [sp, #28]
 80187b8:	ea4f 201c 	mov.w	r0, ip, lsr #8
 80187bc:	0e0b      	lsrs	r3, r1, #24
 80187be:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 80187c2:	435f      	muls	r7, r3
 80187c4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80187c8:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80187cc:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 80187d0:	4460      	add	r0, ip
 80187d2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80187d6:	b2a4      	uxth	r4, r4
 80187d8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80187dc:	0a2d      	lsrs	r5, r5, #8
 80187de:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80187e2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80187e6:	fa1f fe8e 	uxth.w	lr, lr
 80187ea:	4359      	muls	r1, r3
 80187ec:	1b12      	subs	r2, r2, r4
 80187ee:	9b05      	ldr	r3, [sp, #20]
 80187f0:	44bc      	add	ip, r7
 80187f2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80187f6:	b292      	uxth	r2, r2
 80187f8:	fb05 f50e 	mul.w	r5, r5, lr
 80187fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018800:	fb03 5502 	mla	r5, r3, r2, r5
 8018804:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018808:	9b06      	ldr	r3, [sp, #24]
 801880a:	f501 7780 	add.w	r7, r1, #256	; 0x100
 801880e:	0a36      	lsrs	r6, r6, #8
 8018810:	0a00      	lsrs	r0, r0, #8
 8018812:	fb0c 5509 	mla	r5, ip, r9, r5
 8018816:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801881a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801881e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018822:	fb00 5504 	mla	r5, r0, r4, r5
 8018826:	fb0e f606 	mul.w	r6, lr, r6
 801882a:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801882e:	0a09      	lsrs	r1, r1, #8
 8018830:	9b07      	ldr	r3, [sp, #28]
 8018832:	fb02 6000 	mla	r0, r2, r0, r6
 8018836:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801883a:	fb09 0001 	mla	r0, r9, r1, r0
 801883e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018842:	fb0e fe0b 	mul.w	lr, lr, fp
 8018846:	fb04 0003 	mla	r0, r4, r3, r0
 801884a:	fb02 e20a 	mla	r2, r2, sl, lr
 801884e:	9b00      	ldr	r3, [sp, #0]
 8018850:	fb04 2408 	mla	r4, r4, r8, r2
 8018854:	fb09 4903 	mla	r9, r9, r3, r4
 8018858:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801885c:	9b02      	ldr	r3, [sp, #8]
 801885e:	9a04      	ldr	r2, [sp, #16]
 8018860:	fa5f f989 	uxtb.w	r9, r9
 8018864:	fb03 f109 	mul.w	r1, r3, r9
 8018868:	9b03      	ldr	r3, [sp, #12]
 801886a:	0a2d      	lsrs	r5, r5, #8
 801886c:	0a00      	lsrs	r0, r0, #8
 801886e:	fb03 f309 	mul.w	r3, r3, r9
 8018872:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8018876:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801887a:	4305      	orrs	r5, r0
 801887c:	fb02 f909 	mul.w	r9, r2, r9
 8018880:	1c58      	adds	r0, r3, #1
 8018882:	1c4a      	adds	r2, r1, #1
 8018884:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8018888:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801888c:	0a2b      	lsrs	r3, r5, #8
 801888e:	0c2a      	lsrs	r2, r5, #16
 8018890:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8018894:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8018898:	00db      	lsls	r3, r3, #3
 801889a:	0212      	lsls	r2, r2, #8
 801889c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80188a0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80188a4:	4313      	orrs	r3, r2
 80188a6:	f109 0201 	add.w	r2, r9, #1
 80188aa:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 80188ae:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 80188b2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80188b6:	431d      	orrs	r5, r3
 80188b8:	9b01      	ldr	r3, [sp, #4]
 80188ba:	801d      	strh	r5, [r3, #0]
 80188bc:	b009      	add	sp, #36	; 0x24
 80188be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80188c2:	2000      	movs	r0, #0
 80188c4:	e701      	b.n	80186ca <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 80188c6:	2600      	movs	r6, #0
 80188c8:	4630      	mov	r0, r6
 80188ca:	e70b      	b.n	80186e4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 80188cc:	2600      	movs	r6, #0
 80188ce:	e709      	b.n	80186e4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 80188d0:	462e      	mov	r6, r5
 80188d2:	e707      	b.n	80186e4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 80188d4:	2700      	movs	r7, #0
 80188d6:	e71a      	b.n	801870e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 80188d8:	2100      	movs	r1, #0
 80188da:	460f      	mov	r7, r1
 80188dc:	e723      	b.n	8018726 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80188de:	4621      	mov	r1, r4
 80188e0:	4627      	mov	r7, r4
 80188e2:	e720      	b.n	8018726 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80188e4:	2100      	movs	r1, #0
 80188e6:	e71e      	b.n	8018726 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80188e8:	4629      	mov	r1, r5
 80188ea:	e71c      	b.n	8018726 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

080188ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80188ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80188f0:	b09b      	sub	sp, #108	; 0x6c
 80188f2:	9218      	str	r2, [sp, #96]	; 0x60
 80188f4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80188f6:	9116      	str	r1, [sp, #88]	; 0x58
 80188f8:	9307      	str	r3, [sp, #28]
 80188fa:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 80188fe:	9019      	str	r0, [sp, #100]	; 0x64
 8018900:	6850      	ldr	r0, [r2, #4]
 8018902:	6812      	ldr	r2, [r2, #0]
 8018904:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8018906:	fb00 1303 	mla	r3, r0, r3, r1
 801890a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801890e:	930a      	str	r3, [sp, #40]	; 0x28
 8018910:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018912:	681b      	ldr	r3, [r3, #0]
 8018914:	930f      	str	r3, [sp, #60]	; 0x3c
 8018916:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018918:	685e      	ldr	r6, [r3, #4]
 801891a:	3604      	adds	r6, #4
 801891c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801891e:	2b00      	cmp	r3, #0
 8018920:	dc03      	bgt.n	801892a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8018922:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8018924:	2b00      	cmp	r3, #0
 8018926:	f340 8373 	ble.w	8019010 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801892a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801892c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018930:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018934:	1e48      	subs	r0, r1, #1
 8018936:	1e57      	subs	r7, r2, #1
 8018938:	9b07      	ldr	r3, [sp, #28]
 801893a:	2b00      	cmp	r3, #0
 801893c:	f340 8190 	ble.w	8018c60 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8018940:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8018942:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8018946:	ea4f 4325 	mov.w	r3, r5, asr #16
 801894a:	d406      	bmi.n	801895a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801894c:	4584      	cmp	ip, r0
 801894e:	da04      	bge.n	801895a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8018950:	2b00      	cmp	r3, #0
 8018952:	db02      	blt.n	801895a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8018954:	42bb      	cmp	r3, r7
 8018956:	f2c0 8184 	blt.w	8018c62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801895a:	f11c 0c01 	adds.w	ip, ip, #1
 801895e:	f100 8172 	bmi.w	8018c46 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8018962:	4561      	cmp	r1, ip
 8018964:	f2c0 816f 	blt.w	8018c46 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8018968:	3301      	adds	r3, #1
 801896a:	f100 816c 	bmi.w	8018c46 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801896e:	429a      	cmp	r2, r3
 8018970:	f2c0 8169 	blt.w	8018c46 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8018974:	9b07      	ldr	r3, [sp, #28]
 8018976:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8018978:	9317      	str	r3, [sp, #92]	; 0x5c
 801897a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801897c:	2b00      	cmp	r3, #0
 801897e:	f340 818e 	ble.w	8018c9e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8018982:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018984:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8018988:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801898a:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801898e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018990:	141b      	asrs	r3, r3, #16
 8018992:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8018996:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801899a:	f100 81d1 	bmi.w	8018d40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801899e:	f101 38ff 	add.w	r8, r1, #4294967295
 80189a2:	4543      	cmp	r3, r8
 80189a4:	f280 81cc 	bge.w	8018d40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80189a8:	f1bc 0f00 	cmp.w	ip, #0
 80189ac:	f2c0 81c8 	blt.w	8018d40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80189b0:	f10e 38ff 	add.w	r8, lr, #4294967295
 80189b4:	45c4      	cmp	ip, r8
 80189b6:	f280 81c3 	bge.w	8018d40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80189ba:	b209      	sxth	r1, r1
 80189bc:	fb0c 3301 	mla	r3, ip, r1, r3
 80189c0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80189c2:	eb04 0803 	add.w	r8, r4, r3
 80189c6:	5ce3      	ldrb	r3, [r4, r3]
 80189c8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80189cc:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80189d0:	2a00      	cmp	r2, #0
 80189d2:	f000 81aa 	beq.w	8018d2a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 80189d6:	f898 c001 	ldrb.w	ip, [r8, #1]
 80189da:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80189de:	940b      	str	r4, [sp, #44]	; 0x2c
 80189e0:	0e24      	lsrs	r4, r4, #24
 80189e2:	9412      	str	r4, [sp, #72]	; 0x48
 80189e4:	b178      	cbz	r0, 8018a06 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 80189e6:	eb08 0c01 	add.w	ip, r8, r1
 80189ea:	f818 1001 	ldrb.w	r1, [r8, r1]
 80189ee:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80189f2:	9108      	str	r1, [sp, #32]
 80189f4:	0e09      	lsrs	r1, r1, #24
 80189f6:	9110      	str	r1, [sp, #64]	; 0x40
 80189f8:	f89c 1001 	ldrb.w	r1, [ip, #1]
 80189fc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018a00:	910c      	str	r1, [sp, #48]	; 0x30
 8018a02:	0e09      	lsrs	r1, r1, #24
 8018a04:	9113      	str	r1, [sp, #76]	; 0x4c
 8018a06:	b292      	uxth	r2, r2
 8018a08:	b280      	uxth	r0, r0
 8018a0a:	fb02 f900 	mul.w	r9, r2, r0
 8018a0e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8018a12:	0112      	lsls	r2, r2, #4
 8018a14:	eba2 0809 	sub.w	r8, r2, r9
 8018a18:	b280      	uxth	r0, r0
 8018a1a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8018a1e:	9912      	ldr	r1, [sp, #72]	; 0x48
 8018a20:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8018a22:	fa1f f888 	uxth.w	r8, r8
 8018a26:	1a12      	subs	r2, r2, r0
 8018a28:	b292      	uxth	r2, r2
 8018a2a:	fb08 f101 	mul.w	r1, r8, r1
 8018a2e:	fb02 110e 	mla	r1, r2, lr, r1
 8018a32:	fb00 1104 	mla	r1, r0, r4, r1
 8018a36:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018a38:	fb09 1104 	mla	r1, r9, r4, r1
 8018a3c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8018a40:	2900      	cmp	r1, #0
 8018a42:	f000 80f5 	beq.w	8018c30 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8018a46:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8018a4a:	d01b      	beq.n	8018a84 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8018a4c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8018a50:	fb0e fa0a 	mul.w	sl, lr, sl
 8018a54:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018a58:	fb0e fe03 	mul.w	lr, lr, r3
 8018a5c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8018a60:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018a64:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8018a68:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8018a6c:	4453      	add	r3, sl
 8018a6e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8018a72:	0a1b      	lsrs	r3, r3, #8
 8018a74:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018a78:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018a7c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8018a80:	ea43 030c 	orr.w	r3, r3, ip
 8018a84:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8018a86:	2cff      	cmp	r4, #255	; 0xff
 8018a88:	d021      	beq.n	8018ace <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8018a8a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018a8c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8018a90:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8018a92:	fb04 fb0b 	mul.w	fp, r4, fp
 8018a96:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018a98:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8018a9c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8018a9e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8018aa2:	fb04 fa0a 	mul.w	sl, r4, sl
 8018aa6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018aaa:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8018aae:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8018ab2:	44de      	add	lr, fp
 8018ab4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018ab8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018abc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018ac0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018ac4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018ac8:	ea4e 040a 	orr.w	r4, lr, sl
 8018acc:	940b      	str	r4, [sp, #44]	; 0x2c
 8018ace:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8018ad0:	2cff      	cmp	r4, #255	; 0xff
 8018ad2:	d021      	beq.n	8018b18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8018ad4:	9c08      	ldr	r4, [sp, #32]
 8018ad6:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8018ada:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8018adc:	fb04 fb0b 	mul.w	fp, r4, fp
 8018ae0:	9c08      	ldr	r4, [sp, #32]
 8018ae2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8018ae6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8018ae8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8018aec:	fb04 fa0a 	mul.w	sl, r4, sl
 8018af0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018af4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8018af8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8018afc:	44de      	add	lr, fp
 8018afe:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018b02:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018b06:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018b0a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018b0e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018b12:	ea4e 040a 	orr.w	r4, lr, sl
 8018b16:	9408      	str	r4, [sp, #32]
 8018b18:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018b1a:	2cff      	cmp	r4, #255	; 0xff
 8018b1c:	d021      	beq.n	8018b62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8018b1e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8018b20:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8018b24:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018b26:	fb04 fb0b 	mul.w	fp, r4, fp
 8018b2a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8018b2c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8018b30:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018b32:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8018b36:	fb04 fa0a 	mul.w	sl, r4, sl
 8018b3a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018b3e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8018b42:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8018b46:	44de      	add	lr, fp
 8018b48:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018b4c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018b50:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018b54:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018b58:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018b5c:	ea4e 040a 	orr.w	r4, lr, sl
 8018b60:	940c      	str	r4, [sp, #48]	; 0x30
 8018b62:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018b64:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8018b68:	9c08      	ldr	r4, [sp, #32]
 8018b6a:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8018b6e:	fb08 fc0c 	mul.w	ip, r8, ip
 8018b72:	fb02 cc0e 	mla	ip, r2, lr, ip
 8018b76:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8018b7a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8018b7c:	fb00 cc0e 	mla	ip, r0, lr, ip
 8018b80:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8018b84:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018b86:	fb09 cc0e 	mla	ip, r9, lr, ip
 8018b8a:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8018b8e:	fb08 f80e 	mul.w	r8, r8, lr
 8018b92:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018b96:	fb02 8303 	mla	r3, r2, r3, r8
 8018b9a:	9a08      	ldr	r2, [sp, #32]
 8018b9c:	f8b7 8000 	ldrh.w	r8, [r7]
 8018ba0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8018ba4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8018ba6:	fb00 330a 	mla	r3, r0, sl, r3
 8018baa:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8018bae:	fb09 3900 	mla	r9, r9, r0, r3
 8018bb2:	43c9      	mvns	r1, r1
 8018bb4:	ea4f 2228 	mov.w	r2, r8, asr #8
 8018bb8:	fa5f fe81 	uxtb.w	lr, r1
 8018bbc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018bc0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018bc4:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8018bc8:	fb02 f20e 	mul.w	r2, r2, lr
 8018bcc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018bd0:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8018bd4:	ea4c 0c09 	orr.w	ip, ip, r9
 8018bd8:	1c53      	adds	r3, r2, #1
 8018bda:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8018bde:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8018be2:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8018be6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018bea:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8018bee:	4a63      	ldr	r2, [pc, #396]	; (8018d7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8018bf0:	fb00 f00e 	mul.w	r0, r0, lr
 8018bf4:	b2db      	uxtb	r3, r3
 8018bf6:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8018bfa:	1c43      	adds	r3, r0, #1
 8018bfc:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8018c00:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8018c04:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8018c08:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8018c0c:	b2c9      	uxtb	r1, r1
 8018c0e:	00db      	lsls	r3, r3, #3
 8018c10:	fb01 f10e 	mul.w	r1, r1, lr
 8018c14:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018c18:	4313      	orrs	r3, r2
 8018c1a:	1c4a      	adds	r2, r1, #1
 8018c1c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018c20:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8018c24:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8018c28:	ea4c 0c03 	orr.w	ip, ip, r3
 8018c2c:	f8a7 c000 	strh.w	ip, [r7]
 8018c30:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8018c32:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8018c34:	441a      	add	r2, r3
 8018c36:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018c38:	9225      	str	r2, [sp, #148]	; 0x94
 8018c3a:	441d      	add	r5, r3
 8018c3c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8018c3e:	3b01      	subs	r3, #1
 8018c40:	3702      	adds	r7, #2
 8018c42:	9317      	str	r3, [sp, #92]	; 0x5c
 8018c44:	e699      	b.n	801897a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8018c46:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8018c48:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8018c4a:	441c      	add	r4, r3
 8018c4c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018c4e:	9425      	str	r4, [sp, #148]	; 0x94
 8018c50:	441d      	add	r5, r3
 8018c52:	9b07      	ldr	r3, [sp, #28]
 8018c54:	3b01      	subs	r3, #1
 8018c56:	9307      	str	r3, [sp, #28]
 8018c58:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018c5a:	3302      	adds	r3, #2
 8018c5c:	930a      	str	r3, [sp, #40]	; 0x28
 8018c5e:	e66b      	b.n	8018938 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8018c60:	d024      	beq.n	8018cac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8018c62:	9b07      	ldr	r3, [sp, #28]
 8018c64:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8018c66:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8018c68:	3b01      	subs	r3, #1
 8018c6a:	fb00 4003 	mla	r0, r0, r3, r4
 8018c6e:	1400      	asrs	r0, r0, #16
 8018c70:	f53f ae80 	bmi.w	8018974 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8018c74:	3901      	subs	r1, #1
 8018c76:	4288      	cmp	r0, r1
 8018c78:	f6bf ae7c 	bge.w	8018974 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8018c7c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8018c7e:	fb01 5303 	mla	r3, r1, r3, r5
 8018c82:	141b      	asrs	r3, r3, #16
 8018c84:	f53f ae76 	bmi.w	8018974 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8018c88:	3a01      	subs	r2, #1
 8018c8a:	4293      	cmp	r3, r2
 8018c8c:	f6bf ae72 	bge.w	8018974 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8018c90:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8018c94:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8018c98:	f1bb 0f00 	cmp.w	fp, #0
 8018c9c:	dc70      	bgt.n	8018d80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8018c9e:	9b07      	ldr	r3, [sp, #28]
 8018ca0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8018ca4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018ca6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8018caa:	930a      	str	r3, [sp, #40]	; 0x28
 8018cac:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8018cae:	2b00      	cmp	r3, #0
 8018cb0:	f340 81ae 	ble.w	8019010 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8018cb4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018cb8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018cbc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018cc0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018cc2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018cc6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018cca:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018cce:	eef0 6a62 	vmov.f32	s13, s5
 8018cd2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018cd6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018cda:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018cde:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8018ce2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018ce6:	eef0 6a43 	vmov.f32	s13, s6
 8018cea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018cee:	ee12 2a90 	vmov	r2, s5
 8018cf2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018cf6:	fb92 f3f3 	sdiv	r3, r2, r3
 8018cfa:	ee13 2a10 	vmov	r2, s6
 8018cfe:	9327      	str	r3, [sp, #156]	; 0x9c
 8018d00:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018d02:	fb92 f3f3 	sdiv	r3, r2, r3
 8018d06:	9328      	str	r3, [sp, #160]	; 0xa0
 8018d08:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8018d0a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8018d0c:	3b01      	subs	r3, #1
 8018d0e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018d12:	9316      	str	r3, [sp, #88]	; 0x58
 8018d14:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018d16:	bf08      	it	eq
 8018d18:	4613      	moveq	r3, r2
 8018d1a:	ee16 5a90 	vmov	r5, s13
 8018d1e:	9307      	str	r3, [sp, #28]
 8018d20:	eeb0 3a67 	vmov.f32	s6, s15
 8018d24:	eef0 2a47 	vmov.f32	s5, s14
 8018d28:	e5f8      	b.n	801891c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8018d2a:	2800      	cmp	r0, #0
 8018d2c:	f43f ae6b 	beq.w	8018a06 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8018d30:	f818 1001 	ldrb.w	r1, [r8, r1]
 8018d34:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018d38:	9108      	str	r1, [sp, #32]
 8018d3a:	0e09      	lsrs	r1, r1, #24
 8018d3c:	9110      	str	r1, [sp, #64]	; 0x40
 8018d3e:	e662      	b.n	8018a06 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8018d40:	f113 0801 	adds.w	r8, r3, #1
 8018d44:	f53f af74 	bmi.w	8018c30 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8018d48:	4541      	cmp	r1, r8
 8018d4a:	f6ff af71 	blt.w	8018c30 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8018d4e:	f11c 0801 	adds.w	r8, ip, #1
 8018d52:	f53f af6d 	bmi.w	8018c30 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8018d56:	45c6      	cmp	lr, r8
 8018d58:	f6ff af6a 	blt.w	8018c30 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8018d5c:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8018d60:	b209      	sxth	r1, r1
 8018d62:	fa0f f38e 	sxth.w	r3, lr
 8018d66:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8018d6a:	9301      	str	r3, [sp, #4]
 8018d6c:	9100      	str	r1, [sp, #0]
 8018d6e:	4633      	mov	r3, r6
 8018d70:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018d72:	9819      	ldr	r0, [sp, #100]	; 0x64
 8018d74:	4639      	mov	r1, r7
 8018d76:	f7ff fc7a 	bl	801866e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8018d7a:	e759      	b.n	8018c30 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8018d7c:	fffff800 	.word	0xfffff800
 8018d80:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018d82:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8018d84:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8018d88:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018d8a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018d8e:	1427      	asrs	r7, r4, #16
 8018d90:	142b      	asrs	r3, r5, #16
 8018d92:	fb01 7303 	mla	r3, r1, r3, r7
 8018d96:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8018d98:	18e7      	adds	r7, r4, r3
 8018d9a:	5ce3      	ldrb	r3, [r4, r3]
 8018d9c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8018da0:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8018da4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8018da8:	2a00      	cmp	r2, #0
 8018daa:	f000 8127 	beq.w	8018ffc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8018dae:	f897 e001 	ldrb.w	lr, [r7, #1]
 8018db2:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8018db6:	940d      	str	r4, [sp, #52]	; 0x34
 8018db8:	0e24      	lsrs	r4, r4, #24
 8018dba:	9414      	str	r4, [sp, #80]	; 0x50
 8018dbc:	b170      	cbz	r0, 8018ddc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8018dbe:	eb07 0e01 	add.w	lr, r7, r1
 8018dc2:	5c79      	ldrb	r1, [r7, r1]
 8018dc4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018dc8:	9109      	str	r1, [sp, #36]	; 0x24
 8018dca:	0e09      	lsrs	r1, r1, #24
 8018dcc:	9111      	str	r1, [sp, #68]	; 0x44
 8018dce:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8018dd2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018dd6:	910e      	str	r1, [sp, #56]	; 0x38
 8018dd8:	0e09      	lsrs	r1, r1, #24
 8018dda:	9115      	str	r1, [sp, #84]	; 0x54
 8018ddc:	b292      	uxth	r2, r2
 8018dde:	b280      	uxth	r0, r0
 8018de0:	fb02 f800 	mul.w	r8, r2, r0
 8018de4:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8018de8:	0112      	lsls	r2, r2, #4
 8018dea:	eba2 0e08 	sub.w	lr, r2, r8
 8018dee:	b280      	uxth	r0, r0
 8018df0:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8018df4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018df6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8018df8:	fa1f fe8e 	uxth.w	lr, lr
 8018dfc:	1a09      	subs	r1, r1, r0
 8018dfe:	b289      	uxth	r1, r1
 8018e00:	fb0e f202 	mul.w	r2, lr, r2
 8018e04:	fb01 220c 	mla	r2, r1, ip, r2
 8018e08:	fb00 2204 	mla	r2, r0, r4, r2
 8018e0c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8018e0e:	fb08 2204 	mla	r2, r8, r4, r2
 8018e12:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8018e16:	2a00      	cmp	r2, #0
 8018e18:	f000 80e5 	beq.w	8018fe6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8018e1c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8018e20:	d019      	beq.n	8018e56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8018e22:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8018e26:	fb0c fa0a 	mul.w	sl, ip, sl
 8018e2a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018e2e:	fb0c fc03 	mul.w	ip, ip, r3
 8018e32:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8018e36:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018e3a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8018e3e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8018e42:	4453      	add	r3, sl
 8018e44:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8018e48:	0a1b      	lsrs	r3, r3, #8
 8018e4a:	0a3f      	lsrs	r7, r7, #8
 8018e4c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018e50:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8018e54:	433b      	orrs	r3, r7
 8018e56:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018e58:	2cff      	cmp	r4, #255	; 0xff
 8018e5a:	d020      	beq.n	8018e9e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8018e5c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8018e5e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8018e62:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018e64:	4367      	muls	r7, r4
 8018e66:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8018e68:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8018e6c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018e6e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018e72:	fb04 fa0a 	mul.w	sl, r4, sl
 8018e76:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8018e7a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018e7e:	44bc      	add	ip, r7
 8018e80:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8018e84:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018e88:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018e8c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018e90:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018e94:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018e98:	ea4c 040a 	orr.w	r4, ip, sl
 8018e9c:	940d      	str	r4, [sp, #52]	; 0x34
 8018e9e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8018ea0:	2cff      	cmp	r4, #255	; 0xff
 8018ea2:	d020      	beq.n	8018ee6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8018ea4:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8018ea6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8018eaa:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8018eac:	4367      	muls	r7, r4
 8018eae:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8018eb0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8018eb4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8018eb6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018eba:	fb04 fa0a 	mul.w	sl, r4, sl
 8018ebe:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8018ec2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018ec6:	44bc      	add	ip, r7
 8018ec8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8018ecc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018ed0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018ed4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018ed8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018edc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018ee0:	ea4c 040a 	orr.w	r4, ip, sl
 8018ee4:	9409      	str	r4, [sp, #36]	; 0x24
 8018ee6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8018ee8:	2cff      	cmp	r4, #255	; 0xff
 8018eea:	d020      	beq.n	8018f2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8018eec:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8018eee:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8018ef2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8018ef4:	4367      	muls	r7, r4
 8018ef6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8018ef8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8018efc:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8018efe:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018f02:	fb04 fa0a 	mul.w	sl, r4, sl
 8018f06:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8018f0a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018f0e:	44bc      	add	ip, r7
 8018f10:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8018f14:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018f18:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018f1c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018f20:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018f24:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018f28:	ea4c 040a 	orr.w	r4, ip, sl
 8018f2c:	940e      	str	r4, [sp, #56]	; 0x38
 8018f2e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8018f30:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8018f34:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8018f36:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8018f3a:	fb0e f707 	mul.w	r7, lr, r7
 8018f3e:	fb01 770c 	mla	r7, r1, ip, r7
 8018f42:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8018f46:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8018f48:	fb00 770c 	mla	r7, r0, ip, r7
 8018f4c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8018f50:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8018f52:	fb08 770c 	mla	r7, r8, ip, r7
 8018f56:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8018f5a:	fb0e fe0c 	mul.w	lr, lr, ip
 8018f5e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018f62:	fb01 e303 	mla	r3, r1, r3, lr
 8018f66:	9909      	ldr	r1, [sp, #36]	; 0x24
 8018f68:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8018f6c:	990e      	ldr	r1, [sp, #56]	; 0x38
 8018f6e:	fb00 330a 	mla	r3, r0, sl, r3
 8018f72:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8018f76:	fb08 3c0c 	mla	ip, r8, ip, r3
 8018f7a:	f8b9 3000 	ldrh.w	r3, [r9]
 8018f7e:	43d2      	mvns	r2, r2
 8018f80:	1218      	asrs	r0, r3, #8
 8018f82:	b2d2      	uxtb	r2, r2
 8018f84:	10d9      	asrs	r1, r3, #3
 8018f86:	0a3f      	lsrs	r7, r7, #8
 8018f88:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018f8c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018f90:	00db      	lsls	r3, r3, #3
 8018f92:	4350      	muls	r0, r2
 8018f94:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8018f98:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8018f9c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018fa0:	b2db      	uxtb	r3, r3
 8018fa2:	ea47 070c 	orr.w	r7, r7, ip
 8018fa6:	4351      	muls	r1, r2
 8018fa8:	4353      	muls	r3, r2
 8018faa:	1c42      	adds	r2, r0, #1
 8018fac:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8018fb0:	0c3a      	lsrs	r2, r7, #16
 8018fb2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8018fb6:	4a18      	ldr	r2, [pc, #96]	; (8019018 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8018fb8:	b2c0      	uxtb	r0, r0
 8018fba:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8018fbe:	1c4a      	adds	r2, r1, #1
 8018fc0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018fc4:	0a3a      	lsrs	r2, r7, #8
 8018fc6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018fca:	00c9      	lsls	r1, r1, #3
 8018fcc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018fd0:	4301      	orrs	r1, r0
 8018fd2:	1c58      	adds	r0, r3, #1
 8018fd4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8018fd8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8018fdc:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8018fe0:	4308      	orrs	r0, r1
 8018fe2:	f8a9 0000 	strh.w	r0, [r9]
 8018fe6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8018fe8:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8018fea:	441a      	add	r2, r3
 8018fec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018fee:	9225      	str	r2, [sp, #148]	; 0x94
 8018ff0:	f109 0902 	add.w	r9, r9, #2
 8018ff4:	441d      	add	r5, r3
 8018ff6:	f10b 3bff 	add.w	fp, fp, #4294967295
 8018ffa:	e64d      	b.n	8018c98 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8018ffc:	2800      	cmp	r0, #0
 8018ffe:	f43f aeed 	beq.w	8018ddc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8019002:	5c79      	ldrb	r1, [r7, r1]
 8019004:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8019008:	9109      	str	r1, [sp, #36]	; 0x24
 801900a:	0e09      	lsrs	r1, r1, #24
 801900c:	9111      	str	r1, [sp, #68]	; 0x44
 801900e:	e6e5      	b.n	8018ddc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8019010:	b01b      	add	sp, #108	; 0x6c
 8019012:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019016:	bf00      	nop
 8019018:	fffff800 	.word	0xfffff800

0801901c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801901c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019020:	b085      	sub	sp, #20
 8019022:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8019026:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801902a:	9103      	str	r1, [sp, #12]
 801902c:	fb00 7406 	mla	r4, r0, r6, r7
 8019030:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8019034:	2800      	cmp	r0, #0
 8019036:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801903a:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801903e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8019042:	9501      	str	r5, [sp, #4]
 8019044:	eb03 0904 	add.w	r9, r3, r4
 8019048:	f2c0 8150 	blt.w	80192ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801904c:	4583      	cmp	fp, r0
 801904e:	f340 814d 	ble.w	80192ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8019052:	2f00      	cmp	r7, #0
 8019054:	f2c0 8146 	blt.w	80192e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8019058:	42be      	cmp	r6, r7
 801905a:	f340 8143 	ble.w	80192e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801905e:	f813 c004 	ldrb.w	ip, [r3, r4]
 8019062:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8019066:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801906a:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801906e:	4355      	muls	r5, r2
 8019070:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019074:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8019078:	fb0c f203 	mul.w	r2, ip, r3
 801907c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8019080:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8019084:	441d      	add	r5, r3
 8019086:	f102 0320 	add.w	r3, r2, #32
 801908a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801908e:	0a1b      	lsrs	r3, r3, #8
 8019090:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8019094:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019098:	431c      	orrs	r4, r3
 801909a:	1c7b      	adds	r3, r7, #1
 801909c:	f100 812b 	bmi.w	80192f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80190a0:	429e      	cmp	r6, r3
 80190a2:	f340 8128 	ble.w	80192f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80190a6:	2900      	cmp	r1, #0
 80190a8:	f000 8128 	beq.w	80192fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 80190ac:	9a01      	ldr	r2, [sp, #4]
 80190ae:	f899 3001 	ldrb.w	r3, [r9, #1]
 80190b2:	8855      	ldrh	r5, [r2, #2]
 80190b4:	ea4f 08e3 	mov.w	r8, r3, asr #3
 80190b8:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 80190bc:	fb08 f802 	mul.w	r8, r8, r2
 80190c0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80190c4:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80190c8:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 80190cc:	435d      	muls	r5, r3
 80190ce:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80190d2:	44d0      	add	r8, sl
 80190d4:	f105 0a20 	add.w	sl, r5, #32
 80190d8:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80190dc:	0a2d      	lsrs	r5, r5, #8
 80190de:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80190e2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80190e6:	432a      	orrs	r2, r5
 80190e8:	3001      	adds	r0, #1
 80190ea:	f100 810d 	bmi.w	8019308 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80190ee:	4583      	cmp	fp, r0
 80190f0:	f340 810a 	ble.w	8019308 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80190f4:	f1be 0f00 	cmp.w	lr, #0
 80190f8:	f000 810b 	beq.w	8019312 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 80190fc:	2f00      	cmp	r7, #0
 80190fe:	f2c0 8100 	blt.w	8019302 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8019102:	42be      	cmp	r6, r7
 8019104:	f340 80fd 	ble.w	8019302 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8019108:	9801      	ldr	r0, [sp, #4]
 801910a:	f819 5006 	ldrb.w	r5, [r9, r6]
 801910e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8019112:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019116:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801911a:	fb0a fa00 	mul.w	sl, sl, r0
 801911e:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8019122:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8019126:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801912a:	fb05 f808 	mul.w	r8, r5, r8
 801912e:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8019132:	4482      	add	sl, r0
 8019134:	f108 0020 	add.w	r0, r8, #32
 8019138:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801913c:	0a00      	lsrs	r0, r0, #8
 801913e:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8019142:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019146:	ea4b 0b00 	orr.w	fp, fp, r0
 801914a:	3701      	adds	r7, #1
 801914c:	f100 80e6 	bmi.w	801931c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8019150:	42be      	cmp	r6, r7
 8019152:	f340 80e3 	ble.w	801931c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8019156:	2900      	cmp	r1, #0
 8019158:	f000 80e3 	beq.w	8019322 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801915c:	3601      	adds	r6, #1
 801915e:	9801      	ldr	r0, [sp, #4]
 8019160:	f819 7006 	ldrb.w	r7, [r9, r6]
 8019164:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8019168:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801916c:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8019170:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019174:	fb09 f906 	mul.w	r9, r9, r6
 8019178:	fb07 f800 	mul.w	r8, r7, r0
 801917c:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8019180:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8019184:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8019188:	44d1      	add	r9, sl
 801918a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801918e:	f108 0020 	add.w	r0, r8, #32
 8019192:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8019196:	0a00      	lsrs	r0, r0, #8
 8019198:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801919c:	4330      	orrs	r0, r6
 801919e:	b28e      	uxth	r6, r1
 80191a0:	fa1f f98e 	uxth.w	r9, lr
 80191a4:	fb06 f809 	mul.w	r8, r6, r9
 80191a8:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80191ac:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80191b0:	0136      	lsls	r6, r6, #4
 80191b2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80191b6:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80191ba:	9601      	str	r6, [sp, #4]
 80191bc:	ea4a 0404 	orr.w	r4, sl, r4
 80191c0:	fa1f f689 	uxth.w	r6, r9
 80191c4:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80191c8:	fb11 f90e 	smulbb	r9, r1, lr
 80191cc:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80191d0:	9602      	str	r6, [sp, #8]
 80191d2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80191d6:	4626      	mov	r6, r4
 80191d8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80191dc:	f1ce 0410 	rsb	r4, lr, #16
 80191e0:	1a64      	subs	r4, r4, r1
 80191e2:	ea4a 0202 	orr.w	r2, sl, r2
 80191e6:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80191ea:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80191ee:	434a      	muls	r2, r1
 80191f0:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80191f4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80191f8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80191fc:	fb04 2406 	mla	r4, r4, r6, r2
 8019200:	ea4a 0000 	orr.w	r0, sl, r0
 8019204:	fb09 4200 	mla	r2, r9, r0, r4
 8019208:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801920c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8019210:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8019214:	ea44 0b0b 	orr.w	fp, r4, fp
 8019218:	9c01      	ldr	r4, [sp, #4]
 801921a:	9e02      	ldr	r6, [sp, #8]
 801921c:	9903      	ldr	r1, [sp, #12]
 801921e:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 8019222:	1ba4      	subs	r4, r4, r6
 8019224:	9e01      	ldr	r6, [sp, #4]
 8019226:	8808      	ldrh	r0, [r1, #0]
 8019228:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 801922c:	eba6 0608 	sub.w	r6, r6, r8
 8019230:	b2b6      	uxth	r6, r6
 8019232:	b2a4      	uxth	r4, r4
 8019234:	4373      	muls	r3, r6
 8019236:	fb0c 3304 	mla	r3, ip, r4, r3
 801923a:	9c02      	ldr	r4, [sp, #8]
 801923c:	fb04 3505 	mla	r5, r4, r5, r3
 8019240:	fb08 5707 	mla	r7, r8, r7, r5
 8019244:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8019248:	b289      	uxth	r1, r1
 801924a:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801924e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8019252:	434f      	muls	r7, r1
 8019254:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8019258:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801925c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019260:	1c7b      	adds	r3, r7, #1
 8019262:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8019266:	ea42 0e0e 	orr.w	lr, r2, lr
 801926a:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801926e:	fa1f f28e 	uxth.w	r2, lr
 8019272:	1203      	asrs	r3, r0, #8
 8019274:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8019278:	b2ff      	uxtb	r7, r7
 801927a:	1215      	asrs	r5, r2, #8
 801927c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8019280:	fb13 f307 	smulbb	r3, r3, r7
 8019284:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8019288:	fb05 3501 	mla	r5, r5, r1, r3
 801928c:	10c3      	asrs	r3, r0, #3
 801928e:	10d4      	asrs	r4, r2, #3
 8019290:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8019294:	fb13 f307 	smulbb	r3, r3, r7
 8019298:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801929c:	fb04 3401 	mla	r4, r4, r1, r3
 80192a0:	00c3      	lsls	r3, r0, #3
 80192a2:	00d2      	lsls	r2, r2, #3
 80192a4:	b2db      	uxtb	r3, r3
 80192a6:	fb13 f307 	smulbb	r3, r3, r7
 80192aa:	b2d2      	uxtb	r2, r2
 80192ac:	fb02 3101 	mla	r1, r2, r1, r3
 80192b0:	b2ad      	uxth	r5, r5
 80192b2:	b289      	uxth	r1, r1
 80192b4:	b2a4      	uxth	r4, r4
 80192b6:	1c6b      	adds	r3, r5, #1
 80192b8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80192bc:	1c62      	adds	r2, r4, #1
 80192be:	1c4b      	adds	r3, r1, #1
 80192c0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80192c4:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80192c8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80192cc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80192d0:	0964      	lsrs	r4, r4, #5
 80192d2:	432b      	orrs	r3, r5
 80192d4:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80192d8:	9a03      	ldr	r2, [sp, #12]
 80192da:	4323      	orrs	r3, r4
 80192dc:	8013      	strh	r3, [r2, #0]
 80192de:	b005      	add	sp, #20
 80192e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80192e4:	f04f 0c00 	mov.w	ip, #0
 80192e8:	4664      	mov	r4, ip
 80192ea:	e6d6      	b.n	801909a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 80192ec:	2300      	movs	r3, #0
 80192ee:	469c      	mov	ip, r3
 80192f0:	461a      	mov	r2, r3
 80192f2:	461c      	mov	r4, r3
 80192f4:	e6f8      	b.n	80190e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80192f6:	2300      	movs	r3, #0
 80192f8:	461a      	mov	r2, r3
 80192fa:	e6f5      	b.n	80190e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80192fc:	460b      	mov	r3, r1
 80192fe:	460a      	mov	r2, r1
 8019300:	e6f2      	b.n	80190e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8019302:	2500      	movs	r5, #0
 8019304:	46ab      	mov	fp, r5
 8019306:	e720      	b.n	801914a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8019308:	2700      	movs	r7, #0
 801930a:	463d      	mov	r5, r7
 801930c:	4638      	mov	r0, r7
 801930e:	46bb      	mov	fp, r7
 8019310:	e745      	b.n	801919e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8019312:	4677      	mov	r7, lr
 8019314:	4675      	mov	r5, lr
 8019316:	4670      	mov	r0, lr
 8019318:	46f3      	mov	fp, lr
 801931a:	e740      	b.n	801919e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801931c:	2700      	movs	r7, #0
 801931e:	4638      	mov	r0, r7
 8019320:	e73d      	b.n	801919e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8019322:	460f      	mov	r7, r1
 8019324:	4608      	mov	r0, r1
 8019326:	e73a      	b.n	801919e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08019328 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019328:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801932c:	b097      	sub	sp, #92	; 0x5c
 801932e:	9214      	str	r2, [sp, #80]	; 0x50
 8019330:	9308      	str	r3, [sp, #32]
 8019332:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8019334:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8019338:	9312      	str	r3, [sp, #72]	; 0x48
 801933a:	9111      	str	r1, [sp, #68]	; 0x44
 801933c:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8019340:	9015      	str	r0, [sp, #84]	; 0x54
 8019342:	6850      	ldr	r0, [r2, #4]
 8019344:	6812      	ldr	r2, [r2, #0]
 8019346:	fb00 1303 	mla	r3, r0, r3, r1
 801934a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801934e:	9309      	str	r3, [sp, #36]	; 0x24
 8019350:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019352:	681b      	ldr	r3, [r3, #0]
 8019354:	930b      	str	r3, [sp, #44]	; 0x2c
 8019356:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019358:	685b      	ldr	r3, [r3, #4]
 801935a:	930c      	str	r3, [sp, #48]	; 0x30
 801935c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8019360:	930a      	str	r3, [sp, #40]	; 0x28
 8019362:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019364:	2b00      	cmp	r3, #0
 8019366:	dc03      	bgt.n	8019370 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8019368:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801936a:	2b00      	cmp	r3, #0
 801936c:	f340 83cb 	ble.w	8019b06 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8019370:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019372:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019376:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801937a:	1e48      	subs	r0, r1, #1
 801937c:	1e55      	subs	r5, r2, #1
 801937e:	9b08      	ldr	r3, [sp, #32]
 8019380:	2b00      	cmp	r3, #0
 8019382:	f340 81a3 	ble.w	80196cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8019386:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8019388:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801938a:	1436      	asrs	r6, r6, #16
 801938c:	ea4f 4323 	mov.w	r3, r3, asr #16
 8019390:	d406      	bmi.n	80193a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8019392:	4286      	cmp	r6, r0
 8019394:	da04      	bge.n	80193a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8019396:	2b00      	cmp	r3, #0
 8019398:	db02      	blt.n	80193a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801939a:	42ab      	cmp	r3, r5
 801939c:	f2c0 8197 	blt.w	80196ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80193a0:	3601      	adds	r6, #1
 80193a2:	f100 8184 	bmi.w	80196ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80193a6:	42b1      	cmp	r1, r6
 80193a8:	f2c0 8181 	blt.w	80196ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80193ac:	3301      	adds	r3, #1
 80193ae:	f100 817e 	bmi.w	80196ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80193b2:	429a      	cmp	r2, r3
 80193b4:	f2c0 817b 	blt.w	80196ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80193b8:	9b08      	ldr	r3, [sp, #32]
 80193ba:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80193bc:	9313      	str	r3, [sp, #76]	; 0x4c
 80193be:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80193c2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80193c4:	2b00      	cmp	r3, #0
 80193c6:	f340 81a4 	ble.w	8019712 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80193ca:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80193cc:	9d21      	ldr	r5, [sp, #132]	; 0x84
 80193ce:	1418      	asrs	r0, r3, #16
 80193d0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80193d2:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80193d6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80193d8:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80193dc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80193de:	142d      	asrs	r5, r5, #16
 80193e0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80193e4:	f100 81f8 	bmi.w	80197d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80193e8:	f102 3eff 	add.w	lr, r2, #4294967295
 80193ec:	4575      	cmp	r5, lr
 80193ee:	f280 81f3 	bge.w	80197d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80193f2:	2800      	cmp	r0, #0
 80193f4:	f2c0 81f0 	blt.w	80197d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80193f8:	f103 3eff 	add.w	lr, r3, #4294967295
 80193fc:	4570      	cmp	r0, lr
 80193fe:	f280 81eb 	bge.w	80197d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8019402:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019404:	b212      	sxth	r2, r2
 8019406:	fb00 5002 	mla	r0, r0, r2, r5
 801940a:	fa1f fe81 	uxth.w	lr, r1
 801940e:	eb03 0a00 	add.w	sl, r3, r0
 8019412:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8019416:	f813 9000 	ldrb.w	r9, [r3, r0]
 801941a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801941e:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8019422:	b29b      	uxth	r3, r3
 8019424:	f1bc 0f00 	cmp.w	ip, #0
 8019428:	f000 81b9 	beq.w	801979e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801942c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8019430:	940d      	str	r4, [sp, #52]	; 0x34
 8019432:	eb0a 0b02 	add.w	fp, sl, r2
 8019436:	fa1f fa8c 	uxth.w	sl, ip
 801943a:	fb0a fe0e 	mul.w	lr, sl, lr
 801943e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8019442:	fa1f fa8a 	uxth.w	sl, sl
 8019446:	eba5 050e 	sub.w	r5, r5, lr
 801944a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801944e:	940e      	str	r4, [sp, #56]	; 0x38
 8019450:	eba3 030a 	sub.w	r3, r3, sl
 8019454:	b2ad      	uxth	r5, r5
 8019456:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8019458:	b29b      	uxth	r3, r3
 801945a:	fb08 f505 	mul.w	r5, r8, r5
 801945e:	fb09 5303 	mla	r3, r9, r3, r5
 8019462:	fb0a 3304 	mla	r3, sl, r4, r3
 8019466:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8019468:	fb0e 3304 	mla	r3, lr, r4, r3
 801946c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019470:	2b00      	cmp	r3, #0
 8019472:	f000 810f 	beq.w	8019694 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8019476:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019478:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801947c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8019480:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8019484:	f000 8190 	beq.w	80197a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8019488:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801948c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8019490:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019494:	fb09 f000 	mul.w	r0, r9, r0
 8019498:	fb0a fe0e 	mul.w	lr, sl, lr
 801949c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80194a0:	f100 0b20 	add.w	fp, r0, #32
 80194a4:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80194a8:	44ce      	add	lr, r9
 80194aa:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80194ae:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80194b2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80194b6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80194ba:	ea4e 0909 	orr.w	r9, lr, r9
 80194be:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80194c2:	8868      	ldrh	r0, [r5, #2]
 80194c4:	d019      	beq.n	80194fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80194c6:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80194ca:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80194ce:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80194d2:	fb08 f800 	mul.w	r8, r8, r0
 80194d6:	fb0a fe0e 	mul.w	lr, sl, lr
 80194da:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80194de:	f108 0b20 	add.w	fp, r8, #32
 80194e2:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80194e6:	4486      	add	lr, r0
 80194e8:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80194ec:	0a00      	lsrs	r0, r0, #8
 80194ee:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80194f2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80194f6:	ea4e 0000 	orr.w	r0, lr, r0
 80194fa:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80194fe:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8019502:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8019506:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801950a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801950e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019512:	ea4e 0909 	orr.w	r9, lr, r9
 8019516:	ea4a 0000 	orr.w	r0, sl, r0
 801951a:	f1bc 0f00 	cmp.w	ip, #0
 801951e:	f000 8145 	beq.w	80197ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8019522:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8019526:	3a01      	subs	r2, #1
 8019528:	0052      	lsls	r2, r2, #1
 801952a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801952c:	3202      	adds	r2, #2
 801952e:	2cff      	cmp	r4, #255	; 0xff
 8019530:	eb05 0e02 	add.w	lr, r5, r2
 8019534:	5aaa      	ldrh	r2, [r5, r2]
 8019536:	d018      	beq.n	801956a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8019538:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801953c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019540:	fb04 fa02 	mul.w	sl, r4, r2
 8019544:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019548:	fb08 f805 	mul.w	r8, r8, r5
 801954c:	f10a 0520 	add.w	r5, sl, #32
 8019550:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8019554:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8019558:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801955c:	4442      	add	r2, r8
 801955e:	0a2d      	lsrs	r5, r5, #8
 8019560:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8019564:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019568:	432a      	orrs	r2, r5
 801956a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801956c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8019570:	2cff      	cmp	r4, #255	; 0xff
 8019572:	d01a      	beq.n	80195aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8019574:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8019578:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801957c:	fb04 fa05 	mul.w	sl, r4, r5
 8019580:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019584:	fb08 f80e 	mul.w	r8, r8, lr
 8019588:	f10a 0e20 	add.w	lr, sl, #32
 801958c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8019590:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8019594:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8019598:	4445      	add	r5, r8
 801959a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801959e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80195a2:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80195a6:	ea45 050e 	orr.w	r5, r5, lr
 80195aa:	fb1c fe01 	smulbb	lr, ip, r1
 80195ae:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80195b2:	f1cc 0810 	rsb	r8, ip, #16
 80195b6:	eba8 0801 	sub.w	r8, r8, r1
 80195ba:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80195be:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80195c2:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80195c6:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80195ca:	4341      	muls	r1, r0
 80195cc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80195d0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80195d4:	ea4a 0202 	orr.w	r2, sl, r2
 80195d8:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80195dc:	fb09 1108 	mla	r1, r9, r8, r1
 80195e0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80195e4:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80195e8:	fb0c 1102 	mla	r1, ip, r2, r1
 80195ec:	ea4b 0505 	orr.w	r5, fp, r5
 80195f0:	fb0e 1e05 	mla	lr, lr, r5, r1
 80195f4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80195f8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80195fc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019600:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8019604:	ea42 0e0e 	orr.w	lr, r2, lr
 8019608:	fa1f f28e 	uxth.w	r2, lr
 801960c:	2bff      	cmp	r3, #255	; 0xff
 801960e:	d103      	bne.n	8019618 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8019610:	9912      	ldr	r1, [sp, #72]	; 0x48
 8019612:	29ff      	cmp	r1, #255	; 0xff
 8019614:	f000 80de 	beq.w	80197d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8019618:	990a      	ldr	r1, [sp, #40]	; 0x28
 801961a:	8838      	ldrh	r0, [r7, #0]
 801961c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801961e:	434b      	muls	r3, r1
 8019620:	f103 0c01 	add.w	ip, r3, #1
 8019624:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8019628:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801962c:	fa5f fc83 	uxtb.w	ip, r3
 8019630:	1203      	asrs	r3, r0, #8
 8019632:	1215      	asrs	r5, r2, #8
 8019634:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8019638:	fb13 f30c 	smulbb	r3, r3, ip
 801963c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8019640:	fb05 3501 	mla	r5, r5, r1, r3
 8019644:	10c3      	asrs	r3, r0, #3
 8019646:	10d1      	asrs	r1, r2, #3
 8019648:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801964c:	fb13 f30c 	smulbb	r3, r3, ip
 8019650:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8019654:	fb01 3104 	mla	r1, r1, r4, r3
 8019658:	00c3      	lsls	r3, r0, #3
 801965a:	00d2      	lsls	r2, r2, #3
 801965c:	b2db      	uxtb	r3, r3
 801965e:	b2d2      	uxtb	r2, r2
 8019660:	fb13 f30c 	smulbb	r3, r3, ip
 8019664:	b2ad      	uxth	r5, r5
 8019666:	fb02 3304 	mla	r3, r2, r4, r3
 801966a:	b29a      	uxth	r2, r3
 801966c:	1c6b      	adds	r3, r5, #1
 801966e:	b289      	uxth	r1, r1
 8019670:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8019674:	1c53      	adds	r3, r2, #1
 8019676:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801967a:	1c4a      	adds	r2, r1, #1
 801967c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8019680:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8019684:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019688:	0949      	lsrs	r1, r1, #5
 801968a:	432b      	orrs	r3, r5
 801968c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019690:	430b      	orrs	r3, r1
 8019692:	803b      	strh	r3, [r7, #0]
 8019694:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8019696:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8019698:	4413      	add	r3, r2
 801969a:	9321      	str	r3, [sp, #132]	; 0x84
 801969c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801969e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80196a0:	441a      	add	r2, r3
 80196a2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80196a4:	9222      	str	r2, [sp, #136]	; 0x88
 80196a6:	3b01      	subs	r3, #1
 80196a8:	3702      	adds	r7, #2
 80196aa:	9313      	str	r3, [sp, #76]	; 0x4c
 80196ac:	e689      	b.n	80193c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80196ae:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80196b0:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 80196b2:	9c22      	ldr	r4, [sp, #136]	; 0x88
 80196b4:	4433      	add	r3, r6
 80196b6:	9321      	str	r3, [sp, #132]	; 0x84
 80196b8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80196ba:	441c      	add	r4, r3
 80196bc:	9b08      	ldr	r3, [sp, #32]
 80196be:	9422      	str	r4, [sp, #136]	; 0x88
 80196c0:	3b01      	subs	r3, #1
 80196c2:	9308      	str	r3, [sp, #32]
 80196c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80196c6:	3302      	adds	r3, #2
 80196c8:	9309      	str	r3, [sp, #36]	; 0x24
 80196ca:	e658      	b.n	801937e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 80196cc:	d028      	beq.n	8019720 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80196ce:	9b08      	ldr	r3, [sp, #32]
 80196d0:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80196d2:	9d21      	ldr	r5, [sp, #132]	; 0x84
 80196d4:	3b01      	subs	r3, #1
 80196d6:	fb00 5003 	mla	r0, r0, r3, r5
 80196da:	1400      	asrs	r0, r0, #16
 80196dc:	f53f ae6c 	bmi.w	80193b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80196e0:	3901      	subs	r1, #1
 80196e2:	4288      	cmp	r0, r1
 80196e4:	f6bf ae68 	bge.w	80193b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80196e8:	9924      	ldr	r1, [sp, #144]	; 0x90
 80196ea:	9822      	ldr	r0, [sp, #136]	; 0x88
 80196ec:	fb01 0303 	mla	r3, r1, r3, r0
 80196f0:	141b      	asrs	r3, r3, #16
 80196f2:	f53f ae61 	bmi.w	80193b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80196f6:	3a01      	subs	r2, #1
 80196f8:	4293      	cmp	r3, r2
 80196fa:	f6bf ae5d 	bge.w	80193b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80196fe:	9b08      	ldr	r3, [sp, #32]
 8019700:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8019704:	9313      	str	r3, [sp, #76]	; 0x4c
 8019706:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801970a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801970c:	2b00      	cmp	r3, #0
 801970e:	f300 8082 	bgt.w	8019816 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8019712:	9b08      	ldr	r3, [sp, #32]
 8019714:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019718:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801971a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801971e:	9309      	str	r3, [sp, #36]	; 0x24
 8019720:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019722:	2b00      	cmp	r3, #0
 8019724:	f340 81ef 	ble.w	8019b06 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8019728:	ee30 0a04 	vadd.f32	s0, s0, s8
 801972c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019730:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019734:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019736:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801973a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801973e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019742:	eef0 6a62 	vmov.f32	s13, s5
 8019746:	ee61 7a27 	vmul.f32	s15, s2, s15
 801974a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801974e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019752:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 8019756:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801975a:	eef0 6a43 	vmov.f32	s13, s6
 801975e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019762:	ee12 2a90 	vmov	r2, s5
 8019766:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801976a:	fb92 f3f3 	sdiv	r3, r2, r3
 801976e:	ee13 2a10 	vmov	r2, s6
 8019772:	9323      	str	r3, [sp, #140]	; 0x8c
 8019774:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019776:	fb92 f3f3 	sdiv	r3, r2, r3
 801977a:	9324      	str	r3, [sp, #144]	; 0x90
 801977c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801977e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019780:	3b01      	subs	r3, #1
 8019782:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019786:	9311      	str	r3, [sp, #68]	; 0x44
 8019788:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801978a:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 801978e:	bf08      	it	eq
 8019790:	4613      	moveq	r3, r2
 8019792:	9308      	str	r3, [sp, #32]
 8019794:	eeb0 3a67 	vmov.f32	s6, s15
 8019798:	eef0 2a47 	vmov.f32	s5, s14
 801979c:	e5e1      	b.n	8019362 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801979e:	fb08 f505 	mul.w	r5, r8, r5
 80197a2:	fb09 5303 	mla	r3, r9, r3, r5
 80197a6:	e661      	b.n	801946c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 80197a8:	4681      	mov	r9, r0
 80197aa:	e688      	b.n	80194be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 80197ac:	f1c1 0210 	rsb	r2, r1, #16
 80197b0:	4341      	muls	r1, r0
 80197b2:	fb09 1902 	mla	r9, r9, r2, r1
 80197b6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80197ba:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80197be:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80197c2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80197c6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80197ca:	ea42 0909 	orr.w	r9, r2, r9
 80197ce:	fa1f f289 	uxth.w	r2, r9
 80197d2:	e71b      	b.n	801960c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 80197d4:	803a      	strh	r2, [r7, #0]
 80197d6:	e75d      	b.n	8019694 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80197d8:	f115 0e01 	adds.w	lr, r5, #1
 80197dc:	f53f af5a 	bmi.w	8019694 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80197e0:	4572      	cmp	r2, lr
 80197e2:	f6ff af57 	blt.w	8019694 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80197e6:	f110 0e01 	adds.w	lr, r0, #1
 80197ea:	f53f af53 	bmi.w	8019694 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80197ee:	4573      	cmp	r3, lr
 80197f0:	f6ff af50 	blt.w	8019694 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80197f4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80197f6:	9502      	str	r5, [sp, #8]
 80197f8:	b21b      	sxth	r3, r3
 80197fa:	b212      	sxth	r2, r2
 80197fc:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8019800:	9301      	str	r3, [sp, #4]
 8019802:	9200      	str	r2, [sp, #0]
 8019804:	e9cd c405 	strd	ip, r4, [sp, #20]
 8019808:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 801980c:	4639      	mov	r1, r7
 801980e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8019810:	f7ff fc04 	bl	801901c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8019814:	e73e      	b.n	8019694 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8019816:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8019818:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801981c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801981e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8019822:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019824:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019828:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801982a:	141f      	asrs	r7, r3, #16
 801982c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801982e:	141b      	asrs	r3, r3, #16
 8019830:	fb01 3707 	mla	r7, r1, r7, r3
 8019834:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019836:	fa1f fc82 	uxth.w	ip, r2
 801983a:	eb03 0a07 	add.w	sl, r3, r7
 801983e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8019842:	f813 9007 	ldrb.w	r9, [r3, r7]
 8019846:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801984a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801984e:	b29b      	uxth	r3, r3
 8019850:	2d00      	cmp	r5, #0
 8019852:	f000 813d 	beq.w	8019ad0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8019856:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801985a:	940f      	str	r4, [sp, #60]	; 0x3c
 801985c:	eb0a 0b01 	add.w	fp, sl, r1
 8019860:	fa1f fa85 	uxth.w	sl, r5
 8019864:	fb0a fc0c 	mul.w	ip, sl, ip
 8019868:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801986c:	fa1f fa8a 	uxth.w	sl, sl
 8019870:	eba0 000c 	sub.w	r0, r0, ip
 8019874:	eba3 030a 	sub.w	r3, r3, sl
 8019878:	b280      	uxth	r0, r0
 801987a:	fb08 f000 	mul.w	r0, r8, r0
 801987e:	b29b      	uxth	r3, r3
 8019880:	fb09 0303 	mla	r3, r9, r3, r0
 8019884:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8019886:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801988a:	9410      	str	r4, [sp, #64]	; 0x40
 801988c:	fb0a 3300 	mla	r3, sl, r0, r3
 8019890:	fb0c 3304 	mla	r3, ip, r4, r3
 8019894:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019898:	2b00      	cmp	r3, #0
 801989a:	f000 810b 	beq.w	8019ab4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801989e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80198a0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80198a2:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80198a6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80198aa:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80198ae:	f000 8114 	beq.w	8019ada <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 80198b2:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80198b6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80198ba:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80198be:	fb09 f707 	mul.w	r7, r9, r7
 80198c2:	fb0a fc0c 	mul.w	ip, sl, ip
 80198c6:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80198ca:	f107 0b20 	add.w	fp, r7, #32
 80198ce:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80198d2:	44cc      	add	ip, r9
 80198d4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80198d8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80198dc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80198e0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80198e4:	ea4c 0909 	orr.w	r9, ip, r9
 80198e8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80198ec:	8847      	ldrh	r7, [r0, #2]
 80198ee:	d019      	beq.n	8019924 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 80198f0:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80198f4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80198f8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80198fc:	fb08 f807 	mul.w	r8, r8, r7
 8019900:	fb0a fc0c 	mul.w	ip, sl, ip
 8019904:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8019908:	f108 0b20 	add.w	fp, r8, #32
 801990c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8019910:	44bc      	add	ip, r7
 8019912:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8019916:	0a3f      	lsrs	r7, r7, #8
 8019918:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801991c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8019920:	ea4c 0707 	orr.w	r7, ip, r7
 8019924:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8019928:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801992c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019930:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8019934:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019938:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801993c:	ea4c 0909 	orr.w	r9, ip, r9
 8019940:	ea4a 0707 	orr.w	r7, sl, r7
 8019944:	2d00      	cmp	r5, #0
 8019946:	f000 80ca 	beq.w	8019ade <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801994a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801994e:	3901      	subs	r1, #1
 8019950:	0049      	lsls	r1, r1, #1
 8019952:	3102      	adds	r1, #2
 8019954:	eb00 0c01 	add.w	ip, r0, r1
 8019958:	5a41      	ldrh	r1, [r0, r1]
 801995a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801995c:	28ff      	cmp	r0, #255	; 0xff
 801995e:	d019      	beq.n	8019994 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8019960:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8019962:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8019966:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801996a:	fb04 fa01 	mul.w	sl, r4, r1
 801996e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019972:	fb08 f800 	mul.w	r8, r8, r0
 8019976:	f10a 0020 	add.w	r0, sl, #32
 801997a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801997e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8019982:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8019986:	4441      	add	r1, r8
 8019988:	0a00      	lsrs	r0, r0, #8
 801998a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801998e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019992:	4301      	orrs	r1, r0
 8019994:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8019996:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801999a:	2cff      	cmp	r4, #255	; 0xff
 801999c:	d01a      	beq.n	80199d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801999e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 80199a2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80199a6:	fb04 fa00 	mul.w	sl, r4, r0
 80199aa:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80199ae:	fb08 f80c 	mul.w	r8, r8, ip
 80199b2:	f10a 0c20 	add.w	ip, sl, #32
 80199b6:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80199ba:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80199be:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80199c2:	4440      	add	r0, r8
 80199c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80199c8:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80199cc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80199d0:	ea40 000c 	orr.w	r0, r0, ip
 80199d4:	fb15 fc02 	smulbb	ip, r5, r2
 80199d8:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80199dc:	f1c5 0810 	rsb	r8, r5, #16
 80199e0:	eba8 0802 	sub.w	r8, r8, r2
 80199e4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80199e8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80199ec:	437a      	muls	r2, r7
 80199ee:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80199f2:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80199f6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80199fa:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80199fe:	fb09 2208 	mla	r2, r9, r8, r2
 8019a02:	ea4a 0101 	orr.w	r1, sl, r1
 8019a06:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8019a0a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019a0e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019a12:	fb05 2201 	mla	r2, r5, r1, r2
 8019a16:	ea4b 0000 	orr.w	r0, fp, r0
 8019a1a:	fb0c 2200 	mla	r2, ip, r0, r2
 8019a1e:	0d57      	lsrs	r7, r2, #21
 8019a20:	0952      	lsrs	r2, r2, #5
 8019a22:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8019a26:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019a2a:	433a      	orrs	r2, r7
 8019a2c:	2bff      	cmp	r3, #255	; 0xff
 8019a2e:	b292      	uxth	r2, r2
 8019a30:	d102      	bne.n	8019a38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8019a32:	9912      	ldr	r1, [sp, #72]	; 0x48
 8019a34:	29ff      	cmp	r1, #255	; 0xff
 8019a36:	d063      	beq.n	8019b00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8019a38:	980a      	ldr	r0, [sp, #40]	; 0x28
 8019a3a:	f8be 1000 	ldrh.w	r1, [lr]
 8019a3e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019a40:	4343      	muls	r3, r0
 8019a42:	1c58      	adds	r0, r3, #1
 8019a44:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8019a48:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8019a4c:	1208      	asrs	r0, r1, #8
 8019a4e:	b2db      	uxtb	r3, r3
 8019a50:	1215      	asrs	r5, r2, #8
 8019a52:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019a56:	fb10 f003 	smulbb	r0, r0, r3
 8019a5a:	10cf      	asrs	r7, r1, #3
 8019a5c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8019a60:	00c9      	lsls	r1, r1, #3
 8019a62:	fb05 0504 	mla	r5, r5, r4, r0
 8019a66:	b2c9      	uxtb	r1, r1
 8019a68:	10d0      	asrs	r0, r2, #3
 8019a6a:	00d2      	lsls	r2, r2, #3
 8019a6c:	fb11 f103 	smulbb	r1, r1, r3
 8019a70:	b2d2      	uxtb	r2, r2
 8019a72:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019a76:	fb02 1204 	mla	r2, r2, r4, r1
 8019a7a:	fb17 f703 	smulbb	r7, r7, r3
 8019a7e:	b2ad      	uxth	r5, r5
 8019a80:	b292      	uxth	r2, r2
 8019a82:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8019a86:	fb00 7004 	mla	r0, r0, r4, r7
 8019a8a:	1c6b      	adds	r3, r5, #1
 8019a8c:	1c57      	adds	r7, r2, #1
 8019a8e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8019a92:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8019a96:	b280      	uxth	r0, r0
 8019a98:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8019a9c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8019aa0:	433d      	orrs	r5, r7
 8019aa2:	1c47      	adds	r7, r0, #1
 8019aa4:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8019aa8:	097f      	lsrs	r7, r7, #5
 8019aaa:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8019aae:	433d      	orrs	r5, r7
 8019ab0:	f8ae 5000 	strh.w	r5, [lr]
 8019ab4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8019ab6:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8019ab8:	4413      	add	r3, r2
 8019aba:	9321      	str	r3, [sp, #132]	; 0x84
 8019abc:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8019abe:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019ac0:	441a      	add	r2, r3
 8019ac2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019ac4:	9222      	str	r2, [sp, #136]	; 0x88
 8019ac6:	3b01      	subs	r3, #1
 8019ac8:	f10e 0e02 	add.w	lr, lr, #2
 8019acc:	9313      	str	r3, [sp, #76]	; 0x4c
 8019ace:	e61c      	b.n	801970a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8019ad0:	fb08 f000 	mul.w	r0, r8, r0
 8019ad4:	fb09 0303 	mla	r3, r9, r3, r0
 8019ad8:	e6dc      	b.n	8019894 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8019ada:	46b9      	mov	r9, r7
 8019adc:	e704      	b.n	80198e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8019ade:	f1c2 0110 	rsb	r1, r2, #16
 8019ae2:	437a      	muls	r2, r7
 8019ae4:	fb09 2901 	mla	r9, r9, r1, r2
 8019ae8:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8019aec:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8019af0:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8019af4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019af8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019afc:	4302      	orrs	r2, r0
 8019afe:	e795      	b.n	8019a2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8019b00:	f8ae 2000 	strh.w	r2, [lr]
 8019b04:	e7d6      	b.n	8019ab4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8019b06:	b017      	add	sp, #92	; 0x5c
 8019b08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019b0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8019b0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019b10:	b085      	sub	sp, #20
 8019b12:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8019b16:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8019b1a:	9103      	str	r1, [sp, #12]
 8019b1c:	fb00 7406 	mla	r4, r0, r6, r7
 8019b20:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8019b24:	2800      	cmp	r0, #0
 8019b26:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8019b2a:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8019b2e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8019b32:	9501      	str	r5, [sp, #4]
 8019b34:	eb02 0904 	add.w	r9, r2, r4
 8019b38:	f2c0 8141 	blt.w	8019dbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8019b3c:	4583      	cmp	fp, r0
 8019b3e:	f340 813e 	ble.w	8019dbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8019b42:	2f00      	cmp	r7, #0
 8019b44:	f2c0 8137 	blt.w	8019db6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8019b48:	42be      	cmp	r6, r7
 8019b4a:	f340 8134 	ble.w	8019db6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8019b4e:	f812 c004 	ldrb.w	ip, [r2, r4]
 8019b52:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8019b56:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8019b5a:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8019b5e:	4355      	muls	r5, r2
 8019b60:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019b64:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8019b68:	fb0c f203 	mul.w	r2, ip, r3
 8019b6c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8019b70:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8019b74:	441d      	add	r5, r3
 8019b76:	f102 0320 	add.w	r3, r2, #32
 8019b7a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019b7e:	0a1b      	lsrs	r3, r3, #8
 8019b80:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8019b84:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019b88:	431c      	orrs	r4, r3
 8019b8a:	1c7b      	adds	r3, r7, #1
 8019b8c:	f100 811c 	bmi.w	8019dc8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8019b90:	429e      	cmp	r6, r3
 8019b92:	f340 8119 	ble.w	8019dc8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8019b96:	2900      	cmp	r1, #0
 8019b98:	f000 8119 	beq.w	8019dce <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8019b9c:	9a01      	ldr	r2, [sp, #4]
 8019b9e:	f899 3001 	ldrb.w	r3, [r9, #1]
 8019ba2:	8855      	ldrh	r5, [r2, #2]
 8019ba4:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8019ba8:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8019bac:	fb08 f802 	mul.w	r8, r8, r2
 8019bb0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019bb4:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8019bb8:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8019bbc:	435d      	muls	r5, r3
 8019bbe:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8019bc2:	44d0      	add	r8, sl
 8019bc4:	f105 0a20 	add.w	sl, r5, #32
 8019bc8:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8019bcc:	0a2d      	lsrs	r5, r5, #8
 8019bce:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8019bd2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019bd6:	432a      	orrs	r2, r5
 8019bd8:	3001      	adds	r0, #1
 8019bda:	f100 80fe 	bmi.w	8019dda <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8019bde:	4583      	cmp	fp, r0
 8019be0:	f340 80fb 	ble.w	8019dda <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8019be4:	f1be 0f00 	cmp.w	lr, #0
 8019be8:	f000 80fc 	beq.w	8019de4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8019bec:	2f00      	cmp	r7, #0
 8019bee:	f2c0 80f1 	blt.w	8019dd4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8019bf2:	42be      	cmp	r6, r7
 8019bf4:	f340 80ee 	ble.w	8019dd4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8019bf8:	9801      	ldr	r0, [sp, #4]
 8019bfa:	f819 5006 	ldrb.w	r5, [r9, r6]
 8019bfe:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8019c02:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019c06:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8019c0a:	fb0a fa00 	mul.w	sl, sl, r0
 8019c0e:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8019c12:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8019c16:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8019c1a:	fb05 f808 	mul.w	r8, r5, r8
 8019c1e:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8019c22:	4482      	add	sl, r0
 8019c24:	f108 0020 	add.w	r0, r8, #32
 8019c28:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8019c2c:	0a00      	lsrs	r0, r0, #8
 8019c2e:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8019c32:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019c36:	ea4b 0b00 	orr.w	fp, fp, r0
 8019c3a:	3701      	adds	r7, #1
 8019c3c:	f100 80d7 	bmi.w	8019dee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8019c40:	42be      	cmp	r6, r7
 8019c42:	f340 80d4 	ble.w	8019dee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8019c46:	2900      	cmp	r1, #0
 8019c48:	f000 80d4 	beq.w	8019df4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8019c4c:	3601      	adds	r6, #1
 8019c4e:	9801      	ldr	r0, [sp, #4]
 8019c50:	f819 7006 	ldrb.w	r7, [r9, r6]
 8019c54:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8019c58:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8019c5c:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8019c60:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019c64:	fb09 f906 	mul.w	r9, r9, r6
 8019c68:	fb07 f800 	mul.w	r8, r7, r0
 8019c6c:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8019c70:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8019c74:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8019c78:	44d1      	add	r9, sl
 8019c7a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8019c7e:	f108 0020 	add.w	r0, r8, #32
 8019c82:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8019c86:	0a00      	lsrs	r0, r0, #8
 8019c88:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019c8c:	4330      	orrs	r0, r6
 8019c8e:	b28e      	uxth	r6, r1
 8019c90:	fa1f f98e 	uxth.w	r9, lr
 8019c94:	fb06 f809 	mul.w	r8, r6, r9
 8019c98:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8019c9c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8019ca0:	0136      	lsls	r6, r6, #4
 8019ca2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019ca6:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8019caa:	9601      	str	r6, [sp, #4]
 8019cac:	ea4a 0404 	orr.w	r4, sl, r4
 8019cb0:	fa1f f689 	uxth.w	r6, r9
 8019cb4:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8019cb8:	fb11 f90e 	smulbb	r9, r1, lr
 8019cbc:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8019cc0:	9602      	str	r6, [sp, #8]
 8019cc2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019cc6:	4626      	mov	r6, r4
 8019cc8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019ccc:	f1ce 0410 	rsb	r4, lr, #16
 8019cd0:	1a64      	subs	r4, r4, r1
 8019cd2:	ea4a 0202 	orr.w	r2, sl, r2
 8019cd6:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8019cda:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8019cde:	434a      	muls	r2, r1
 8019ce0:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8019ce4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019ce8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019cec:	fb04 2406 	mla	r4, r4, r6, r2
 8019cf0:	ea4a 0000 	orr.w	r0, sl, r0
 8019cf4:	fb09 4200 	mla	r2, r9, r0, r4
 8019cf8:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8019cfc:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8019d00:	9801      	ldr	r0, [sp, #4]
 8019d02:	9903      	ldr	r1, [sp, #12]
 8019d04:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8019d08:	ea44 0b0b 	orr.w	fp, r4, fp
 8019d0c:	9c02      	ldr	r4, [sp, #8]
 8019d0e:	8809      	ldrh	r1, [r1, #0]
 8019d10:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8019d14:	1b00      	subs	r0, r0, r4
 8019d16:	9c01      	ldr	r4, [sp, #4]
 8019d18:	eba4 0608 	sub.w	r6, r4, r8
 8019d1c:	b2b6      	uxth	r6, r6
 8019d1e:	b280      	uxth	r0, r0
 8019d20:	4373      	muls	r3, r6
 8019d22:	fb0c 3300 	mla	r3, ip, r0, r3
 8019d26:	9802      	ldr	r0, [sp, #8]
 8019d28:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8019d2c:	fb00 3505 	mla	r5, r0, r5, r3
 8019d30:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8019d34:	fb08 5707 	mla	r7, r8, r7, r5
 8019d38:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8019d3c:	120b      	asrs	r3, r1, #8
 8019d3e:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8019d42:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8019d46:	b2ff      	uxtb	r7, r7
 8019d48:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019d4c:	10c8      	asrs	r0, r1, #3
 8019d4e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8019d52:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8019d56:	00c9      	lsls	r1, r1, #3
 8019d58:	437b      	muls	r3, r7
 8019d5a:	ea42 0e0e 	orr.w	lr, r2, lr
 8019d5e:	b2c9      	uxtb	r1, r1
 8019d60:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8019d64:	fa1f f28e 	uxth.w	r2, lr
 8019d68:	4378      	muls	r0, r7
 8019d6a:	434f      	muls	r7, r1
 8019d6c:	1c59      	adds	r1, r3, #1
 8019d6e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8019d72:	1213      	asrs	r3, r2, #8
 8019d74:	f023 0307 	bic.w	r3, r3, #7
 8019d78:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8019d7c:	1c41      	adds	r1, r0, #1
 8019d7e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8019d82:	10d1      	asrs	r1, r2, #3
 8019d84:	f021 0103 	bic.w	r1, r1, #3
 8019d88:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8019d8c:	021b      	lsls	r3, r3, #8
 8019d8e:	00c9      	lsls	r1, r1, #3
 8019d90:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019d94:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8019d98:	430b      	orrs	r3, r1
 8019d9a:	1c79      	adds	r1, r7, #1
 8019d9c:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8019da0:	00d2      	lsls	r2, r2, #3
 8019da2:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8019da6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8019daa:	431a      	orrs	r2, r3
 8019dac:	9b03      	ldr	r3, [sp, #12]
 8019dae:	801a      	strh	r2, [r3, #0]
 8019db0:	b005      	add	sp, #20
 8019db2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019db6:	f04f 0c00 	mov.w	ip, #0
 8019dba:	4664      	mov	r4, ip
 8019dbc:	e6e5      	b.n	8019b8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8019dbe:	2300      	movs	r3, #0
 8019dc0:	469c      	mov	ip, r3
 8019dc2:	461a      	mov	r2, r3
 8019dc4:	461c      	mov	r4, r3
 8019dc6:	e707      	b.n	8019bd8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8019dc8:	2300      	movs	r3, #0
 8019dca:	461a      	mov	r2, r3
 8019dcc:	e704      	b.n	8019bd8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8019dce:	460b      	mov	r3, r1
 8019dd0:	460a      	mov	r2, r1
 8019dd2:	e701      	b.n	8019bd8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8019dd4:	2500      	movs	r5, #0
 8019dd6:	46ab      	mov	fp, r5
 8019dd8:	e72f      	b.n	8019c3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8019dda:	2700      	movs	r7, #0
 8019ddc:	463d      	mov	r5, r7
 8019dde:	4638      	mov	r0, r7
 8019de0:	46bb      	mov	fp, r7
 8019de2:	e754      	b.n	8019c8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8019de4:	4677      	mov	r7, lr
 8019de6:	4675      	mov	r5, lr
 8019de8:	4670      	mov	r0, lr
 8019dea:	46f3      	mov	fp, lr
 8019dec:	e74f      	b.n	8019c8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8019dee:	2700      	movs	r7, #0
 8019df0:	4638      	mov	r0, r7
 8019df2:	e74c      	b.n	8019c8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8019df4:	460f      	mov	r7, r1
 8019df6:	4608      	mov	r0, r1
 8019df8:	e749      	b.n	8019c8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08019dfc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019dfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019e00:	b093      	sub	sp, #76	; 0x4c
 8019e02:	9210      	str	r2, [sp, #64]	; 0x40
 8019e04:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8019e06:	910e      	str	r1, [sp, #56]	; 0x38
 8019e08:	9306      	str	r3, [sp, #24]
 8019e0a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8019e0e:	9011      	str	r0, [sp, #68]	; 0x44
 8019e10:	6850      	ldr	r0, [r2, #4]
 8019e12:	6812      	ldr	r2, [r2, #0]
 8019e14:	fb00 1303 	mla	r3, r0, r3, r1
 8019e18:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019e1c:	9307      	str	r3, [sp, #28]
 8019e1e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019e20:	681b      	ldr	r3, [r3, #0]
 8019e22:	9308      	str	r3, [sp, #32]
 8019e24:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019e26:	685b      	ldr	r3, [r3, #4]
 8019e28:	9309      	str	r3, [sp, #36]	; 0x24
 8019e2a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019e2c:	2b00      	cmp	r3, #0
 8019e2e:	dc03      	bgt.n	8019e38 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8019e30:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019e32:	2b00      	cmp	r3, #0
 8019e34:	f340 83b4 	ble.w	801a5a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8019e38:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019e3a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019e3e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019e42:	1e48      	subs	r0, r1, #1
 8019e44:	1e55      	subs	r5, r2, #1
 8019e46:	9b06      	ldr	r3, [sp, #24]
 8019e48:	2b00      	cmp	r3, #0
 8019e4a:	f340 8163 	ble.w	801a114 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8019e4e:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8019e50:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8019e52:	1436      	asrs	r6, r6, #16
 8019e54:	ea4f 4323 	mov.w	r3, r3, asr #16
 8019e58:	d406      	bmi.n	8019e68 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019e5a:	4286      	cmp	r6, r0
 8019e5c:	da04      	bge.n	8019e68 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019e5e:	2b00      	cmp	r3, #0
 8019e60:	db02      	blt.n	8019e68 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019e62:	42ab      	cmp	r3, r5
 8019e64:	f2c0 8157 	blt.w	801a116 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8019e68:	3601      	adds	r6, #1
 8019e6a:	f100 8144 	bmi.w	801a0f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8019e6e:	42b1      	cmp	r1, r6
 8019e70:	f2c0 8141 	blt.w	801a0f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8019e74:	3301      	adds	r3, #1
 8019e76:	f100 813e 	bmi.w	801a0f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8019e7a:	429a      	cmp	r2, r3
 8019e7c:	f2c0 813b 	blt.w	801a0f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8019e80:	9b06      	ldr	r3, [sp, #24]
 8019e82:	9f07      	ldr	r7, [sp, #28]
 8019e84:	930f      	str	r3, [sp, #60]	; 0x3c
 8019e86:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8019e8a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019e8c:	2b00      	cmp	r3, #0
 8019e8e:	f340 8164 	ble.w	801a15a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8019e92:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8019e94:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8019e96:	1418      	asrs	r0, r3, #16
 8019e98:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8019e9a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8019e9e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8019ea0:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8019ea4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019ea6:	142d      	asrs	r5, r5, #16
 8019ea8:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8019eac:	f100 81ee 	bmi.w	801a28c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8019eb0:	f102 3eff 	add.w	lr, r2, #4294967295
 8019eb4:	4575      	cmp	r5, lr
 8019eb6:	f280 81e9 	bge.w	801a28c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8019eba:	2800      	cmp	r0, #0
 8019ebc:	f2c0 81e6 	blt.w	801a28c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8019ec0:	f103 3eff 	add.w	lr, r3, #4294967295
 8019ec4:	4570      	cmp	r0, lr
 8019ec6:	f280 81e1 	bge.w	801a28c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8019eca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019ecc:	b212      	sxth	r2, r2
 8019ece:	fb00 5002 	mla	r0, r0, r2, r5
 8019ed2:	fa1f fe81 	uxth.w	lr, r1
 8019ed6:	eb03 0a00 	add.w	sl, r3, r0
 8019eda:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8019ede:	f813 9000 	ldrb.w	r9, [r3, r0]
 8019ee2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8019ee6:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8019eea:	b29b      	uxth	r3, r3
 8019eec:	f1bc 0f00 	cmp.w	ip, #0
 8019ef0:	f000 8179 	beq.w	801a1e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8019ef4:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8019ef8:	940a      	str	r4, [sp, #40]	; 0x28
 8019efa:	eb0a 0b02 	add.w	fp, sl, r2
 8019efe:	fa1f fa8c 	uxth.w	sl, ip
 8019f02:	fb0a fe0e 	mul.w	lr, sl, lr
 8019f06:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8019f0a:	fa1f fa8a 	uxth.w	sl, sl
 8019f0e:	eba5 050e 	sub.w	r5, r5, lr
 8019f12:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8019f16:	940b      	str	r4, [sp, #44]	; 0x2c
 8019f18:	eba3 030a 	sub.w	r3, r3, sl
 8019f1c:	b2ad      	uxth	r5, r5
 8019f1e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019f20:	b29b      	uxth	r3, r3
 8019f22:	fb08 f505 	mul.w	r5, r8, r5
 8019f26:	fb09 5303 	mla	r3, r9, r3, r5
 8019f2a:	fb0a 3304 	mla	r3, sl, r4, r3
 8019f2e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019f30:	fb0e 3304 	mla	r3, lr, r4, r3
 8019f34:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019f38:	2b00      	cmp	r3, #0
 8019f3a:	f000 80cf 	beq.w	801a0dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8019f3e:	9c08      	ldr	r4, [sp, #32]
 8019f40:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8019f44:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8019f48:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8019f4c:	f000 8150 	beq.w	801a1f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8019f50:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8019f54:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8019f58:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019f5c:	fb09 f000 	mul.w	r0, r9, r0
 8019f60:	fb0a fe0e 	mul.w	lr, sl, lr
 8019f64:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8019f68:	f100 0b20 	add.w	fp, r0, #32
 8019f6c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8019f70:	44ce      	add	lr, r9
 8019f72:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8019f76:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019f7a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8019f7e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8019f82:	ea4e 0909 	orr.w	r9, lr, r9
 8019f86:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8019f8a:	8868      	ldrh	r0, [r5, #2]
 8019f8c:	d019      	beq.n	8019fc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8019f8e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8019f92:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8019f96:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019f9a:	fb08 f800 	mul.w	r8, r8, r0
 8019f9e:	fb0a fe0e 	mul.w	lr, sl, lr
 8019fa2:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8019fa6:	f108 0b20 	add.w	fp, r8, #32
 8019faa:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8019fae:	4486      	add	lr, r0
 8019fb0:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8019fb4:	0a00      	lsrs	r0, r0, #8
 8019fb6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8019fba:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019fbe:	ea4e 0000 	orr.w	r0, lr, r0
 8019fc2:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8019fc6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8019fca:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8019fce:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8019fd2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019fd6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019fda:	ea4e 0909 	orr.w	r9, lr, r9
 8019fde:	ea4a 0000 	orr.w	r0, sl, r0
 8019fe2:	f1bc 0f00 	cmp.w	ip, #0
 8019fe6:	f000 8105 	beq.w	801a1f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8019fea:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8019fee:	3a01      	subs	r2, #1
 8019ff0:	0052      	lsls	r2, r2, #1
 8019ff2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019ff4:	3202      	adds	r2, #2
 8019ff6:	2cff      	cmp	r4, #255	; 0xff
 8019ff8:	eb05 0e02 	add.w	lr, r5, r2
 8019ffc:	5aaa      	ldrh	r2, [r5, r2]
 8019ffe:	d018      	beq.n	801a032 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801a000:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801a004:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a008:	fb04 fa02 	mul.w	sl, r4, r2
 801a00c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801a010:	fb08 f805 	mul.w	r8, r8, r5
 801a014:	f10a 0520 	add.w	r5, sl, #32
 801a018:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801a01c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801a020:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801a024:	4442      	add	r2, r8
 801a026:	0a2d      	lsrs	r5, r5, #8
 801a028:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801a02c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a030:	432a      	orrs	r2, r5
 801a032:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a034:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801a038:	2cff      	cmp	r4, #255	; 0xff
 801a03a:	d01a      	beq.n	801a072 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801a03c:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801a040:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a044:	fb04 fa05 	mul.w	sl, r4, r5
 801a048:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801a04c:	fb08 f80e 	mul.w	r8, r8, lr
 801a050:	f10a 0e20 	add.w	lr, sl, #32
 801a054:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801a058:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801a05c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801a060:	4445      	add	r5, r8
 801a062:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a066:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801a06a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801a06e:	ea45 050e 	orr.w	r5, r5, lr
 801a072:	fb1c fe01 	smulbb	lr, ip, r1
 801a076:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801a07a:	f1cc 0810 	rsb	r8, ip, #16
 801a07e:	eba8 0801 	sub.w	r8, r8, r1
 801a082:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801a086:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801a08a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801a08e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801a092:	4341      	muls	r1, r0
 801a094:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801a098:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801a09c:	ea4a 0202 	orr.w	r2, sl, r2
 801a0a0:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801a0a4:	fb09 1108 	mla	r1, r9, r8, r1
 801a0a8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801a0ac:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801a0b0:	fb0c 1102 	mla	r1, ip, r2, r1
 801a0b4:	ea4b 0505 	orr.w	r5, fp, r5
 801a0b8:	fb0e 1e05 	mla	lr, lr, r5, r1
 801a0bc:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801a0c0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801a0c4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a0c8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801a0cc:	ea42 0e0e 	orr.w	lr, r2, lr
 801a0d0:	fa1f f28e 	uxth.w	r2, lr
 801a0d4:	2bff      	cmp	r3, #255	; 0xff
 801a0d6:	f040 80a1 	bne.w	801a21c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801a0da:	803a      	strh	r2, [r7, #0]
 801a0dc:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801a0de:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801a0e0:	4413      	add	r3, r2
 801a0e2:	931d      	str	r3, [sp, #116]	; 0x74
 801a0e4:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801a0e6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a0e8:	441a      	add	r2, r3
 801a0ea:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a0ec:	921e      	str	r2, [sp, #120]	; 0x78
 801a0ee:	3b01      	subs	r3, #1
 801a0f0:	3702      	adds	r7, #2
 801a0f2:	930f      	str	r3, [sp, #60]	; 0x3c
 801a0f4:	e6c9      	b.n	8019e8a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801a0f6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801a0f8:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801a0fa:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 801a0fc:	4433      	add	r3, r6
 801a0fe:	931d      	str	r3, [sp, #116]	; 0x74
 801a100:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a102:	441c      	add	r4, r3
 801a104:	9b06      	ldr	r3, [sp, #24]
 801a106:	941e      	str	r4, [sp, #120]	; 0x78
 801a108:	3b01      	subs	r3, #1
 801a10a:	9306      	str	r3, [sp, #24]
 801a10c:	9b07      	ldr	r3, [sp, #28]
 801a10e:	3302      	adds	r3, #2
 801a110:	9307      	str	r3, [sp, #28]
 801a112:	e698      	b.n	8019e46 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a114:	d028      	beq.n	801a168 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801a116:	9b06      	ldr	r3, [sp, #24]
 801a118:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801a11a:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801a11c:	3b01      	subs	r3, #1
 801a11e:	fb00 5003 	mla	r0, r0, r3, r5
 801a122:	1400      	asrs	r0, r0, #16
 801a124:	f53f aeac 	bmi.w	8019e80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a128:	3901      	subs	r1, #1
 801a12a:	4288      	cmp	r0, r1
 801a12c:	f6bf aea8 	bge.w	8019e80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a130:	9920      	ldr	r1, [sp, #128]	; 0x80
 801a132:	981e      	ldr	r0, [sp, #120]	; 0x78
 801a134:	fb01 0303 	mla	r3, r1, r3, r0
 801a138:	141b      	asrs	r3, r3, #16
 801a13a:	f53f aea1 	bmi.w	8019e80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a13e:	3a01      	subs	r2, #1
 801a140:	4293      	cmp	r3, r2
 801a142:	f6bf ae9d 	bge.w	8019e80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a146:	9b06      	ldr	r3, [sp, #24]
 801a148:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801a14c:	930f      	str	r3, [sp, #60]	; 0x3c
 801a14e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801a152:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a154:	2b00      	cmp	r3, #0
 801a156:	f300 80b6 	bgt.w	801a2c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 801a15a:	9b06      	ldr	r3, [sp, #24]
 801a15c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801a160:	9b07      	ldr	r3, [sp, #28]
 801a162:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801a166:	9307      	str	r3, [sp, #28]
 801a168:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a16a:	2b00      	cmp	r3, #0
 801a16c:	f340 8218 	ble.w	801a5a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801a170:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a174:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a178:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a17c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a17e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a182:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a186:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a18a:	eef0 6a62 	vmov.f32	s13, s5
 801a18e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a192:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a196:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a19a:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 801a19e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a1a2:	eef0 6a43 	vmov.f32	s13, s6
 801a1a6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a1aa:	ee12 2a90 	vmov	r2, s5
 801a1ae:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a1b2:	fb92 f3f3 	sdiv	r3, r2, r3
 801a1b6:	ee13 2a10 	vmov	r2, s6
 801a1ba:	931f      	str	r3, [sp, #124]	; 0x7c
 801a1bc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a1be:	fb92 f3f3 	sdiv	r3, r2, r3
 801a1c2:	9320      	str	r3, [sp, #128]	; 0x80
 801a1c4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a1c6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a1c8:	3b01      	subs	r3, #1
 801a1ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a1ce:	930e      	str	r3, [sp, #56]	; 0x38
 801a1d0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a1d2:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 801a1d6:	bf08      	it	eq
 801a1d8:	4613      	moveq	r3, r2
 801a1da:	9306      	str	r3, [sp, #24]
 801a1dc:	eeb0 3a67 	vmov.f32	s6, s15
 801a1e0:	eef0 2a47 	vmov.f32	s5, s14
 801a1e4:	e621      	b.n	8019e2a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801a1e6:	fb08 f505 	mul.w	r5, r8, r5
 801a1ea:	fb09 5303 	mla	r3, r9, r3, r5
 801a1ee:	e6a1      	b.n	8019f34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801a1f0:	4681      	mov	r9, r0
 801a1f2:	e6c8      	b.n	8019f86 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801a1f4:	f1c1 0210 	rsb	r2, r1, #16
 801a1f8:	4341      	muls	r1, r0
 801a1fa:	fb09 1902 	mla	r9, r9, r2, r1
 801a1fe:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801a202:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801a206:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801a20a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a20e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801a212:	ea42 0909 	orr.w	r9, r2, r9
 801a216:	fa1f f289 	uxth.w	r2, r9
 801a21a:	e75b      	b.n	801a0d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801a21c:	f8b7 c000 	ldrh.w	ip, [r7]
 801a220:	43db      	mvns	r3, r3
 801a222:	ea4f 202c 	mov.w	r0, ip, asr #8
 801a226:	fa5f fe83 	uxtb.w	lr, r3
 801a22a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801a22e:	fb00 f00e 	mul.w	r0, r0, lr
 801a232:	1c41      	adds	r1, r0, #1
 801a234:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801a238:	1211      	asrs	r1, r2, #8
 801a23a:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801a23e:	f021 0107 	bic.w	r1, r1, #7
 801a242:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801a246:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801a24a:	48d7      	ldr	r0, [pc, #860]	; (801a5a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801a24c:	fb05 f50e 	mul.w	r5, r5, lr
 801a250:	b2c9      	uxtb	r1, r1
 801a252:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801a256:	1c69      	adds	r1, r5, #1
 801a258:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801a25c:	10d1      	asrs	r1, r2, #3
 801a25e:	f021 0103 	bic.w	r1, r1, #3
 801a262:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801a266:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801a26a:	b2db      	uxtb	r3, r3
 801a26c:	00c9      	lsls	r1, r1, #3
 801a26e:	fb03 f30e 	mul.w	r3, r3, lr
 801a272:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801a276:	4301      	orrs	r1, r0
 801a278:	1c58      	adds	r0, r3, #1
 801a27a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801a27e:	00d2      	lsls	r2, r2, #3
 801a280:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801a284:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801a288:	430a      	orrs	r2, r1
 801a28a:	e726      	b.n	801a0da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 801a28c:	f115 0e01 	adds.w	lr, r5, #1
 801a290:	f53f af24 	bmi.w	801a0dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801a294:	4572      	cmp	r2, lr
 801a296:	f6ff af21 	blt.w	801a0dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801a29a:	f110 0e01 	adds.w	lr, r0, #1
 801a29e:	f53f af1d 	bmi.w	801a0dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801a2a2:	4573      	cmp	r3, lr
 801a2a4:	f6ff af1a 	blt.w	801a0dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801a2a8:	b21b      	sxth	r3, r3
 801a2aa:	b212      	sxth	r2, r2
 801a2ac:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801a2b0:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801a2b4:	9301      	str	r3, [sp, #4]
 801a2b6:	9200      	str	r2, [sp, #0]
 801a2b8:	4639      	mov	r1, r7
 801a2ba:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801a2be:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a2c0:	f7ff fc24 	bl	8019b0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801a2c4:	e70a      	b.n	801a0dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801a2c6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801a2c8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801a2cc:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a2ce:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801a2d2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a2d4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a2d8:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a2da:	141f      	asrs	r7, r3, #16
 801a2dc:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801a2de:	141b      	asrs	r3, r3, #16
 801a2e0:	fb01 3707 	mla	r7, r1, r7, r3
 801a2e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a2e6:	fa1f fc82 	uxth.w	ip, r2
 801a2ea:	eb03 0a07 	add.w	sl, r3, r7
 801a2ee:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801a2f2:	f813 9007 	ldrb.w	r9, [r3, r7]
 801a2f6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801a2fa:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801a2fe:	b29b      	uxth	r3, r3
 801a300:	2d00      	cmp	r5, #0
 801a302:	f000 80fe 	beq.w	801a502 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801a306:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801a30a:	940c      	str	r4, [sp, #48]	; 0x30
 801a30c:	eb0a 0b01 	add.w	fp, sl, r1
 801a310:	fa1f fa85 	uxth.w	sl, r5
 801a314:	fb0a fc0c 	mul.w	ip, sl, ip
 801a318:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801a31c:	fa1f fa8a 	uxth.w	sl, sl
 801a320:	eba0 000c 	sub.w	r0, r0, ip
 801a324:	eba3 030a 	sub.w	r3, r3, sl
 801a328:	b280      	uxth	r0, r0
 801a32a:	fb08 f000 	mul.w	r0, r8, r0
 801a32e:	b29b      	uxth	r3, r3
 801a330:	fb09 0303 	mla	r3, r9, r3, r0
 801a334:	980c      	ldr	r0, [sp, #48]	; 0x30
 801a336:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801a33a:	940d      	str	r4, [sp, #52]	; 0x34
 801a33c:	fb0a 3300 	mla	r3, sl, r0, r3
 801a340:	fb0c 3304 	mla	r3, ip, r4, r3
 801a344:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a348:	2b00      	cmp	r3, #0
 801a34a:	f000 80cc 	beq.w	801a4e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801a34e:	9808      	ldr	r0, [sp, #32]
 801a350:	9c08      	ldr	r4, [sp, #32]
 801a352:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801a356:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801a35a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801a35e:	f000 80d5 	beq.w	801a50c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801a362:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801a366:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801a36a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801a36e:	fb09 f707 	mul.w	r7, r9, r7
 801a372:	fb0a fc0c 	mul.w	ip, sl, ip
 801a376:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801a37a:	f107 0b20 	add.w	fp, r7, #32
 801a37e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801a382:	44cc      	add	ip, r9
 801a384:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801a388:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a38c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801a390:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801a394:	ea4c 0909 	orr.w	r9, ip, r9
 801a398:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801a39c:	8847      	ldrh	r7, [r0, #2]
 801a39e:	d019      	beq.n	801a3d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 801a3a0:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801a3a4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801a3a8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801a3ac:	fb08 f807 	mul.w	r8, r8, r7
 801a3b0:	fb0a fc0c 	mul.w	ip, sl, ip
 801a3b4:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801a3b8:	f108 0b20 	add.w	fp, r8, #32
 801a3bc:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801a3c0:	44bc      	add	ip, r7
 801a3c2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801a3c6:	0a3f      	lsrs	r7, r7, #8
 801a3c8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801a3cc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801a3d0:	ea4c 0707 	orr.w	r7, ip, r7
 801a3d4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801a3d8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801a3dc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801a3e0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801a3e4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801a3e8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801a3ec:	ea4c 0909 	orr.w	r9, ip, r9
 801a3f0:	ea4a 0707 	orr.w	r7, sl, r7
 801a3f4:	2d00      	cmp	r5, #0
 801a3f6:	f000 808b 	beq.w	801a510 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801a3fa:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801a3fe:	3901      	subs	r1, #1
 801a400:	0049      	lsls	r1, r1, #1
 801a402:	3102      	adds	r1, #2
 801a404:	eb00 0c01 	add.w	ip, r0, r1
 801a408:	5a41      	ldrh	r1, [r0, r1]
 801a40a:	980c      	ldr	r0, [sp, #48]	; 0x30
 801a40c:	28ff      	cmp	r0, #255	; 0xff
 801a40e:	d019      	beq.n	801a444 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 801a410:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801a412:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801a416:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801a41a:	fb04 fa01 	mul.w	sl, r4, r1
 801a41e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801a422:	fb08 f800 	mul.w	r8, r8, r0
 801a426:	f10a 0020 	add.w	r0, sl, #32
 801a42a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801a42e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801a432:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801a436:	4441      	add	r1, r8
 801a438:	0a00      	lsrs	r0, r0, #8
 801a43a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801a43e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a442:	4301      	orrs	r1, r0
 801a444:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801a446:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801a44a:	2cff      	cmp	r4, #255	; 0xff
 801a44c:	d01a      	beq.n	801a484 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 801a44e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801a452:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a456:	fb04 fa00 	mul.w	sl, r4, r0
 801a45a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801a45e:	fb08 f80c 	mul.w	r8, r8, ip
 801a462:	f10a 0c20 	add.w	ip, sl, #32
 801a466:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801a46a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801a46e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801a472:	4440      	add	r0, r8
 801a474:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a478:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801a47c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801a480:	ea40 000c 	orr.w	r0, r0, ip
 801a484:	fb15 fc02 	smulbb	ip, r5, r2
 801a488:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801a48c:	f1c5 0810 	rsb	r8, r5, #16
 801a490:	eba8 0802 	sub.w	r8, r8, r2
 801a494:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801a498:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801a49c:	437a      	muls	r2, r7
 801a49e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801a4a2:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801a4a6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801a4aa:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801a4ae:	fb09 2208 	mla	r2, r9, r8, r2
 801a4b2:	ea4a 0101 	orr.w	r1, sl, r1
 801a4b6:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801a4ba:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801a4be:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801a4c2:	fb05 2201 	mla	r2, r5, r1, r2
 801a4c6:	ea4b 0000 	orr.w	r0, fp, r0
 801a4ca:	fb0c 2200 	mla	r2, ip, r0, r2
 801a4ce:	0d57      	lsrs	r7, r2, #21
 801a4d0:	0952      	lsrs	r2, r2, #5
 801a4d2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801a4d6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801a4da:	433a      	orrs	r2, r7
 801a4dc:	2bff      	cmp	r3, #255	; 0xff
 801a4de:	b292      	uxth	r2, r2
 801a4e0:	d127      	bne.n	801a532 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 801a4e2:	f8ae 2000 	strh.w	r2, [lr]
 801a4e6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801a4e8:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801a4ea:	4413      	add	r3, r2
 801a4ec:	931d      	str	r3, [sp, #116]	; 0x74
 801a4ee:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801a4f0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a4f2:	441a      	add	r2, r3
 801a4f4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a4f6:	921e      	str	r2, [sp, #120]	; 0x78
 801a4f8:	3b01      	subs	r3, #1
 801a4fa:	f10e 0e02 	add.w	lr, lr, #2
 801a4fe:	930f      	str	r3, [sp, #60]	; 0x3c
 801a500:	e627      	b.n	801a152 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801a502:	fb08 f000 	mul.w	r0, r8, r0
 801a506:	fb09 0303 	mla	r3, r9, r3, r0
 801a50a:	e71b      	b.n	801a344 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 801a50c:	46b9      	mov	r9, r7
 801a50e:	e743      	b.n	801a398 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 801a510:	f1c2 0110 	rsb	r1, r2, #16
 801a514:	437a      	muls	r2, r7
 801a516:	fb09 2901 	mla	r9, r9, r1, r2
 801a51a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801a51e:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801a522:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801a526:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a52a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801a52e:	4302      	orrs	r2, r0
 801a530:	e7d4      	b.n	801a4dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 801a532:	f8be 7000 	ldrh.w	r7, [lr]
 801a536:	4c1c      	ldr	r4, [pc, #112]	; (801a5a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801a538:	43db      	mvns	r3, r3
 801a53a:	1238      	asrs	r0, r7, #8
 801a53c:	fa5f fc83 	uxtb.w	ip, r3
 801a540:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801a544:	10fd      	asrs	r5, r7, #3
 801a546:	fb00 f00c 	mul.w	r0, r0, ip
 801a54a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801a54e:	fb05 f10c 	mul.w	r1, r5, ip
 801a552:	1c45      	adds	r5, r0, #1
 801a554:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801a558:	1215      	asrs	r5, r2, #8
 801a55a:	f025 0507 	bic.w	r5, r5, #7
 801a55e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801a562:	1c4d      	adds	r5, r1, #1
 801a564:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801a568:	10d1      	asrs	r1, r2, #3
 801a56a:	f021 0103 	bic.w	r1, r1, #3
 801a56e:	00fb      	lsls	r3, r7, #3
 801a570:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801a574:	b2db      	uxtb	r3, r3
 801a576:	b2c0      	uxtb	r0, r0
 801a578:	00c9      	lsls	r1, r1, #3
 801a57a:	fb03 f30c 	mul.w	r3, r3, ip
 801a57e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801a582:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801a586:	4308      	orrs	r0, r1
 801a588:	1c59      	adds	r1, r3, #1
 801a58a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801a58e:	00d2      	lsls	r2, r2, #3
 801a590:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801a594:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801a598:	4318      	orrs	r0, r3
 801a59a:	f8ae 0000 	strh.w	r0, [lr]
 801a59e:	e7a2      	b.n	801a4e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801a5a0:	b013      	add	sp, #76	; 0x4c
 801a5a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a5a6:	bf00      	nop
 801a5a8:	fffff800 	.word	0xfffff800

0801a5ac <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801a5ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a5b0:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 801a5b4:	fb05 4c03 	mla	ip, r5, r3, r4
 801a5b8:	2d00      	cmp	r5, #0
 801a5ba:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801a5be:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 801a5c2:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801a5c6:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801a5ca:	8808      	ldrh	r0, [r1, #0]
 801a5cc:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801a5d0:	f2c0 80a7 	blt.w	801a722 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801a5d4:	45aa      	cmp	sl, r5
 801a5d6:	f340 80a4 	ble.w	801a722 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801a5da:	2c00      	cmp	r4, #0
 801a5dc:	f2c0 809f 	blt.w	801a71e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801a5e0:	42a3      	cmp	r3, r4
 801a5e2:	f340 809c 	ble.w	801a71e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801a5e6:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801a5ea:	1c62      	adds	r2, r4, #1
 801a5ec:	f100 809c 	bmi.w	801a728 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801a5f0:	4293      	cmp	r3, r2
 801a5f2:	f340 8099 	ble.w	801a728 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801a5f6:	f1b9 0f00 	cmp.w	r9, #0
 801a5fa:	f000 8095 	beq.w	801a728 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801a5fe:	f8be c002 	ldrh.w	ip, [lr, #2]
 801a602:	3501      	adds	r5, #1
 801a604:	f100 8094 	bmi.w	801a730 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801a608:	45aa      	cmp	sl, r5
 801a60a:	f340 8091 	ble.w	801a730 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801a60e:	2f00      	cmp	r7, #0
 801a610:	f000 808e 	beq.w	801a730 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801a614:	2c00      	cmp	r4, #0
 801a616:	f2c0 8089 	blt.w	801a72c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801a61a:	42a3      	cmp	r3, r4
 801a61c:	f340 8086 	ble.w	801a72c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801a620:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801a624:	3401      	adds	r4, #1
 801a626:	f100 8086 	bmi.w	801a736 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801a62a:	42a3      	cmp	r3, r4
 801a62c:	f340 8083 	ble.w	801a736 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801a630:	f1b9 0f00 	cmp.w	r9, #0
 801a634:	d07f      	beq.n	801a736 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801a636:	3301      	adds	r3, #1
 801a638:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801a63c:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801a640:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801a644:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801a648:	fb19 fe07 	smulbb	lr, r9, r7
 801a64c:	ea44 0808 	orr.w	r8, r4, r8
 801a650:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801a654:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801a658:	f1c7 0210 	rsb	r2, r7, #16
 801a65c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801a660:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801a664:	ea44 0c0c 	orr.w	ip, r4, ip
 801a668:	eba2 0209 	sub.w	r2, r2, r9
 801a66c:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801a670:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801a674:	fb04 f40c 	mul.w	r4, r4, ip
 801a678:	fb02 4808 	mla	r8, r2, r8, r4
 801a67c:	041a      	lsls	r2, r3, #16
 801a67e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801a682:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801a686:	4313      	orrs	r3, r2
 801a688:	042a      	lsls	r2, r5, #16
 801a68a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801a68e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801a692:	fb0e 8303 	mla	r3, lr, r3, r8
 801a696:	432a      	orrs	r2, r5
 801a698:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801a69c:	fb07 3202 	mla	r2, r7, r2, r3
 801a6a0:	0d53      	lsrs	r3, r2, #21
 801a6a2:	0952      	lsrs	r2, r2, #5
 801a6a4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a6a8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801a6ac:	431a      	orrs	r2, r3
 801a6ae:	b293      	uxth	r3, r2
 801a6b0:	b2b4      	uxth	r4, r6
 801a6b2:	1202      	asrs	r2, r0, #8
 801a6b4:	43f6      	mvns	r6, r6
 801a6b6:	b2f6      	uxtb	r6, r6
 801a6b8:	121d      	asrs	r5, r3, #8
 801a6ba:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801a6be:	fb12 f206 	smulbb	r2, r2, r6
 801a6c2:	10c7      	asrs	r7, r0, #3
 801a6c4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801a6c8:	00c0      	lsls	r0, r0, #3
 801a6ca:	fb05 2504 	mla	r5, r5, r4, r2
 801a6ce:	b2c0      	uxtb	r0, r0
 801a6d0:	10da      	asrs	r2, r3, #3
 801a6d2:	00db      	lsls	r3, r3, #3
 801a6d4:	b2db      	uxtb	r3, r3
 801a6d6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a6da:	fb10 f006 	smulbb	r0, r0, r6
 801a6de:	b2ad      	uxth	r5, r5
 801a6e0:	fb03 0004 	mla	r0, r3, r4, r0
 801a6e4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801a6e8:	fb17 f706 	smulbb	r7, r7, r6
 801a6ec:	b280      	uxth	r0, r0
 801a6ee:	1c6b      	adds	r3, r5, #1
 801a6f0:	fb02 7204 	mla	r2, r2, r4, r7
 801a6f4:	b292      	uxth	r2, r2
 801a6f6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801a6fa:	1c43      	adds	r3, r0, #1
 801a6fc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801a700:	1c50      	adds	r0, r2, #1
 801a702:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801a706:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801a70a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a70e:	0952      	lsrs	r2, r2, #5
 801a710:	432b      	orrs	r3, r5
 801a712:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a716:	4313      	orrs	r3, r2
 801a718:	800b      	strh	r3, [r1, #0]
 801a71a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a71e:	4680      	mov	r8, r0
 801a720:	e763      	b.n	801a5ea <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801a722:	4684      	mov	ip, r0
 801a724:	4680      	mov	r8, r0
 801a726:	e76c      	b.n	801a602 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801a728:	4684      	mov	ip, r0
 801a72a:	e76a      	b.n	801a602 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801a72c:	4605      	mov	r5, r0
 801a72e:	e779      	b.n	801a624 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801a730:	4603      	mov	r3, r0
 801a732:	4605      	mov	r5, r0
 801a734:	e782      	b.n	801a63c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801a736:	4603      	mov	r3, r0
 801a738:	e780      	b.n	801a63c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801a73a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a73a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a73e:	b093      	sub	sp, #76	; 0x4c
 801a740:	461d      	mov	r5, r3
 801a742:	9210      	str	r2, [sp, #64]	; 0x40
 801a744:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801a746:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 801a74a:	920b      	str	r2, [sp, #44]	; 0x2c
 801a74c:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 801a750:	910a      	str	r1, [sp, #40]	; 0x28
 801a752:	6859      	ldr	r1, [r3, #4]
 801a754:	681b      	ldr	r3, [r3, #0]
 801a756:	9011      	str	r0, [sp, #68]	; 0x44
 801a758:	fb01 2707 	mla	r7, r1, r7, r2
 801a75c:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801a760:	9307      	str	r3, [sp, #28]
 801a762:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a764:	681b      	ldr	r3, [r3, #0]
 801a766:	9309      	str	r3, [sp, #36]	; 0x24
 801a768:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a76a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801a76e:	43db      	mvns	r3, r3
 801a770:	b2db      	uxtb	r3, r3
 801a772:	9308      	str	r3, [sp, #32]
 801a774:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a776:	2b00      	cmp	r3, #0
 801a778:	dc03      	bgt.n	801a782 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801a77a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a77c:	2b00      	cmp	r3, #0
 801a77e:	f340 8203 	ble.w	801ab88 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801a782:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a784:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a788:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a78c:	1e48      	subs	r0, r1, #1
 801a78e:	f102 3cff 	add.w	ip, r2, #4294967295
 801a792:	2d00      	cmp	r5, #0
 801a794:	f340 80da 	ble.w	801a94c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801a798:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801a79c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a7a0:	d406      	bmi.n	801a7b0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a7a2:	4586      	cmp	lr, r0
 801a7a4:	da04      	bge.n	801a7b0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a7a6:	2b00      	cmp	r3, #0
 801a7a8:	db02      	blt.n	801a7b0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a7aa:	4563      	cmp	r3, ip
 801a7ac:	f2c0 80cf 	blt.w	801a94e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a7b0:	f11e 0e01 	adds.w	lr, lr, #1
 801a7b4:	f100 80c1 	bmi.w	801a93a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801a7b8:	4571      	cmp	r1, lr
 801a7ba:	f2c0 80be 	blt.w	801a93a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801a7be:	3301      	adds	r3, #1
 801a7c0:	f100 80bb 	bmi.w	801a93a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801a7c4:	429a      	cmp	r2, r3
 801a7c6:	f2c0 80b8 	blt.w	801a93a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801a7ca:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801a7ce:	46a9      	mov	r9, r5
 801a7d0:	f1b9 0f00 	cmp.w	r9, #0
 801a7d4:	f340 80d8 	ble.w	801a988 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801a7d8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a7da:	1421      	asrs	r1, r4, #16
 801a7dc:	ea4f 4026 	mov.w	r0, r6, asr #16
 801a7e0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a7e4:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801a7e8:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801a7ec:	f100 8111 	bmi.w	801aa12 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801a7f0:	f10e 3aff 	add.w	sl, lr, #4294967295
 801a7f4:	4551      	cmp	r1, sl
 801a7f6:	f280 810c 	bge.w	801aa12 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801a7fa:	2800      	cmp	r0, #0
 801a7fc:	f2c0 8109 	blt.w	801aa12 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801a800:	f103 3aff 	add.w	sl, r3, #4294967295
 801a804:	4550      	cmp	r0, sl
 801a806:	f280 8104 	bge.w	801aa12 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801a80a:	fa0f f38e 	sxth.w	r3, lr
 801a80e:	fb00 1103 	mla	r1, r0, r3, r1
 801a812:	9809      	ldr	r0, [sp, #36]	; 0x24
 801a814:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801a818:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801a81c:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801a820:	f1bc 0f00 	cmp.w	ip, #0
 801a824:	d007      	beq.n	801a836 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801a826:	005b      	lsls	r3, r3, #1
 801a828:	eb0a 0003 	add.w	r0, sl, r3
 801a82c:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801a830:	930c      	str	r3, [sp, #48]	; 0x30
 801a832:	8843      	ldrh	r3, [r0, #2]
 801a834:	930d      	str	r3, [sp, #52]	; 0x34
 801a836:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801a83a:	fb12 f30c 	smulbb	r3, r2, ip
 801a83e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801a842:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801a846:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801a84a:	10db      	asrs	r3, r3, #3
 801a84c:	ea40 000e 	orr.w	r0, r0, lr
 801a850:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801a854:	f1cc 0e10 	rsb	lr, ip, #16
 801a858:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801a85c:	ebae 0e02 	sub.w	lr, lr, r2
 801a860:	ea4a 0101 	orr.w	r1, sl, r1
 801a864:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801a868:	4351      	muls	r1, r2
 801a86a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801a86c:	9f08      	ldr	r7, [sp, #32]
 801a86e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801a872:	fb0e 1e00 	mla	lr, lr, r0, r1
 801a876:	0410      	lsls	r0, r2, #16
 801a878:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801a87c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801a880:	4310      	orrs	r0, r2
 801a882:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801a884:	990c      	ldr	r1, [sp, #48]	; 0x30
 801a886:	0412      	lsls	r2, r2, #16
 801a888:	fb03 e000 	mla	r0, r3, r0, lr
 801a88c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801a890:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801a894:	ea42 020e 	orr.w	r2, r2, lr
 801a898:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801a89c:	fb03 0302 	mla	r3, r3, r2, r0
 801a8a0:	0d5a      	lsrs	r2, r3, #21
 801a8a2:	095b      	lsrs	r3, r3, #5
 801a8a4:	f8b8 0000 	ldrh.w	r0, [r8]
 801a8a8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a8ac:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801a8b0:	4313      	orrs	r3, r2
 801a8b2:	b29b      	uxth	r3, r3
 801a8b4:	1201      	asrs	r1, r0, #8
 801a8b6:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801a8ba:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801a8be:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801a8c2:	fb11 f107 	smulbb	r1, r1, r7
 801a8c6:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801a8ca:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a8ce:	00c0      	lsls	r0, r0, #3
 801a8d0:	fb0c 1c02 	mla	ip, ip, r2, r1
 801a8d4:	b2c0      	uxtb	r0, r0
 801a8d6:	10d9      	asrs	r1, r3, #3
 801a8d8:	00db      	lsls	r3, r3, #3
 801a8da:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801a8de:	b2db      	uxtb	r3, r3
 801a8e0:	fb10 f007 	smulbb	r0, r0, r7
 801a8e4:	fa1f fc8c 	uxth.w	ip, ip
 801a8e8:	fb03 0302 	mla	r3, r3, r2, r0
 801a8ec:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801a8f0:	fb1e fe07 	smulbb	lr, lr, r7
 801a8f4:	fb01 e102 	mla	r1, r1, r2, lr
 801a8f8:	b29a      	uxth	r2, r3
 801a8fa:	f10c 0301 	add.w	r3, ip, #1
 801a8fe:	b289      	uxth	r1, r1
 801a900:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801a904:	1c53      	adds	r3, r2, #1
 801a906:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a90a:	1c4a      	adds	r2, r1, #1
 801a90c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801a910:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a914:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a918:	0949      	lsrs	r1, r1, #5
 801a91a:	ea43 030c 	orr.w	r3, r3, ip
 801a91e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801a922:	430b      	orrs	r3, r1
 801a924:	f8a8 3000 	strh.w	r3, [r8]
 801a928:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a92a:	441c      	add	r4, r3
 801a92c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a92e:	f108 0802 	add.w	r8, r8, #2
 801a932:	441e      	add	r6, r3
 801a934:	f109 39ff 	add.w	r9, r9, #4294967295
 801a938:	e74a      	b.n	801a7d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a93a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a93c:	441c      	add	r4, r3
 801a93e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a940:	441e      	add	r6, r3
 801a942:	9b07      	ldr	r3, [sp, #28]
 801a944:	3302      	adds	r3, #2
 801a946:	3d01      	subs	r5, #1
 801a948:	9307      	str	r3, [sp, #28]
 801a94a:	e722      	b.n	801a792 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801a94c:	d022      	beq.n	801a994 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801a94e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801a950:	1e6b      	subs	r3, r5, #1
 801a952:	fb00 4003 	mla	r0, r0, r3, r4
 801a956:	1400      	asrs	r0, r0, #16
 801a958:	f53f af37 	bmi.w	801a7ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a95c:	3901      	subs	r1, #1
 801a95e:	4288      	cmp	r0, r1
 801a960:	f6bf af33 	bge.w	801a7ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a964:	9920      	ldr	r1, [sp, #128]	; 0x80
 801a966:	fb01 6303 	mla	r3, r1, r3, r6
 801a96a:	141b      	asrs	r3, r3, #16
 801a96c:	f53f af2d 	bmi.w	801a7ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a970:	3a01      	subs	r2, #1
 801a972:	4293      	cmp	r3, r2
 801a974:	f6bf af29 	bge.w	801a7ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a978:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801a97c:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 801a980:	46a8      	mov	r8, r5
 801a982:	f1b8 0f00 	cmp.w	r8, #0
 801a986:	dc5e      	bgt.n	801aa46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801a988:	9b07      	ldr	r3, [sp, #28]
 801a98a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801a98e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801a992:	9307      	str	r3, [sp, #28]
 801a994:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a996:	2b00      	cmp	r3, #0
 801a998:	f340 80f6 	ble.w	801ab88 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801a99c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a9a0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a9a4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a9a8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a9aa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a9ae:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a9b2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a9b6:	eef0 6a62 	vmov.f32	s13, s5
 801a9ba:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a9be:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a9c2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a9c6:	ee16 4a90 	vmov	r4, s13
 801a9ca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a9ce:	eef0 6a43 	vmov.f32	s13, s6
 801a9d2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a9d6:	ee12 2a90 	vmov	r2, s5
 801a9da:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a9de:	fb92 f3f3 	sdiv	r3, r2, r3
 801a9e2:	ee13 2a10 	vmov	r2, s6
 801a9e6:	931f      	str	r3, [sp, #124]	; 0x7c
 801a9e8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a9ea:	fb92 f3f3 	sdiv	r3, r2, r3
 801a9ee:	9320      	str	r3, [sp, #128]	; 0x80
 801a9f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a9f2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a9f4:	3b01      	subs	r3, #1
 801a9f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a9fa:	930a      	str	r3, [sp, #40]	; 0x28
 801a9fc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a9fe:	ee16 6a90 	vmov	r6, s13
 801aa02:	bf14      	ite	ne
 801aa04:	461d      	movne	r5, r3
 801aa06:	4615      	moveq	r5, r2
 801aa08:	eeb0 3a67 	vmov.f32	s6, s15
 801aa0c:	eef0 2a47 	vmov.f32	s5, s14
 801aa10:	e6b0      	b.n	801a774 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801aa12:	f111 0a01 	adds.w	sl, r1, #1
 801aa16:	d487      	bmi.n	801a928 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801aa18:	45d6      	cmp	lr, sl
 801aa1a:	db85      	blt.n	801a928 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801aa1c:	f110 0a01 	adds.w	sl, r0, #1
 801aa20:	d482      	bmi.n	801a928 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801aa22:	4553      	cmp	r3, sl
 801aa24:	db80      	blt.n	801a928 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801aa26:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801aa28:	9101      	str	r1, [sp, #4]
 801aa2a:	b21b      	sxth	r3, r3
 801aa2c:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801aa30:	9300      	str	r3, [sp, #0]
 801aa32:	e9cd c704 	strd	ip, r7, [sp, #16]
 801aa36:	fa0f f38e 	sxth.w	r3, lr
 801aa3a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801aa3c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801aa3e:	4641      	mov	r1, r8
 801aa40:	f7ff fdb4 	bl	801a5ac <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801aa44:	e770      	b.n	801a928 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801aa46:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801aa48:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801aa4a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801aa4e:	1430      	asrs	r0, r6, #16
 801aa50:	1423      	asrs	r3, r4, #16
 801aa52:	fb01 3000 	mla	r0, r1, r0, r3
 801aa56:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801aa58:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801aa5c:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801aa60:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801aa64:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801aa68:	8858      	ldrh	r0, [r3, #2]
 801aa6a:	f1be 0f00 	cmp.w	lr, #0
 801aa6e:	d00b      	beq.n	801aa88 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801aa70:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801aa74:	3901      	subs	r1, #1
 801aa76:	0049      	lsls	r1, r1, #1
 801aa78:	3102      	adds	r1, #2
 801aa7a:	eb03 0b01 	add.w	fp, r3, r1
 801aa7e:	5a5b      	ldrh	r3, [r3, r1]
 801aa80:	930e      	str	r3, [sp, #56]	; 0x38
 801aa82:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801aa86:	930f      	str	r3, [sp, #60]	; 0x3c
 801aa88:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801aa8c:	fb12 f30e 	smulbb	r3, r2, lr
 801aa90:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801aa94:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801aa98:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 801aa9c:	10db      	asrs	r3, r3, #3
 801aa9e:	ea41 010c 	orr.w	r1, r1, ip
 801aaa2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801aaa6:	f1ce 0c10 	rsb	ip, lr, #16
 801aaaa:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801aaae:	ebac 0c02 	sub.w	ip, ip, r2
 801aab2:	ea4b 0000 	orr.w	r0, fp, r0
 801aab6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801aaba:	4350      	muls	r0, r2
 801aabc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801aabe:	9f08      	ldr	r7, [sp, #32]
 801aac0:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801aac4:	fb0c 0c01 	mla	ip, ip, r1, r0
 801aac8:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801aacc:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 801aad0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801aad2:	980e      	ldr	r0, [sp, #56]	; 0x38
 801aad4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801aad8:	0412      	lsls	r2, r2, #16
 801aada:	ea4b 0101 	orr.w	r1, fp, r1
 801aade:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801aae2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801aae6:	fb03 c101 	mla	r1, r3, r1, ip
 801aaea:	4302      	orrs	r2, r0
 801aaec:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801aaf0:	fb03 1202 	mla	r2, r3, r2, r1
 801aaf4:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801aaf8:	0952      	lsrs	r2, r2, #5
 801aafa:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 801aafe:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801ab02:	f8b9 2000 	ldrh.w	r2, [r9]
 801ab06:	ea4b 0303 	orr.w	r3, fp, r3
 801ab0a:	b29b      	uxth	r3, r3
 801ab0c:	1211      	asrs	r1, r2, #8
 801ab0e:	1218      	asrs	r0, r3, #8
 801ab10:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ab14:	fb11 f107 	smulbb	r1, r1, r7
 801ab18:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801ab1c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ab20:	00d2      	lsls	r2, r2, #3
 801ab22:	fb00 100a 	mla	r0, r0, sl, r1
 801ab26:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801ab2a:	10d9      	asrs	r1, r3, #3
 801ab2c:	b2d2      	uxtb	r2, r2
 801ab2e:	00db      	lsls	r3, r3, #3
 801ab30:	fb1c fc07 	smulbb	ip, ip, r7
 801ab34:	fb12 f207 	smulbb	r2, r2, r7
 801ab38:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ab3c:	b2db      	uxtb	r3, r3
 801ab3e:	b280      	uxth	r0, r0
 801ab40:	fb01 c10a 	mla	r1, r1, sl, ip
 801ab44:	fb03 230a 	mla	r3, r3, sl, r2
 801ab48:	b29b      	uxth	r3, r3
 801ab4a:	b289      	uxth	r1, r1
 801ab4c:	1c42      	adds	r2, r0, #1
 801ab4e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ab52:	f101 0c01 	add.w	ip, r1, #1
 801ab56:	1c5a      	adds	r2, r3, #1
 801ab58:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801ab5c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801ab60:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ab62:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801ab66:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ab6a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801ab6e:	4310      	orrs	r0, r2
 801ab70:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801ab74:	441c      	add	r4, r3
 801ab76:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ab78:	ea40 000c 	orr.w	r0, r0, ip
 801ab7c:	f829 0b02 	strh.w	r0, [r9], #2
 801ab80:	441e      	add	r6, r3
 801ab82:	f108 38ff 	add.w	r8, r8, #4294967295
 801ab86:	e6fc      	b.n	801a982 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801ab88:	b013      	add	sp, #76	; 0x4c
 801ab8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ab8e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801ab8e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801ab92:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801ab96:	fb0e 4703 	mla	r7, lr, r3, r4
 801ab9a:	f1be 0f00 	cmp.w	lr, #0
 801ab9e:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801aba2:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 801aba6:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 801abaa:	8808      	ldrh	r0, [r1, #0]
 801abac:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801abb0:	db60      	blt.n	801ac74 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801abb2:	45f1      	cmp	r9, lr
 801abb4:	dd5e      	ble.n	801ac74 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801abb6:	2c00      	cmp	r4, #0
 801abb8:	db5a      	blt.n	801ac70 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801abba:	42a3      	cmp	r3, r4
 801abbc:	dd58      	ble.n	801ac70 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801abbe:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801abc2:	1c62      	adds	r2, r4, #1
 801abc4:	d459      	bmi.n	801ac7a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801abc6:	4293      	cmp	r3, r2
 801abc8:	dd57      	ble.n	801ac7a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801abca:	2d00      	cmp	r5, #0
 801abcc:	d055      	beq.n	801ac7a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801abce:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801abd2:	f11e 0e01 	adds.w	lr, lr, #1
 801abd6:	d454      	bmi.n	801ac82 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801abd8:	45f1      	cmp	r9, lr
 801abda:	dd52      	ble.n	801ac82 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801abdc:	2e00      	cmp	r6, #0
 801abde:	d050      	beq.n	801ac82 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801abe0:	2c00      	cmp	r4, #0
 801abe2:	db4c      	blt.n	801ac7e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801abe4:	42a3      	cmp	r3, r4
 801abe6:	dd4a      	ble.n	801ac7e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801abe8:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801abec:	3401      	adds	r4, #1
 801abee:	d405      	bmi.n	801abfc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801abf0:	42a3      	cmp	r3, r4
 801abf2:	dd03      	ble.n	801abfc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801abf4:	b115      	cbz	r5, 801abfc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801abf6:	3301      	adds	r3, #1
 801abf8:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801abfc:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801ac00:	fb15 f406 	smulbb	r4, r5, r6
 801ac04:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ac08:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801ac0c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801ac10:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801ac14:	ea43 0c0c 	orr.w	ip, r3, ip
 801ac18:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801ac1c:	f1c6 0310 	rsb	r3, r6, #16
 801ac20:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801ac24:	1b5b      	subs	r3, r3, r5
 801ac26:	ea4e 0707 	orr.w	r7, lr, r7
 801ac2a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801ac2e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801ac32:	437d      	muls	r5, r7
 801ac34:	fb03 5c0c 	mla	ip, r3, ip, r5
 801ac38:	0403      	lsls	r3, r0, #16
 801ac3a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ac3e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ac42:	4318      	orrs	r0, r3
 801ac44:	0413      	lsls	r3, r2, #16
 801ac46:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ac4a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ac4e:	4313      	orrs	r3, r2
 801ac50:	fb04 c000 	mla	r0, r4, r0, ip
 801ac54:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801ac58:	fb06 0003 	mla	r0, r6, r3, r0
 801ac5c:	0d43      	lsrs	r3, r0, #21
 801ac5e:	0940      	lsrs	r0, r0, #5
 801ac60:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ac64:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ac68:	4318      	orrs	r0, r3
 801ac6a:	8008      	strh	r0, [r1, #0]
 801ac6c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801ac70:	4684      	mov	ip, r0
 801ac72:	e7a6      	b.n	801abc2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801ac74:	4607      	mov	r7, r0
 801ac76:	4684      	mov	ip, r0
 801ac78:	e7ab      	b.n	801abd2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801ac7a:	4607      	mov	r7, r0
 801ac7c:	e7a9      	b.n	801abd2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801ac7e:	4602      	mov	r2, r0
 801ac80:	e7b4      	b.n	801abec <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801ac82:	4602      	mov	r2, r0
 801ac84:	e7ba      	b.n	801abfc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801ac86 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ac86:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ac8a:	b08f      	sub	sp, #60	; 0x3c
 801ac8c:	461d      	mov	r5, r3
 801ac8e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801ac90:	920c      	str	r2, [sp, #48]	; 0x30
 801ac92:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 801ac96:	9107      	str	r1, [sp, #28]
 801ac98:	6859      	ldr	r1, [r3, #4]
 801ac9a:	681b      	ldr	r3, [r3, #0]
 801ac9c:	900d      	str	r0, [sp, #52]	; 0x34
 801ac9e:	fb01 2707 	mla	r7, r1, r7, r2
 801aca2:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801aca6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801aca8:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 801acac:	f8d3 8000 	ldr.w	r8, [r3]
 801acb0:	9b07      	ldr	r3, [sp, #28]
 801acb2:	2b00      	cmp	r3, #0
 801acb4:	dc03      	bgt.n	801acbe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801acb6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801acb8:	2b00      	cmp	r3, #0
 801acba:	f340 8181 	ble.w	801afc0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801acbe:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801acc0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801acc4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801acc8:	1e48      	subs	r0, r1, #1
 801acca:	f102 3cff 	add.w	ip, r2, #4294967295
 801acce:	2d00      	cmp	r5, #0
 801acd0:	f340 809b 	ble.w	801ae0a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801acd4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801acd8:	ea4f 4326 	mov.w	r3, r6, asr #16
 801acdc:	d406      	bmi.n	801acec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801acde:	4586      	cmp	lr, r0
 801ace0:	da04      	bge.n	801acec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ace2:	2b00      	cmp	r3, #0
 801ace4:	db02      	blt.n	801acec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ace6:	4563      	cmp	r3, ip
 801ace8:	f2c0 8090 	blt.w	801ae0c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801acec:	f11e 0e01 	adds.w	lr, lr, #1
 801acf0:	f100 8084 	bmi.w	801adfc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801acf4:	4571      	cmp	r1, lr
 801acf6:	f2c0 8081 	blt.w	801adfc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801acfa:	3301      	adds	r3, #1
 801acfc:	d47e      	bmi.n	801adfc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801acfe:	429a      	cmp	r2, r3
 801ad00:	db7c      	blt.n	801adfc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801ad02:	46aa      	mov	sl, r5
 801ad04:	46b9      	mov	r9, r7
 801ad06:	f1ba 0f00 	cmp.w	sl, #0
 801ad0a:	f340 8099 	ble.w	801ae40 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801ad0e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ad10:	1421      	asrs	r1, r4, #16
 801ad12:	ea4f 4026 	mov.w	r0, r6, asr #16
 801ad16:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ad1a:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801ad1e:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801ad22:	f100 80d0 	bmi.w	801aec6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801ad26:	f10e 3bff 	add.w	fp, lr, #4294967295
 801ad2a:	4559      	cmp	r1, fp
 801ad2c:	f280 80cb 	bge.w	801aec6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801ad30:	2800      	cmp	r0, #0
 801ad32:	f2c0 80c8 	blt.w	801aec6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801ad36:	f103 3bff 	add.w	fp, r3, #4294967295
 801ad3a:	4558      	cmp	r0, fp
 801ad3c:	f280 80c3 	bge.w	801aec6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801ad40:	fa0f fe8e 	sxth.w	lr, lr
 801ad44:	fb00 110e 	mla	r1, r0, lr, r1
 801ad48:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801ad4c:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801ad50:	8841      	ldrh	r1, [r0, #2]
 801ad52:	f1bc 0f00 	cmp.w	ip, #0
 801ad56:	d00b      	beq.n	801ad70 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801ad58:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 801ad5c:	3b01      	subs	r3, #1
 801ad5e:	005b      	lsls	r3, r3, #1
 801ad60:	3302      	adds	r3, #2
 801ad62:	eb00 0e03 	add.w	lr, r0, r3
 801ad66:	5ac3      	ldrh	r3, [r0, r3]
 801ad68:	9308      	str	r3, [sp, #32]
 801ad6a:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801ad6e:	9309      	str	r3, [sp, #36]	; 0x24
 801ad70:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801ad74:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801ad78:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801ad7c:	ea40 000b 	orr.w	r0, r0, fp
 801ad80:	fb12 f30c 	smulbb	r3, r2, ip
 801ad84:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801ad88:	10db      	asrs	r3, r3, #3
 801ad8a:	f1cc 0e10 	rsb	lr, ip, #16
 801ad8e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801ad92:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801ad96:	ebae 0e02 	sub.w	lr, lr, r2
 801ad9a:	ea4b 0101 	orr.w	r1, fp, r1
 801ad9e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801ada2:	4351      	muls	r1, r2
 801ada4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ada6:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801adaa:	fb0e 1e00 	mla	lr, lr, r0, r1
 801adae:	0410      	lsls	r0, r2, #16
 801adb0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801adb4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801adb8:	4310      	orrs	r0, r2
 801adba:	9a08      	ldr	r2, [sp, #32]
 801adbc:	9908      	ldr	r1, [sp, #32]
 801adbe:	0412      	lsls	r2, r2, #16
 801adc0:	fb03 e000 	mla	r0, r3, r0, lr
 801adc4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801adc8:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801adcc:	ea42 020e 	orr.w	r2, r2, lr
 801add0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801add4:	fb03 0302 	mla	r3, r3, r2, r0
 801add8:	0d5a      	lsrs	r2, r3, #21
 801adda:	095b      	lsrs	r3, r3, #5
 801addc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ade0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ade4:	4313      	orrs	r3, r2
 801ade6:	f8a9 3000 	strh.w	r3, [r9]
 801adea:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801adec:	441c      	add	r4, r3
 801adee:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801adf0:	f109 0902 	add.w	r9, r9, #2
 801adf4:	441e      	add	r6, r3
 801adf6:	f10a 3aff 	add.w	sl, sl, #4294967295
 801adfa:	e784      	b.n	801ad06 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801adfc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801adfe:	441c      	add	r4, r3
 801ae00:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ae02:	3d01      	subs	r5, #1
 801ae04:	441e      	add	r6, r3
 801ae06:	3702      	adds	r7, #2
 801ae08:	e761      	b.n	801acce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ae0a:	d01d      	beq.n	801ae48 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801ae0c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801ae0e:	1e6b      	subs	r3, r5, #1
 801ae10:	fb00 4003 	mla	r0, r0, r3, r4
 801ae14:	1400      	asrs	r0, r0, #16
 801ae16:	f53f af74 	bmi.w	801ad02 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ae1a:	3901      	subs	r1, #1
 801ae1c:	4288      	cmp	r0, r1
 801ae1e:	f6bf af70 	bge.w	801ad02 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ae22:	991c      	ldr	r1, [sp, #112]	; 0x70
 801ae24:	fb01 6303 	mla	r3, r1, r3, r6
 801ae28:	141b      	asrs	r3, r3, #16
 801ae2a:	f53f af6a 	bmi.w	801ad02 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ae2e:	3a01      	subs	r2, #1
 801ae30:	4293      	cmp	r3, r2
 801ae32:	f6bf af66 	bge.w	801ad02 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ae36:	46a9      	mov	r9, r5
 801ae38:	46ba      	mov	sl, r7
 801ae3a:	f1b9 0f00 	cmp.w	r9, #0
 801ae3e:	dc5a      	bgt.n	801aef6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801ae40:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801ae44:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801ae48:	9b07      	ldr	r3, [sp, #28]
 801ae4a:	2b00      	cmp	r3, #0
 801ae4c:	f340 80b8 	ble.w	801afc0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801ae50:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ae54:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ae58:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ae5c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ae5e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ae62:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ae66:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ae6a:	eef0 6a62 	vmov.f32	s13, s5
 801ae6e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ae72:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ae76:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ae7a:	ee16 4a90 	vmov	r4, s13
 801ae7e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ae82:	eef0 6a43 	vmov.f32	s13, s6
 801ae86:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ae8a:	ee12 2a90 	vmov	r2, s5
 801ae8e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ae92:	fb92 f3f3 	sdiv	r3, r2, r3
 801ae96:	ee13 2a10 	vmov	r2, s6
 801ae9a:	931b      	str	r3, [sp, #108]	; 0x6c
 801ae9c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ae9e:	fb92 f3f3 	sdiv	r3, r2, r3
 801aea2:	931c      	str	r3, [sp, #112]	; 0x70
 801aea4:	9b07      	ldr	r3, [sp, #28]
 801aea6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801aea8:	3b01      	subs	r3, #1
 801aeaa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801aeae:	9307      	str	r3, [sp, #28]
 801aeb0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801aeb2:	ee16 6a90 	vmov	r6, s13
 801aeb6:	bf14      	ite	ne
 801aeb8:	461d      	movne	r5, r3
 801aeba:	4615      	moveq	r5, r2
 801aebc:	eeb0 3a67 	vmov.f32	s6, s15
 801aec0:	eef0 2a47 	vmov.f32	s5, s14
 801aec4:	e6f4      	b.n	801acb0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801aec6:	f111 0b01 	adds.w	fp, r1, #1
 801aeca:	d48e      	bmi.n	801adea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801aecc:	45de      	cmp	lr, fp
 801aece:	db8c      	blt.n	801adea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801aed0:	f110 0b01 	adds.w	fp, r0, #1
 801aed4:	d489      	bmi.n	801adea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801aed6:	455b      	cmp	r3, fp
 801aed8:	db87      	blt.n	801adea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801aeda:	b21b      	sxth	r3, r3
 801aedc:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801aee0:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801aee4:	9300      	str	r3, [sp, #0]
 801aee6:	4642      	mov	r2, r8
 801aee8:	fa0f f38e 	sxth.w	r3, lr
 801aeec:	4649      	mov	r1, r9
 801aeee:	980d      	ldr	r0, [sp, #52]	; 0x34
 801aef0:	f7ff fe4d 	bl	801ab8e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801aef4:	e779      	b.n	801adea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801aef6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801aef8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801aefc:	1420      	asrs	r0, r4, #16
 801aefe:	1431      	asrs	r1, r6, #16
 801af00:	fb03 0101 	mla	r1, r3, r1, r0
 801af04:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801af08:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801af0c:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801af10:	8841      	ldrh	r1, [r0, #2]
 801af12:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801af16:	f1be 0f00 	cmp.w	lr, #0
 801af1a:	d00b      	beq.n	801af34 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801af1c:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 801af20:	3b01      	subs	r3, #1
 801af22:	005b      	lsls	r3, r3, #1
 801af24:	3302      	adds	r3, #2
 801af26:	eb00 0b03 	add.w	fp, r0, r3
 801af2a:	5ac3      	ldrh	r3, [r0, r3]
 801af2c:	930a      	str	r3, [sp, #40]	; 0x28
 801af2e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801af32:	930b      	str	r3, [sp, #44]	; 0x2c
 801af34:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801af38:	fb12 f30e 	smulbb	r3, r2, lr
 801af3c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801af40:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801af44:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801af48:	10db      	asrs	r3, r3, #3
 801af4a:	ea40 000c 	orr.w	r0, r0, ip
 801af4e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801af52:	f1ce 0c10 	rsb	ip, lr, #16
 801af56:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801af5a:	ebac 0c02 	sub.w	ip, ip, r2
 801af5e:	ea4b 0101 	orr.w	r1, fp, r1
 801af62:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801af66:	4351      	muls	r1, r2
 801af68:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801af6a:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801af6e:	fb0c 1c00 	mla	ip, ip, r0, r1
 801af72:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801af76:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 801af7a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801af7c:	990a      	ldr	r1, [sp, #40]	; 0x28
 801af7e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801af82:	0412      	lsls	r2, r2, #16
 801af84:	ea4b 0000 	orr.w	r0, fp, r0
 801af88:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801af8c:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 801af90:	fb03 c000 	mla	r0, r3, r0, ip
 801af94:	ea42 0b0b 	orr.w	fp, r2, fp
 801af98:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801af9c:	fb03 000b 	mla	r0, r3, fp, r0
 801afa0:	0d43      	lsrs	r3, r0, #21
 801afa2:	0940      	lsrs	r0, r0, #5
 801afa4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801afa8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801afac:	4318      	orrs	r0, r3
 801afae:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801afb0:	f82a 0b02 	strh.w	r0, [sl], #2
 801afb4:	441c      	add	r4, r3
 801afb6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801afb8:	f109 39ff 	add.w	r9, r9, #4294967295
 801afbc:	441e      	add	r6, r3
 801afbe:	e73c      	b.n	801ae3a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801afc0:	b00f      	add	sp, #60	; 0x3c
 801afc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801afc6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801afc6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801afca:	b085      	sub	sp, #20
 801afcc:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801afd0:	9102      	str	r1, [sp, #8]
 801afd2:	2c00      	cmp	r4, #0
 801afd4:	fb04 7103 	mla	r1, r4, r3, r7
 801afd8:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801afdc:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801afe0:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801afe4:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801afe8:	f2c0 811b 	blt.w	801b222 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801afec:	45a6      	cmp	lr, r4
 801afee:	f340 8118 	ble.w	801b222 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801aff2:	2f00      	cmp	r7, #0
 801aff4:	f2c0 8113 	blt.w	801b21e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801aff8:	42bb      	cmp	r3, r7
 801affa:	f340 8110 	ble.w	801b21e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801affe:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801b002:	1c7a      	adds	r2, r7, #1
 801b004:	f100 8110 	bmi.w	801b228 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801b008:	4293      	cmp	r3, r2
 801b00a:	f340 810d 	ble.w	801b228 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801b00e:	2e00      	cmp	r6, #0
 801b010:	f000 810c 	beq.w	801b22c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801b014:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801b018:	3401      	adds	r4, #1
 801b01a:	f100 810b 	bmi.w	801b234 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801b01e:	45a6      	cmp	lr, r4
 801b020:	f340 8108 	ble.w	801b234 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801b024:	2800      	cmp	r0, #0
 801b026:	f000 8108 	beq.w	801b23a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801b02a:	2f00      	cmp	r7, #0
 801b02c:	f2c0 8100 	blt.w	801b230 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801b030:	42bb      	cmp	r3, r7
 801b032:	f340 80fd 	ble.w	801b230 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801b036:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801b03a:	3701      	adds	r7, #1
 801b03c:	f100 8100 	bmi.w	801b240 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801b040:	42bb      	cmp	r3, r7
 801b042:	f340 80fd 	ble.w	801b240 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801b046:	2e00      	cmp	r6, #0
 801b048:	f000 80fc 	beq.w	801b244 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801b04c:	3301      	adds	r3, #1
 801b04e:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801b052:	b2b6      	uxth	r6, r6
 801b054:	b280      	uxth	r0, r0
 801b056:	fb00 fe06 	mul.w	lr, r0, r6
 801b05a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801b05e:	0136      	lsls	r6, r6, #4
 801b060:	eba6 070e 	sub.w	r7, r6, lr
 801b064:	b280      	uxth	r0, r0
 801b066:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801b06a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801b06e:	b2bf      	uxth	r7, r7
 801b070:	1a1b      	subs	r3, r3, r0
 801b072:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801b076:	b29b      	uxth	r3, r3
 801b078:	fb0a f607 	mul.w	r6, sl, r7
 801b07c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801b080:	fb0b 6603 	mla	r6, fp, r3, r6
 801b084:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801b088:	fb00 6609 	mla	r6, r0, r9, r6
 801b08c:	fb0e 6608 	mla	r6, lr, r8, r6
 801b090:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801b094:	9600      	str	r6, [sp, #0]
 801b096:	2e00      	cmp	r6, #0
 801b098:	f000 80be 	beq.w	801b218 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801b09c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801b0a0:	fb0b fc0c 	mul.w	ip, fp, ip
 801b0a4:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801b0a8:	fb0b f505 	mul.w	r5, fp, r5
 801b0ac:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801b0b0:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801b0b4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801b0b8:	44dc      	add	ip, fp
 801b0ba:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b0be:	9501      	str	r5, [sp, #4]
 801b0c0:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801b0c4:	9503      	str	r5, [sp, #12]
 801b0c6:	9d01      	ldr	r5, [sp, #4]
 801b0c8:	9e02      	ldr	r6, [sp, #8]
 801b0ca:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801b0ce:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801b0d2:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801b0d6:	fb0a fc0c 	mul.w	ip, sl, ip
 801b0da:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801b0de:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801b0e2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b0e6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801b0ea:	4465      	add	r5, ip
 801b0ec:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b0f0:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801b0f4:	fb09 fc0c 	mul.w	ip, r9, ip
 801b0f8:	fb09 f904 	mul.w	r9, r9, r4
 801b0fc:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801b100:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801b104:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801b108:	fb08 f404 	mul.w	r4, r8, r4
 801b10c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b110:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801b114:	fb08 f802 	mul.w	r8, r8, r2
 801b118:	fb0a fa01 	mul.w	sl, sl, r1
 801b11c:	0a22      	lsrs	r2, r4, #8
 801b11e:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801b122:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b126:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801b12a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801b12e:	4414      	add	r4, r2
 801b130:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801b134:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801b138:	0a2d      	lsrs	r5, r5, #8
 801b13a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801b13e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b142:	9a03      	ldr	r2, [sp, #12]
 801b144:	8836      	ldrh	r6, [r6, #0]
 801b146:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801b14a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801b14e:	437d      	muls	r5, r7
 801b150:	4461      	add	r1, ip
 801b152:	0a24      	lsrs	r4, r4, #8
 801b154:	fb02 5503 	mla	r5, r2, r3, r5
 801b158:	0a09      	lsrs	r1, r1, #8
 801b15a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801b15e:	fb04 540e 	mla	r4, r4, lr, r5
 801b162:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801b166:	fb01 4100 	mla	r1, r1, r0, r4
 801b16a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b16e:	0a09      	lsrs	r1, r1, #8
 801b170:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b174:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801b178:	fb07 f70a 	mul.w	r7, r7, sl
 801b17c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801b180:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801b184:	fb03 7101 	mla	r1, r3, r1, r7
 801b188:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b18c:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801b190:	fb0e 1e08 	mla	lr, lr, r8, r1
 801b194:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801b198:	fb00 e101 	mla	r1, r0, r1, lr
 801b19c:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801b1a0:	9a00      	ldr	r2, [sp, #0]
 801b1a2:	b287      	uxth	r7, r0
 801b1a4:	437a      	muls	r2, r7
 801b1a6:	0a09      	lsrs	r1, r1, #8
 801b1a8:	1c53      	adds	r3, r2, #1
 801b1aa:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b1ae:	4321      	orrs	r1, r4
 801b1b0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b1b4:	1235      	asrs	r5, r6, #8
 801b1b6:	0c0a      	lsrs	r2, r1, #16
 801b1b8:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801b1bc:	b2db      	uxtb	r3, r3
 801b1be:	fb12 f207 	smulbb	r2, r2, r7
 801b1c2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801b1c6:	fb05 2503 	mla	r5, r5, r3, r2
 801b1ca:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801b1ce:	10f2      	asrs	r2, r6, #3
 801b1d0:	b2c8      	uxtb	r0, r1
 801b1d2:	00f6      	lsls	r6, r6, #3
 801b1d4:	fb14 f407 	smulbb	r4, r4, r7
 801b1d8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801b1dc:	b2f6      	uxtb	r6, r6
 801b1de:	fb10 f007 	smulbb	r0, r0, r7
 801b1e2:	fb02 4203 	mla	r2, r2, r3, r4
 801b1e6:	b2ad      	uxth	r5, r5
 801b1e8:	fb06 0303 	mla	r3, r6, r3, r0
 801b1ec:	b299      	uxth	r1, r3
 801b1ee:	b294      	uxth	r4, r2
 801b1f0:	1c6b      	adds	r3, r5, #1
 801b1f2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801b1f6:	1c62      	adds	r2, r4, #1
 801b1f8:	1c4b      	adds	r3, r1, #1
 801b1fa:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801b1fe:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801b202:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801b206:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b20a:	0952      	lsrs	r2, r2, #5
 801b20c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b210:	432b      	orrs	r3, r5
 801b212:	4313      	orrs	r3, r2
 801b214:	9a02      	ldr	r2, [sp, #8]
 801b216:	8013      	strh	r3, [r2, #0]
 801b218:	b005      	add	sp, #20
 801b21a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b21e:	2500      	movs	r5, #0
 801b220:	e6ef      	b.n	801b002 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801b222:	2100      	movs	r1, #0
 801b224:	460d      	mov	r5, r1
 801b226:	e6f7      	b.n	801b018 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801b228:	2100      	movs	r1, #0
 801b22a:	e6f5      	b.n	801b018 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801b22c:	4631      	mov	r1, r6
 801b22e:	e6f3      	b.n	801b018 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801b230:	2400      	movs	r4, #0
 801b232:	e702      	b.n	801b03a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801b234:	2200      	movs	r2, #0
 801b236:	4614      	mov	r4, r2
 801b238:	e70b      	b.n	801b052 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801b23a:	4602      	mov	r2, r0
 801b23c:	4604      	mov	r4, r0
 801b23e:	e708      	b.n	801b052 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801b240:	2200      	movs	r2, #0
 801b242:	e706      	b.n	801b052 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801b244:	4632      	mov	r2, r6
 801b246:	e704      	b.n	801b052 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801b248 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b248:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b24c:	b09d      	sub	sp, #116	; 0x74
 801b24e:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801b252:	9219      	str	r2, [sp, #100]	; 0x64
 801b254:	9307      	str	r3, [sp, #28]
 801b256:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801b258:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 801b25c:	931a      	str	r3, [sp, #104]	; 0x68
 801b25e:	9117      	str	r1, [sp, #92]	; 0x5c
 801b260:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801b264:	901b      	str	r0, [sp, #108]	; 0x6c
 801b266:	6850      	ldr	r0, [r2, #4]
 801b268:	6812      	ldr	r2, [r2, #0]
 801b26a:	fb00 1303 	mla	r3, r0, r3, r1
 801b26e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b272:	930a      	str	r3, [sp, #40]	; 0x28
 801b274:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801b276:	681b      	ldr	r3, [r3, #0]
 801b278:	9310      	str	r3, [sp, #64]	; 0x40
 801b27a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801b27e:	930b      	str	r3, [sp, #44]	; 0x2c
 801b280:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b282:	2b00      	cmp	r3, #0
 801b284:	dc03      	bgt.n	801b28e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801b286:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801b288:	2b00      	cmp	r3, #0
 801b28a:	f340 8375 	ble.w	801b978 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801b28e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801b290:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b294:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b298:	1e48      	subs	r0, r1, #1
 801b29a:	1e57      	subs	r7, r2, #1
 801b29c:	9b07      	ldr	r3, [sp, #28]
 801b29e:	2b00      	cmp	r3, #0
 801b2a0:	f340 818e 	ble.w	801b5c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801b2a4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801b2a8:	ea4f 4326 	mov.w	r3, r6, asr #16
 801b2ac:	d406      	bmi.n	801b2bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801b2ae:	4584      	cmp	ip, r0
 801b2b0:	da04      	bge.n	801b2bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801b2b2:	2b00      	cmp	r3, #0
 801b2b4:	db02      	blt.n	801b2bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801b2b6:	42bb      	cmp	r3, r7
 801b2b8:	f2c0 8183 	blt.w	801b5c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801b2bc:	f11c 0c01 	adds.w	ip, ip, #1
 801b2c0:	f100 8173 	bmi.w	801b5aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801b2c4:	4561      	cmp	r1, ip
 801b2c6:	f2c0 8170 	blt.w	801b5aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801b2ca:	3301      	adds	r3, #1
 801b2cc:	f100 816d 	bmi.w	801b5aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801b2d0:	429a      	cmp	r2, r3
 801b2d2:	f2c0 816a 	blt.w	801b5aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801b2d6:	9b07      	ldr	r3, [sp, #28]
 801b2d8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801b2da:	9318      	str	r3, [sp, #96]	; 0x60
 801b2dc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b2de:	2b00      	cmp	r3, #0
 801b2e0:	f340 818c 	ble.w	801b5fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801b2e4:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801b2e6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801b2e8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801b2ec:	689b      	ldr	r3, [r3, #8]
 801b2ee:	1422      	asrs	r2, r4, #16
 801b2f0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801b2f4:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801b2f8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801b2fc:	f100 81cd 	bmi.w	801b69a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801b300:	f103 38ff 	add.w	r8, r3, #4294967295
 801b304:	4542      	cmp	r2, r8
 801b306:	f280 81c8 	bge.w	801b69a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801b30a:	f1bc 0f00 	cmp.w	ip, #0
 801b30e:	f2c0 81c4 	blt.w	801b69a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801b312:	f10e 38ff 	add.w	r8, lr, #4294967295
 801b316:	45c4      	cmp	ip, r8
 801b318:	f280 81bf 	bge.w	801b69a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801b31c:	b21b      	sxth	r3, r3
 801b31e:	fb0c 2203 	mla	r2, ip, r3, r2
 801b322:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801b324:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801b328:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801b32c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801b330:	2800      	cmp	r0, #0
 801b332:	f000 81a9 	beq.w	801b688 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801b336:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801b33a:	950c      	str	r5, [sp, #48]	; 0x30
 801b33c:	0e2d      	lsrs	r5, r5, #24
 801b33e:	9513      	str	r5, [sp, #76]	; 0x4c
 801b340:	b181      	cbz	r1, 801b364 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801b342:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801b346:	3b01      	subs	r3, #1
 801b348:	009b      	lsls	r3, r3, #2
 801b34a:	3304      	adds	r3, #4
 801b34c:	eb08 0c03 	add.w	ip, r8, r3
 801b350:	f858 3003 	ldr.w	r3, [r8, r3]
 801b354:	9308      	str	r3, [sp, #32]
 801b356:	0e1b      	lsrs	r3, r3, #24
 801b358:	9311      	str	r3, [sp, #68]	; 0x44
 801b35a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801b35e:	930d      	str	r3, [sp, #52]	; 0x34
 801b360:	0e1b      	lsrs	r3, r3, #24
 801b362:	9314      	str	r3, [sp, #80]	; 0x50
 801b364:	b280      	uxth	r0, r0
 801b366:	b289      	uxth	r1, r1
 801b368:	fb00 f901 	mul.w	r9, r0, r1
 801b36c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801b370:	0100      	lsls	r0, r0, #4
 801b372:	eba0 0809 	sub.w	r8, r0, r9
 801b376:	b289      	uxth	r1, r1
 801b378:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801b37c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b37e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b380:	fa1f f888 	uxth.w	r8, r8
 801b384:	1a5b      	subs	r3, r3, r1
 801b386:	b29b      	uxth	r3, r3
 801b388:	fb08 f000 	mul.w	r0, r8, r0
 801b38c:	fb03 000e 	mla	r0, r3, lr, r0
 801b390:	fb01 0005 	mla	r0, r1, r5, r0
 801b394:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b396:	fb09 0005 	mla	r0, r9, r5, r0
 801b39a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801b39e:	2800      	cmp	r0, #0
 801b3a0:	f000 80fa 	beq.w	801b598 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801b3a4:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801b3a8:	d01b      	beq.n	801b3e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801b3aa:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801b3ae:	fb0e fa0a 	mul.w	sl, lr, sl
 801b3b2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801b3b6:	fb0e fe02 	mul.w	lr, lr, r2
 801b3ba:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801b3be:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b3c2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b3c6:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801b3ca:	4452      	add	r2, sl
 801b3cc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b3d0:	0a12      	lsrs	r2, r2, #8
 801b3d2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b3d6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b3da:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b3de:	ea42 020c 	orr.w	r2, r2, ip
 801b3e2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b3e4:	2dff      	cmp	r5, #255	; 0xff
 801b3e6:	d021      	beq.n	801b42c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801b3e8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801b3ea:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801b3ee:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b3f0:	fb05 fb0b 	mul.w	fp, r5, fp
 801b3f4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801b3f6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801b3fa:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b3fc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b400:	fb05 fa0a 	mul.w	sl, r5, sl
 801b404:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b408:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b40c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b410:	44de      	add	lr, fp
 801b412:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b416:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b41a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b41e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b422:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b426:	ea4e 050a 	orr.w	r5, lr, sl
 801b42a:	950c      	str	r5, [sp, #48]	; 0x30
 801b42c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b42e:	2dff      	cmp	r5, #255	; 0xff
 801b430:	d021      	beq.n	801b476 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801b432:	9d08      	ldr	r5, [sp, #32]
 801b434:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801b438:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b43a:	fb05 fb0b 	mul.w	fp, r5, fp
 801b43e:	9d08      	ldr	r5, [sp, #32]
 801b440:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801b444:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b446:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b44a:	fb05 fa0a 	mul.w	sl, r5, sl
 801b44e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b452:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b456:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b45a:	44de      	add	lr, fp
 801b45c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b460:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b464:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b468:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b46c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b470:	ea4e 050a 	orr.w	r5, lr, sl
 801b474:	9508      	str	r5, [sp, #32]
 801b476:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b478:	2dff      	cmp	r5, #255	; 0xff
 801b47a:	d021      	beq.n	801b4c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801b47c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801b47e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801b482:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b484:	fb05 fb0b 	mul.w	fp, r5, fp
 801b488:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801b48a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801b48e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b490:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b494:	fb05 fa0a 	mul.w	sl, r5, sl
 801b498:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b49c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b4a0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b4a4:	44de      	add	lr, fp
 801b4a6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b4aa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b4ae:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b4b2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b4b6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b4ba:	ea4e 050a 	orr.w	r5, lr, sl
 801b4be:	950d      	str	r5, [sp, #52]	; 0x34
 801b4c0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801b4c2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801b4c6:	9d08      	ldr	r5, [sp, #32]
 801b4c8:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801b4cc:	fb08 fc0c 	mul.w	ip, r8, ip
 801b4d0:	fb03 cc0e 	mla	ip, r3, lr, ip
 801b4d4:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801b4d8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801b4da:	fb01 cc0e 	mla	ip, r1, lr, ip
 801b4de:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801b4e2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801b4e4:	fb09 cc0e 	mla	ip, r9, lr, ip
 801b4e8:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801b4ec:	fb08 f80e 	mul.w	r8, r8, lr
 801b4f0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801b4f4:	fb03 8202 	mla	r2, r3, r2, r8
 801b4f8:	9b08      	ldr	r3, [sp, #32]
 801b4fa:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801b4fc:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 801b500:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b502:	fb01 220a 	mla	r2, r1, sl, r2
 801b506:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 801b50a:	fb09 2901 	mla	r9, r9, r1, r2
 801b50e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801b510:	883b      	ldrh	r3, [r7, #0]
 801b512:	4342      	muls	r2, r0
 801b514:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b518:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b51c:	1c50      	adds	r0, r2, #1
 801b51e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b522:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801b526:	ea4c 0c09 	orr.w	ip, ip, r9
 801b52a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801b52e:	1219      	asrs	r1, r3, #8
 801b530:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801b534:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801b538:	b2c0      	uxtb	r0, r0
 801b53a:	fb12 f205 	smulbb	r2, r2, r5
 801b53e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801b542:	fb01 2100 	mla	r1, r1, r0, r2
 801b546:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801b54a:	10da      	asrs	r2, r3, #3
 801b54c:	fa5f fc8c 	uxtb.w	ip, ip
 801b550:	00db      	lsls	r3, r3, #3
 801b552:	fb1c fc05 	smulbb	ip, ip, r5
 801b556:	b2db      	uxtb	r3, r3
 801b558:	b289      	uxth	r1, r1
 801b55a:	fb03 c300 	mla	r3, r3, r0, ip
 801b55e:	fa1f fc83 	uxth.w	ip, r3
 801b562:	1c4b      	adds	r3, r1, #1
 801b564:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801b568:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801b56c:	fb1e fe05 	smulbb	lr, lr, r5
 801b570:	f10c 0301 	add.w	r3, ip, #1
 801b574:	fb02 e200 	mla	r2, r2, r0, lr
 801b578:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801b57c:	b292      	uxth	r2, r2
 801b57e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801b582:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b586:	430b      	orrs	r3, r1
 801b588:	1c51      	adds	r1, r2, #1
 801b58a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801b58e:	0952      	lsrs	r2, r2, #5
 801b590:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b594:	4313      	orrs	r3, r2
 801b596:	803b      	strh	r3, [r7, #0]
 801b598:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b59a:	441c      	add	r4, r3
 801b59c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b59e:	441e      	add	r6, r3
 801b5a0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b5a2:	3b01      	subs	r3, #1
 801b5a4:	3702      	adds	r7, #2
 801b5a6:	9318      	str	r3, [sp, #96]	; 0x60
 801b5a8:	e698      	b.n	801b2dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b5aa:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b5ac:	441c      	add	r4, r3
 801b5ae:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b5b0:	441e      	add	r6, r3
 801b5b2:	9b07      	ldr	r3, [sp, #28]
 801b5b4:	3b01      	subs	r3, #1
 801b5b6:	9307      	str	r3, [sp, #28]
 801b5b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b5ba:	3302      	adds	r3, #2
 801b5bc:	930a      	str	r3, [sp, #40]	; 0x28
 801b5be:	e66d      	b.n	801b29c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801b5c0:	d023      	beq.n	801b60a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801b5c2:	9b07      	ldr	r3, [sp, #28]
 801b5c4:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801b5c6:	3b01      	subs	r3, #1
 801b5c8:	fb00 4003 	mla	r0, r0, r3, r4
 801b5cc:	1400      	asrs	r0, r0, #16
 801b5ce:	f53f ae82 	bmi.w	801b2d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801b5d2:	3901      	subs	r1, #1
 801b5d4:	4288      	cmp	r0, r1
 801b5d6:	f6bf ae7e 	bge.w	801b2d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801b5da:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801b5dc:	fb01 6303 	mla	r3, r1, r3, r6
 801b5e0:	141b      	asrs	r3, r3, #16
 801b5e2:	f53f ae78 	bmi.w	801b2d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801b5e6:	3a01      	subs	r2, #1
 801b5e8:	4293      	cmp	r3, r2
 801b5ea:	f6bf ae74 	bge.w	801b2d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801b5ee:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801b5f2:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801b5f6:	f1bb 0f00 	cmp.w	fp, #0
 801b5fa:	dc6c      	bgt.n	801b6d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801b5fc:	9b07      	ldr	r3, [sp, #28]
 801b5fe:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801b602:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b604:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801b608:	930a      	str	r3, [sp, #40]	; 0x28
 801b60a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b60c:	2b00      	cmp	r3, #0
 801b60e:	f340 81b3 	ble.w	801b978 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801b612:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b616:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b61a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b61e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801b620:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b624:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b628:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b62c:	eef0 6a62 	vmov.f32	s13, s5
 801b630:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b634:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b638:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b63c:	ee16 4a90 	vmov	r4, s13
 801b640:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b644:	eef0 6a43 	vmov.f32	s13, s6
 801b648:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b64c:	ee12 2a90 	vmov	r2, s5
 801b650:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b654:	fb92 f3f3 	sdiv	r3, r2, r3
 801b658:	ee13 2a10 	vmov	r2, s6
 801b65c:	9329      	str	r3, [sp, #164]	; 0xa4
 801b65e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801b660:	fb92 f3f3 	sdiv	r3, r2, r3
 801b664:	932a      	str	r3, [sp, #168]	; 0xa8
 801b666:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b668:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801b66a:	3b01      	subs	r3, #1
 801b66c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b670:	9317      	str	r3, [sp, #92]	; 0x5c
 801b672:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801b674:	bf08      	it	eq
 801b676:	4613      	moveq	r3, r2
 801b678:	ee16 6a90 	vmov	r6, s13
 801b67c:	9307      	str	r3, [sp, #28]
 801b67e:	eeb0 3a67 	vmov.f32	s6, s15
 801b682:	eef0 2a47 	vmov.f32	s5, s14
 801b686:	e5fb      	b.n	801b280 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801b688:	2900      	cmp	r1, #0
 801b68a:	f43f ae6b 	beq.w	801b364 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801b68e:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801b692:	9308      	str	r3, [sp, #32]
 801b694:	0e1b      	lsrs	r3, r3, #24
 801b696:	9311      	str	r3, [sp, #68]	; 0x44
 801b698:	e664      	b.n	801b364 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801b69a:	f112 0801 	adds.w	r8, r2, #1
 801b69e:	f53f af7b 	bmi.w	801b598 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801b6a2:	4543      	cmp	r3, r8
 801b6a4:	f6ff af78 	blt.w	801b598 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801b6a8:	f11c 0801 	adds.w	r8, ip, #1
 801b6ac:	f53f af74 	bmi.w	801b598 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801b6b0:	45c6      	cmp	lr, r8
 801b6b2:	f6ff af71 	blt.w	801b598 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801b6b6:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801b6b8:	9201      	str	r2, [sp, #4]
 801b6ba:	fa0f f28e 	sxth.w	r2, lr
 801b6be:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801b6c2:	e9cd c002 	strd	ip, r0, [sp, #8]
 801b6c6:	9200      	str	r2, [sp, #0]
 801b6c8:	b21b      	sxth	r3, r3
 801b6ca:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b6cc:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801b6ce:	4639      	mov	r1, r7
 801b6d0:	f7ff fc79 	bl	801afc6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801b6d4:	e760      	b.n	801b598 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801b6d6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801b6d8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801b6da:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b6de:	1427      	asrs	r7, r4, #16
 801b6e0:	1433      	asrs	r3, r6, #16
 801b6e2:	fb01 7303 	mla	r3, r1, r3, r7
 801b6e6:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801b6ea:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801b6ee:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801b6f2:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801b6f6:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801b6fa:	2a00      	cmp	r2, #0
 801b6fc:	f000 8133 	beq.w	801b966 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801b700:	687d      	ldr	r5, [r7, #4]
 801b702:	950e      	str	r5, [sp, #56]	; 0x38
 801b704:	0e2d      	lsrs	r5, r5, #24
 801b706:	9515      	str	r5, [sp, #84]	; 0x54
 801b708:	b178      	cbz	r0, 801b72a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801b70a:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 801b70e:	3901      	subs	r1, #1
 801b710:	0089      	lsls	r1, r1, #2
 801b712:	3104      	adds	r1, #4
 801b714:	eb07 0e01 	add.w	lr, r7, r1
 801b718:	5879      	ldr	r1, [r7, r1]
 801b71a:	9109      	str	r1, [sp, #36]	; 0x24
 801b71c:	0e09      	lsrs	r1, r1, #24
 801b71e:	9112      	str	r1, [sp, #72]	; 0x48
 801b720:	f8de 1004 	ldr.w	r1, [lr, #4]
 801b724:	910f      	str	r1, [sp, #60]	; 0x3c
 801b726:	0e09      	lsrs	r1, r1, #24
 801b728:	9116      	str	r1, [sp, #88]	; 0x58
 801b72a:	b292      	uxth	r2, r2
 801b72c:	b280      	uxth	r0, r0
 801b72e:	fb02 f800 	mul.w	r8, r2, r0
 801b732:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801b736:	0112      	lsls	r2, r2, #4
 801b738:	eba2 0e08 	sub.w	lr, r2, r8
 801b73c:	b280      	uxth	r0, r0
 801b73e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801b742:	9915      	ldr	r1, [sp, #84]	; 0x54
 801b744:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b746:	fa1f fe8e 	uxth.w	lr, lr
 801b74a:	1a12      	subs	r2, r2, r0
 801b74c:	b292      	uxth	r2, r2
 801b74e:	fb0e f101 	mul.w	r1, lr, r1
 801b752:	fb02 110c 	mla	r1, r2, ip, r1
 801b756:	fb00 1105 	mla	r1, r0, r5, r1
 801b75a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801b75c:	fb08 1105 	mla	r1, r8, r5, r1
 801b760:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801b764:	2900      	cmp	r1, #0
 801b766:	f000 80f5 	beq.w	801b954 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801b76a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801b76e:	d019      	beq.n	801b7a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801b770:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b774:	fb0c fa0a 	mul.w	sl, ip, sl
 801b778:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b77c:	fb0c fc03 	mul.w	ip, ip, r3
 801b780:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b784:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b788:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b78c:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801b790:	4453      	add	r3, sl
 801b792:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801b796:	0a1b      	lsrs	r3, r3, #8
 801b798:	0a3f      	lsrs	r7, r7, #8
 801b79a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b79e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801b7a2:	433b      	orrs	r3, r7
 801b7a4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801b7a6:	2dff      	cmp	r5, #255	; 0xff
 801b7a8:	d020      	beq.n	801b7ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801b7aa:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801b7ac:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801b7b0:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801b7b2:	436f      	muls	r7, r5
 801b7b4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801b7b6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801b7ba:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801b7bc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b7c0:	fb05 fa0a 	mul.w	sl, r5, sl
 801b7c4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b7c8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b7cc:	44bc      	add	ip, r7
 801b7ce:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b7d2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b7d6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b7da:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b7de:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b7e2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b7e6:	ea4c 050a 	orr.w	r5, ip, sl
 801b7ea:	950e      	str	r5, [sp, #56]	; 0x38
 801b7ec:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b7ee:	2dff      	cmp	r5, #255	; 0xff
 801b7f0:	d020      	beq.n	801b834 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801b7f2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801b7f4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801b7f8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b7fa:	436f      	muls	r7, r5
 801b7fc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801b7fe:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801b802:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b804:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b808:	fb05 fa0a 	mul.w	sl, r5, sl
 801b80c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b810:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b814:	44bc      	add	ip, r7
 801b816:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b81a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b81e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b822:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b826:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b82a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b82e:	ea4c 050a 	orr.w	r5, ip, sl
 801b832:	9509      	str	r5, [sp, #36]	; 0x24
 801b834:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801b836:	2dff      	cmp	r5, #255	; 0xff
 801b838:	d020      	beq.n	801b87c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801b83a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801b83c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801b840:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801b842:	436f      	muls	r7, r5
 801b844:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801b846:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801b84a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801b84c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b850:	fb05 fa0a 	mul.w	sl, r5, sl
 801b854:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b858:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b85c:	44bc      	add	ip, r7
 801b85e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b862:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b866:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b86a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b86e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b872:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b876:	ea4c 050a 	orr.w	r5, ip, sl
 801b87a:	950f      	str	r5, [sp, #60]	; 0x3c
 801b87c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801b87e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801b882:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801b884:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801b888:	fb0e f707 	mul.w	r7, lr, r7
 801b88c:	fb02 770c 	mla	r7, r2, ip, r7
 801b890:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801b894:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801b896:	fb00 770c 	mla	r7, r0, ip, r7
 801b89a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801b89e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801b8a0:	fb08 770c 	mla	r7, r8, ip, r7
 801b8a4:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801b8a8:	fb0e fe0c 	mul.w	lr, lr, ip
 801b8ac:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b8b0:	fb02 e303 	mla	r3, r2, r3, lr
 801b8b4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801b8b6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801b8b8:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801b8bc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b8be:	fb00 330a 	mla	r3, r0, sl, r3
 801b8c2:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801b8c6:	fb08 3c0c 	mla	ip, r8, ip, r3
 801b8ca:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b8cc:	f8b9 0000 	ldrh.w	r0, [r9]
 801b8d0:	4359      	muls	r1, r3
 801b8d2:	0a3f      	lsrs	r7, r7, #8
 801b8d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b8d8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b8dc:	1c4b      	adds	r3, r1, #1
 801b8de:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801b8e2:	ea47 070c 	orr.w	r7, r7, ip
 801b8e6:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801b8ea:	1202      	asrs	r2, r0, #8
 801b8ec:	0c3b      	lsrs	r3, r7, #16
 801b8ee:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801b8f2:	b2c9      	uxtb	r1, r1
 801b8f4:	fb13 f305 	smulbb	r3, r3, r5
 801b8f8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b8fc:	fb02 3201 	mla	r2, r2, r1, r3
 801b900:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801b904:	10c3      	asrs	r3, r0, #3
 801b906:	b2ff      	uxtb	r7, r7
 801b908:	00c0      	lsls	r0, r0, #3
 801b90a:	b2c0      	uxtb	r0, r0
 801b90c:	fb17 f705 	smulbb	r7, r7, r5
 801b910:	fb00 7001 	mla	r0, r0, r1, r7
 801b914:	b292      	uxth	r2, r2
 801b916:	fb1c fc05 	smulbb	ip, ip, r5
 801b91a:	b280      	uxth	r0, r0
 801b91c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801b920:	fb03 c301 	mla	r3, r3, r1, ip
 801b924:	1c51      	adds	r1, r2, #1
 801b926:	f100 0c01 	add.w	ip, r0, #1
 801b92a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801b92e:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801b932:	b29b      	uxth	r3, r3
 801b934:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b938:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801b93c:	ea4c 0202 	orr.w	r2, ip, r2
 801b940:	f103 0c01 	add.w	ip, r3, #1
 801b944:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801b948:	095b      	lsrs	r3, r3, #5
 801b94a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b94e:	431a      	orrs	r2, r3
 801b950:	f8a9 2000 	strh.w	r2, [r9]
 801b954:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b956:	441c      	add	r4, r3
 801b958:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b95a:	f109 0902 	add.w	r9, r9, #2
 801b95e:	441e      	add	r6, r3
 801b960:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b964:	e647      	b.n	801b5f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801b966:	2800      	cmp	r0, #0
 801b968:	f43f aedf 	beq.w	801b72a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801b96c:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801b970:	9109      	str	r1, [sp, #36]	; 0x24
 801b972:	0e09      	lsrs	r1, r1, #24
 801b974:	9112      	str	r1, [sp, #72]	; 0x48
 801b976:	e6d8      	b.n	801b72a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801b978:	b01d      	add	sp, #116	; 0x74
 801b97a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b97e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801b97e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b982:	b085      	sub	sp, #20
 801b984:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801b988:	9102      	str	r1, [sp, #8]
 801b98a:	2c00      	cmp	r4, #0
 801b98c:	fb04 7103 	mla	r1, r4, r3, r7
 801b990:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801b994:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801b998:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801b99c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801b9a0:	f2c0 810c 	blt.w	801bbbc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801b9a4:	45a6      	cmp	lr, r4
 801b9a6:	f340 8109 	ble.w	801bbbc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801b9aa:	2f00      	cmp	r7, #0
 801b9ac:	f2c0 8104 	blt.w	801bbb8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801b9b0:	42bb      	cmp	r3, r7
 801b9b2:	f340 8101 	ble.w	801bbb8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801b9b6:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801b9ba:	1c7a      	adds	r2, r7, #1
 801b9bc:	f100 8101 	bmi.w	801bbc2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801b9c0:	4293      	cmp	r3, r2
 801b9c2:	f340 80fe 	ble.w	801bbc2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801b9c6:	2e00      	cmp	r6, #0
 801b9c8:	f000 80fd 	beq.w	801bbc6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801b9cc:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801b9d0:	3401      	adds	r4, #1
 801b9d2:	f100 80fc 	bmi.w	801bbce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801b9d6:	45a6      	cmp	lr, r4
 801b9d8:	f340 80f9 	ble.w	801bbce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801b9dc:	2800      	cmp	r0, #0
 801b9de:	f000 80f9 	beq.w	801bbd4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801b9e2:	2f00      	cmp	r7, #0
 801b9e4:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801b9e8:	f2c0 80ef 	blt.w	801bbca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801b9ec:	42bb      	cmp	r3, r7
 801b9ee:	f340 80ec 	ble.w	801bbca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801b9f2:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801b9f6:	3701      	adds	r7, #1
 801b9f8:	f100 80ef 	bmi.w	801bbda <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801b9fc:	42bb      	cmp	r3, r7
 801b9fe:	f340 80ec 	ble.w	801bbda <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801ba02:	2e00      	cmp	r6, #0
 801ba04:	f000 80eb 	beq.w	801bbde <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801ba08:	6852      	ldr	r2, [r2, #4]
 801ba0a:	b2b6      	uxth	r6, r6
 801ba0c:	b280      	uxth	r0, r0
 801ba0e:	fb00 fe06 	mul.w	lr, r0, r6
 801ba12:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801ba16:	0136      	lsls	r6, r6, #4
 801ba18:	eba6 070e 	sub.w	r7, r6, lr
 801ba1c:	b280      	uxth	r0, r0
 801ba1e:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801ba22:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801ba26:	b2bf      	uxth	r7, r7
 801ba28:	1a1b      	subs	r3, r3, r0
 801ba2a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801ba2e:	b29b      	uxth	r3, r3
 801ba30:	fb07 f60a 	mul.w	r6, r7, sl
 801ba34:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801ba38:	fb0b 6603 	mla	r6, fp, r3, r6
 801ba3c:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801ba40:	fb00 6609 	mla	r6, r0, r9, r6
 801ba44:	fb0e 6608 	mla	r6, lr, r8, r6
 801ba48:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801ba4c:	9600      	str	r6, [sp, #0]
 801ba4e:	2e00      	cmp	r6, #0
 801ba50:	f000 80af 	beq.w	801bbb2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801ba54:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ba58:	fb0b fc0c 	mul.w	ip, fp, ip
 801ba5c:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801ba60:	fb0b f505 	mul.w	r5, fp, r5
 801ba64:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801ba68:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801ba6c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ba70:	44dc      	add	ip, fp
 801ba72:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ba76:	9501      	str	r5, [sp, #4]
 801ba78:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801ba7c:	9503      	str	r5, [sp, #12]
 801ba7e:	9d01      	ldr	r5, [sp, #4]
 801ba80:	9e02      	ldr	r6, [sp, #8]
 801ba82:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801ba86:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ba8a:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801ba8e:	fb0a fc0c 	mul.w	ip, sl, ip
 801ba92:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801ba96:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801ba9a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801ba9e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801baa2:	4465      	add	r5, ip
 801baa4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801baa8:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801baac:	fb09 fc0c 	mul.w	ip, r9, ip
 801bab0:	fb09 f904 	mul.w	r9, r9, r4
 801bab4:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801bab8:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801babc:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801bac0:	fb08 f404 	mul.w	r4, r8, r4
 801bac4:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801bac8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801bacc:	fb08 f802 	mul.w	r8, r8, r2
 801bad0:	fb0a fa01 	mul.w	sl, sl, r1
 801bad4:	0a22      	lsrs	r2, r4, #8
 801bad6:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801bada:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801bade:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801bae2:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801bae6:	4414      	add	r4, r2
 801bae8:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801baec:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801baf0:	0a2d      	lsrs	r5, r5, #8
 801baf2:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801baf6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801bafa:	9a03      	ldr	r2, [sp, #12]
 801bafc:	8836      	ldrh	r6, [r6, #0]
 801bafe:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801bb02:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801bb06:	437d      	muls	r5, r7
 801bb08:	4461      	add	r1, ip
 801bb0a:	0a24      	lsrs	r4, r4, #8
 801bb0c:	fb02 5503 	mla	r5, r2, r3, r5
 801bb10:	0a09      	lsrs	r1, r1, #8
 801bb12:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801bb16:	fb04 540e 	mla	r4, r4, lr, r5
 801bb1a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801bb1e:	fb01 4100 	mla	r1, r1, r0, r4
 801bb22:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bb26:	0a09      	lsrs	r1, r1, #8
 801bb28:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bb2c:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801bb30:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801bb34:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801bb38:	fb07 f70a 	mul.w	r7, r7, sl
 801bb3c:	fb03 7101 	mla	r1, r3, r1, r7
 801bb40:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801bb44:	9b00      	ldr	r3, [sp, #0]
 801bb46:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801bb4a:	fb0e 1e08 	mla	lr, lr, r8, r1
 801bb4e:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801bb52:	fb00 e101 	mla	r1, r0, r1, lr
 801bb56:	43da      	mvns	r2, r3
 801bb58:	1233      	asrs	r3, r6, #8
 801bb5a:	b2d2      	uxtb	r2, r2
 801bb5c:	10f0      	asrs	r0, r6, #3
 801bb5e:	0a09      	lsrs	r1, r1, #8
 801bb60:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801bb64:	00f6      	lsls	r6, r6, #3
 801bb66:	4353      	muls	r3, r2
 801bb68:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801bb6c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801bb70:	b2f6      	uxtb	r6, r6
 801bb72:	4321      	orrs	r1, r4
 801bb74:	4350      	muls	r0, r2
 801bb76:	4356      	muls	r6, r2
 801bb78:	1c5a      	adds	r2, r3, #1
 801bb7a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801bb7e:	0c0b      	lsrs	r3, r1, #16
 801bb80:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801bb84:	1c42      	adds	r2, r0, #1
 801bb86:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801bb8a:	0a0a      	lsrs	r2, r1, #8
 801bb8c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801bb90:	021b      	lsls	r3, r3, #8
 801bb92:	00d2      	lsls	r2, r2, #3
 801bb94:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bb98:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801bb9c:	4313      	orrs	r3, r2
 801bb9e:	1c72      	adds	r2, r6, #1
 801bba0:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801bba4:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801bba8:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801bbac:	4319      	orrs	r1, r3
 801bbae:	9b02      	ldr	r3, [sp, #8]
 801bbb0:	8019      	strh	r1, [r3, #0]
 801bbb2:	b005      	add	sp, #20
 801bbb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bbb8:	2500      	movs	r5, #0
 801bbba:	e6fe      	b.n	801b9ba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801bbbc:	2100      	movs	r1, #0
 801bbbe:	460d      	mov	r5, r1
 801bbc0:	e706      	b.n	801b9d0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801bbc2:	2100      	movs	r1, #0
 801bbc4:	e704      	b.n	801b9d0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801bbc6:	4631      	mov	r1, r6
 801bbc8:	e702      	b.n	801b9d0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801bbca:	2400      	movs	r4, #0
 801bbcc:	e713      	b.n	801b9f6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801bbce:	2200      	movs	r2, #0
 801bbd0:	4614      	mov	r4, r2
 801bbd2:	e71a      	b.n	801ba0a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801bbd4:	4602      	mov	r2, r0
 801bbd6:	4604      	mov	r4, r0
 801bbd8:	e717      	b.n	801ba0a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801bbda:	2200      	movs	r2, #0
 801bbdc:	e715      	b.n	801ba0a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801bbde:	4632      	mov	r2, r6
 801bbe0:	e713      	b.n	801ba0a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0801bbe4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bbe4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bbe8:	b09b      	sub	sp, #108	; 0x6c
 801bbea:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801bbee:	9218      	str	r2, [sp, #96]	; 0x60
 801bbf0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801bbf2:	9116      	str	r1, [sp, #88]	; 0x58
 801bbf4:	9307      	str	r3, [sp, #28]
 801bbf6:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801bbfa:	9019      	str	r0, [sp, #100]	; 0x64
 801bbfc:	6850      	ldr	r0, [r2, #4]
 801bbfe:	6812      	ldr	r2, [r2, #0]
 801bc00:	fb00 1303 	mla	r3, r0, r3, r1
 801bc04:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801bc08:	930a      	str	r3, [sp, #40]	; 0x28
 801bc0a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bc0c:	681b      	ldr	r3, [r3, #0]
 801bc0e:	930f      	str	r3, [sp, #60]	; 0x3c
 801bc10:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801bc12:	2b00      	cmp	r3, #0
 801bc14:	dc03      	bgt.n	801bc1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801bc16:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801bc18:	2b00      	cmp	r3, #0
 801bc1a:	f340 8386 	ble.w	801c32a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801bc1e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bc20:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bc24:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801bc28:	1e48      	subs	r0, r1, #1
 801bc2a:	1e57      	subs	r7, r2, #1
 801bc2c:	9b07      	ldr	r3, [sp, #28]
 801bc2e:	2b00      	cmp	r3, #0
 801bc30:	f340 8166 	ble.w	801bf00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801bc34:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801bc38:	ea4f 4326 	mov.w	r3, r6, asr #16
 801bc3c:	d406      	bmi.n	801bc4c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801bc3e:	4584      	cmp	ip, r0
 801bc40:	da04      	bge.n	801bc4c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801bc42:	2b00      	cmp	r3, #0
 801bc44:	db02      	blt.n	801bc4c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801bc46:	42bb      	cmp	r3, r7
 801bc48:	f2c0 815b 	blt.w	801bf02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801bc4c:	f11c 0c01 	adds.w	ip, ip, #1
 801bc50:	f100 814b 	bmi.w	801beea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801bc54:	4561      	cmp	r1, ip
 801bc56:	f2c0 8148 	blt.w	801beea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801bc5a:	3301      	adds	r3, #1
 801bc5c:	f100 8145 	bmi.w	801beea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801bc60:	429a      	cmp	r2, r3
 801bc62:	f2c0 8142 	blt.w	801beea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801bc66:	9b07      	ldr	r3, [sp, #28]
 801bc68:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801bc6a:	9317      	str	r3, [sp, #92]	; 0x5c
 801bc6c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801bc6e:	2b00      	cmp	r3, #0
 801bc70:	f340 8165 	ble.w	801bf3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801bc74:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801bc76:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bc78:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801bc7c:	689b      	ldr	r3, [r3, #8]
 801bc7e:	1422      	asrs	r2, r4, #16
 801bc80:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801bc84:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801bc88:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801bc8c:	f100 81d5 	bmi.w	801c03a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801bc90:	f103 38ff 	add.w	r8, r3, #4294967295
 801bc94:	4542      	cmp	r2, r8
 801bc96:	f280 81d0 	bge.w	801c03a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801bc9a:	f1bc 0f00 	cmp.w	ip, #0
 801bc9e:	f2c0 81cc 	blt.w	801c03a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801bca2:	f10e 38ff 	add.w	r8, lr, #4294967295
 801bca6:	45c4      	cmp	ip, r8
 801bca8:	f280 81c7 	bge.w	801c03a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801bcac:	b21b      	sxth	r3, r3
 801bcae:	fb0c 2203 	mla	r2, ip, r3, r2
 801bcb2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801bcb4:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801bcb8:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801bcbc:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801bcc0:	2900      	cmp	r1, #0
 801bcc2:	f000 8182 	beq.w	801bfca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801bcc6:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801bcca:	950b      	str	r5, [sp, #44]	; 0x2c
 801bccc:	0e2d      	lsrs	r5, r5, #24
 801bcce:	9512      	str	r5, [sp, #72]	; 0x48
 801bcd0:	b180      	cbz	r0, 801bcf4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801bcd2:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801bcd6:	3b01      	subs	r3, #1
 801bcd8:	009b      	lsls	r3, r3, #2
 801bcda:	3304      	adds	r3, #4
 801bcdc:	eb08 0c03 	add.w	ip, r8, r3
 801bce0:	f858 3003 	ldr.w	r3, [r8, r3]
 801bce4:	9308      	str	r3, [sp, #32]
 801bce6:	0e1b      	lsrs	r3, r3, #24
 801bce8:	9310      	str	r3, [sp, #64]	; 0x40
 801bcea:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801bcee:	930c      	str	r3, [sp, #48]	; 0x30
 801bcf0:	0e1b      	lsrs	r3, r3, #24
 801bcf2:	9313      	str	r3, [sp, #76]	; 0x4c
 801bcf4:	b289      	uxth	r1, r1
 801bcf6:	b280      	uxth	r0, r0
 801bcf8:	fb01 f900 	mul.w	r9, r1, r0
 801bcfc:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801bd00:	0109      	lsls	r1, r1, #4
 801bd02:	eba1 0809 	sub.w	r8, r1, r9
 801bd06:	b280      	uxth	r0, r0
 801bd08:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801bd0c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801bd0e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801bd10:	fa1f f888 	uxth.w	r8, r8
 801bd14:	1a09      	subs	r1, r1, r0
 801bd16:	b289      	uxth	r1, r1
 801bd18:	fb08 f303 	mul.w	r3, r8, r3
 801bd1c:	fb01 330e 	mla	r3, r1, lr, r3
 801bd20:	fb00 3305 	mla	r3, r0, r5, r3
 801bd24:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801bd26:	fb09 3305 	mla	r3, r9, r5, r3
 801bd2a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801bd2e:	2b00      	cmp	r3, #0
 801bd30:	f000 80d2 	beq.w	801bed8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801bd34:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801bd38:	d01b      	beq.n	801bd72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801bd3a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801bd3e:	fb0e fa0a 	mul.w	sl, lr, sl
 801bd42:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801bd46:	fb0e fe02 	mul.w	lr, lr, r2
 801bd4a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801bd4e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801bd52:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801bd56:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801bd5a:	4452      	add	r2, sl
 801bd5c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801bd60:	0a12      	lsrs	r2, r2, #8
 801bd62:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bd66:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801bd6a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801bd6e:	ea42 020c 	orr.w	r2, r2, ip
 801bd72:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801bd74:	2dff      	cmp	r5, #255	; 0xff
 801bd76:	d021      	beq.n	801bdbc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801bd78:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801bd7a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801bd7e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801bd80:	fb05 fb0b 	mul.w	fp, r5, fp
 801bd84:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801bd86:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801bd8a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801bd8c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bd90:	fb05 fa0a 	mul.w	sl, r5, sl
 801bd94:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bd98:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801bd9c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801bda0:	44de      	add	lr, fp
 801bda2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bda6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bdaa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bdae:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bdb2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bdb6:	ea4e 050a 	orr.w	r5, lr, sl
 801bdba:	950b      	str	r5, [sp, #44]	; 0x2c
 801bdbc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801bdbe:	2dff      	cmp	r5, #255	; 0xff
 801bdc0:	d021      	beq.n	801be06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801bdc2:	9d08      	ldr	r5, [sp, #32]
 801bdc4:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801bdc8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801bdca:	fb05 fb0b 	mul.w	fp, r5, fp
 801bdce:	9d08      	ldr	r5, [sp, #32]
 801bdd0:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801bdd4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801bdd6:	fb05 fa0e 	mul.w	sl, r5, lr
 801bdda:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bdde:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bde2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801bde6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801bdea:	44de      	add	lr, fp
 801bdec:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bdf0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bdf4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bdf8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bdfc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801be00:	ea4e 050a 	orr.w	r5, lr, sl
 801be04:	9508      	str	r5, [sp, #32]
 801be06:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801be08:	2dff      	cmp	r5, #255	; 0xff
 801be0a:	d021      	beq.n	801be50 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801be0c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801be0e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801be12:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801be14:	fb05 fb0b 	mul.w	fp, r5, fp
 801be18:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801be1a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801be1e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801be20:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801be24:	fb05 fa0a 	mul.w	sl, r5, sl
 801be28:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801be2c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801be30:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801be34:	44de      	add	lr, fp
 801be36:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801be3a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801be3e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801be42:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801be46:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801be4a:	ea4e 050a 	orr.w	r5, lr, sl
 801be4e:	950c      	str	r5, [sp, #48]	; 0x30
 801be50:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801be52:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801be56:	9d08      	ldr	r5, [sp, #32]
 801be58:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801be5c:	fb08 fc0c 	mul.w	ip, r8, ip
 801be60:	fb01 cc0e 	mla	ip, r1, lr, ip
 801be64:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801be68:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801be6a:	fb00 cc0e 	mla	ip, r0, lr, ip
 801be6e:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801be72:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801be74:	fb09 cc0e 	mla	ip, r9, lr, ip
 801be78:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801be7c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801be80:	fb08 f80e 	mul.w	r8, r8, lr
 801be84:	fb01 8202 	mla	r2, r1, r2, r8
 801be88:	9908      	ldr	r1, [sp, #32]
 801be8a:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801be8e:	990c      	ldr	r1, [sp, #48]	; 0x30
 801be90:	fb00 220a 	mla	r2, r0, sl, r2
 801be94:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801be98:	fb09 2900 	mla	r9, r9, r0, r2
 801be9c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bea0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801bea4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bea8:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801beac:	ea4c 0c09 	orr.w	ip, ip, r9
 801beb0:	2bff      	cmp	r3, #255	; 0xff
 801beb2:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801beb6:	f040 8091 	bne.w	801bfdc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801beba:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801bebe:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 801bec2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bec6:	f022 0207 	bic.w	r2, r2, #7
 801beca:	431a      	orrs	r2, r3
 801becc:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801bed0:	ea4c 0c02 	orr.w	ip, ip, r2
 801bed4:	f8a7 c000 	strh.w	ip, [r7]
 801bed8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801beda:	441c      	add	r4, r3
 801bedc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bede:	441e      	add	r6, r3
 801bee0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801bee2:	3b01      	subs	r3, #1
 801bee4:	3702      	adds	r7, #2
 801bee6:	9317      	str	r3, [sp, #92]	; 0x5c
 801bee8:	e6c0      	b.n	801bc6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801beea:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801beec:	441c      	add	r4, r3
 801beee:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bef0:	441e      	add	r6, r3
 801bef2:	9b07      	ldr	r3, [sp, #28]
 801bef4:	3b01      	subs	r3, #1
 801bef6:	9307      	str	r3, [sp, #28]
 801bef8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801befa:	3302      	adds	r3, #2
 801befc:	930a      	str	r3, [sp, #40]	; 0x28
 801befe:	e695      	b.n	801bc2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801bf00:	d024      	beq.n	801bf4c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801bf02:	9b07      	ldr	r3, [sp, #28]
 801bf04:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801bf06:	3b01      	subs	r3, #1
 801bf08:	fb00 4003 	mla	r0, r0, r3, r4
 801bf0c:	1400      	asrs	r0, r0, #16
 801bf0e:	f53f aeaa 	bmi.w	801bc66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801bf12:	3901      	subs	r1, #1
 801bf14:	4288      	cmp	r0, r1
 801bf16:	f6bf aea6 	bge.w	801bc66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801bf1a:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801bf1c:	fb01 6303 	mla	r3, r1, r3, r6
 801bf20:	141b      	asrs	r3, r3, #16
 801bf22:	f53f aea0 	bmi.w	801bc66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801bf26:	3a01      	subs	r2, #1
 801bf28:	4293      	cmp	r3, r2
 801bf2a:	f6bf ae9c 	bge.w	801bc66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801bf2e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801bf32:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801bf36:	f1bb 0f00 	cmp.w	fp, #0
 801bf3a:	f300 809a 	bgt.w	801c072 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801bf3e:	9b07      	ldr	r3, [sp, #28]
 801bf40:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801bf44:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801bf46:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801bf4a:	930a      	str	r3, [sp, #40]	; 0x28
 801bf4c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801bf4e:	2b00      	cmp	r3, #0
 801bf50:	f340 81eb 	ble.w	801c32a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801bf54:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bf58:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801bf5c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801bf60:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801bf62:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bf66:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bf6a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bf6e:	eef0 6a62 	vmov.f32	s13, s5
 801bf72:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bf76:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bf7a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bf7e:	ee16 4a90 	vmov	r4, s13
 801bf82:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bf86:	eef0 6a43 	vmov.f32	s13, s6
 801bf8a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bf8e:	ee12 2a90 	vmov	r2, s5
 801bf92:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bf96:	fb92 f3f3 	sdiv	r3, r2, r3
 801bf9a:	ee13 2a10 	vmov	r2, s6
 801bf9e:	9327      	str	r3, [sp, #156]	; 0x9c
 801bfa0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801bfa2:	fb92 f3f3 	sdiv	r3, r2, r3
 801bfa6:	9328      	str	r3, [sp, #160]	; 0xa0
 801bfa8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801bfaa:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801bfac:	3b01      	subs	r3, #1
 801bfae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bfb2:	9316      	str	r3, [sp, #88]	; 0x58
 801bfb4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801bfb6:	bf08      	it	eq
 801bfb8:	4613      	moveq	r3, r2
 801bfba:	ee16 6a90 	vmov	r6, s13
 801bfbe:	9307      	str	r3, [sp, #28]
 801bfc0:	eeb0 3a67 	vmov.f32	s6, s15
 801bfc4:	eef0 2a47 	vmov.f32	s5, s14
 801bfc8:	e622      	b.n	801bc10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801bfca:	2800      	cmp	r0, #0
 801bfcc:	f43f ae92 	beq.w	801bcf4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801bfd0:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801bfd4:	9308      	str	r3, [sp, #32]
 801bfd6:	0e1b      	lsrs	r3, r3, #24
 801bfd8:	9310      	str	r3, [sp, #64]	; 0x40
 801bfda:	e68b      	b.n	801bcf4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801bfdc:	8839      	ldrh	r1, [r7, #0]
 801bfde:	4dd4      	ldr	r5, [pc, #848]	; (801c330 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801bfe0:	43db      	mvns	r3, r3
 801bfe2:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801bfe6:	fa5f f883 	uxtb.w	r8, r3
 801bfea:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801bfee:	fb0e fe08 	mul.w	lr, lr, r8
 801bff2:	10c8      	asrs	r0, r1, #3
 801bff4:	00cb      	lsls	r3, r1, #3
 801bff6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801bffa:	f10e 0101 	add.w	r1, lr, #1
 801bffe:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801c002:	fb00 f008 	mul.w	r0, r0, r8
 801c006:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801c00a:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801c00e:	f100 0e01 	add.w	lr, r0, #1
 801c012:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801c016:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801c01a:	b2db      	uxtb	r3, r3
 801c01c:	b2c9      	uxtb	r1, r1
 801c01e:	00d2      	lsls	r2, r2, #3
 801c020:	fb03 f308 	mul.w	r3, r3, r8
 801c024:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801c028:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c02c:	430a      	orrs	r2, r1
 801c02e:	1c59      	adds	r1, r3, #1
 801c030:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801c034:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801c038:	e748      	b.n	801becc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801c03a:	f112 0801 	adds.w	r8, r2, #1
 801c03e:	f53f af4b 	bmi.w	801bed8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801c042:	4543      	cmp	r3, r8
 801c044:	f6ff af48 	blt.w	801bed8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801c048:	f11c 0801 	adds.w	r8, ip, #1
 801c04c:	f53f af44 	bmi.w	801bed8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801c050:	45c6      	cmp	lr, r8
 801c052:	f6ff af41 	blt.w	801bed8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801c056:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801c05a:	fa0f f28e 	sxth.w	r2, lr
 801c05e:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801c062:	9200      	str	r2, [sp, #0]
 801c064:	b21b      	sxth	r3, r3
 801c066:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c068:	9819      	ldr	r0, [sp, #100]	; 0x64
 801c06a:	4639      	mov	r1, r7
 801c06c:	f7ff fc87 	bl	801b97e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801c070:	e732      	b.n	801bed8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801c072:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c074:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801c076:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801c07a:	1421      	asrs	r1, r4, #16
 801c07c:	1433      	asrs	r3, r6, #16
 801c07e:	fb07 1303 	mla	r3, r7, r3, r1
 801c082:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801c084:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801c088:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801c08c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801c090:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801c094:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801c098:	2a00      	cmp	r2, #0
 801c09a:	f000 8107 	beq.w	801c2ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 801c09e:	684d      	ldr	r5, [r1, #4]
 801c0a0:	950d      	str	r5, [sp, #52]	; 0x34
 801c0a2:	0e2d      	lsrs	r5, r5, #24
 801c0a4:	9514      	str	r5, [sp, #80]	; 0x50
 801c0a6:	b178      	cbz	r0, 801c0c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801c0a8:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801c0ac:	3f01      	subs	r7, #1
 801c0ae:	00bf      	lsls	r7, r7, #2
 801c0b0:	3704      	adds	r7, #4
 801c0b2:	eb01 0e07 	add.w	lr, r1, r7
 801c0b6:	59c9      	ldr	r1, [r1, r7]
 801c0b8:	9109      	str	r1, [sp, #36]	; 0x24
 801c0ba:	0e09      	lsrs	r1, r1, #24
 801c0bc:	9111      	str	r1, [sp, #68]	; 0x44
 801c0be:	f8de 1004 	ldr.w	r1, [lr, #4]
 801c0c2:	910e      	str	r1, [sp, #56]	; 0x38
 801c0c4:	0e09      	lsrs	r1, r1, #24
 801c0c6:	9115      	str	r1, [sp, #84]	; 0x54
 801c0c8:	b292      	uxth	r2, r2
 801c0ca:	b280      	uxth	r0, r0
 801c0cc:	fb02 f900 	mul.w	r9, r2, r0
 801c0d0:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801c0d4:	0112      	lsls	r2, r2, #4
 801c0d6:	eba2 0e09 	sub.w	lr, r2, r9
 801c0da:	b280      	uxth	r0, r0
 801c0dc:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801c0e0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c0e2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801c0e4:	fa1f fe8e 	uxth.w	lr, lr
 801c0e8:	1a09      	subs	r1, r1, r0
 801c0ea:	b289      	uxth	r1, r1
 801c0ec:	fb0e f202 	mul.w	r2, lr, r2
 801c0f0:	fb01 220c 	mla	r2, r1, ip, r2
 801c0f4:	fb00 2205 	mla	r2, r0, r5, r2
 801c0f8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801c0fa:	fb09 2205 	mla	r2, r9, r5, r2
 801c0fe:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801c102:	2a00      	cmp	r2, #0
 801c104:	f000 80c9 	beq.w	801c29a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801c108:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801c10c:	d019      	beq.n	801c142 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801c10e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801c112:	fb0c fa0a 	mul.w	sl, ip, sl
 801c116:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801c11a:	fb0c fc03 	mul.w	ip, ip, r3
 801c11e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801c122:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801c126:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801c12a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801c12e:	4453      	add	r3, sl
 801c130:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801c134:	0a1b      	lsrs	r3, r3, #8
 801c136:	0a3f      	lsrs	r7, r7, #8
 801c138:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801c13c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801c140:	433b      	orrs	r3, r7
 801c142:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801c144:	2dff      	cmp	r5, #255	; 0xff
 801c146:	d020      	beq.n	801c18a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801c148:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801c14a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801c14e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801c150:	436f      	muls	r7, r5
 801c152:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801c154:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801c158:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801c15a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c15e:	fb05 fa0a 	mul.w	sl, r5, sl
 801c162:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801c166:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c16a:	44bc      	add	ip, r7
 801c16c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801c170:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c174:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c178:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c17c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c180:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c184:	ea4c 050a 	orr.w	r5, ip, sl
 801c188:	950d      	str	r5, [sp, #52]	; 0x34
 801c18a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801c18c:	2dff      	cmp	r5, #255	; 0xff
 801c18e:	d020      	beq.n	801c1d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801c190:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801c192:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801c196:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801c198:	436f      	muls	r7, r5
 801c19a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801c19c:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801c1a0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801c1a2:	fb05 fa0c 	mul.w	sl, r5, ip
 801c1a6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c1aa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c1ae:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801c1b2:	44bc      	add	ip, r7
 801c1b4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801c1b8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c1bc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c1c0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c1c4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c1c8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c1cc:	ea4c 050a 	orr.w	r5, ip, sl
 801c1d0:	9509      	str	r5, [sp, #36]	; 0x24
 801c1d2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801c1d4:	2dff      	cmp	r5, #255	; 0xff
 801c1d6:	d020      	beq.n	801c21a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801c1d8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801c1da:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801c1de:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801c1e0:	436f      	muls	r7, r5
 801c1e2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801c1e4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801c1e8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801c1ea:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c1ee:	fb05 fa0a 	mul.w	sl, r5, sl
 801c1f2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801c1f6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c1fa:	44bc      	add	ip, r7
 801c1fc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801c200:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c204:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c208:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c20c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c210:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c214:	ea4c 050a 	orr.w	r5, ip, sl
 801c218:	950e      	str	r5, [sp, #56]	; 0x38
 801c21a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801c21c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801c220:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801c222:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801c226:	fb0e f707 	mul.w	r7, lr, r7
 801c22a:	fb01 770c 	mla	r7, r1, ip, r7
 801c22e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801c232:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801c234:	fb00 770c 	mla	r7, r0, ip, r7
 801c238:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801c23c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801c23e:	fb09 770c 	mla	r7, r9, ip, r7
 801c242:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801c246:	fb0e fe0c 	mul.w	lr, lr, ip
 801c24a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801c24e:	fb01 e303 	mla	r3, r1, r3, lr
 801c252:	9909      	ldr	r1, [sp, #36]	; 0x24
 801c254:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801c258:	990e      	ldr	r1, [sp, #56]	; 0x38
 801c25a:	fb00 330a 	mla	r3, r0, sl, r3
 801c25e:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801c262:	fb09 3c0c 	mla	ip, r9, ip, r3
 801c266:	0a3f      	lsrs	r7, r7, #8
 801c268:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c26c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801c270:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801c274:	ea47 070c 	orr.w	r7, r7, ip
 801c278:	2aff      	cmp	r2, #255	; 0xff
 801c27a:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801c27e:	d11e      	bne.n	801c2be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801c280:	097a      	lsrs	r2, r7, #5
 801c282:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801c286:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c28a:	f023 0307 	bic.w	r3, r3, #7
 801c28e:	4313      	orrs	r3, r2
 801c290:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801c294:	431f      	orrs	r7, r3
 801c296:	f8a8 7000 	strh.w	r7, [r8]
 801c29a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801c29c:	441c      	add	r4, r3
 801c29e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c2a0:	f108 0802 	add.w	r8, r8, #2
 801c2a4:	441e      	add	r6, r3
 801c2a6:	f10b 3bff 	add.w	fp, fp, #4294967295
 801c2aa:	e644      	b.n	801bf36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801c2ac:	2800      	cmp	r0, #0
 801c2ae:	f43f af0b 	beq.w	801c0c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801c2b2:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801c2b6:	9109      	str	r1, [sp, #36]	; 0x24
 801c2b8:	0e09      	lsrs	r1, r1, #24
 801c2ba:	9111      	str	r1, [sp, #68]	; 0x44
 801c2bc:	e704      	b.n	801c0c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801c2be:	f8b8 1000 	ldrh.w	r1, [r8]
 801c2c2:	43d2      	mvns	r2, r2
 801c2c4:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801c2c8:	fa5f fe82 	uxtb.w	lr, r2
 801c2cc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c2d0:	fb0c fc0e 	mul.w	ip, ip, lr
 801c2d4:	10c8      	asrs	r0, r1, #3
 801c2d6:	00ca      	lsls	r2, r1, #3
 801c2d8:	f10c 0101 	add.w	r1, ip, #1
 801c2dc:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801c2e0:	0c39      	lsrs	r1, r7, #16
 801c2e2:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801c2e6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c2ea:	4911      	ldr	r1, [pc, #68]	; (801c330 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801c2ec:	fb00 f00e 	mul.w	r0, r0, lr
 801c2f0:	fa5f fc8c 	uxtb.w	ip, ip
 801c2f4:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801c2f8:	b2d2      	uxtb	r2, r2
 801c2fa:	1c41      	adds	r1, r0, #1
 801c2fc:	fb02 f20e 	mul.w	r2, r2, lr
 801c300:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801c304:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801c308:	1c51      	adds	r1, r2, #1
 801c30a:	00c0      	lsls	r0, r0, #3
 801c30c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801c310:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c314:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801c318:	ea4c 0c00 	orr.w	ip, ip, r0
 801c31c:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801c320:	ea47 0c0c 	orr.w	ip, r7, ip
 801c324:	f8a8 c000 	strh.w	ip, [r8]
 801c328:	e7b7      	b.n	801c29a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801c32a:	b01b      	add	sp, #108	; 0x6c
 801c32c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c330:	fffff800 	.word	0xfffff800

0801c334 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801c334:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c338:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801c33c:	2d00      	cmp	r5, #0
 801c33e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801c342:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801c346:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801c34a:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801c34e:	fb05 0e03 	mla	lr, r5, r3, r0
 801c352:	f2c0 808c 	blt.w	801c46e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801c356:	45a9      	cmp	r9, r5
 801c358:	f340 8089 	ble.w	801c46e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801c35c:	2800      	cmp	r0, #0
 801c35e:	f2c0 8084 	blt.w	801c46a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801c362:	4580      	cmp	r8, r0
 801c364:	f340 8081 	ble.w	801c46a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801c368:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801c36c:	f01e 0f01 	tst.w	lr, #1
 801c370:	5d16      	ldrb	r6, [r2, r4]
 801c372:	bf0c      	ite	eq
 801c374:	f006 060f 	andeq.w	r6, r6, #15
 801c378:	1136      	asrne	r6, r6, #4
 801c37a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801c37e:	b2f6      	uxtb	r6, r6
 801c380:	1c44      	adds	r4, r0, #1
 801c382:	d477      	bmi.n	801c474 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801c384:	45a0      	cmp	r8, r4
 801c386:	dd75      	ble.n	801c474 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801c388:	2f00      	cmp	r7, #0
 801c38a:	d075      	beq.n	801c478 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801c38c:	f10e 0a01 	add.w	sl, lr, #1
 801c390:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801c394:	f01a 0f01 	tst.w	sl, #1
 801c398:	5d14      	ldrb	r4, [r2, r4]
 801c39a:	bf0c      	ite	eq
 801c39c:	f004 040f 	andeq.w	r4, r4, #15
 801c3a0:	1124      	asrne	r4, r4, #4
 801c3a2:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801c3a6:	b2e4      	uxtb	r4, r4
 801c3a8:	3501      	adds	r5, #1
 801c3aa:	d469      	bmi.n	801c480 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801c3ac:	45a9      	cmp	r9, r5
 801c3ae:	dd67      	ble.n	801c480 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801c3b0:	f1bc 0f00 	cmp.w	ip, #0
 801c3b4:	d067      	beq.n	801c486 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801c3b6:	2800      	cmp	r0, #0
 801c3b8:	db60      	blt.n	801c47c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801c3ba:	4580      	cmp	r8, r0
 801c3bc:	dd5e      	ble.n	801c47c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801c3be:	eb03 090e 	add.w	r9, r3, lr
 801c3c2:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801c3c6:	f019 0f01 	tst.w	r9, #1
 801c3ca:	5d55      	ldrb	r5, [r2, r5]
 801c3cc:	bf0c      	ite	eq
 801c3ce:	f005 050f 	andeq.w	r5, r5, #15
 801c3d2:	112d      	asrne	r5, r5, #4
 801c3d4:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801c3d8:	b2ed      	uxtb	r5, r5
 801c3da:	3001      	adds	r0, #1
 801c3dc:	d456      	bmi.n	801c48c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801c3de:	4580      	cmp	r8, r0
 801c3e0:	dd54      	ble.n	801c48c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801c3e2:	2f00      	cmp	r7, #0
 801c3e4:	d054      	beq.n	801c490 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801c3e6:	3301      	adds	r3, #1
 801c3e8:	449e      	add	lr, r3
 801c3ea:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801c3ee:	f01e 0f01 	tst.w	lr, #1
 801c3f2:	5cd0      	ldrb	r0, [r2, r3]
 801c3f4:	bf0c      	ite	eq
 801c3f6:	f000 000f 	andeq.w	r0, r0, #15
 801c3fa:	1100      	asrne	r0, r0, #4
 801c3fc:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801c400:	b2c3      	uxtb	r3, r0
 801c402:	b2ba      	uxth	r2, r7
 801c404:	fa1f fc8c 	uxth.w	ip, ip
 801c408:	fb02 f00c 	mul.w	r0, r2, ip
 801c40c:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801c410:	0112      	lsls	r2, r2, #4
 801c412:	fa1f fc8c 	uxth.w	ip, ip
 801c416:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801c41a:	1a12      	subs	r2, r2, r0
 801c41c:	eba7 070c 	sub.w	r7, r7, ip
 801c420:	b292      	uxth	r2, r2
 801c422:	b2bf      	uxth	r7, r7
 801c424:	4362      	muls	r2, r4
 801c426:	fb06 2207 	mla	r2, r6, r7, r2
 801c42a:	fb0c 2505 	mla	r5, ip, r5, r2
 801c42e:	fb00 5303 	mla	r3, r0, r3, r5
 801c432:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c436:	b1b3      	cbz	r3, 801c466 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801c438:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 801c43c:	435a      	muls	r2, r3
 801c43e:	1c53      	adds	r3, r2, #1
 801c440:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c444:	4a2d      	ldr	r2, [pc, #180]	; (801c4fc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801c446:	121b      	asrs	r3, r3, #8
 801c448:	6812      	ldr	r2, [r2, #0]
 801c44a:	2bff      	cmp	r3, #255	; 0xff
 801c44c:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801c450:	d120      	bne.n	801c494 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801c452:	4b2b      	ldr	r3, [pc, #172]	; (801c500 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801c454:	0950      	lsrs	r0, r2, #5
 801c456:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c45a:	4033      	ands	r3, r6
 801c45c:	4318      	orrs	r0, r3
 801c45e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c462:	4302      	orrs	r2, r0
 801c464:	800a      	strh	r2, [r1, #0]
 801c466:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c46a:	2600      	movs	r6, #0
 801c46c:	e788      	b.n	801c380 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801c46e:	2400      	movs	r4, #0
 801c470:	4626      	mov	r6, r4
 801c472:	e799      	b.n	801c3a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801c474:	2400      	movs	r4, #0
 801c476:	e797      	b.n	801c3a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801c478:	463c      	mov	r4, r7
 801c47a:	e795      	b.n	801c3a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801c47c:	2500      	movs	r5, #0
 801c47e:	e7ac      	b.n	801c3da <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801c480:	2300      	movs	r3, #0
 801c482:	461d      	mov	r5, r3
 801c484:	e7bd      	b.n	801c402 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801c486:	4663      	mov	r3, ip
 801c488:	4665      	mov	r5, ip
 801c48a:	e7ba      	b.n	801c402 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801c48c:	2300      	movs	r3, #0
 801c48e:	e7b8      	b.n	801c402 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801c490:	463b      	mov	r3, r7
 801c492:	e7b6      	b.n	801c402 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801c494:	880d      	ldrh	r5, [r1, #0]
 801c496:	b29f      	uxth	r7, r3
 801c498:	122c      	asrs	r4, r5, #8
 801c49a:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801c49e:	43db      	mvns	r3, r3
 801c4a0:	b2db      	uxtb	r3, r3
 801c4a2:	fb10 f007 	smulbb	r0, r0, r7
 801c4a6:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801c4aa:	fb04 0403 	mla	r4, r4, r3, r0
 801c4ae:	b2f6      	uxtb	r6, r6
 801c4b0:	10e8      	asrs	r0, r5, #3
 801c4b2:	b2d2      	uxtb	r2, r2
 801c4b4:	00ed      	lsls	r5, r5, #3
 801c4b6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c4ba:	fb12 f207 	smulbb	r2, r2, r7
 801c4be:	fb16 f607 	smulbb	r6, r6, r7
 801c4c2:	b2ed      	uxtb	r5, r5
 801c4c4:	b2a4      	uxth	r4, r4
 801c4c6:	fb00 6603 	mla	r6, r0, r3, r6
 801c4ca:	fb05 2303 	mla	r3, r5, r3, r2
 801c4ce:	b29a      	uxth	r2, r3
 801c4d0:	1c63      	adds	r3, r4, #1
 801c4d2:	b2b0      	uxth	r0, r6
 801c4d4:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801c4d8:	1c53      	adds	r3, r2, #1
 801c4da:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c4de:	1c42      	adds	r2, r0, #1
 801c4e0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c4e4:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801c4e8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c4ec:	0940      	lsrs	r0, r0, #5
 801c4ee:	4323      	orrs	r3, r4
 801c4f0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c4f4:	4303      	orrs	r3, r0
 801c4f6:	800b      	strh	r3, [r1, #0]
 801c4f8:	e7b5      	b.n	801c466 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801c4fa:	bf00      	nop
 801c4fc:	200135b8 	.word	0x200135b8
 801c500:	00fff800 	.word	0x00fff800

0801c504 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c504:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c508:	b097      	sub	sp, #92	; 0x5c
 801c50a:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 801c50e:	9214      	str	r2, [sp, #80]	; 0x50
 801c510:	9309      	str	r3, [sp, #36]	; 0x24
 801c512:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801c514:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801c518:	910d      	str	r1, [sp, #52]	; 0x34
 801c51a:	930f      	str	r3, [sp, #60]	; 0x3c
 801c51c:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801c520:	9015      	str	r0, [sp, #84]	; 0x54
 801c522:	6850      	ldr	r0, [r2, #4]
 801c524:	6812      	ldr	r2, [r2, #0]
 801c526:	fb00 1303 	mla	r3, r0, r3, r1
 801c52a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801c52e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c530:	689b      	ldr	r3, [r3, #8]
 801c532:	3301      	adds	r3, #1
 801c534:	f023 0301 	bic.w	r3, r3, #1
 801c538:	930a      	str	r3, [sp, #40]	; 0x28
 801c53a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c53c:	681f      	ldr	r7, [r3, #0]
 801c53e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c540:	2b00      	cmp	r3, #0
 801c542:	dc03      	bgt.n	801c54c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c544:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801c546:	2b00      	cmp	r3, #0
 801c548:	f340 8287 	ble.w	801ca5a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801c54c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c54e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c552:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c556:	1e48      	subs	r0, r1, #1
 801c558:	f102 3cff 	add.w	ip, r2, #4294967295
 801c55c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c55e:	2b00      	cmp	r3, #0
 801c560:	f340 80c4 	ble.w	801c6ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801c564:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801c568:	ea4f 4326 	mov.w	r3, r6, asr #16
 801c56c:	d406      	bmi.n	801c57c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c56e:	4586      	cmp	lr, r0
 801c570:	da04      	bge.n	801c57c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c572:	2b00      	cmp	r3, #0
 801c574:	db02      	blt.n	801c57c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c576:	4563      	cmp	r3, ip
 801c578:	f2c0 80b9 	blt.w	801c6ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801c57c:	f11e 0e01 	adds.w	lr, lr, #1
 801c580:	f100 80aa 	bmi.w	801c6d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801c584:	4571      	cmp	r1, lr
 801c586:	f2c0 80a7 	blt.w	801c6d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801c58a:	3301      	adds	r3, #1
 801c58c:	f100 80a4 	bmi.w	801c6d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801c590:	429a      	cmp	r2, r3
 801c592:	f2c0 80a1 	blt.w	801c6d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801c596:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c598:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 801c59c:	930e      	str	r3, [sp, #56]	; 0x38
 801c59e:	46c8      	mov	r8, r9
 801c5a0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c5a2:	2b00      	cmp	r3, #0
 801c5a4:	f340 80c3 	ble.w	801c72e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801c5a8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c5aa:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801c5ae:	1423      	asrs	r3, r4, #16
 801c5b0:	ea4f 4026 	mov.w	r0, r6, asr #16
 801c5b4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801c5b8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801c5bc:	f100 814d 	bmi.w	801c85a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801c5c0:	f10c 3bff 	add.w	fp, ip, #4294967295
 801c5c4:	455b      	cmp	r3, fp
 801c5c6:	f280 8148 	bge.w	801c85a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801c5ca:	2800      	cmp	r0, #0
 801c5cc:	f2c0 8145 	blt.w	801c85a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801c5d0:	f10e 3bff 	add.w	fp, lr, #4294967295
 801c5d4:	4558      	cmp	r0, fp
 801c5d6:	f280 8140 	bge.w	801c85a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801c5da:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801c5dc:	fb00 3305 	mla	r3, r0, r5, r3
 801c5e0:	0858      	lsrs	r0, r3, #1
 801c5e2:	07dd      	lsls	r5, r3, #31
 801c5e4:	f817 c000 	ldrb.w	ip, [r7, r0]
 801c5e8:	bf54      	ite	pl
 801c5ea:	f00c 0c0f 	andpl.w	ip, ip, #15
 801c5ee:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801c5f2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c5f6:	fa5f fc8c 	uxtb.w	ip, ip
 801c5fa:	2a00      	cmp	r2, #0
 801c5fc:	f000 80db 	beq.w	801c7b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 801c600:	1c58      	adds	r0, r3, #1
 801c602:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801c606:	07c0      	lsls	r0, r0, #31
 801c608:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801c60c:	bf54      	ite	pl
 801c60e:	f00e 0e0f 	andpl.w	lr, lr, #15
 801c612:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801c616:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801c61a:	fa5f f08e 	uxtb.w	r0, lr
 801c61e:	9010      	str	r0, [sp, #64]	; 0x40
 801c620:	b1c9      	cbz	r1, 801c656 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801c622:	4453      	add	r3, sl
 801c624:	0858      	lsrs	r0, r3, #1
 801c626:	07dd      	lsls	r5, r3, #31
 801c628:	5c38      	ldrb	r0, [r7, r0]
 801c62a:	bf54      	ite	pl
 801c62c:	f000 000f 	andpl.w	r0, r0, #15
 801c630:	1100      	asrmi	r0, r0, #4
 801c632:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801c636:	3301      	adds	r3, #1
 801c638:	b2c0      	uxtb	r0, r0
 801c63a:	900b      	str	r0, [sp, #44]	; 0x2c
 801c63c:	0858      	lsrs	r0, r3, #1
 801c63e:	07dd      	lsls	r5, r3, #31
 801c640:	f817 e000 	ldrb.w	lr, [r7, r0]
 801c644:	bf54      	ite	pl
 801c646:	f00e 030f 	andpl.w	r3, lr, #15
 801c64a:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801c64e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801c652:	b2db      	uxtb	r3, r3
 801c654:	9311      	str	r3, [sp, #68]	; 0x44
 801c656:	b292      	uxth	r2, r2
 801c658:	b289      	uxth	r1, r1
 801c65a:	fb02 f301 	mul.w	r3, r2, r1
 801c65e:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801c662:	0112      	lsls	r2, r2, #4
 801c664:	b289      	uxth	r1, r1
 801c666:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801c66a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801c66c:	1ad2      	subs	r2, r2, r3
 801c66e:	1a40      	subs	r0, r0, r1
 801c670:	b292      	uxth	r2, r2
 801c672:	436a      	muls	r2, r5
 801c674:	b280      	uxth	r0, r0
 801c676:	fb0c 2c00 	mla	ip, ip, r0, r2
 801c67a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801c67c:	fb01 c102 	mla	r1, r1, r2, ip
 801c680:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c682:	fb03 1302 	mla	r3, r3, r2, r1
 801c686:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c68a:	b1db      	cbz	r3, 801c6c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801c68c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c68e:	4353      	muls	r3, r2
 801c690:	1c5a      	adds	r2, r3, #1
 801c692:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801c696:	4ac6      	ldr	r2, [pc, #792]	; (801c9b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801c698:	121b      	asrs	r3, r3, #8
 801c69a:	6812      	ldr	r2, [r2, #0]
 801c69c:	2bff      	cmp	r3, #255	; 0xff
 801c69e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801c6a2:	f040 8099 	bne.w	801c7d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 801c6a6:	0953      	lsrs	r3, r2, #5
 801c6a8:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801c6ac:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c6b0:	f02c 0c07 	bic.w	ip, ip, #7
 801c6b4:	ea43 0c0c 	orr.w	ip, r3, ip
 801c6b8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c6bc:	ea4c 0202 	orr.w	r2, ip, r2
 801c6c0:	f8a8 2000 	strh.w	r2, [r8]
 801c6c4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801c6c6:	441c      	add	r4, r3
 801c6c8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c6ca:	441e      	add	r6, r3
 801c6cc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c6ce:	3b01      	subs	r3, #1
 801c6d0:	f108 0802 	add.w	r8, r8, #2
 801c6d4:	930e      	str	r3, [sp, #56]	; 0x38
 801c6d6:	e763      	b.n	801c5a0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801c6d8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801c6da:	441c      	add	r4, r3
 801c6dc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c6de:	441e      	add	r6, r3
 801c6e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c6e2:	3b01      	subs	r3, #1
 801c6e4:	9309      	str	r3, [sp, #36]	; 0x24
 801c6e6:	f109 0902 	add.w	r9, r9, #2
 801c6ea:	e737      	b.n	801c55c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801c6ec:	d024      	beq.n	801c738 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801c6ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c6f0:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801c6f2:	3b01      	subs	r3, #1
 801c6f4:	fb00 4003 	mla	r0, r0, r3, r4
 801c6f8:	1400      	asrs	r0, r0, #16
 801c6fa:	f53f af4c 	bmi.w	801c596 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c6fe:	3901      	subs	r1, #1
 801c700:	4288      	cmp	r0, r1
 801c702:	f6bf af48 	bge.w	801c596 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c706:	9924      	ldr	r1, [sp, #144]	; 0x90
 801c708:	fb01 6303 	mla	r3, r1, r3, r6
 801c70c:	141b      	asrs	r3, r3, #16
 801c70e:	f53f af42 	bmi.w	801c596 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c712:	3a01      	subs	r2, #1
 801c714:	4293      	cmp	r3, r2
 801c716:	f6bf af3e 	bge.w	801c596 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c71a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801c71e:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801c722:	930e      	str	r3, [sp, #56]	; 0x38
 801c724:	46c8      	mov	r8, r9
 801c726:	f1bb 0f00 	cmp.w	fp, #0
 801c72a:	f300 80b7 	bgt.w	801c89c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801c72e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c730:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801c734:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801c738:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c73a:	2b00      	cmp	r3, #0
 801c73c:	f340 818d 	ble.w	801ca5a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801c740:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c744:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c748:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c74c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c74e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c752:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c756:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c75a:	eef0 6a62 	vmov.f32	s13, s5
 801c75e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c762:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c766:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c76a:	ee16 4a90 	vmov	r4, s13
 801c76e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c772:	eef0 6a43 	vmov.f32	s13, s6
 801c776:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c77a:	ee12 2a90 	vmov	r2, s5
 801c77e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c782:	fb92 f3f3 	sdiv	r3, r2, r3
 801c786:	ee13 2a10 	vmov	r2, s6
 801c78a:	9323      	str	r3, [sp, #140]	; 0x8c
 801c78c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c78e:	fb92 f3f3 	sdiv	r3, r2, r3
 801c792:	9324      	str	r3, [sp, #144]	; 0x90
 801c794:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c796:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c798:	3b01      	subs	r3, #1
 801c79a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c79e:	930d      	str	r3, [sp, #52]	; 0x34
 801c7a0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c7a2:	bf08      	it	eq
 801c7a4:	4613      	moveq	r3, r2
 801c7a6:	ee16 6a90 	vmov	r6, s13
 801c7aa:	9309      	str	r3, [sp, #36]	; 0x24
 801c7ac:	eeb0 3a67 	vmov.f32	s6, s15
 801c7b0:	eef0 2a47 	vmov.f32	s5, s14
 801c7b4:	e6c3      	b.n	801c53e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801c7b6:	2900      	cmp	r1, #0
 801c7b8:	f43f af4d 	beq.w	801c656 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801c7bc:	eb0a 0003 	add.w	r0, sl, r3
 801c7c0:	0843      	lsrs	r3, r0, #1
 801c7c2:	07c0      	lsls	r0, r0, #31
 801c7c4:	5cfb      	ldrb	r3, [r7, r3]
 801c7c6:	bf54      	ite	pl
 801c7c8:	f003 030f 	andpl.w	r3, r3, #15
 801c7cc:	111b      	asrmi	r3, r3, #4
 801c7ce:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801c7d2:	b2db      	uxtb	r3, r3
 801c7d4:	930b      	str	r3, [sp, #44]	; 0x2c
 801c7d6:	e73e      	b.n	801c656 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801c7d8:	f8b8 e000 	ldrh.w	lr, [r8]
 801c7dc:	fa1f fb83 	uxth.w	fp, r3
 801c7e0:	ea4f 202e 	mov.w	r0, lr, asr #8
 801c7e4:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801c7e8:	43db      	mvns	r3, r3
 801c7ea:	b2db      	uxtb	r3, r3
 801c7ec:	fb11 f10b 	smulbb	r1, r1, fp
 801c7f0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c7f4:	fb00 1003 	mla	r0, r0, r3, r1
 801c7f8:	fa5f fc8c 	uxtb.w	ip, ip
 801c7fc:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801c800:	b2d2      	uxtb	r2, r2
 801c802:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c806:	b280      	uxth	r0, r0
 801c808:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c80c:	fb1c fc0b 	smulbb	ip, ip, fp
 801c810:	fa5f fe8e 	uxtb.w	lr, lr
 801c814:	fb12 fb0b 	smulbb	fp, r2, fp
 801c818:	fb01 cc03 	mla	ip, r1, r3, ip
 801c81c:	fb0e bb03 	mla	fp, lr, r3, fp
 801c820:	1c43      	adds	r3, r0, #1
 801c822:	fa1f fc8c 	uxth.w	ip, ip
 801c826:	fa1f fb8b 	uxth.w	fp, fp
 801c82a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801c82e:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 801c832:	f10c 0101 	add.w	r1, ip, #1
 801c836:	f10b 0001 	add.w	r0, fp, #1
 801c83a:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801c83e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801c842:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801c846:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801c84a:	4318      	orrs	r0, r3
 801c84c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801c850:	ea40 000c 	orr.w	r0, r0, ip
 801c854:	f8a8 0000 	strh.w	r0, [r8]
 801c858:	e734      	b.n	801c6c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801c85a:	f113 0b01 	adds.w	fp, r3, #1
 801c85e:	f53f af31 	bmi.w	801c6c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801c862:	45dc      	cmp	ip, fp
 801c864:	f6ff af2e 	blt.w	801c6c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801c868:	f110 0b01 	adds.w	fp, r0, #1
 801c86c:	f53f af2a 	bmi.w	801c6c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801c870:	45de      	cmp	lr, fp
 801c872:	f6ff af27 	blt.w	801c6c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801c876:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801c878:	9302      	str	r3, [sp, #8]
 801c87a:	fa0f f38e 	sxth.w	r3, lr
 801c87e:	9301      	str	r3, [sp, #4]
 801c880:	fa0f f38c 	sxth.w	r3, ip
 801c884:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801c888:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801c88c:	9300      	str	r3, [sp, #0]
 801c88e:	463a      	mov	r2, r7
 801c890:	4653      	mov	r3, sl
 801c892:	4641      	mov	r1, r8
 801c894:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c896:	f7ff fd4d 	bl	801c334 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801c89a:	e713      	b.n	801c6c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801c89c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801c89e:	1422      	asrs	r2, r4, #16
 801c8a0:	1433      	asrs	r3, r6, #16
 801c8a2:	fb05 2303 	mla	r3, r5, r3, r2
 801c8a6:	085a      	lsrs	r2, r3, #1
 801c8a8:	07dd      	lsls	r5, r3, #31
 801c8aa:	5cba      	ldrb	r2, [r7, r2]
 801c8ac:	bf54      	ite	pl
 801c8ae:	f002 020f 	andpl.w	r2, r2, #15
 801c8b2:	1112      	asrmi	r2, r2, #4
 801c8b4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c8b8:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801c8bc:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801c8c0:	b2d2      	uxtb	r2, r2
 801c8c2:	2900      	cmp	r1, #0
 801c8c4:	d076      	beq.n	801c9b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c8c6:	f103 0e01 	add.w	lr, r3, #1
 801c8ca:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801c8ce:	f01e 0f01 	tst.w	lr, #1
 801c8d2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801c8d6:	bf0c      	ite	eq
 801c8d8:	f00c 0c0f 	andeq.w	ip, ip, #15
 801c8dc:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801c8e0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c8e4:	fa5f f58c 	uxtb.w	r5, ip
 801c8e8:	9512      	str	r5, [sp, #72]	; 0x48
 801c8ea:	b300      	cbz	r0, 801c92e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801c8ec:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801c8ee:	442b      	add	r3, r5
 801c8f0:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801c8f4:	07dd      	lsls	r5, r3, #31
 801c8f6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801c8fa:	bf54      	ite	pl
 801c8fc:	f00c 0c0f 	andpl.w	ip, ip, #15
 801c900:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801c904:	3301      	adds	r3, #1
 801c906:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c90a:	fa5f f58c 	uxtb.w	r5, ip
 801c90e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801c912:	950c      	str	r5, [sp, #48]	; 0x30
 801c914:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801c918:	07dd      	lsls	r5, r3, #31
 801c91a:	bf54      	ite	pl
 801c91c:	f00c 0c0f 	andpl.w	ip, ip, #15
 801c920:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801c924:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c928:	fa5f f38c 	uxtb.w	r3, ip
 801c92c:	9313      	str	r3, [sp, #76]	; 0x4c
 801c92e:	b289      	uxth	r1, r1
 801c930:	b280      	uxth	r0, r0
 801c932:	fb01 f300 	mul.w	r3, r1, r0
 801c936:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801c93a:	0109      	lsls	r1, r1, #4
 801c93c:	b280      	uxth	r0, r0
 801c93e:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801c942:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801c944:	1ac9      	subs	r1, r1, r3
 801c946:	ebac 0c00 	sub.w	ip, ip, r0
 801c94a:	b289      	uxth	r1, r1
 801c94c:	4369      	muls	r1, r5
 801c94e:	fa1f fc8c 	uxth.w	ip, ip
 801c952:	fb02 120c 	mla	r2, r2, ip, r1
 801c956:	990c      	ldr	r1, [sp, #48]	; 0x30
 801c958:	fb00 2001 	mla	r0, r0, r1, r2
 801c95c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c95e:	fb03 0302 	mla	r3, r3, r2, r0
 801c962:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c966:	b1d3      	cbz	r3, 801c99e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801c968:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c96a:	4353      	muls	r3, r2
 801c96c:	1c5a      	adds	r2, r3, #1
 801c96e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801c972:	4a0f      	ldr	r2, [pc, #60]	; (801c9b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801c974:	121b      	asrs	r3, r3, #8
 801c976:	6812      	ldr	r2, [r2, #0]
 801c978:	2bff      	cmp	r3, #255	; 0xff
 801c97a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801c97e:	d12d      	bne.n	801c9dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801c980:	0953      	lsrs	r3, r2, #5
 801c982:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801c986:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c98a:	f02c 0c07 	bic.w	ip, ip, #7
 801c98e:	ea43 0c0c 	orr.w	ip, r3, ip
 801c992:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c996:	ea4c 0202 	orr.w	r2, ip, r2
 801c99a:	f8a8 2000 	strh.w	r2, [r8]
 801c99e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801c9a0:	441c      	add	r4, r3
 801c9a2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c9a4:	f108 0802 	add.w	r8, r8, #2
 801c9a8:	441e      	add	r6, r3
 801c9aa:	f10b 3bff 	add.w	fp, fp, #4294967295
 801c9ae:	e6ba      	b.n	801c726 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801c9b0:	200135b8 	.word	0x200135b8
 801c9b4:	2800      	cmp	r0, #0
 801c9b6:	d0ba      	beq.n	801c92e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801c9b8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801c9ba:	442b      	add	r3, r5
 801c9bc:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801c9c0:	07db      	lsls	r3, r3, #31
 801c9c2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801c9c6:	bf54      	ite	pl
 801c9c8:	f00c 0c0f 	andpl.w	ip, ip, #15
 801c9cc:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801c9d0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c9d4:	fa5f f38c 	uxtb.w	r3, ip
 801c9d8:	930c      	str	r3, [sp, #48]	; 0x30
 801c9da:	e7a8      	b.n	801c92e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801c9dc:	f8b8 e000 	ldrh.w	lr, [r8]
 801c9e0:	fa1f fa83 	uxth.w	sl, r3
 801c9e4:	ea4f 202e 	mov.w	r0, lr, asr #8
 801c9e8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801c9ec:	43db      	mvns	r3, r3
 801c9ee:	b2db      	uxtb	r3, r3
 801c9f0:	fb11 f10a 	smulbb	r1, r1, sl
 801c9f4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c9f8:	fb00 1003 	mla	r0, r0, r3, r1
 801c9fc:	b2d2      	uxtb	r2, r2
 801c9fe:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801ca02:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ca06:	fa5f fe8e 	uxtb.w	lr, lr
 801ca0a:	fb12 f20a 	smulbb	r2, r2, sl
 801ca0e:	fb0e 2203 	mla	r2, lr, r3, r2
 801ca12:	fa5f fc8c 	uxtb.w	ip, ip
 801ca16:	b280      	uxth	r0, r0
 801ca18:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ca1c:	b292      	uxth	r2, r2
 801ca1e:	fb1c fc0a 	smulbb	ip, ip, sl
 801ca22:	fb01 cc03 	mla	ip, r1, r3, ip
 801ca26:	1c43      	adds	r3, r0, #1
 801ca28:	1c51      	adds	r1, r2, #1
 801ca2a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ca2e:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801ca32:	fa1f fc8c 	uxth.w	ip, ip
 801ca36:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801ca3a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801ca3e:	4308      	orrs	r0, r1
 801ca40:	f10c 0101 	add.w	r1, ip, #1
 801ca44:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801ca48:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801ca4c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801ca50:	ea40 000c 	orr.w	r0, r0, ip
 801ca54:	f8a8 0000 	strh.w	r0, [r8]
 801ca58:	e7a1      	b.n	801c99e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801ca5a:	b017      	add	sp, #92	; 0x5c
 801ca5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ca60 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801ca60:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ca64:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801ca68:	2d00      	cmp	r5, #0
 801ca6a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801ca6e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801ca72:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801ca76:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801ca7a:	fb05 0e03 	mla	lr, r5, r3, r0
 801ca7e:	f2c0 80b0 	blt.w	801cbe2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801ca82:	45a9      	cmp	r9, r5
 801ca84:	f340 80ad 	ble.w	801cbe2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801ca88:	2800      	cmp	r0, #0
 801ca8a:	f2c0 80a8 	blt.w	801cbde <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801ca8e:	4580      	cmp	r8, r0
 801ca90:	f340 80a5 	ble.w	801cbde <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801ca94:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801ca98:	f01e 0f01 	tst.w	lr, #1
 801ca9c:	5d16      	ldrb	r6, [r2, r4]
 801ca9e:	bf0c      	ite	eq
 801caa0:	f006 060f 	andeq.w	r6, r6, #15
 801caa4:	1136      	asrne	r6, r6, #4
 801caa6:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801caaa:	b2f6      	uxtb	r6, r6
 801caac:	1c44      	adds	r4, r0, #1
 801caae:	f100 809b 	bmi.w	801cbe8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801cab2:	45a0      	cmp	r8, r4
 801cab4:	f340 8098 	ble.w	801cbe8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801cab8:	2f00      	cmp	r7, #0
 801caba:	f000 8097 	beq.w	801cbec <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 801cabe:	f10e 0a01 	add.w	sl, lr, #1
 801cac2:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801cac6:	f01a 0f01 	tst.w	sl, #1
 801caca:	5d14      	ldrb	r4, [r2, r4]
 801cacc:	bf0c      	ite	eq
 801cace:	f004 040f 	andeq.w	r4, r4, #15
 801cad2:	1124      	asrne	r4, r4, #4
 801cad4:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801cad8:	b2e4      	uxtb	r4, r4
 801cada:	3501      	adds	r5, #1
 801cadc:	f100 808a 	bmi.w	801cbf4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801cae0:	45a9      	cmp	r9, r5
 801cae2:	f340 8087 	ble.w	801cbf4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801cae6:	f1bc 0f00 	cmp.w	ip, #0
 801caea:	f000 8086 	beq.w	801cbfa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 801caee:	2800      	cmp	r0, #0
 801caf0:	db7e      	blt.n	801cbf0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801caf2:	4580      	cmp	r8, r0
 801caf4:	dd7c      	ble.n	801cbf0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801caf6:	eb03 090e 	add.w	r9, r3, lr
 801cafa:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801cafe:	f019 0f01 	tst.w	r9, #1
 801cb02:	5d55      	ldrb	r5, [r2, r5]
 801cb04:	bf0c      	ite	eq
 801cb06:	f005 050f 	andeq.w	r5, r5, #15
 801cb0a:	112d      	asrne	r5, r5, #4
 801cb0c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801cb10:	b2ed      	uxtb	r5, r5
 801cb12:	3001      	adds	r0, #1
 801cb14:	d474      	bmi.n	801cc00 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801cb16:	4580      	cmp	r8, r0
 801cb18:	dd72      	ble.n	801cc00 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801cb1a:	2f00      	cmp	r7, #0
 801cb1c:	d072      	beq.n	801cc04 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801cb1e:	3301      	adds	r3, #1
 801cb20:	449e      	add	lr, r3
 801cb22:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801cb26:	f01e 0f01 	tst.w	lr, #1
 801cb2a:	5cd0      	ldrb	r0, [r2, r3]
 801cb2c:	bf0c      	ite	eq
 801cb2e:	f000 000f 	andeq.w	r0, r0, #15
 801cb32:	1100      	asrne	r0, r0, #4
 801cb34:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801cb38:	b2c3      	uxtb	r3, r0
 801cb3a:	b2ba      	uxth	r2, r7
 801cb3c:	fa1f fc8c 	uxth.w	ip, ip
 801cb40:	fb02 f00c 	mul.w	r0, r2, ip
 801cb44:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801cb48:	0112      	lsls	r2, r2, #4
 801cb4a:	fa1f fc8c 	uxth.w	ip, ip
 801cb4e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801cb52:	1a12      	subs	r2, r2, r0
 801cb54:	eba7 070c 	sub.w	r7, r7, ip
 801cb58:	b292      	uxth	r2, r2
 801cb5a:	b2bf      	uxth	r7, r7
 801cb5c:	4362      	muls	r2, r4
 801cb5e:	fb06 2207 	mla	r2, r6, r7, r2
 801cb62:	fb0c 2505 	mla	r5, ip, r5, r2
 801cb66:	fb00 5303 	mla	r3, r0, r3, r5
 801cb6a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cb6e:	b3a3      	cbz	r3, 801cbda <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 801cb70:	4a25      	ldr	r2, [pc, #148]	; (801cc08 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 801cb72:	880e      	ldrh	r6, [r1, #0]
 801cb74:	6815      	ldr	r5, [r2, #0]
 801cb76:	1234      	asrs	r4, r6, #8
 801cb78:	b29a      	uxth	r2, r3
 801cb7a:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801cb7e:	43db      	mvns	r3, r3
 801cb80:	b2db      	uxtb	r3, r3
 801cb82:	fb10 f002 	smulbb	r0, r0, r2
 801cb86:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801cb8a:	fb04 0403 	mla	r4, r4, r3, r0
 801cb8e:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801cb92:	10f0      	asrs	r0, r6, #3
 801cb94:	b2ed      	uxtb	r5, r5
 801cb96:	00f6      	lsls	r6, r6, #3
 801cb98:	fb17 f702 	smulbb	r7, r7, r2
 801cb9c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801cba0:	fb15 f202 	smulbb	r2, r5, r2
 801cba4:	b2f6      	uxtb	r6, r6
 801cba6:	b2a4      	uxth	r4, r4
 801cba8:	fb00 7003 	mla	r0, r0, r3, r7
 801cbac:	fb06 2303 	mla	r3, r6, r3, r2
 801cbb0:	b29a      	uxth	r2, r3
 801cbb2:	1c63      	adds	r3, r4, #1
 801cbb4:	b280      	uxth	r0, r0
 801cbb6:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801cbba:	1c53      	adds	r3, r2, #1
 801cbbc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801cbc0:	1c42      	adds	r2, r0, #1
 801cbc2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801cbc6:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801cbca:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801cbce:	0940      	lsrs	r0, r0, #5
 801cbd0:	4323      	orrs	r3, r4
 801cbd2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cbd6:	4303      	orrs	r3, r0
 801cbd8:	800b      	strh	r3, [r1, #0]
 801cbda:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801cbde:	2600      	movs	r6, #0
 801cbe0:	e764      	b.n	801caac <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 801cbe2:	2400      	movs	r4, #0
 801cbe4:	4626      	mov	r6, r4
 801cbe6:	e778      	b.n	801cada <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801cbe8:	2400      	movs	r4, #0
 801cbea:	e776      	b.n	801cada <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801cbec:	463c      	mov	r4, r7
 801cbee:	e774      	b.n	801cada <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801cbf0:	2500      	movs	r5, #0
 801cbf2:	e78e      	b.n	801cb12 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 801cbf4:	2300      	movs	r3, #0
 801cbf6:	461d      	mov	r5, r3
 801cbf8:	e79f      	b.n	801cb3a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801cbfa:	4663      	mov	r3, ip
 801cbfc:	4665      	mov	r5, ip
 801cbfe:	e79c      	b.n	801cb3a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801cc00:	2300      	movs	r3, #0
 801cc02:	e79a      	b.n	801cb3a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801cc04:	463b      	mov	r3, r7
 801cc06:	e798      	b.n	801cb3a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801cc08:	200135b8 	.word	0x200135b8

0801cc0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cc0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cc10:	b093      	sub	sp, #76	; 0x4c
 801cc12:	461d      	mov	r5, r3
 801cc14:	920c      	str	r2, [sp, #48]	; 0x30
 801cc16:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801cc18:	9107      	str	r1, [sp, #28]
 801cc1a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801cc1e:	9011      	str	r0, [sp, #68]	; 0x44
 801cc20:	6850      	ldr	r0, [r2, #4]
 801cc22:	6812      	ldr	r2, [r2, #0]
 801cc24:	fb00 1303 	mla	r3, r0, r3, r1
 801cc28:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801cc2c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cc2e:	689b      	ldr	r3, [r3, #8]
 801cc30:	3301      	adds	r3, #1
 801cc32:	f023 0301 	bic.w	r3, r3, #1
 801cc36:	9306      	str	r3, [sp, #24]
 801cc38:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cc3a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801cc3e:	681f      	ldr	r7, [r3, #0]
 801cc40:	9b07      	ldr	r3, [sp, #28]
 801cc42:	2b00      	cmp	r3, #0
 801cc44:	dc03      	bgt.n	801cc4e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801cc46:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801cc48:	2b00      	cmp	r3, #0
 801cc4a:	f340 8267 	ble.w	801d11c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801cc4e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cc50:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cc54:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801cc58:	1e48      	subs	r0, r1, #1
 801cc5a:	f102 3cff 	add.w	ip, r2, #4294967295
 801cc5e:	2d00      	cmp	r5, #0
 801cc60:	f340 80b8 	ble.w	801cdd4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801cc64:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801cc68:	ea4f 4326 	mov.w	r3, r6, asr #16
 801cc6c:	d406      	bmi.n	801cc7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801cc6e:	4586      	cmp	lr, r0
 801cc70:	da04      	bge.n	801cc7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801cc72:	2b00      	cmp	r3, #0
 801cc74:	db02      	blt.n	801cc7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801cc76:	4563      	cmp	r3, ip
 801cc78:	f2c0 80ad 	blt.w	801cdd6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 801cc7c:	f11e 0e01 	adds.w	lr, lr, #1
 801cc80:	f100 80a0 	bmi.w	801cdc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801cc84:	4571      	cmp	r1, lr
 801cc86:	f2c0 809d 	blt.w	801cdc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801cc8a:	3301      	adds	r3, #1
 801cc8c:	f100 809a 	bmi.w	801cdc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801cc90:	429a      	cmp	r2, r3
 801cc92:	f2c0 8097 	blt.w	801cdc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801cc96:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801cc9a:	9509      	str	r5, [sp, #36]	; 0x24
 801cc9c:	46c8      	mov	r8, r9
 801cc9e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cca0:	2b00      	cmp	r3, #0
 801cca2:	f340 80b6 	ble.w	801ce12 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801cca6:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801ccaa:	9308      	str	r3, [sp, #32]
 801ccac:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ccae:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801ccb2:	1423      	asrs	r3, r4, #16
 801ccb4:	ea4f 4026 	mov.w	r0, r6, asr #16
 801ccb8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801ccbc:	f100 813e 	bmi.w	801cf3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801ccc0:	f10c 3bff 	add.w	fp, ip, #4294967295
 801ccc4:	455b      	cmp	r3, fp
 801ccc6:	f280 8139 	bge.w	801cf3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801ccca:	2800      	cmp	r0, #0
 801cccc:	f2c0 8136 	blt.w	801cf3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801ccd0:	f10e 3bff 	add.w	fp, lr, #4294967295
 801ccd4:	4558      	cmp	r0, fp
 801ccd6:	f280 8131 	bge.w	801cf3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801ccda:	9a06      	ldr	r2, [sp, #24]
 801ccdc:	fb00 3302 	mla	r3, r0, r2, r3
 801cce0:	0858      	lsrs	r0, r3, #1
 801cce2:	07da      	lsls	r2, r3, #31
 801cce4:	f817 c000 	ldrb.w	ip, [r7, r0]
 801cce8:	9a08      	ldr	r2, [sp, #32]
 801ccea:	bf54      	ite	pl
 801ccec:	f00c 0c0f 	andpl.w	ip, ip, #15
 801ccf0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801ccf4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801ccf8:	fa5f fc8c 	uxtb.w	ip, ip
 801ccfc:	2a00      	cmp	r2, #0
 801ccfe:	f000 80cb 	beq.w	801ce98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801cd02:	1c58      	adds	r0, r3, #1
 801cd04:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801cd08:	07c0      	lsls	r0, r0, #31
 801cd0a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801cd0e:	bf54      	ite	pl
 801cd10:	f00e 0e0f 	andpl.w	lr, lr, #15
 801cd14:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801cd18:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801cd1c:	fa5f fe8e 	uxtb.w	lr, lr
 801cd20:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801cd24:	b1b9      	cbz	r1, 801cd56 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801cd26:	4453      	add	r3, sl
 801cd28:	0858      	lsrs	r0, r3, #1
 801cd2a:	07da      	lsls	r2, r3, #31
 801cd2c:	5c38      	ldrb	r0, [r7, r0]
 801cd2e:	bf54      	ite	pl
 801cd30:	f000 000f 	andpl.w	r0, r0, #15
 801cd34:	1100      	asrmi	r0, r0, #4
 801cd36:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801cd3a:	b2c0      	uxtb	r0, r0
 801cd3c:	900a      	str	r0, [sp, #40]	; 0x28
 801cd3e:	1c58      	adds	r0, r3, #1
 801cd40:	0843      	lsrs	r3, r0, #1
 801cd42:	07c2      	lsls	r2, r0, #31
 801cd44:	5cfb      	ldrb	r3, [r7, r3]
 801cd46:	bf54      	ite	pl
 801cd48:	f003 030f 	andpl.w	r3, r3, #15
 801cd4c:	111b      	asrmi	r3, r3, #4
 801cd4e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801cd52:	b2db      	uxtb	r3, r3
 801cd54:	930e      	str	r3, [sp, #56]	; 0x38
 801cd56:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801cd5a:	b289      	uxth	r1, r1
 801cd5c:	fb02 f301 	mul.w	r3, r2, r1
 801cd60:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801cd64:	0112      	lsls	r2, r2, #4
 801cd66:	b289      	uxth	r1, r1
 801cd68:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801cd6c:	1a40      	subs	r0, r0, r1
 801cd6e:	fa1f fe80 	uxth.w	lr, r0
 801cd72:	1ad2      	subs	r2, r2, r3
 801cd74:	980d      	ldr	r0, [sp, #52]	; 0x34
 801cd76:	b292      	uxth	r2, r2
 801cd78:	4342      	muls	r2, r0
 801cd7a:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801cd7e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801cd80:	fb01 c102 	mla	r1, r1, r2, ip
 801cd84:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801cd86:	fb03 1302 	mla	r3, r3, r2, r1
 801cd8a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cd8e:	2bff      	cmp	r3, #255	; 0xff
 801cd90:	f040 8093 	bne.w	801ceba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801cd94:	4bbe      	ldr	r3, [pc, #760]	; (801d090 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801cd96:	681a      	ldr	r2, [r3, #0]
 801cd98:	4bbe      	ldr	r3, [pc, #760]	; (801d094 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801cd9a:	0951      	lsrs	r1, r2, #5
 801cd9c:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801cda0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cda4:	430b      	orrs	r3, r1
 801cda6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cdaa:	4313      	orrs	r3, r2
 801cdac:	f8a8 3000 	strh.w	r3, [r8]
 801cdb0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801cdb2:	441c      	add	r4, r3
 801cdb4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801cdb6:	441e      	add	r6, r3
 801cdb8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cdba:	3b01      	subs	r3, #1
 801cdbc:	f108 0802 	add.w	r8, r8, #2
 801cdc0:	9309      	str	r3, [sp, #36]	; 0x24
 801cdc2:	e76c      	b.n	801cc9e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801cdc4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801cdc6:	441c      	add	r4, r3
 801cdc8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801cdca:	3d01      	subs	r5, #1
 801cdcc:	441e      	add	r6, r3
 801cdce:	f109 0902 	add.w	r9, r9, #2
 801cdd2:	e744      	b.n	801cc5e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801cdd4:	d021      	beq.n	801ce1a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801cdd6:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801cdd8:	1e6b      	subs	r3, r5, #1
 801cdda:	fb00 4003 	mla	r0, r0, r3, r4
 801cdde:	1400      	asrs	r0, r0, #16
 801cde0:	f53f af59 	bmi.w	801cc96 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801cde4:	3901      	subs	r1, #1
 801cde6:	4288      	cmp	r0, r1
 801cde8:	f6bf af55 	bge.w	801cc96 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801cdec:	9920      	ldr	r1, [sp, #128]	; 0x80
 801cdee:	fb01 6303 	mla	r3, r1, r3, r6
 801cdf2:	141b      	asrs	r3, r3, #16
 801cdf4:	f53f af4f 	bmi.w	801cc96 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801cdf8:	3a01      	subs	r2, #1
 801cdfa:	4293      	cmp	r3, r2
 801cdfc:	f6bf af4b 	bge.w	801cc96 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801ce00:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801ce04:	9308      	str	r3, [sp, #32]
 801ce06:	46a8      	mov	r8, r5
 801ce08:	46ce      	mov	lr, r9
 801ce0a:	f1b8 0f00 	cmp.w	r8, #0
 801ce0e:	f300 80b5 	bgt.w	801cf7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ce12:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801ce16:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801ce1a:	9b07      	ldr	r3, [sp, #28]
 801ce1c:	2b00      	cmp	r3, #0
 801ce1e:	f340 817d 	ble.w	801d11c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801ce22:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ce26:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ce2a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ce2e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ce30:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ce34:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ce38:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ce3c:	eef0 6a62 	vmov.f32	s13, s5
 801ce40:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ce44:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ce48:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ce4c:	ee16 4a90 	vmov	r4, s13
 801ce50:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ce54:	eef0 6a43 	vmov.f32	s13, s6
 801ce58:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ce5c:	ee12 2a90 	vmov	r2, s5
 801ce60:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ce64:	fb92 f3f3 	sdiv	r3, r2, r3
 801ce68:	ee13 2a10 	vmov	r2, s6
 801ce6c:	931f      	str	r3, [sp, #124]	; 0x7c
 801ce6e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ce70:	fb92 f3f3 	sdiv	r3, r2, r3
 801ce74:	9320      	str	r3, [sp, #128]	; 0x80
 801ce76:	9b07      	ldr	r3, [sp, #28]
 801ce78:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801ce7a:	3b01      	subs	r3, #1
 801ce7c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ce80:	9307      	str	r3, [sp, #28]
 801ce82:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ce84:	ee16 6a90 	vmov	r6, s13
 801ce88:	bf14      	ite	ne
 801ce8a:	461d      	movne	r5, r3
 801ce8c:	4615      	moveq	r5, r2
 801ce8e:	eeb0 3a67 	vmov.f32	s6, s15
 801ce92:	eef0 2a47 	vmov.f32	s5, s14
 801ce96:	e6d3      	b.n	801cc40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801ce98:	2900      	cmp	r1, #0
 801ce9a:	f43f af5c 	beq.w	801cd56 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801ce9e:	eb0a 0003 	add.w	r0, sl, r3
 801cea2:	0843      	lsrs	r3, r0, #1
 801cea4:	07c0      	lsls	r0, r0, #31
 801cea6:	5cfb      	ldrb	r3, [r7, r3]
 801cea8:	bf54      	ite	pl
 801ceaa:	f003 030f 	andpl.w	r3, r3, #15
 801ceae:	111b      	asrmi	r3, r3, #4
 801ceb0:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801ceb4:	b2db      	uxtb	r3, r3
 801ceb6:	930a      	str	r3, [sp, #40]	; 0x28
 801ceb8:	e74d      	b.n	801cd56 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801ceba:	2b00      	cmp	r3, #0
 801cebc:	f43f af78 	beq.w	801cdb0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801cec0:	4a73      	ldr	r2, [pc, #460]	; (801d090 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801cec2:	f8b8 c000 	ldrh.w	ip, [r8]
 801cec6:	6810      	ldr	r0, [r2, #0]
 801cec8:	fa1f fe83 	uxth.w	lr, r3
 801cecc:	ea4f 212c 	mov.w	r1, ip, asr #8
 801ced0:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801ced4:	43db      	mvns	r3, r3
 801ced6:	b2db      	uxtb	r3, r3
 801ced8:	fb12 f20e 	smulbb	r2, r2, lr
 801cedc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801cee0:	fb01 2103 	mla	r1, r1, r3, r2
 801cee4:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801cee8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801ceec:	b2c0      	uxtb	r0, r0
 801ceee:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801cef2:	fb1b fb0e 	smulbb	fp, fp, lr
 801cef6:	b289      	uxth	r1, r1
 801cef8:	fb10 fe0e 	smulbb	lr, r0, lr
 801cefc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801cf00:	fa5f fc8c 	uxtb.w	ip, ip
 801cf04:	fb02 b203 	mla	r2, r2, r3, fp
 801cf08:	1c48      	adds	r0, r1, #1
 801cf0a:	fb0c e303 	mla	r3, ip, r3, lr
 801cf0e:	b292      	uxth	r2, r2
 801cf10:	b29b      	uxth	r3, r3
 801cf12:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801cf16:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 801cf1a:	f102 0b01 	add.w	fp, r2, #1
 801cf1e:	1c59      	adds	r1, r3, #1
 801cf20:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801cf24:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801cf28:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801cf2c:	0952      	lsrs	r2, r2, #5
 801cf2e:	4301      	orrs	r1, r0
 801cf30:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cf34:	4311      	orrs	r1, r2
 801cf36:	f8a8 1000 	strh.w	r1, [r8]
 801cf3a:	e739      	b.n	801cdb0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801cf3c:	f113 0b01 	adds.w	fp, r3, #1
 801cf40:	f53f af36 	bmi.w	801cdb0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801cf44:	45dc      	cmp	ip, fp
 801cf46:	f6ff af33 	blt.w	801cdb0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801cf4a:	f110 0b01 	adds.w	fp, r0, #1
 801cf4e:	f53f af2f 	bmi.w	801cdb0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801cf52:	45de      	cmp	lr, fp
 801cf54:	f6ff af2c 	blt.w	801cdb0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801cf58:	9a08      	ldr	r2, [sp, #32]
 801cf5a:	9302      	str	r3, [sp, #8]
 801cf5c:	fa0f f38e 	sxth.w	r3, lr
 801cf60:	9301      	str	r3, [sp, #4]
 801cf62:	fa0f f38c 	sxth.w	r3, ip
 801cf66:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801cf6a:	9105      	str	r1, [sp, #20]
 801cf6c:	9300      	str	r3, [sp, #0]
 801cf6e:	463a      	mov	r2, r7
 801cf70:	4653      	mov	r3, sl
 801cf72:	4641      	mov	r1, r8
 801cf74:	9811      	ldr	r0, [sp, #68]	; 0x44
 801cf76:	f7ff fd73 	bl	801ca60 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801cf7a:	e719      	b.n	801cdb0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801cf7c:	9906      	ldr	r1, [sp, #24]
 801cf7e:	1422      	asrs	r2, r4, #16
 801cf80:	1433      	asrs	r3, r6, #16
 801cf82:	fb01 2303 	mla	r3, r1, r3, r2
 801cf86:	085a      	lsrs	r2, r3, #1
 801cf88:	07d9      	lsls	r1, r3, #31
 801cf8a:	5cba      	ldrb	r2, [r7, r2]
 801cf8c:	bf54      	ite	pl
 801cf8e:	f002 020f 	andpl.w	r2, r2, #15
 801cf92:	1112      	asrmi	r2, r2, #4
 801cf94:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801cf98:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801cf9c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801cfa0:	b2d2      	uxtb	r2, r2
 801cfa2:	2800      	cmp	r0, #0
 801cfa4:	d062      	beq.n	801d06c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 801cfa6:	f103 0a01 	add.w	sl, r3, #1
 801cfaa:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801cfae:	f01a 0f01 	tst.w	sl, #1
 801cfb2:	5c79      	ldrb	r1, [r7, r1]
 801cfb4:	bf0c      	ite	eq
 801cfb6:	f001 010f 	andeq.w	r1, r1, #15
 801cfba:	1109      	asrne	r1, r1, #4
 801cfbc:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801cfc0:	b2c9      	uxtb	r1, r1
 801cfc2:	910f      	str	r1, [sp, #60]	; 0x3c
 801cfc4:	f1bc 0f00 	cmp.w	ip, #0
 801cfc8:	d019      	beq.n	801cffe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801cfca:	9908      	ldr	r1, [sp, #32]
 801cfcc:	440b      	add	r3, r1
 801cfce:	0859      	lsrs	r1, r3, #1
 801cfd0:	f013 0f01 	tst.w	r3, #1
 801cfd4:	5c79      	ldrb	r1, [r7, r1]
 801cfd6:	bf0c      	ite	eq
 801cfd8:	f001 010f 	andeq.w	r1, r1, #15
 801cfdc:	1109      	asrne	r1, r1, #4
 801cfde:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801cfe2:	b2c9      	uxtb	r1, r1
 801cfe4:	3301      	adds	r3, #1
 801cfe6:	910b      	str	r1, [sp, #44]	; 0x2c
 801cfe8:	0859      	lsrs	r1, r3, #1
 801cfea:	07db      	lsls	r3, r3, #31
 801cfec:	5c79      	ldrb	r1, [r7, r1]
 801cfee:	bf54      	ite	pl
 801cff0:	f001 010f 	andpl.w	r1, r1, #15
 801cff4:	1109      	asrmi	r1, r1, #4
 801cff6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801cffa:	b2c9      	uxtb	r1, r1
 801cffc:	9110      	str	r1, [sp, #64]	; 0x40
 801cffe:	b280      	uxth	r0, r0
 801d000:	fa1f fc8c 	uxth.w	ip, ip
 801d004:	fb00 f30c 	mul.w	r3, r0, ip
 801d008:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801d00c:	0100      	lsls	r0, r0, #4
 801d00e:	fa1f fc8c 	uxth.w	ip, ip
 801d012:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801d016:	eba1 010c 	sub.w	r1, r1, ip
 801d01a:	fa1f fa81 	uxth.w	sl, r1
 801d01e:	1ac0      	subs	r0, r0, r3
 801d020:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801d022:	b280      	uxth	r0, r0
 801d024:	4348      	muls	r0, r1
 801d026:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801d028:	fb02 020a 	mla	r2, r2, sl, r0
 801d02c:	fb0c 2c01 	mla	ip, ip, r1, r2
 801d030:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d032:	fb03 c302 	mla	r3, r3, r2, ip
 801d036:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d03a:	2bff      	cmp	r3, #255	; 0xff
 801d03c:	d12c      	bne.n	801d098 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 801d03e:	4b14      	ldr	r3, [pc, #80]	; (801d090 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801d040:	681a      	ldr	r2, [r3, #0]
 801d042:	4b14      	ldr	r3, [pc, #80]	; (801d094 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801d044:	0951      	lsrs	r1, r2, #5
 801d046:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801d04a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d04e:	430b      	orrs	r3, r1
 801d050:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d054:	4313      	orrs	r3, r2
 801d056:	f8ae 3000 	strh.w	r3, [lr]
 801d05a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d05c:	441c      	add	r4, r3
 801d05e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d060:	f10e 0e02 	add.w	lr, lr, #2
 801d064:	441e      	add	r6, r3
 801d066:	f108 38ff 	add.w	r8, r8, #4294967295
 801d06a:	e6ce      	b.n	801ce0a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801d06c:	f1bc 0f00 	cmp.w	ip, #0
 801d070:	d0c5      	beq.n	801cffe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801d072:	9908      	ldr	r1, [sp, #32]
 801d074:	440b      	add	r3, r1
 801d076:	0859      	lsrs	r1, r3, #1
 801d078:	07db      	lsls	r3, r3, #31
 801d07a:	5c79      	ldrb	r1, [r7, r1]
 801d07c:	bf54      	ite	pl
 801d07e:	f001 010f 	andpl.w	r1, r1, #15
 801d082:	1109      	asrmi	r1, r1, #4
 801d084:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801d088:	b2c9      	uxtb	r1, r1
 801d08a:	910b      	str	r1, [sp, #44]	; 0x2c
 801d08c:	e7b7      	b.n	801cffe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801d08e:	bf00      	nop
 801d090:	200135b8 	.word	0x200135b8
 801d094:	fffff800 	.word	0xfffff800
 801d098:	2b00      	cmp	r3, #0
 801d09a:	d0de      	beq.n	801d05a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801d09c:	4a21      	ldr	r2, [pc, #132]	; (801d124 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 801d09e:	f8be c000 	ldrh.w	ip, [lr]
 801d0a2:	6810      	ldr	r0, [r2, #0]
 801d0a4:	fa1f fa83 	uxth.w	sl, r3
 801d0a8:	ea4f 212c 	mov.w	r1, ip, asr #8
 801d0ac:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801d0b0:	43db      	mvns	r3, r3
 801d0b2:	b2db      	uxtb	r3, r3
 801d0b4:	fb12 f20a 	smulbb	r2, r2, sl
 801d0b8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d0bc:	fb01 2103 	mla	r1, r1, r3, r2
 801d0c0:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801d0c4:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801d0c8:	b2c0      	uxtb	r0, r0
 801d0ca:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d0ce:	fa5f fc8c 	uxtb.w	ip, ip
 801d0d2:	fb10 f00a 	smulbb	r0, r0, sl
 801d0d6:	fb0c 0003 	mla	r0, ip, r3, r0
 801d0da:	b289      	uxth	r1, r1
 801d0dc:	fb1b fb0a 	smulbb	fp, fp, sl
 801d0e0:	b280      	uxth	r0, r0
 801d0e2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d0e6:	fb02 b203 	mla	r2, r2, r3, fp
 801d0ea:	1c4b      	adds	r3, r1, #1
 801d0ec:	f100 0b01 	add.w	fp, r0, #1
 801d0f0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801d0f4:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801d0f8:	b292      	uxth	r2, r2
 801d0fa:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801d0fe:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801d102:	ea4b 0101 	orr.w	r1, fp, r1
 801d106:	f102 0b01 	add.w	fp, r2, #1
 801d10a:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801d10e:	0952      	lsrs	r2, r2, #5
 801d110:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d114:	4311      	orrs	r1, r2
 801d116:	f8ae 1000 	strh.w	r1, [lr]
 801d11a:	e79e      	b.n	801d05a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801d11c:	b013      	add	sp, #76	; 0x4c
 801d11e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d122:	bf00      	nop
 801d124:	200135b8 	.word	0x200135b8

0801d128 <CRC_Lock>:
 801d128:	b530      	push	{r4, r5, lr}
 801d12a:	4a20      	ldr	r2, [pc, #128]	; (801d1ac <CRC_Lock+0x84>)
 801d12c:	6813      	ldr	r3, [r2, #0]
 801d12e:	f023 0301 	bic.w	r3, r3, #1
 801d132:	6013      	str	r3, [r2, #0]
 801d134:	4b1e      	ldr	r3, [pc, #120]	; (801d1b0 <CRC_Lock+0x88>)
 801d136:	681a      	ldr	r2, [r3, #0]
 801d138:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801d13c:	4022      	ands	r2, r4
 801d13e:	f24c 2540 	movw	r5, #49728	; 0xc240
 801d142:	42aa      	cmp	r2, r5
 801d144:	d005      	beq.n	801d152 <CRC_Lock+0x2a>
 801d146:	681b      	ldr	r3, [r3, #0]
 801d148:	f24c 2270 	movw	r2, #49776	; 0xc270
 801d14c:	4023      	ands	r3, r4
 801d14e:	4293      	cmp	r3, r2
 801d150:	d124      	bne.n	801d19c <CRC_Lock+0x74>
 801d152:	4b18      	ldr	r3, [pc, #96]	; (801d1b4 <CRC_Lock+0x8c>)
 801d154:	681b      	ldr	r3, [r3, #0]
 801d156:	bb0b      	cbnz	r3, 801d19c <CRC_Lock+0x74>
 801d158:	4b17      	ldr	r3, [pc, #92]	; (801d1b8 <CRC_Lock+0x90>)
 801d15a:	681a      	ldr	r2, [r3, #0]
 801d15c:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801d160:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 801d164:	d00d      	beq.n	801d182 <CRC_Lock+0x5a>
 801d166:	681a      	ldr	r2, [r3, #0]
 801d168:	f240 4483 	movw	r4, #1155	; 0x483
 801d16c:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801d170:	42a2      	cmp	r2, r4
 801d172:	d006      	beq.n	801d182 <CRC_Lock+0x5a>
 801d174:	681b      	ldr	r3, [r3, #0]
 801d176:	f240 4285 	movw	r2, #1157	; 0x485
 801d17a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801d17e:	4293      	cmp	r3, r2
 801d180:	d10c      	bne.n	801d19c <CRC_Lock+0x74>
 801d182:	4b0e      	ldr	r3, [pc, #56]	; (801d1bc <CRC_Lock+0x94>)
 801d184:	2201      	movs	r2, #1
 801d186:	601a      	str	r2, [r3, #0]
 801d188:	681a      	ldr	r2, [r3, #0]
 801d18a:	2a00      	cmp	r2, #0
 801d18c:	d1fc      	bne.n	801d188 <CRC_Lock+0x60>
 801d18e:	4b0c      	ldr	r3, [pc, #48]	; (801d1c0 <CRC_Lock+0x98>)
 801d190:	6018      	str	r0, [r3, #0]
 801d192:	6818      	ldr	r0, [r3, #0]
 801d194:	1a43      	subs	r3, r0, r1
 801d196:	4258      	negs	r0, r3
 801d198:	4158      	adcs	r0, r3
 801d19a:	bd30      	pop	{r4, r5, pc}
 801d19c:	4b09      	ldr	r3, [pc, #36]	; (801d1c4 <CRC_Lock+0x9c>)
 801d19e:	2201      	movs	r2, #1
 801d1a0:	601a      	str	r2, [r3, #0]
 801d1a2:	681a      	ldr	r2, [r3, #0]
 801d1a4:	2a00      	cmp	r2, #0
 801d1a6:	d1fc      	bne.n	801d1a2 <CRC_Lock+0x7a>
 801d1a8:	4b07      	ldr	r3, [pc, #28]	; (801d1c8 <CRC_Lock+0xa0>)
 801d1aa:	e7f1      	b.n	801d190 <CRC_Lock+0x68>
 801d1ac:	e0002000 	.word	0xe0002000
 801d1b0:	e000ed00 	.word	0xe000ed00
 801d1b4:	e0042000 	.word	0xe0042000
 801d1b8:	5c001000 	.word	0x5c001000
 801d1bc:	58024c08 	.word	0x58024c08
 801d1c0:	58024c00 	.word	0x58024c00
 801d1c4:	40023008 	.word	0x40023008
 801d1c8:	40023000 	.word	0x40023000

0801d1cc <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801d1cc:	6101      	str	r1, [r0, #16]
 801d1ce:	4770      	bx	lr

0801d1d0 <_ZN8touchgfx8Gestures4tickEv>:
 801d1d0:	7b83      	ldrb	r3, [r0, #14]
 801d1d2:	b14b      	cbz	r3, 801d1e8 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801d1d4:	8903      	ldrh	r3, [r0, #8]
 801d1d6:	3301      	adds	r3, #1
 801d1d8:	b29b      	uxth	r3, r3
 801d1da:	2b07      	cmp	r3, #7
 801d1dc:	8103      	strh	r3, [r0, #8]
 801d1de:	bf81      	itttt	hi
 801d1e0:	2300      	movhi	r3, #0
 801d1e2:	8143      	strhhi	r3, [r0, #10]
 801d1e4:	8183      	strhhi	r3, [r0, #12]
 801d1e6:	7383      	strbhi	r3, [r0, #14]
 801d1e8:	4770      	bx	lr
	...

0801d1ec <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801d1ec:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801d1f0:	4698      	mov	r8, r3
 801d1f2:	8883      	ldrh	r3, [r0, #4]
 801d1f4:	f8ad 3006 	strh.w	r3, [sp, #6]
 801d1f8:	eba8 0303 	sub.w	r3, r8, r3
 801d1fc:	b21b      	sxth	r3, r3
 801d1fe:	4604      	mov	r4, r0
 801d200:	2b00      	cmp	r3, #0
 801d202:	4617      	mov	r7, r2
 801d204:	4a18      	ldr	r2, [pc, #96]	; (801d268 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 801d206:	9200      	str	r2, [sp, #0]
 801d208:	bfb8      	it	lt
 801d20a:	425b      	neglt	r3, r3
 801d20c:	8aa2      	ldrh	r2, [r4, #20]
 801d20e:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801d212:	f8ad 800a 	strh.w	r8, [sp, #10]
 801d216:	b21b      	sxth	r3, r3
 801d218:	460e      	mov	r6, r1
 801d21a:	4293      	cmp	r3, r2
 801d21c:	88c1      	ldrh	r1, [r0, #6]
 801d21e:	f8ad 1008 	strh.w	r1, [sp, #8]
 801d222:	f04f 0000 	mov.w	r0, #0
 801d226:	f88d 0004 	strb.w	r0, [sp, #4]
 801d22a:	f8ad 500c 	strh.w	r5, [sp, #12]
 801d22e:	dc07      	bgt.n	801d240 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 801d230:	1a69      	subs	r1, r5, r1
 801d232:	b209      	sxth	r1, r1
 801d234:	2900      	cmp	r1, #0
 801d236:	bfb8      	it	lt
 801d238:	4249      	neglt	r1, r1
 801d23a:	b209      	sxth	r1, r1
 801d23c:	428a      	cmp	r2, r1
 801d23e:	da10      	bge.n	801d262 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 801d240:	6920      	ldr	r0, [r4, #16]
 801d242:	6803      	ldr	r3, [r0, #0]
 801d244:	4669      	mov	r1, sp
 801d246:	685b      	ldr	r3, [r3, #4]
 801d248:	4798      	blx	r3
 801d24a:	eba8 0606 	sub.w	r6, r8, r6
 801d24e:	2300      	movs	r3, #0
 801d250:	1bef      	subs	r7, r5, r7
 801d252:	2001      	movs	r0, #1
 801d254:	8123      	strh	r3, [r4, #8]
 801d256:	8166      	strh	r6, [r4, #10]
 801d258:	81a7      	strh	r7, [r4, #12]
 801d25a:	f8a4 8004 	strh.w	r8, [r4, #4]
 801d25e:	80e5      	strh	r5, [r4, #6]
 801d260:	73a0      	strb	r0, [r4, #14]
 801d262:	b004      	add	sp, #16
 801d264:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d268:	08020964 	.word	0x08020964

0801d26c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801d26c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801d26e:	461e      	mov	r6, r3
 801d270:	1e4b      	subs	r3, r1, #1
 801d272:	2b01      	cmp	r3, #1
 801d274:	b085      	sub	sp, #20
 801d276:	4604      	mov	r4, r0
 801d278:	460d      	mov	r5, r1
 801d27a:	4617      	mov	r7, r2
 801d27c:	d84b      	bhi.n	801d316 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801d27e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801d282:	1cd3      	adds	r3, r2, #3
 801d284:	b29b      	uxth	r3, r3
 801d286:	2b06      	cmp	r3, #6
 801d288:	d916      	bls.n	801d2b8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801d28a:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 801d32c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801d28e:	f8cd c004 	str.w	ip, [sp, #4]
 801d292:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d296:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801d29a:	6900      	ldr	r0, [r0, #16]
 801d29c:	f8ad 100c 	strh.w	r1, [sp, #12]
 801d2a0:	f04f 0c00 	mov.w	ip, #0
 801d2a4:	f88d c008 	strb.w	ip, [sp, #8]
 801d2a8:	f8ad 200a 	strh.w	r2, [sp, #10]
 801d2ac:	f8ad 300e 	strh.w	r3, [sp, #14]
 801d2b0:	6803      	ldr	r3, [r0, #0]
 801d2b2:	a901      	add	r1, sp, #4
 801d2b4:	689b      	ldr	r3, [r3, #8]
 801d2b6:	4798      	blx	r3
 801d2b8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801d2bc:	1cd3      	adds	r3, r2, #3
 801d2be:	b29b      	uxth	r3, r3
 801d2c0:	2b06      	cmp	r3, #6
 801d2c2:	d916      	bls.n	801d2f2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801d2c4:	f8df c064 	ldr.w	ip, [pc, #100]	; 801d32c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801d2c8:	f8cd c004 	str.w	ip, [sp, #4]
 801d2cc:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d2d0:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801d2d4:	6920      	ldr	r0, [r4, #16]
 801d2d6:	f8ad 100c 	strh.w	r1, [sp, #12]
 801d2da:	f04f 0c01 	mov.w	ip, #1
 801d2de:	f88d c008 	strb.w	ip, [sp, #8]
 801d2e2:	f8ad 200a 	strh.w	r2, [sp, #10]
 801d2e6:	f8ad 300e 	strh.w	r3, [sp, #14]
 801d2ea:	6803      	ldr	r3, [r0, #0]
 801d2ec:	a901      	add	r1, sp, #4
 801d2ee:	689b      	ldr	r3, [r3, #8]
 801d2f0:	4798      	blx	r3
 801d2f2:	4b0d      	ldr	r3, [pc, #52]	; (801d328 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801d2f4:	9301      	str	r3, [sp, #4]
 801d2f6:	6920      	ldr	r0, [r4, #16]
 801d2f8:	f88d 5008 	strb.w	r5, [sp, #8]
 801d2fc:	2300      	movs	r3, #0
 801d2fe:	f8ad 700a 	strh.w	r7, [sp, #10]
 801d302:	f8ad 600c 	strh.w	r6, [sp, #12]
 801d306:	f8ad 300e 	strh.w	r3, [sp, #14]
 801d30a:	6803      	ldr	r3, [r0, #0]
 801d30c:	a901      	add	r1, sp, #4
 801d30e:	681b      	ldr	r3, [r3, #0]
 801d310:	4798      	blx	r3
 801d312:	b005      	add	sp, #20
 801d314:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801d316:	2900      	cmp	r1, #0
 801d318:	d1eb      	bne.n	801d2f2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801d31a:	80a2      	strh	r2, [r4, #4]
 801d31c:	80c6      	strh	r6, [r0, #6]
 801d31e:	60a1      	str	r1, [r4, #8]
 801d320:	81a1      	strh	r1, [r4, #12]
 801d322:	73a1      	strb	r1, [r4, #14]
 801d324:	e7e5      	b.n	801d2f2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801d326:	bf00      	nop
 801d328:	08020950 	.word	0x08020950
 801d32c:	08020978 	.word	0x08020978

0801d330 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 801d330:	b570      	push	{r4, r5, r6, lr}
 801d332:	790b      	ldrb	r3, [r1, #4]
 801d334:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 801d338:	2b00      	cmp	r3, #0
 801d33a:	bf0c      	ite	eq
 801d33c:	2301      	moveq	r3, #1
 801d33e:	2300      	movne	r3, #0
 801d340:	4604      	mov	r4, r0
 801d342:	460e      	mov	r6, r1
 801d344:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 801d348:	d109      	bne.n	801d35e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 801d34a:	b14d      	cbz	r5, 801d360 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 801d34c:	7933      	ldrb	r3, [r6, #4]
 801d34e:	2b01      	cmp	r3, #1
 801d350:	d10c      	bne.n	801d36c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801d352:	6823      	ldr	r3, [r4, #0]
 801d354:	4620      	mov	r0, r4
 801d356:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 801d358:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801d35c:	4718      	bx	r3
 801d35e:	b12d      	cbz	r5, 801d36c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801d360:	6823      	ldr	r3, [r4, #0]
 801d362:	4620      	mov	r0, r4
 801d364:	695b      	ldr	r3, [r3, #20]
 801d366:	4798      	blx	r3
 801d368:	2d00      	cmp	r5, #0
 801d36a:	d1ef      	bne.n	801d34c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 801d36c:	bd70      	pop	{r4, r5, r6, pc}

0801d36e <__aeabi_atexit>:
 801d36e:	460b      	mov	r3, r1
 801d370:	4601      	mov	r1, r0
 801d372:	4618      	mov	r0, r3
 801d374:	f000 b90e 	b.w	801d594 <__cxa_atexit>

0801d378 <_ZdlPvj>:
 801d378:	f000 b812 	b.w	801d3a0 <_ZdlPv>

0801d37c <__cxa_guard_acquire>:
 801d37c:	6803      	ldr	r3, [r0, #0]
 801d37e:	07db      	lsls	r3, r3, #31
 801d380:	d406      	bmi.n	801d390 <__cxa_guard_acquire+0x14>
 801d382:	7843      	ldrb	r3, [r0, #1]
 801d384:	b103      	cbz	r3, 801d388 <__cxa_guard_acquire+0xc>
 801d386:	deff      	udf	#255	; 0xff
 801d388:	2301      	movs	r3, #1
 801d38a:	7043      	strb	r3, [r0, #1]
 801d38c:	4618      	mov	r0, r3
 801d38e:	4770      	bx	lr
 801d390:	2000      	movs	r0, #0
 801d392:	4770      	bx	lr

0801d394 <__cxa_guard_release>:
 801d394:	2301      	movs	r3, #1
 801d396:	6003      	str	r3, [r0, #0]
 801d398:	4770      	bx	lr

0801d39a <__cxa_pure_virtual>:
 801d39a:	b508      	push	{r3, lr}
 801d39c:	f000 f80e 	bl	801d3bc <_ZSt9terminatev>

0801d3a0 <_ZdlPv>:
 801d3a0:	f000 b844 	b.w	801d42c <free>

0801d3a4 <_ZN10__cxxabiv111__terminateEPFvvE>:
 801d3a4:	b508      	push	{r3, lr}
 801d3a6:	4780      	blx	r0
 801d3a8:	f000 f80d 	bl	801d3c6 <abort>

0801d3ac <_ZSt13get_terminatev>:
 801d3ac:	4b02      	ldr	r3, [pc, #8]	; (801d3b8 <_ZSt13get_terminatev+0xc>)
 801d3ae:	6818      	ldr	r0, [r3, #0]
 801d3b0:	f3bf 8f5b 	dmb	ish
 801d3b4:	4770      	bx	lr
 801d3b6:	bf00      	nop
 801d3b8:	200000f8 	.word	0x200000f8

0801d3bc <_ZSt9terminatev>:
 801d3bc:	b508      	push	{r3, lr}
 801d3be:	f7ff fff5 	bl	801d3ac <_ZSt13get_terminatev>
 801d3c2:	f7ff ffef 	bl	801d3a4 <_ZN10__cxxabiv111__terminateEPFvvE>

0801d3c6 <abort>:
 801d3c6:	b508      	push	{r3, lr}
 801d3c8:	2006      	movs	r0, #6
 801d3ca:	f000 fa39 	bl	801d840 <raise>
 801d3ce:	2001      	movs	r0, #1
 801d3d0:	f7e5 f82e 	bl	8002430 <_exit>

0801d3d4 <__assert_func>:
 801d3d4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801d3d6:	4614      	mov	r4, r2
 801d3d8:	461a      	mov	r2, r3
 801d3da:	4b09      	ldr	r3, [pc, #36]	; (801d400 <__assert_func+0x2c>)
 801d3dc:	681b      	ldr	r3, [r3, #0]
 801d3de:	4605      	mov	r5, r0
 801d3e0:	68d8      	ldr	r0, [r3, #12]
 801d3e2:	b14c      	cbz	r4, 801d3f8 <__assert_func+0x24>
 801d3e4:	4b07      	ldr	r3, [pc, #28]	; (801d404 <__assert_func+0x30>)
 801d3e6:	9100      	str	r1, [sp, #0]
 801d3e8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801d3ec:	4906      	ldr	r1, [pc, #24]	; (801d408 <__assert_func+0x34>)
 801d3ee:	462b      	mov	r3, r5
 801d3f0:	f000 f982 	bl	801d6f8 <fiprintf>
 801d3f4:	f7ff ffe7 	bl	801d3c6 <abort>
 801d3f8:	4b04      	ldr	r3, [pc, #16]	; (801d40c <__assert_func+0x38>)
 801d3fa:	461c      	mov	r4, r3
 801d3fc:	e7f3      	b.n	801d3e6 <__assert_func+0x12>
 801d3fe:	bf00      	nop
 801d400:	20000154 	.word	0x20000154
 801d404:	08020c40 	.word	0x08020c40
 801d408:	08020c4d 	.word	0x08020c4d
 801d40c:	08020c7b 	.word	0x08020c7b

0801d410 <atexit>:
 801d410:	2300      	movs	r3, #0
 801d412:	4601      	mov	r1, r0
 801d414:	461a      	mov	r2, r3
 801d416:	4618      	mov	r0, r3
 801d418:	f000 bac0 	b.w	801d99c <__register_exitproc>

0801d41c <malloc>:
 801d41c:	4b02      	ldr	r3, [pc, #8]	; (801d428 <malloc+0xc>)
 801d41e:	4601      	mov	r1, r0
 801d420:	6818      	ldr	r0, [r3, #0]
 801d422:	f000 b82b 	b.w	801d47c <_malloc_r>
 801d426:	bf00      	nop
 801d428:	20000154 	.word	0x20000154

0801d42c <free>:
 801d42c:	4b02      	ldr	r3, [pc, #8]	; (801d438 <free+0xc>)
 801d42e:	4601      	mov	r1, r0
 801d430:	6818      	ldr	r0, [r3, #0]
 801d432:	f000 bb11 	b.w	801da58 <_free_r>
 801d436:	bf00      	nop
 801d438:	20000154 	.word	0x20000154

0801d43c <sbrk_aligned>:
 801d43c:	b570      	push	{r4, r5, r6, lr}
 801d43e:	4e0e      	ldr	r6, [pc, #56]	; (801d478 <sbrk_aligned+0x3c>)
 801d440:	460c      	mov	r4, r1
 801d442:	6831      	ldr	r1, [r6, #0]
 801d444:	4605      	mov	r5, r0
 801d446:	b911      	cbnz	r1, 801d44e <sbrk_aligned+0x12>
 801d448:	f000 fa4a 	bl	801d8e0 <_sbrk_r>
 801d44c:	6030      	str	r0, [r6, #0]
 801d44e:	4621      	mov	r1, r4
 801d450:	4628      	mov	r0, r5
 801d452:	f000 fa45 	bl	801d8e0 <_sbrk_r>
 801d456:	1c43      	adds	r3, r0, #1
 801d458:	d00a      	beq.n	801d470 <sbrk_aligned+0x34>
 801d45a:	1cc4      	adds	r4, r0, #3
 801d45c:	f024 0403 	bic.w	r4, r4, #3
 801d460:	42a0      	cmp	r0, r4
 801d462:	d007      	beq.n	801d474 <sbrk_aligned+0x38>
 801d464:	1a21      	subs	r1, r4, r0
 801d466:	4628      	mov	r0, r5
 801d468:	f000 fa3a 	bl	801d8e0 <_sbrk_r>
 801d46c:	3001      	adds	r0, #1
 801d46e:	d101      	bne.n	801d474 <sbrk_aligned+0x38>
 801d470:	f04f 34ff 	mov.w	r4, #4294967295
 801d474:	4620      	mov	r0, r4
 801d476:	bd70      	pop	{r4, r5, r6, pc}
 801d478:	200136b0 	.word	0x200136b0

0801d47c <_malloc_r>:
 801d47c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801d480:	1ccd      	adds	r5, r1, #3
 801d482:	f025 0503 	bic.w	r5, r5, #3
 801d486:	3508      	adds	r5, #8
 801d488:	2d0c      	cmp	r5, #12
 801d48a:	bf38      	it	cc
 801d48c:	250c      	movcc	r5, #12
 801d48e:	2d00      	cmp	r5, #0
 801d490:	4607      	mov	r7, r0
 801d492:	db01      	blt.n	801d498 <_malloc_r+0x1c>
 801d494:	42a9      	cmp	r1, r5
 801d496:	d905      	bls.n	801d4a4 <_malloc_r+0x28>
 801d498:	230c      	movs	r3, #12
 801d49a:	603b      	str	r3, [r7, #0]
 801d49c:	2600      	movs	r6, #0
 801d49e:	4630      	mov	r0, r6
 801d4a0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801d4a4:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 801d578 <_malloc_r+0xfc>
 801d4a8:	f000 f868 	bl	801d57c <__malloc_lock>
 801d4ac:	f8d8 3000 	ldr.w	r3, [r8]
 801d4b0:	461c      	mov	r4, r3
 801d4b2:	bb5c      	cbnz	r4, 801d50c <_malloc_r+0x90>
 801d4b4:	4629      	mov	r1, r5
 801d4b6:	4638      	mov	r0, r7
 801d4b8:	f7ff ffc0 	bl	801d43c <sbrk_aligned>
 801d4bc:	1c43      	adds	r3, r0, #1
 801d4be:	4604      	mov	r4, r0
 801d4c0:	d155      	bne.n	801d56e <_malloc_r+0xf2>
 801d4c2:	f8d8 4000 	ldr.w	r4, [r8]
 801d4c6:	4626      	mov	r6, r4
 801d4c8:	2e00      	cmp	r6, #0
 801d4ca:	d145      	bne.n	801d558 <_malloc_r+0xdc>
 801d4cc:	2c00      	cmp	r4, #0
 801d4ce:	d048      	beq.n	801d562 <_malloc_r+0xe6>
 801d4d0:	6823      	ldr	r3, [r4, #0]
 801d4d2:	4631      	mov	r1, r6
 801d4d4:	4638      	mov	r0, r7
 801d4d6:	eb04 0903 	add.w	r9, r4, r3
 801d4da:	f000 fa01 	bl	801d8e0 <_sbrk_r>
 801d4de:	4581      	cmp	r9, r0
 801d4e0:	d13f      	bne.n	801d562 <_malloc_r+0xe6>
 801d4e2:	6821      	ldr	r1, [r4, #0]
 801d4e4:	1a6d      	subs	r5, r5, r1
 801d4e6:	4629      	mov	r1, r5
 801d4e8:	4638      	mov	r0, r7
 801d4ea:	f7ff ffa7 	bl	801d43c <sbrk_aligned>
 801d4ee:	3001      	adds	r0, #1
 801d4f0:	d037      	beq.n	801d562 <_malloc_r+0xe6>
 801d4f2:	6823      	ldr	r3, [r4, #0]
 801d4f4:	442b      	add	r3, r5
 801d4f6:	6023      	str	r3, [r4, #0]
 801d4f8:	f8d8 3000 	ldr.w	r3, [r8]
 801d4fc:	2b00      	cmp	r3, #0
 801d4fe:	d038      	beq.n	801d572 <_malloc_r+0xf6>
 801d500:	685a      	ldr	r2, [r3, #4]
 801d502:	42a2      	cmp	r2, r4
 801d504:	d12b      	bne.n	801d55e <_malloc_r+0xe2>
 801d506:	2200      	movs	r2, #0
 801d508:	605a      	str	r2, [r3, #4]
 801d50a:	e00f      	b.n	801d52c <_malloc_r+0xb0>
 801d50c:	6822      	ldr	r2, [r4, #0]
 801d50e:	1b52      	subs	r2, r2, r5
 801d510:	d41f      	bmi.n	801d552 <_malloc_r+0xd6>
 801d512:	2a0b      	cmp	r2, #11
 801d514:	d917      	bls.n	801d546 <_malloc_r+0xca>
 801d516:	1961      	adds	r1, r4, r5
 801d518:	42a3      	cmp	r3, r4
 801d51a:	6025      	str	r5, [r4, #0]
 801d51c:	bf18      	it	ne
 801d51e:	6059      	strne	r1, [r3, #4]
 801d520:	6863      	ldr	r3, [r4, #4]
 801d522:	bf08      	it	eq
 801d524:	f8c8 1000 	streq.w	r1, [r8]
 801d528:	5162      	str	r2, [r4, r5]
 801d52a:	604b      	str	r3, [r1, #4]
 801d52c:	4638      	mov	r0, r7
 801d52e:	f104 060b 	add.w	r6, r4, #11
 801d532:	f000 f829 	bl	801d588 <__malloc_unlock>
 801d536:	f026 0607 	bic.w	r6, r6, #7
 801d53a:	1d23      	adds	r3, r4, #4
 801d53c:	1af2      	subs	r2, r6, r3
 801d53e:	d0ae      	beq.n	801d49e <_malloc_r+0x22>
 801d540:	1b9b      	subs	r3, r3, r6
 801d542:	50a3      	str	r3, [r4, r2]
 801d544:	e7ab      	b.n	801d49e <_malloc_r+0x22>
 801d546:	42a3      	cmp	r3, r4
 801d548:	6862      	ldr	r2, [r4, #4]
 801d54a:	d1dd      	bne.n	801d508 <_malloc_r+0x8c>
 801d54c:	f8c8 2000 	str.w	r2, [r8]
 801d550:	e7ec      	b.n	801d52c <_malloc_r+0xb0>
 801d552:	4623      	mov	r3, r4
 801d554:	6864      	ldr	r4, [r4, #4]
 801d556:	e7ac      	b.n	801d4b2 <_malloc_r+0x36>
 801d558:	4634      	mov	r4, r6
 801d55a:	6876      	ldr	r6, [r6, #4]
 801d55c:	e7b4      	b.n	801d4c8 <_malloc_r+0x4c>
 801d55e:	4613      	mov	r3, r2
 801d560:	e7cc      	b.n	801d4fc <_malloc_r+0x80>
 801d562:	230c      	movs	r3, #12
 801d564:	603b      	str	r3, [r7, #0]
 801d566:	4638      	mov	r0, r7
 801d568:	f000 f80e 	bl	801d588 <__malloc_unlock>
 801d56c:	e797      	b.n	801d49e <_malloc_r+0x22>
 801d56e:	6025      	str	r5, [r4, #0]
 801d570:	e7dc      	b.n	801d52c <_malloc_r+0xb0>
 801d572:	605b      	str	r3, [r3, #4]
 801d574:	deff      	udf	#255	; 0xff
 801d576:	bf00      	nop
 801d578:	200136ac 	.word	0x200136ac

0801d57c <__malloc_lock>:
 801d57c:	4801      	ldr	r0, [pc, #4]	; (801d584 <__malloc_lock+0x8>)
 801d57e:	f000 b9fc 	b.w	801d97a <__retarget_lock_acquire_recursive>
 801d582:	bf00      	nop
 801d584:	200137f5 	.word	0x200137f5

0801d588 <__malloc_unlock>:
 801d588:	4801      	ldr	r0, [pc, #4]	; (801d590 <__malloc_unlock+0x8>)
 801d58a:	f000 b9f7 	b.w	801d97c <__retarget_lock_release_recursive>
 801d58e:	bf00      	nop
 801d590:	200137f5 	.word	0x200137f5

0801d594 <__cxa_atexit>:
 801d594:	b510      	push	{r4, lr}
 801d596:	4c05      	ldr	r4, [pc, #20]	; (801d5ac <__cxa_atexit+0x18>)
 801d598:	4613      	mov	r3, r2
 801d59a:	b12c      	cbz	r4, 801d5a8 <__cxa_atexit+0x14>
 801d59c:	460a      	mov	r2, r1
 801d59e:	4601      	mov	r1, r0
 801d5a0:	2002      	movs	r0, #2
 801d5a2:	f000 f9fb 	bl	801d99c <__register_exitproc>
 801d5a6:	bd10      	pop	{r4, pc}
 801d5a8:	4620      	mov	r0, r4
 801d5aa:	e7fc      	b.n	801d5a6 <__cxa_atexit+0x12>
 801d5ac:	0801d99d 	.word	0x0801d99d

0801d5b0 <std>:
 801d5b0:	2300      	movs	r3, #0
 801d5b2:	b510      	push	{r4, lr}
 801d5b4:	4604      	mov	r4, r0
 801d5b6:	e9c0 3300 	strd	r3, r3, [r0]
 801d5ba:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801d5be:	6083      	str	r3, [r0, #8]
 801d5c0:	8181      	strh	r1, [r0, #12]
 801d5c2:	6643      	str	r3, [r0, #100]	; 0x64
 801d5c4:	81c2      	strh	r2, [r0, #14]
 801d5c6:	6183      	str	r3, [r0, #24]
 801d5c8:	4619      	mov	r1, r3
 801d5ca:	2208      	movs	r2, #8
 801d5cc:	305c      	adds	r0, #92	; 0x5c
 801d5ce:	f000 f906 	bl	801d7de <memset>
 801d5d2:	4b0d      	ldr	r3, [pc, #52]	; (801d608 <std+0x58>)
 801d5d4:	6263      	str	r3, [r4, #36]	; 0x24
 801d5d6:	4b0d      	ldr	r3, [pc, #52]	; (801d60c <std+0x5c>)
 801d5d8:	62a3      	str	r3, [r4, #40]	; 0x28
 801d5da:	4b0d      	ldr	r3, [pc, #52]	; (801d610 <std+0x60>)
 801d5dc:	62e3      	str	r3, [r4, #44]	; 0x2c
 801d5de:	4b0d      	ldr	r3, [pc, #52]	; (801d614 <std+0x64>)
 801d5e0:	6323      	str	r3, [r4, #48]	; 0x30
 801d5e2:	4b0d      	ldr	r3, [pc, #52]	; (801d618 <std+0x68>)
 801d5e4:	6224      	str	r4, [r4, #32]
 801d5e6:	429c      	cmp	r4, r3
 801d5e8:	d006      	beq.n	801d5f8 <std+0x48>
 801d5ea:	f103 0268 	add.w	r2, r3, #104	; 0x68
 801d5ee:	4294      	cmp	r4, r2
 801d5f0:	d002      	beq.n	801d5f8 <std+0x48>
 801d5f2:	33d0      	adds	r3, #208	; 0xd0
 801d5f4:	429c      	cmp	r4, r3
 801d5f6:	d105      	bne.n	801d604 <std+0x54>
 801d5f8:	f104 0058 	add.w	r0, r4, #88	; 0x58
 801d5fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d600:	f000 b9ba 	b.w	801d978 <__retarget_lock_init_recursive>
 801d604:	bd10      	pop	{r4, pc}
 801d606:	bf00      	nop
 801d608:	0801d759 	.word	0x0801d759
 801d60c:	0801d77b 	.word	0x0801d77b
 801d610:	0801d7b3 	.word	0x0801d7b3
 801d614:	0801d7d7 	.word	0x0801d7d7
 801d618:	200136b4 	.word	0x200136b4

0801d61c <stdio_exit_handler>:
 801d61c:	4a02      	ldr	r2, [pc, #8]	; (801d628 <stdio_exit_handler+0xc>)
 801d61e:	4903      	ldr	r1, [pc, #12]	; (801d62c <stdio_exit_handler+0x10>)
 801d620:	4803      	ldr	r0, [pc, #12]	; (801d630 <stdio_exit_handler+0x14>)
 801d622:	f000 b87b 	b.w	801d71c <_fwalk_sglue>
 801d626:	bf00      	nop
 801d628:	200000fc 	.word	0x200000fc
 801d62c:	0801e1a5 	.word	0x0801e1a5
 801d630:	20000108 	.word	0x20000108

0801d634 <cleanup_stdio>:
 801d634:	6841      	ldr	r1, [r0, #4]
 801d636:	4b0c      	ldr	r3, [pc, #48]	; (801d668 <cleanup_stdio+0x34>)
 801d638:	4299      	cmp	r1, r3
 801d63a:	b510      	push	{r4, lr}
 801d63c:	4604      	mov	r4, r0
 801d63e:	d001      	beq.n	801d644 <cleanup_stdio+0x10>
 801d640:	f000 fdb0 	bl	801e1a4 <_fflush_r>
 801d644:	68a1      	ldr	r1, [r4, #8]
 801d646:	4b09      	ldr	r3, [pc, #36]	; (801d66c <cleanup_stdio+0x38>)
 801d648:	4299      	cmp	r1, r3
 801d64a:	d002      	beq.n	801d652 <cleanup_stdio+0x1e>
 801d64c:	4620      	mov	r0, r4
 801d64e:	f000 fda9 	bl	801e1a4 <_fflush_r>
 801d652:	68e1      	ldr	r1, [r4, #12]
 801d654:	4b06      	ldr	r3, [pc, #24]	; (801d670 <cleanup_stdio+0x3c>)
 801d656:	4299      	cmp	r1, r3
 801d658:	d004      	beq.n	801d664 <cleanup_stdio+0x30>
 801d65a:	4620      	mov	r0, r4
 801d65c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d660:	f000 bda0 	b.w	801e1a4 <_fflush_r>
 801d664:	bd10      	pop	{r4, pc}
 801d666:	bf00      	nop
 801d668:	200136b4 	.word	0x200136b4
 801d66c:	2001371c 	.word	0x2001371c
 801d670:	20013784 	.word	0x20013784

0801d674 <global_stdio_init.part.0>:
 801d674:	b510      	push	{r4, lr}
 801d676:	4b0b      	ldr	r3, [pc, #44]	; (801d6a4 <global_stdio_init.part.0+0x30>)
 801d678:	4c0b      	ldr	r4, [pc, #44]	; (801d6a8 <global_stdio_init.part.0+0x34>)
 801d67a:	4a0c      	ldr	r2, [pc, #48]	; (801d6ac <global_stdio_init.part.0+0x38>)
 801d67c:	601a      	str	r2, [r3, #0]
 801d67e:	4620      	mov	r0, r4
 801d680:	2200      	movs	r2, #0
 801d682:	2104      	movs	r1, #4
 801d684:	f7ff ff94 	bl	801d5b0 <std>
 801d688:	f104 0068 	add.w	r0, r4, #104	; 0x68
 801d68c:	2201      	movs	r2, #1
 801d68e:	2109      	movs	r1, #9
 801d690:	f7ff ff8e 	bl	801d5b0 <std>
 801d694:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 801d698:	2202      	movs	r2, #2
 801d69a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d69e:	2112      	movs	r1, #18
 801d6a0:	f7ff bf86 	b.w	801d5b0 <std>
 801d6a4:	200137ec 	.word	0x200137ec
 801d6a8:	200136b4 	.word	0x200136b4
 801d6ac:	0801d61d 	.word	0x0801d61d

0801d6b0 <__sfp_lock_acquire>:
 801d6b0:	4801      	ldr	r0, [pc, #4]	; (801d6b8 <__sfp_lock_acquire+0x8>)
 801d6b2:	f000 b962 	b.w	801d97a <__retarget_lock_acquire_recursive>
 801d6b6:	bf00      	nop
 801d6b8:	200137f6 	.word	0x200137f6

0801d6bc <__sfp_lock_release>:
 801d6bc:	4801      	ldr	r0, [pc, #4]	; (801d6c4 <__sfp_lock_release+0x8>)
 801d6be:	f000 b95d 	b.w	801d97c <__retarget_lock_release_recursive>
 801d6c2:	bf00      	nop
 801d6c4:	200137f6 	.word	0x200137f6

0801d6c8 <__sinit>:
 801d6c8:	b510      	push	{r4, lr}
 801d6ca:	4604      	mov	r4, r0
 801d6cc:	f7ff fff0 	bl	801d6b0 <__sfp_lock_acquire>
 801d6d0:	6a23      	ldr	r3, [r4, #32]
 801d6d2:	b11b      	cbz	r3, 801d6dc <__sinit+0x14>
 801d6d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d6d8:	f7ff bff0 	b.w	801d6bc <__sfp_lock_release>
 801d6dc:	4b04      	ldr	r3, [pc, #16]	; (801d6f0 <__sinit+0x28>)
 801d6de:	6223      	str	r3, [r4, #32]
 801d6e0:	4b04      	ldr	r3, [pc, #16]	; (801d6f4 <__sinit+0x2c>)
 801d6e2:	681b      	ldr	r3, [r3, #0]
 801d6e4:	2b00      	cmp	r3, #0
 801d6e6:	d1f5      	bne.n	801d6d4 <__sinit+0xc>
 801d6e8:	f7ff ffc4 	bl	801d674 <global_stdio_init.part.0>
 801d6ec:	e7f2      	b.n	801d6d4 <__sinit+0xc>
 801d6ee:	bf00      	nop
 801d6f0:	0801d635 	.word	0x0801d635
 801d6f4:	200137ec 	.word	0x200137ec

0801d6f8 <fiprintf>:
 801d6f8:	b40e      	push	{r1, r2, r3}
 801d6fa:	b503      	push	{r0, r1, lr}
 801d6fc:	4601      	mov	r1, r0
 801d6fe:	ab03      	add	r3, sp, #12
 801d700:	4805      	ldr	r0, [pc, #20]	; (801d718 <fiprintf+0x20>)
 801d702:	f853 2b04 	ldr.w	r2, [r3], #4
 801d706:	6800      	ldr	r0, [r0, #0]
 801d708:	9301      	str	r3, [sp, #4]
 801d70a:	f000 fa1b 	bl	801db44 <_vfiprintf_r>
 801d70e:	b002      	add	sp, #8
 801d710:	f85d eb04 	ldr.w	lr, [sp], #4
 801d714:	b003      	add	sp, #12
 801d716:	4770      	bx	lr
 801d718:	20000154 	.word	0x20000154

0801d71c <_fwalk_sglue>:
 801d71c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801d720:	4607      	mov	r7, r0
 801d722:	4688      	mov	r8, r1
 801d724:	4614      	mov	r4, r2
 801d726:	2600      	movs	r6, #0
 801d728:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801d72c:	f1b9 0901 	subs.w	r9, r9, #1
 801d730:	d505      	bpl.n	801d73e <_fwalk_sglue+0x22>
 801d732:	6824      	ldr	r4, [r4, #0]
 801d734:	2c00      	cmp	r4, #0
 801d736:	d1f7      	bne.n	801d728 <_fwalk_sglue+0xc>
 801d738:	4630      	mov	r0, r6
 801d73a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801d73e:	89ab      	ldrh	r3, [r5, #12]
 801d740:	2b01      	cmp	r3, #1
 801d742:	d907      	bls.n	801d754 <_fwalk_sglue+0x38>
 801d744:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801d748:	3301      	adds	r3, #1
 801d74a:	d003      	beq.n	801d754 <_fwalk_sglue+0x38>
 801d74c:	4629      	mov	r1, r5
 801d74e:	4638      	mov	r0, r7
 801d750:	47c0      	blx	r8
 801d752:	4306      	orrs	r6, r0
 801d754:	3568      	adds	r5, #104	; 0x68
 801d756:	e7e9      	b.n	801d72c <_fwalk_sglue+0x10>

0801d758 <__sread>:
 801d758:	b510      	push	{r4, lr}
 801d75a:	460c      	mov	r4, r1
 801d75c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801d760:	f000 f898 	bl	801d894 <_read_r>
 801d764:	2800      	cmp	r0, #0
 801d766:	bfab      	itete	ge
 801d768:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801d76a:	89a3      	ldrhlt	r3, [r4, #12]
 801d76c:	181b      	addge	r3, r3, r0
 801d76e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801d772:	bfac      	ite	ge
 801d774:	6563      	strge	r3, [r4, #84]	; 0x54
 801d776:	81a3      	strhlt	r3, [r4, #12]
 801d778:	bd10      	pop	{r4, pc}

0801d77a <__swrite>:
 801d77a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801d77e:	461f      	mov	r7, r3
 801d780:	898b      	ldrh	r3, [r1, #12]
 801d782:	05db      	lsls	r3, r3, #23
 801d784:	4605      	mov	r5, r0
 801d786:	460c      	mov	r4, r1
 801d788:	4616      	mov	r6, r2
 801d78a:	d505      	bpl.n	801d798 <__swrite+0x1e>
 801d78c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801d790:	2302      	movs	r3, #2
 801d792:	2200      	movs	r2, #0
 801d794:	f000 f86c 	bl	801d870 <_lseek_r>
 801d798:	89a3      	ldrh	r3, [r4, #12]
 801d79a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801d79e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801d7a2:	81a3      	strh	r3, [r4, #12]
 801d7a4:	4632      	mov	r2, r6
 801d7a6:	463b      	mov	r3, r7
 801d7a8:	4628      	mov	r0, r5
 801d7aa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801d7ae:	f000 b8a7 	b.w	801d900 <_write_r>

0801d7b2 <__sseek>:
 801d7b2:	b510      	push	{r4, lr}
 801d7b4:	460c      	mov	r4, r1
 801d7b6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801d7ba:	f000 f859 	bl	801d870 <_lseek_r>
 801d7be:	1c43      	adds	r3, r0, #1
 801d7c0:	89a3      	ldrh	r3, [r4, #12]
 801d7c2:	bf15      	itete	ne
 801d7c4:	6560      	strne	r0, [r4, #84]	; 0x54
 801d7c6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801d7ca:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801d7ce:	81a3      	strheq	r3, [r4, #12]
 801d7d0:	bf18      	it	ne
 801d7d2:	81a3      	strhne	r3, [r4, #12]
 801d7d4:	bd10      	pop	{r4, pc}

0801d7d6 <__sclose>:
 801d7d6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801d7da:	f000 b839 	b.w	801d850 <_close_r>

0801d7de <memset>:
 801d7de:	4402      	add	r2, r0
 801d7e0:	4603      	mov	r3, r0
 801d7e2:	4293      	cmp	r3, r2
 801d7e4:	d100      	bne.n	801d7e8 <memset+0xa>
 801d7e6:	4770      	bx	lr
 801d7e8:	f803 1b01 	strb.w	r1, [r3], #1
 801d7ec:	e7f9      	b.n	801d7e2 <memset+0x4>

0801d7ee <_raise_r>:
 801d7ee:	291f      	cmp	r1, #31
 801d7f0:	b538      	push	{r3, r4, r5, lr}
 801d7f2:	4604      	mov	r4, r0
 801d7f4:	460d      	mov	r5, r1
 801d7f6:	d904      	bls.n	801d802 <_raise_r+0x14>
 801d7f8:	2316      	movs	r3, #22
 801d7fa:	6003      	str	r3, [r0, #0]
 801d7fc:	f04f 30ff 	mov.w	r0, #4294967295
 801d800:	bd38      	pop	{r3, r4, r5, pc}
 801d802:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 801d804:	b112      	cbz	r2, 801d80c <_raise_r+0x1e>
 801d806:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801d80a:	b94b      	cbnz	r3, 801d820 <_raise_r+0x32>
 801d80c:	4620      	mov	r0, r4
 801d80e:	f000 f865 	bl	801d8dc <_getpid_r>
 801d812:	462a      	mov	r2, r5
 801d814:	4601      	mov	r1, r0
 801d816:	4620      	mov	r0, r4
 801d818:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801d81c:	f000 b84c 	b.w	801d8b8 <_kill_r>
 801d820:	2b01      	cmp	r3, #1
 801d822:	d00a      	beq.n	801d83a <_raise_r+0x4c>
 801d824:	1c59      	adds	r1, r3, #1
 801d826:	d103      	bne.n	801d830 <_raise_r+0x42>
 801d828:	2316      	movs	r3, #22
 801d82a:	6003      	str	r3, [r0, #0]
 801d82c:	2001      	movs	r0, #1
 801d82e:	e7e7      	b.n	801d800 <_raise_r+0x12>
 801d830:	2400      	movs	r4, #0
 801d832:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 801d836:	4628      	mov	r0, r5
 801d838:	4798      	blx	r3
 801d83a:	2000      	movs	r0, #0
 801d83c:	e7e0      	b.n	801d800 <_raise_r+0x12>
	...

0801d840 <raise>:
 801d840:	4b02      	ldr	r3, [pc, #8]	; (801d84c <raise+0xc>)
 801d842:	4601      	mov	r1, r0
 801d844:	6818      	ldr	r0, [r3, #0]
 801d846:	f7ff bfd2 	b.w	801d7ee <_raise_r>
 801d84a:	bf00      	nop
 801d84c:	20000154 	.word	0x20000154

0801d850 <_close_r>:
 801d850:	b538      	push	{r3, r4, r5, lr}
 801d852:	4d06      	ldr	r5, [pc, #24]	; (801d86c <_close_r+0x1c>)
 801d854:	2300      	movs	r3, #0
 801d856:	4604      	mov	r4, r0
 801d858:	4608      	mov	r0, r1
 801d85a:	602b      	str	r3, [r5, #0]
 801d85c:	f7e4 fe0a 	bl	8002474 <_close>
 801d860:	1c43      	adds	r3, r0, #1
 801d862:	d102      	bne.n	801d86a <_close_r+0x1a>
 801d864:	682b      	ldr	r3, [r5, #0]
 801d866:	b103      	cbz	r3, 801d86a <_close_r+0x1a>
 801d868:	6023      	str	r3, [r4, #0]
 801d86a:	bd38      	pop	{r3, r4, r5, pc}
 801d86c:	200137f0 	.word	0x200137f0

0801d870 <_lseek_r>:
 801d870:	b538      	push	{r3, r4, r5, lr}
 801d872:	4d07      	ldr	r5, [pc, #28]	; (801d890 <_lseek_r+0x20>)
 801d874:	4604      	mov	r4, r0
 801d876:	4608      	mov	r0, r1
 801d878:	4611      	mov	r1, r2
 801d87a:	2200      	movs	r2, #0
 801d87c:	602a      	str	r2, [r5, #0]
 801d87e:	461a      	mov	r2, r3
 801d880:	f7e4 fe02 	bl	8002488 <_lseek>
 801d884:	1c43      	adds	r3, r0, #1
 801d886:	d102      	bne.n	801d88e <_lseek_r+0x1e>
 801d888:	682b      	ldr	r3, [r5, #0]
 801d88a:	b103      	cbz	r3, 801d88e <_lseek_r+0x1e>
 801d88c:	6023      	str	r3, [r4, #0]
 801d88e:	bd38      	pop	{r3, r4, r5, pc}
 801d890:	200137f0 	.word	0x200137f0

0801d894 <_read_r>:
 801d894:	b538      	push	{r3, r4, r5, lr}
 801d896:	4d07      	ldr	r5, [pc, #28]	; (801d8b4 <_read_r+0x20>)
 801d898:	4604      	mov	r4, r0
 801d89a:	4608      	mov	r0, r1
 801d89c:	4611      	mov	r1, r2
 801d89e:	2200      	movs	r2, #0
 801d8a0:	602a      	str	r2, [r5, #0]
 801d8a2:	461a      	mov	r2, r3
 801d8a4:	f7e4 fdca 	bl	800243c <_read>
 801d8a8:	1c43      	adds	r3, r0, #1
 801d8aa:	d102      	bne.n	801d8b2 <_read_r+0x1e>
 801d8ac:	682b      	ldr	r3, [r5, #0]
 801d8ae:	b103      	cbz	r3, 801d8b2 <_read_r+0x1e>
 801d8b0:	6023      	str	r3, [r4, #0]
 801d8b2:	bd38      	pop	{r3, r4, r5, pc}
 801d8b4:	200137f0 	.word	0x200137f0

0801d8b8 <_kill_r>:
 801d8b8:	b538      	push	{r3, r4, r5, lr}
 801d8ba:	4d07      	ldr	r5, [pc, #28]	; (801d8d8 <_kill_r+0x20>)
 801d8bc:	2300      	movs	r3, #0
 801d8be:	4604      	mov	r4, r0
 801d8c0:	4608      	mov	r0, r1
 801d8c2:	4611      	mov	r1, r2
 801d8c4:	602b      	str	r3, [r5, #0]
 801d8c6:	f7e4 fdab 	bl	8002420 <_kill>
 801d8ca:	1c43      	adds	r3, r0, #1
 801d8cc:	d102      	bne.n	801d8d4 <_kill_r+0x1c>
 801d8ce:	682b      	ldr	r3, [r5, #0]
 801d8d0:	b103      	cbz	r3, 801d8d4 <_kill_r+0x1c>
 801d8d2:	6023      	str	r3, [r4, #0]
 801d8d4:	bd38      	pop	{r3, r4, r5, pc}
 801d8d6:	bf00      	nop
 801d8d8:	200137f0 	.word	0x200137f0

0801d8dc <_getpid_r>:
 801d8dc:	f7e4 bd9e 	b.w	800241c <_getpid>

0801d8e0 <_sbrk_r>:
 801d8e0:	b538      	push	{r3, r4, r5, lr}
 801d8e2:	4d06      	ldr	r5, [pc, #24]	; (801d8fc <_sbrk_r+0x1c>)
 801d8e4:	2300      	movs	r3, #0
 801d8e6:	4604      	mov	r4, r0
 801d8e8:	4608      	mov	r0, r1
 801d8ea:	602b      	str	r3, [r5, #0]
 801d8ec:	f7e4 fdce 	bl	800248c <_sbrk>
 801d8f0:	1c43      	adds	r3, r0, #1
 801d8f2:	d102      	bne.n	801d8fa <_sbrk_r+0x1a>
 801d8f4:	682b      	ldr	r3, [r5, #0]
 801d8f6:	b103      	cbz	r3, 801d8fa <_sbrk_r+0x1a>
 801d8f8:	6023      	str	r3, [r4, #0]
 801d8fa:	bd38      	pop	{r3, r4, r5, pc}
 801d8fc:	200137f0 	.word	0x200137f0

0801d900 <_write_r>:
 801d900:	b538      	push	{r3, r4, r5, lr}
 801d902:	4d07      	ldr	r5, [pc, #28]	; (801d920 <_write_r+0x20>)
 801d904:	4604      	mov	r4, r0
 801d906:	4608      	mov	r0, r1
 801d908:	4611      	mov	r1, r2
 801d90a:	2200      	movs	r2, #0
 801d90c:	602a      	str	r2, [r5, #0]
 801d90e:	461a      	mov	r2, r3
 801d910:	f7e4 fda2 	bl	8002458 <_write>
 801d914:	1c43      	adds	r3, r0, #1
 801d916:	d102      	bne.n	801d91e <_write_r+0x1e>
 801d918:	682b      	ldr	r3, [r5, #0]
 801d91a:	b103      	cbz	r3, 801d91e <_write_r+0x1e>
 801d91c:	6023      	str	r3, [r4, #0]
 801d91e:	bd38      	pop	{r3, r4, r5, pc}
 801d920:	200137f0 	.word	0x200137f0

0801d924 <__errno>:
 801d924:	4b01      	ldr	r3, [pc, #4]	; (801d92c <__errno+0x8>)
 801d926:	6818      	ldr	r0, [r3, #0]
 801d928:	4770      	bx	lr
 801d92a:	bf00      	nop
 801d92c:	20000154 	.word	0x20000154

0801d930 <__libc_init_array>:
 801d930:	b570      	push	{r4, r5, r6, lr}
 801d932:	4d0d      	ldr	r5, [pc, #52]	; (801d968 <__libc_init_array+0x38>)
 801d934:	4c0d      	ldr	r4, [pc, #52]	; (801d96c <__libc_init_array+0x3c>)
 801d936:	1b64      	subs	r4, r4, r5
 801d938:	10a4      	asrs	r4, r4, #2
 801d93a:	2600      	movs	r6, #0
 801d93c:	42a6      	cmp	r6, r4
 801d93e:	d109      	bne.n	801d954 <__libc_init_array+0x24>
 801d940:	4d0b      	ldr	r5, [pc, #44]	; (801d970 <__libc_init_array+0x40>)
 801d942:	4c0c      	ldr	r4, [pc, #48]	; (801d974 <__libc_init_array+0x44>)
 801d944:	f000 fd70 	bl	801e428 <_init>
 801d948:	1b64      	subs	r4, r4, r5
 801d94a:	10a4      	asrs	r4, r4, #2
 801d94c:	2600      	movs	r6, #0
 801d94e:	42a6      	cmp	r6, r4
 801d950:	d105      	bne.n	801d95e <__libc_init_array+0x2e>
 801d952:	bd70      	pop	{r4, r5, r6, pc}
 801d954:	f855 3b04 	ldr.w	r3, [r5], #4
 801d958:	4798      	blx	r3
 801d95a:	3601      	adds	r6, #1
 801d95c:	e7ee      	b.n	801d93c <__libc_init_array+0xc>
 801d95e:	f855 3b04 	ldr.w	r3, [r5], #4
 801d962:	4798      	blx	r3
 801d964:	3601      	adds	r6, #1
 801d966:	e7f2      	b.n	801d94e <__libc_init_array+0x1e>
 801d968:	0817a434 	.word	0x0817a434
 801d96c:	0817a434 	.word	0x0817a434
 801d970:	0817a434 	.word	0x0817a434
 801d974:	0817a448 	.word	0x0817a448

0801d978 <__retarget_lock_init_recursive>:
 801d978:	4770      	bx	lr

0801d97a <__retarget_lock_acquire_recursive>:
 801d97a:	4770      	bx	lr

0801d97c <__retarget_lock_release_recursive>:
 801d97c:	4770      	bx	lr

0801d97e <memcpy>:
 801d97e:	440a      	add	r2, r1
 801d980:	4291      	cmp	r1, r2
 801d982:	f100 33ff 	add.w	r3, r0, #4294967295
 801d986:	d100      	bne.n	801d98a <memcpy+0xc>
 801d988:	4770      	bx	lr
 801d98a:	b510      	push	{r4, lr}
 801d98c:	f811 4b01 	ldrb.w	r4, [r1], #1
 801d990:	f803 4f01 	strb.w	r4, [r3, #1]!
 801d994:	4291      	cmp	r1, r2
 801d996:	d1f9      	bne.n	801d98c <memcpy+0xe>
 801d998:	bd10      	pop	{r4, pc}
	...

0801d99c <__register_exitproc>:
 801d99c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801d9a0:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 801da54 <__register_exitproc+0xb8>
 801d9a4:	4606      	mov	r6, r0
 801d9a6:	f8d8 0000 	ldr.w	r0, [r8]
 801d9aa:	461f      	mov	r7, r3
 801d9ac:	460d      	mov	r5, r1
 801d9ae:	4691      	mov	r9, r2
 801d9b0:	f7ff ffe3 	bl	801d97a <__retarget_lock_acquire_recursive>
 801d9b4:	4b23      	ldr	r3, [pc, #140]	; (801da44 <__register_exitproc+0xa8>)
 801d9b6:	681c      	ldr	r4, [r3, #0]
 801d9b8:	b934      	cbnz	r4, 801d9c8 <__register_exitproc+0x2c>
 801d9ba:	4c23      	ldr	r4, [pc, #140]	; (801da48 <__register_exitproc+0xac>)
 801d9bc:	601c      	str	r4, [r3, #0]
 801d9be:	4b23      	ldr	r3, [pc, #140]	; (801da4c <__register_exitproc+0xb0>)
 801d9c0:	b113      	cbz	r3, 801d9c8 <__register_exitproc+0x2c>
 801d9c2:	681b      	ldr	r3, [r3, #0]
 801d9c4:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 801d9c8:	6863      	ldr	r3, [r4, #4]
 801d9ca:	2b1f      	cmp	r3, #31
 801d9cc:	dd07      	ble.n	801d9de <__register_exitproc+0x42>
 801d9ce:	f8d8 0000 	ldr.w	r0, [r8]
 801d9d2:	f7ff ffd3 	bl	801d97c <__retarget_lock_release_recursive>
 801d9d6:	f04f 30ff 	mov.w	r0, #4294967295
 801d9da:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801d9de:	b32e      	cbz	r6, 801da2c <__register_exitproc+0x90>
 801d9e0:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801d9e4:	b968      	cbnz	r0, 801da02 <__register_exitproc+0x66>
 801d9e6:	4b1a      	ldr	r3, [pc, #104]	; (801da50 <__register_exitproc+0xb4>)
 801d9e8:	2b00      	cmp	r3, #0
 801d9ea:	d0f0      	beq.n	801d9ce <__register_exitproc+0x32>
 801d9ec:	f44f 7084 	mov.w	r0, #264	; 0x108
 801d9f0:	f7ff fd14 	bl	801d41c <malloc>
 801d9f4:	2800      	cmp	r0, #0
 801d9f6:	d0ea      	beq.n	801d9ce <__register_exitproc+0x32>
 801d9f8:	2300      	movs	r3, #0
 801d9fa:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 801d9fe:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 801da02:	6863      	ldr	r3, [r4, #4]
 801da04:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 801da08:	2201      	movs	r2, #1
 801da0a:	409a      	lsls	r2, r3
 801da0c:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 801da10:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 801da14:	4313      	orrs	r3, r2
 801da16:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 801da1a:	2e02      	cmp	r6, #2
 801da1c:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 801da20:	bf02      	ittt	eq
 801da22:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 801da26:	4313      	orreq	r3, r2
 801da28:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 801da2c:	6863      	ldr	r3, [r4, #4]
 801da2e:	f8d8 0000 	ldr.w	r0, [r8]
 801da32:	1c5a      	adds	r2, r3, #1
 801da34:	3302      	adds	r3, #2
 801da36:	6062      	str	r2, [r4, #4]
 801da38:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 801da3c:	f7ff ff9e 	bl	801d97c <__retarget_lock_release_recursive>
 801da40:	2000      	movs	r0, #0
 801da42:	e7ca      	b.n	801d9da <__register_exitproc+0x3e>
 801da44:	20013884 	.word	0x20013884
 801da48:	200137f8 	.word	0x200137f8
 801da4c:	08020c7c 	.word	0x08020c7c
 801da50:	0801d41d 	.word	0x0801d41d
 801da54:	20000158 	.word	0x20000158

0801da58 <_free_r>:
 801da58:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801da5a:	2900      	cmp	r1, #0
 801da5c:	d044      	beq.n	801dae8 <_free_r+0x90>
 801da5e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801da62:	9001      	str	r0, [sp, #4]
 801da64:	2b00      	cmp	r3, #0
 801da66:	f1a1 0404 	sub.w	r4, r1, #4
 801da6a:	bfb8      	it	lt
 801da6c:	18e4      	addlt	r4, r4, r3
 801da6e:	f7ff fd85 	bl	801d57c <__malloc_lock>
 801da72:	4a1e      	ldr	r2, [pc, #120]	; (801daec <_free_r+0x94>)
 801da74:	9801      	ldr	r0, [sp, #4]
 801da76:	6813      	ldr	r3, [r2, #0]
 801da78:	b933      	cbnz	r3, 801da88 <_free_r+0x30>
 801da7a:	6063      	str	r3, [r4, #4]
 801da7c:	6014      	str	r4, [r2, #0]
 801da7e:	b003      	add	sp, #12
 801da80:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801da84:	f7ff bd80 	b.w	801d588 <__malloc_unlock>
 801da88:	42a3      	cmp	r3, r4
 801da8a:	d908      	bls.n	801da9e <_free_r+0x46>
 801da8c:	6825      	ldr	r5, [r4, #0]
 801da8e:	1961      	adds	r1, r4, r5
 801da90:	428b      	cmp	r3, r1
 801da92:	bf01      	itttt	eq
 801da94:	6819      	ldreq	r1, [r3, #0]
 801da96:	685b      	ldreq	r3, [r3, #4]
 801da98:	1949      	addeq	r1, r1, r5
 801da9a:	6021      	streq	r1, [r4, #0]
 801da9c:	e7ed      	b.n	801da7a <_free_r+0x22>
 801da9e:	461a      	mov	r2, r3
 801daa0:	685b      	ldr	r3, [r3, #4]
 801daa2:	b10b      	cbz	r3, 801daa8 <_free_r+0x50>
 801daa4:	42a3      	cmp	r3, r4
 801daa6:	d9fa      	bls.n	801da9e <_free_r+0x46>
 801daa8:	6811      	ldr	r1, [r2, #0]
 801daaa:	1855      	adds	r5, r2, r1
 801daac:	42a5      	cmp	r5, r4
 801daae:	d10b      	bne.n	801dac8 <_free_r+0x70>
 801dab0:	6824      	ldr	r4, [r4, #0]
 801dab2:	4421      	add	r1, r4
 801dab4:	1854      	adds	r4, r2, r1
 801dab6:	42a3      	cmp	r3, r4
 801dab8:	6011      	str	r1, [r2, #0]
 801daba:	d1e0      	bne.n	801da7e <_free_r+0x26>
 801dabc:	681c      	ldr	r4, [r3, #0]
 801dabe:	685b      	ldr	r3, [r3, #4]
 801dac0:	6053      	str	r3, [r2, #4]
 801dac2:	440c      	add	r4, r1
 801dac4:	6014      	str	r4, [r2, #0]
 801dac6:	e7da      	b.n	801da7e <_free_r+0x26>
 801dac8:	d902      	bls.n	801dad0 <_free_r+0x78>
 801daca:	230c      	movs	r3, #12
 801dacc:	6003      	str	r3, [r0, #0]
 801dace:	e7d6      	b.n	801da7e <_free_r+0x26>
 801dad0:	6825      	ldr	r5, [r4, #0]
 801dad2:	1961      	adds	r1, r4, r5
 801dad4:	428b      	cmp	r3, r1
 801dad6:	bf04      	itt	eq
 801dad8:	6819      	ldreq	r1, [r3, #0]
 801dada:	685b      	ldreq	r3, [r3, #4]
 801dadc:	6063      	str	r3, [r4, #4]
 801dade:	bf04      	itt	eq
 801dae0:	1949      	addeq	r1, r1, r5
 801dae2:	6021      	streq	r1, [r4, #0]
 801dae4:	6054      	str	r4, [r2, #4]
 801dae6:	e7ca      	b.n	801da7e <_free_r+0x26>
 801dae8:	b003      	add	sp, #12
 801daea:	bd30      	pop	{r4, r5, pc}
 801daec:	200136ac 	.word	0x200136ac

0801daf0 <__sfputc_r>:
 801daf0:	6893      	ldr	r3, [r2, #8]
 801daf2:	3b01      	subs	r3, #1
 801daf4:	2b00      	cmp	r3, #0
 801daf6:	b410      	push	{r4}
 801daf8:	6093      	str	r3, [r2, #8]
 801dafa:	da08      	bge.n	801db0e <__sfputc_r+0x1e>
 801dafc:	6994      	ldr	r4, [r2, #24]
 801dafe:	42a3      	cmp	r3, r4
 801db00:	db01      	blt.n	801db06 <__sfputc_r+0x16>
 801db02:	290a      	cmp	r1, #10
 801db04:	d103      	bne.n	801db0e <__sfputc_r+0x1e>
 801db06:	f85d 4b04 	ldr.w	r4, [sp], #4
 801db0a:	f000 bb73 	b.w	801e1f4 <__swbuf_r>
 801db0e:	6813      	ldr	r3, [r2, #0]
 801db10:	1c58      	adds	r0, r3, #1
 801db12:	6010      	str	r0, [r2, #0]
 801db14:	7019      	strb	r1, [r3, #0]
 801db16:	4608      	mov	r0, r1
 801db18:	f85d 4b04 	ldr.w	r4, [sp], #4
 801db1c:	4770      	bx	lr

0801db1e <__sfputs_r>:
 801db1e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801db20:	4606      	mov	r6, r0
 801db22:	460f      	mov	r7, r1
 801db24:	4614      	mov	r4, r2
 801db26:	18d5      	adds	r5, r2, r3
 801db28:	42ac      	cmp	r4, r5
 801db2a:	d101      	bne.n	801db30 <__sfputs_r+0x12>
 801db2c:	2000      	movs	r0, #0
 801db2e:	e007      	b.n	801db40 <__sfputs_r+0x22>
 801db30:	f814 1b01 	ldrb.w	r1, [r4], #1
 801db34:	463a      	mov	r2, r7
 801db36:	4630      	mov	r0, r6
 801db38:	f7ff ffda 	bl	801daf0 <__sfputc_r>
 801db3c:	1c43      	adds	r3, r0, #1
 801db3e:	d1f3      	bne.n	801db28 <__sfputs_r+0xa>
 801db40:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801db44 <_vfiprintf_r>:
 801db44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801db48:	460d      	mov	r5, r1
 801db4a:	b09d      	sub	sp, #116	; 0x74
 801db4c:	4614      	mov	r4, r2
 801db4e:	4698      	mov	r8, r3
 801db50:	4606      	mov	r6, r0
 801db52:	b118      	cbz	r0, 801db5c <_vfiprintf_r+0x18>
 801db54:	6a03      	ldr	r3, [r0, #32]
 801db56:	b90b      	cbnz	r3, 801db5c <_vfiprintf_r+0x18>
 801db58:	f7ff fdb6 	bl	801d6c8 <__sinit>
 801db5c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801db5e:	07d9      	lsls	r1, r3, #31
 801db60:	d405      	bmi.n	801db6e <_vfiprintf_r+0x2a>
 801db62:	89ab      	ldrh	r3, [r5, #12]
 801db64:	059a      	lsls	r2, r3, #22
 801db66:	d402      	bmi.n	801db6e <_vfiprintf_r+0x2a>
 801db68:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801db6a:	f7ff ff06 	bl	801d97a <__retarget_lock_acquire_recursive>
 801db6e:	89ab      	ldrh	r3, [r5, #12]
 801db70:	071b      	lsls	r3, r3, #28
 801db72:	d501      	bpl.n	801db78 <_vfiprintf_r+0x34>
 801db74:	692b      	ldr	r3, [r5, #16]
 801db76:	b99b      	cbnz	r3, 801dba0 <_vfiprintf_r+0x5c>
 801db78:	4629      	mov	r1, r5
 801db7a:	4630      	mov	r0, r6
 801db7c:	f000 fb78 	bl	801e270 <__swsetup_r>
 801db80:	b170      	cbz	r0, 801dba0 <_vfiprintf_r+0x5c>
 801db82:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801db84:	07dc      	lsls	r4, r3, #31
 801db86:	d504      	bpl.n	801db92 <_vfiprintf_r+0x4e>
 801db88:	f04f 30ff 	mov.w	r0, #4294967295
 801db8c:	b01d      	add	sp, #116	; 0x74
 801db8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801db92:	89ab      	ldrh	r3, [r5, #12]
 801db94:	0598      	lsls	r0, r3, #22
 801db96:	d4f7      	bmi.n	801db88 <_vfiprintf_r+0x44>
 801db98:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801db9a:	f7ff feef 	bl	801d97c <__retarget_lock_release_recursive>
 801db9e:	e7f3      	b.n	801db88 <_vfiprintf_r+0x44>
 801dba0:	2300      	movs	r3, #0
 801dba2:	9309      	str	r3, [sp, #36]	; 0x24
 801dba4:	2320      	movs	r3, #32
 801dba6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801dbaa:	f8cd 800c 	str.w	r8, [sp, #12]
 801dbae:	2330      	movs	r3, #48	; 0x30
 801dbb0:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 801dd64 <_vfiprintf_r+0x220>
 801dbb4:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801dbb8:	f04f 0901 	mov.w	r9, #1
 801dbbc:	4623      	mov	r3, r4
 801dbbe:	469a      	mov	sl, r3
 801dbc0:	f813 2b01 	ldrb.w	r2, [r3], #1
 801dbc4:	b10a      	cbz	r2, 801dbca <_vfiprintf_r+0x86>
 801dbc6:	2a25      	cmp	r2, #37	; 0x25
 801dbc8:	d1f9      	bne.n	801dbbe <_vfiprintf_r+0x7a>
 801dbca:	ebba 0b04 	subs.w	fp, sl, r4
 801dbce:	d00b      	beq.n	801dbe8 <_vfiprintf_r+0xa4>
 801dbd0:	465b      	mov	r3, fp
 801dbd2:	4622      	mov	r2, r4
 801dbd4:	4629      	mov	r1, r5
 801dbd6:	4630      	mov	r0, r6
 801dbd8:	f7ff ffa1 	bl	801db1e <__sfputs_r>
 801dbdc:	3001      	adds	r0, #1
 801dbde:	f000 80a9 	beq.w	801dd34 <_vfiprintf_r+0x1f0>
 801dbe2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801dbe4:	445a      	add	r2, fp
 801dbe6:	9209      	str	r2, [sp, #36]	; 0x24
 801dbe8:	f89a 3000 	ldrb.w	r3, [sl]
 801dbec:	2b00      	cmp	r3, #0
 801dbee:	f000 80a1 	beq.w	801dd34 <_vfiprintf_r+0x1f0>
 801dbf2:	2300      	movs	r3, #0
 801dbf4:	f04f 32ff 	mov.w	r2, #4294967295
 801dbf8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801dbfc:	f10a 0a01 	add.w	sl, sl, #1
 801dc00:	9304      	str	r3, [sp, #16]
 801dc02:	9307      	str	r3, [sp, #28]
 801dc04:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801dc08:	931a      	str	r3, [sp, #104]	; 0x68
 801dc0a:	4654      	mov	r4, sl
 801dc0c:	2205      	movs	r2, #5
 801dc0e:	f814 1b01 	ldrb.w	r1, [r4], #1
 801dc12:	4854      	ldr	r0, [pc, #336]	; (801dd64 <_vfiprintf_r+0x220>)
 801dc14:	f7e2 faec 	bl	80001f0 <memchr>
 801dc18:	9a04      	ldr	r2, [sp, #16]
 801dc1a:	b9d8      	cbnz	r0, 801dc54 <_vfiprintf_r+0x110>
 801dc1c:	06d1      	lsls	r1, r2, #27
 801dc1e:	bf44      	itt	mi
 801dc20:	2320      	movmi	r3, #32
 801dc22:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801dc26:	0713      	lsls	r3, r2, #28
 801dc28:	bf44      	itt	mi
 801dc2a:	232b      	movmi	r3, #43	; 0x2b
 801dc2c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801dc30:	f89a 3000 	ldrb.w	r3, [sl]
 801dc34:	2b2a      	cmp	r3, #42	; 0x2a
 801dc36:	d015      	beq.n	801dc64 <_vfiprintf_r+0x120>
 801dc38:	9a07      	ldr	r2, [sp, #28]
 801dc3a:	4654      	mov	r4, sl
 801dc3c:	2000      	movs	r0, #0
 801dc3e:	f04f 0c0a 	mov.w	ip, #10
 801dc42:	4621      	mov	r1, r4
 801dc44:	f811 3b01 	ldrb.w	r3, [r1], #1
 801dc48:	3b30      	subs	r3, #48	; 0x30
 801dc4a:	2b09      	cmp	r3, #9
 801dc4c:	d94d      	bls.n	801dcea <_vfiprintf_r+0x1a6>
 801dc4e:	b1b0      	cbz	r0, 801dc7e <_vfiprintf_r+0x13a>
 801dc50:	9207      	str	r2, [sp, #28]
 801dc52:	e014      	b.n	801dc7e <_vfiprintf_r+0x13a>
 801dc54:	eba0 0308 	sub.w	r3, r0, r8
 801dc58:	fa09 f303 	lsl.w	r3, r9, r3
 801dc5c:	4313      	orrs	r3, r2
 801dc5e:	9304      	str	r3, [sp, #16]
 801dc60:	46a2      	mov	sl, r4
 801dc62:	e7d2      	b.n	801dc0a <_vfiprintf_r+0xc6>
 801dc64:	9b03      	ldr	r3, [sp, #12]
 801dc66:	1d19      	adds	r1, r3, #4
 801dc68:	681b      	ldr	r3, [r3, #0]
 801dc6a:	9103      	str	r1, [sp, #12]
 801dc6c:	2b00      	cmp	r3, #0
 801dc6e:	bfbb      	ittet	lt
 801dc70:	425b      	neglt	r3, r3
 801dc72:	f042 0202 	orrlt.w	r2, r2, #2
 801dc76:	9307      	strge	r3, [sp, #28]
 801dc78:	9307      	strlt	r3, [sp, #28]
 801dc7a:	bfb8      	it	lt
 801dc7c:	9204      	strlt	r2, [sp, #16]
 801dc7e:	7823      	ldrb	r3, [r4, #0]
 801dc80:	2b2e      	cmp	r3, #46	; 0x2e
 801dc82:	d10c      	bne.n	801dc9e <_vfiprintf_r+0x15a>
 801dc84:	7863      	ldrb	r3, [r4, #1]
 801dc86:	2b2a      	cmp	r3, #42	; 0x2a
 801dc88:	d134      	bne.n	801dcf4 <_vfiprintf_r+0x1b0>
 801dc8a:	9b03      	ldr	r3, [sp, #12]
 801dc8c:	1d1a      	adds	r2, r3, #4
 801dc8e:	681b      	ldr	r3, [r3, #0]
 801dc90:	9203      	str	r2, [sp, #12]
 801dc92:	2b00      	cmp	r3, #0
 801dc94:	bfb8      	it	lt
 801dc96:	f04f 33ff 	movlt.w	r3, #4294967295
 801dc9a:	3402      	adds	r4, #2
 801dc9c:	9305      	str	r3, [sp, #20]
 801dc9e:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 801dd74 <_vfiprintf_r+0x230>
 801dca2:	7821      	ldrb	r1, [r4, #0]
 801dca4:	2203      	movs	r2, #3
 801dca6:	4650      	mov	r0, sl
 801dca8:	f7e2 faa2 	bl	80001f0 <memchr>
 801dcac:	b138      	cbz	r0, 801dcbe <_vfiprintf_r+0x17a>
 801dcae:	9b04      	ldr	r3, [sp, #16]
 801dcb0:	eba0 000a 	sub.w	r0, r0, sl
 801dcb4:	2240      	movs	r2, #64	; 0x40
 801dcb6:	4082      	lsls	r2, r0
 801dcb8:	4313      	orrs	r3, r2
 801dcba:	3401      	adds	r4, #1
 801dcbc:	9304      	str	r3, [sp, #16]
 801dcbe:	f814 1b01 	ldrb.w	r1, [r4], #1
 801dcc2:	4829      	ldr	r0, [pc, #164]	; (801dd68 <_vfiprintf_r+0x224>)
 801dcc4:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801dcc8:	2206      	movs	r2, #6
 801dcca:	f7e2 fa91 	bl	80001f0 <memchr>
 801dcce:	2800      	cmp	r0, #0
 801dcd0:	d03f      	beq.n	801dd52 <_vfiprintf_r+0x20e>
 801dcd2:	4b26      	ldr	r3, [pc, #152]	; (801dd6c <_vfiprintf_r+0x228>)
 801dcd4:	bb1b      	cbnz	r3, 801dd1e <_vfiprintf_r+0x1da>
 801dcd6:	9b03      	ldr	r3, [sp, #12]
 801dcd8:	3307      	adds	r3, #7
 801dcda:	f023 0307 	bic.w	r3, r3, #7
 801dcde:	3308      	adds	r3, #8
 801dce0:	9303      	str	r3, [sp, #12]
 801dce2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dce4:	443b      	add	r3, r7
 801dce6:	9309      	str	r3, [sp, #36]	; 0x24
 801dce8:	e768      	b.n	801dbbc <_vfiprintf_r+0x78>
 801dcea:	fb0c 3202 	mla	r2, ip, r2, r3
 801dcee:	460c      	mov	r4, r1
 801dcf0:	2001      	movs	r0, #1
 801dcf2:	e7a6      	b.n	801dc42 <_vfiprintf_r+0xfe>
 801dcf4:	2300      	movs	r3, #0
 801dcf6:	3401      	adds	r4, #1
 801dcf8:	9305      	str	r3, [sp, #20]
 801dcfa:	4619      	mov	r1, r3
 801dcfc:	f04f 0c0a 	mov.w	ip, #10
 801dd00:	4620      	mov	r0, r4
 801dd02:	f810 2b01 	ldrb.w	r2, [r0], #1
 801dd06:	3a30      	subs	r2, #48	; 0x30
 801dd08:	2a09      	cmp	r2, #9
 801dd0a:	d903      	bls.n	801dd14 <_vfiprintf_r+0x1d0>
 801dd0c:	2b00      	cmp	r3, #0
 801dd0e:	d0c6      	beq.n	801dc9e <_vfiprintf_r+0x15a>
 801dd10:	9105      	str	r1, [sp, #20]
 801dd12:	e7c4      	b.n	801dc9e <_vfiprintf_r+0x15a>
 801dd14:	fb0c 2101 	mla	r1, ip, r1, r2
 801dd18:	4604      	mov	r4, r0
 801dd1a:	2301      	movs	r3, #1
 801dd1c:	e7f0      	b.n	801dd00 <_vfiprintf_r+0x1bc>
 801dd1e:	ab03      	add	r3, sp, #12
 801dd20:	9300      	str	r3, [sp, #0]
 801dd22:	462a      	mov	r2, r5
 801dd24:	4b12      	ldr	r3, [pc, #72]	; (801dd70 <_vfiprintf_r+0x22c>)
 801dd26:	a904      	add	r1, sp, #16
 801dd28:	4630      	mov	r0, r6
 801dd2a:	f3af 8000 	nop.w
 801dd2e:	4607      	mov	r7, r0
 801dd30:	1c78      	adds	r0, r7, #1
 801dd32:	d1d6      	bne.n	801dce2 <_vfiprintf_r+0x19e>
 801dd34:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801dd36:	07d9      	lsls	r1, r3, #31
 801dd38:	d405      	bmi.n	801dd46 <_vfiprintf_r+0x202>
 801dd3a:	89ab      	ldrh	r3, [r5, #12]
 801dd3c:	059a      	lsls	r2, r3, #22
 801dd3e:	d402      	bmi.n	801dd46 <_vfiprintf_r+0x202>
 801dd40:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801dd42:	f7ff fe1b 	bl	801d97c <__retarget_lock_release_recursive>
 801dd46:	89ab      	ldrh	r3, [r5, #12]
 801dd48:	065b      	lsls	r3, r3, #25
 801dd4a:	f53f af1d 	bmi.w	801db88 <_vfiprintf_r+0x44>
 801dd4e:	9809      	ldr	r0, [sp, #36]	; 0x24
 801dd50:	e71c      	b.n	801db8c <_vfiprintf_r+0x48>
 801dd52:	ab03      	add	r3, sp, #12
 801dd54:	9300      	str	r3, [sp, #0]
 801dd56:	462a      	mov	r2, r5
 801dd58:	4b05      	ldr	r3, [pc, #20]	; (801dd70 <_vfiprintf_r+0x22c>)
 801dd5a:	a904      	add	r1, sp, #16
 801dd5c:	4630      	mov	r0, r6
 801dd5e:	f000 f879 	bl	801de54 <_printf_i>
 801dd62:	e7e4      	b.n	801dd2e <_vfiprintf_r+0x1ea>
 801dd64:	08020c80 	.word	0x08020c80
 801dd68:	08020c8a 	.word	0x08020c8a
 801dd6c:	00000000 	.word	0x00000000
 801dd70:	0801db1f 	.word	0x0801db1f
 801dd74:	08020c86 	.word	0x08020c86

0801dd78 <_printf_common>:
 801dd78:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801dd7c:	4616      	mov	r6, r2
 801dd7e:	4699      	mov	r9, r3
 801dd80:	688a      	ldr	r2, [r1, #8]
 801dd82:	690b      	ldr	r3, [r1, #16]
 801dd84:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801dd88:	4293      	cmp	r3, r2
 801dd8a:	bfb8      	it	lt
 801dd8c:	4613      	movlt	r3, r2
 801dd8e:	6033      	str	r3, [r6, #0]
 801dd90:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801dd94:	4607      	mov	r7, r0
 801dd96:	460c      	mov	r4, r1
 801dd98:	b10a      	cbz	r2, 801dd9e <_printf_common+0x26>
 801dd9a:	3301      	adds	r3, #1
 801dd9c:	6033      	str	r3, [r6, #0]
 801dd9e:	6823      	ldr	r3, [r4, #0]
 801dda0:	0699      	lsls	r1, r3, #26
 801dda2:	bf42      	ittt	mi
 801dda4:	6833      	ldrmi	r3, [r6, #0]
 801dda6:	3302      	addmi	r3, #2
 801dda8:	6033      	strmi	r3, [r6, #0]
 801ddaa:	6825      	ldr	r5, [r4, #0]
 801ddac:	f015 0506 	ands.w	r5, r5, #6
 801ddb0:	d106      	bne.n	801ddc0 <_printf_common+0x48>
 801ddb2:	f104 0a19 	add.w	sl, r4, #25
 801ddb6:	68e3      	ldr	r3, [r4, #12]
 801ddb8:	6832      	ldr	r2, [r6, #0]
 801ddba:	1a9b      	subs	r3, r3, r2
 801ddbc:	42ab      	cmp	r3, r5
 801ddbe:	dc26      	bgt.n	801de0e <_printf_common+0x96>
 801ddc0:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 801ddc4:	1e13      	subs	r3, r2, #0
 801ddc6:	6822      	ldr	r2, [r4, #0]
 801ddc8:	bf18      	it	ne
 801ddca:	2301      	movne	r3, #1
 801ddcc:	0692      	lsls	r2, r2, #26
 801ddce:	d42b      	bmi.n	801de28 <_printf_common+0xb0>
 801ddd0:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801ddd4:	4649      	mov	r1, r9
 801ddd6:	4638      	mov	r0, r7
 801ddd8:	47c0      	blx	r8
 801ddda:	3001      	adds	r0, #1
 801dddc:	d01e      	beq.n	801de1c <_printf_common+0xa4>
 801ddde:	6823      	ldr	r3, [r4, #0]
 801dde0:	6922      	ldr	r2, [r4, #16]
 801dde2:	f003 0306 	and.w	r3, r3, #6
 801dde6:	2b04      	cmp	r3, #4
 801dde8:	bf02      	ittt	eq
 801ddea:	68e5      	ldreq	r5, [r4, #12]
 801ddec:	6833      	ldreq	r3, [r6, #0]
 801ddee:	1aed      	subeq	r5, r5, r3
 801ddf0:	68a3      	ldr	r3, [r4, #8]
 801ddf2:	bf0c      	ite	eq
 801ddf4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801ddf8:	2500      	movne	r5, #0
 801ddfa:	4293      	cmp	r3, r2
 801ddfc:	bfc4      	itt	gt
 801ddfe:	1a9b      	subgt	r3, r3, r2
 801de00:	18ed      	addgt	r5, r5, r3
 801de02:	2600      	movs	r6, #0
 801de04:	341a      	adds	r4, #26
 801de06:	42b5      	cmp	r5, r6
 801de08:	d11a      	bne.n	801de40 <_printf_common+0xc8>
 801de0a:	2000      	movs	r0, #0
 801de0c:	e008      	b.n	801de20 <_printf_common+0xa8>
 801de0e:	2301      	movs	r3, #1
 801de10:	4652      	mov	r2, sl
 801de12:	4649      	mov	r1, r9
 801de14:	4638      	mov	r0, r7
 801de16:	47c0      	blx	r8
 801de18:	3001      	adds	r0, #1
 801de1a:	d103      	bne.n	801de24 <_printf_common+0xac>
 801de1c:	f04f 30ff 	mov.w	r0, #4294967295
 801de20:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801de24:	3501      	adds	r5, #1
 801de26:	e7c6      	b.n	801ddb6 <_printf_common+0x3e>
 801de28:	18e1      	adds	r1, r4, r3
 801de2a:	1c5a      	adds	r2, r3, #1
 801de2c:	2030      	movs	r0, #48	; 0x30
 801de2e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801de32:	4422      	add	r2, r4
 801de34:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801de38:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801de3c:	3302      	adds	r3, #2
 801de3e:	e7c7      	b.n	801ddd0 <_printf_common+0x58>
 801de40:	2301      	movs	r3, #1
 801de42:	4622      	mov	r2, r4
 801de44:	4649      	mov	r1, r9
 801de46:	4638      	mov	r0, r7
 801de48:	47c0      	blx	r8
 801de4a:	3001      	adds	r0, #1
 801de4c:	d0e6      	beq.n	801de1c <_printf_common+0xa4>
 801de4e:	3601      	adds	r6, #1
 801de50:	e7d9      	b.n	801de06 <_printf_common+0x8e>
	...

0801de54 <_printf_i>:
 801de54:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801de58:	7e0f      	ldrb	r7, [r1, #24]
 801de5a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801de5c:	2f78      	cmp	r7, #120	; 0x78
 801de5e:	4691      	mov	r9, r2
 801de60:	4680      	mov	r8, r0
 801de62:	460c      	mov	r4, r1
 801de64:	469a      	mov	sl, r3
 801de66:	f101 0243 	add.w	r2, r1, #67	; 0x43
 801de6a:	d807      	bhi.n	801de7c <_printf_i+0x28>
 801de6c:	2f62      	cmp	r7, #98	; 0x62
 801de6e:	d80a      	bhi.n	801de86 <_printf_i+0x32>
 801de70:	2f00      	cmp	r7, #0
 801de72:	f000 80d4 	beq.w	801e01e <_printf_i+0x1ca>
 801de76:	2f58      	cmp	r7, #88	; 0x58
 801de78:	f000 80c0 	beq.w	801dffc <_printf_i+0x1a8>
 801de7c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801de80:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 801de84:	e03a      	b.n	801defc <_printf_i+0xa8>
 801de86:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 801de8a:	2b15      	cmp	r3, #21
 801de8c:	d8f6      	bhi.n	801de7c <_printf_i+0x28>
 801de8e:	a101      	add	r1, pc, #4	; (adr r1, 801de94 <_printf_i+0x40>)
 801de90:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 801de94:	0801deed 	.word	0x0801deed
 801de98:	0801df01 	.word	0x0801df01
 801de9c:	0801de7d 	.word	0x0801de7d
 801dea0:	0801de7d 	.word	0x0801de7d
 801dea4:	0801de7d 	.word	0x0801de7d
 801dea8:	0801de7d 	.word	0x0801de7d
 801deac:	0801df01 	.word	0x0801df01
 801deb0:	0801de7d 	.word	0x0801de7d
 801deb4:	0801de7d 	.word	0x0801de7d
 801deb8:	0801de7d 	.word	0x0801de7d
 801debc:	0801de7d 	.word	0x0801de7d
 801dec0:	0801e005 	.word	0x0801e005
 801dec4:	0801df2d 	.word	0x0801df2d
 801dec8:	0801dfbf 	.word	0x0801dfbf
 801decc:	0801de7d 	.word	0x0801de7d
 801ded0:	0801de7d 	.word	0x0801de7d
 801ded4:	0801e027 	.word	0x0801e027
 801ded8:	0801de7d 	.word	0x0801de7d
 801dedc:	0801df2d 	.word	0x0801df2d
 801dee0:	0801de7d 	.word	0x0801de7d
 801dee4:	0801de7d 	.word	0x0801de7d
 801dee8:	0801dfc7 	.word	0x0801dfc7
 801deec:	682b      	ldr	r3, [r5, #0]
 801deee:	1d1a      	adds	r2, r3, #4
 801def0:	681b      	ldr	r3, [r3, #0]
 801def2:	602a      	str	r2, [r5, #0]
 801def4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801def8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801defc:	2301      	movs	r3, #1
 801defe:	e09f      	b.n	801e040 <_printf_i+0x1ec>
 801df00:	6820      	ldr	r0, [r4, #0]
 801df02:	682b      	ldr	r3, [r5, #0]
 801df04:	0607      	lsls	r7, r0, #24
 801df06:	f103 0104 	add.w	r1, r3, #4
 801df0a:	6029      	str	r1, [r5, #0]
 801df0c:	d501      	bpl.n	801df12 <_printf_i+0xbe>
 801df0e:	681e      	ldr	r6, [r3, #0]
 801df10:	e003      	b.n	801df1a <_printf_i+0xc6>
 801df12:	0646      	lsls	r6, r0, #25
 801df14:	d5fb      	bpl.n	801df0e <_printf_i+0xba>
 801df16:	f9b3 6000 	ldrsh.w	r6, [r3]
 801df1a:	2e00      	cmp	r6, #0
 801df1c:	da03      	bge.n	801df26 <_printf_i+0xd2>
 801df1e:	232d      	movs	r3, #45	; 0x2d
 801df20:	4276      	negs	r6, r6
 801df22:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801df26:	485a      	ldr	r0, [pc, #360]	; (801e090 <_printf_i+0x23c>)
 801df28:	230a      	movs	r3, #10
 801df2a:	e012      	b.n	801df52 <_printf_i+0xfe>
 801df2c:	682b      	ldr	r3, [r5, #0]
 801df2e:	6820      	ldr	r0, [r4, #0]
 801df30:	1d19      	adds	r1, r3, #4
 801df32:	6029      	str	r1, [r5, #0]
 801df34:	0605      	lsls	r5, r0, #24
 801df36:	d501      	bpl.n	801df3c <_printf_i+0xe8>
 801df38:	681e      	ldr	r6, [r3, #0]
 801df3a:	e002      	b.n	801df42 <_printf_i+0xee>
 801df3c:	0641      	lsls	r1, r0, #25
 801df3e:	d5fb      	bpl.n	801df38 <_printf_i+0xe4>
 801df40:	881e      	ldrh	r6, [r3, #0]
 801df42:	4853      	ldr	r0, [pc, #332]	; (801e090 <_printf_i+0x23c>)
 801df44:	2f6f      	cmp	r7, #111	; 0x6f
 801df46:	bf0c      	ite	eq
 801df48:	2308      	moveq	r3, #8
 801df4a:	230a      	movne	r3, #10
 801df4c:	2100      	movs	r1, #0
 801df4e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801df52:	6865      	ldr	r5, [r4, #4]
 801df54:	60a5      	str	r5, [r4, #8]
 801df56:	2d00      	cmp	r5, #0
 801df58:	bfa2      	ittt	ge
 801df5a:	6821      	ldrge	r1, [r4, #0]
 801df5c:	f021 0104 	bicge.w	r1, r1, #4
 801df60:	6021      	strge	r1, [r4, #0]
 801df62:	b90e      	cbnz	r6, 801df68 <_printf_i+0x114>
 801df64:	2d00      	cmp	r5, #0
 801df66:	d04b      	beq.n	801e000 <_printf_i+0x1ac>
 801df68:	4615      	mov	r5, r2
 801df6a:	fbb6 f1f3 	udiv	r1, r6, r3
 801df6e:	fb03 6711 	mls	r7, r3, r1, r6
 801df72:	5dc7      	ldrb	r7, [r0, r7]
 801df74:	f805 7d01 	strb.w	r7, [r5, #-1]!
 801df78:	4637      	mov	r7, r6
 801df7a:	42bb      	cmp	r3, r7
 801df7c:	460e      	mov	r6, r1
 801df7e:	d9f4      	bls.n	801df6a <_printf_i+0x116>
 801df80:	2b08      	cmp	r3, #8
 801df82:	d10b      	bne.n	801df9c <_printf_i+0x148>
 801df84:	6823      	ldr	r3, [r4, #0]
 801df86:	07de      	lsls	r6, r3, #31
 801df88:	d508      	bpl.n	801df9c <_printf_i+0x148>
 801df8a:	6923      	ldr	r3, [r4, #16]
 801df8c:	6861      	ldr	r1, [r4, #4]
 801df8e:	4299      	cmp	r1, r3
 801df90:	bfde      	ittt	le
 801df92:	2330      	movle	r3, #48	; 0x30
 801df94:	f805 3c01 	strble.w	r3, [r5, #-1]
 801df98:	f105 35ff 	addle.w	r5, r5, #4294967295
 801df9c:	1b52      	subs	r2, r2, r5
 801df9e:	6122      	str	r2, [r4, #16]
 801dfa0:	f8cd a000 	str.w	sl, [sp]
 801dfa4:	464b      	mov	r3, r9
 801dfa6:	aa03      	add	r2, sp, #12
 801dfa8:	4621      	mov	r1, r4
 801dfaa:	4640      	mov	r0, r8
 801dfac:	f7ff fee4 	bl	801dd78 <_printf_common>
 801dfb0:	3001      	adds	r0, #1
 801dfb2:	d14a      	bne.n	801e04a <_printf_i+0x1f6>
 801dfb4:	f04f 30ff 	mov.w	r0, #4294967295
 801dfb8:	b004      	add	sp, #16
 801dfba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801dfbe:	6823      	ldr	r3, [r4, #0]
 801dfc0:	f043 0320 	orr.w	r3, r3, #32
 801dfc4:	6023      	str	r3, [r4, #0]
 801dfc6:	4833      	ldr	r0, [pc, #204]	; (801e094 <_printf_i+0x240>)
 801dfc8:	2778      	movs	r7, #120	; 0x78
 801dfca:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 801dfce:	6823      	ldr	r3, [r4, #0]
 801dfd0:	6829      	ldr	r1, [r5, #0]
 801dfd2:	061f      	lsls	r7, r3, #24
 801dfd4:	f851 6b04 	ldr.w	r6, [r1], #4
 801dfd8:	d402      	bmi.n	801dfe0 <_printf_i+0x18c>
 801dfda:	065f      	lsls	r7, r3, #25
 801dfdc:	bf48      	it	mi
 801dfde:	b2b6      	uxthmi	r6, r6
 801dfe0:	07df      	lsls	r7, r3, #31
 801dfe2:	bf48      	it	mi
 801dfe4:	f043 0320 	orrmi.w	r3, r3, #32
 801dfe8:	6029      	str	r1, [r5, #0]
 801dfea:	bf48      	it	mi
 801dfec:	6023      	strmi	r3, [r4, #0]
 801dfee:	b91e      	cbnz	r6, 801dff8 <_printf_i+0x1a4>
 801dff0:	6823      	ldr	r3, [r4, #0]
 801dff2:	f023 0320 	bic.w	r3, r3, #32
 801dff6:	6023      	str	r3, [r4, #0]
 801dff8:	2310      	movs	r3, #16
 801dffa:	e7a7      	b.n	801df4c <_printf_i+0xf8>
 801dffc:	4824      	ldr	r0, [pc, #144]	; (801e090 <_printf_i+0x23c>)
 801dffe:	e7e4      	b.n	801dfca <_printf_i+0x176>
 801e000:	4615      	mov	r5, r2
 801e002:	e7bd      	b.n	801df80 <_printf_i+0x12c>
 801e004:	682b      	ldr	r3, [r5, #0]
 801e006:	6826      	ldr	r6, [r4, #0]
 801e008:	6961      	ldr	r1, [r4, #20]
 801e00a:	1d18      	adds	r0, r3, #4
 801e00c:	6028      	str	r0, [r5, #0]
 801e00e:	0635      	lsls	r5, r6, #24
 801e010:	681b      	ldr	r3, [r3, #0]
 801e012:	d501      	bpl.n	801e018 <_printf_i+0x1c4>
 801e014:	6019      	str	r1, [r3, #0]
 801e016:	e002      	b.n	801e01e <_printf_i+0x1ca>
 801e018:	0670      	lsls	r0, r6, #25
 801e01a:	d5fb      	bpl.n	801e014 <_printf_i+0x1c0>
 801e01c:	8019      	strh	r1, [r3, #0]
 801e01e:	2300      	movs	r3, #0
 801e020:	6123      	str	r3, [r4, #16]
 801e022:	4615      	mov	r5, r2
 801e024:	e7bc      	b.n	801dfa0 <_printf_i+0x14c>
 801e026:	682b      	ldr	r3, [r5, #0]
 801e028:	1d1a      	adds	r2, r3, #4
 801e02a:	602a      	str	r2, [r5, #0]
 801e02c:	681d      	ldr	r5, [r3, #0]
 801e02e:	6862      	ldr	r2, [r4, #4]
 801e030:	2100      	movs	r1, #0
 801e032:	4628      	mov	r0, r5
 801e034:	f7e2 f8dc 	bl	80001f0 <memchr>
 801e038:	b108      	cbz	r0, 801e03e <_printf_i+0x1ea>
 801e03a:	1b40      	subs	r0, r0, r5
 801e03c:	6060      	str	r0, [r4, #4]
 801e03e:	6863      	ldr	r3, [r4, #4]
 801e040:	6123      	str	r3, [r4, #16]
 801e042:	2300      	movs	r3, #0
 801e044:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801e048:	e7aa      	b.n	801dfa0 <_printf_i+0x14c>
 801e04a:	6923      	ldr	r3, [r4, #16]
 801e04c:	462a      	mov	r2, r5
 801e04e:	4649      	mov	r1, r9
 801e050:	4640      	mov	r0, r8
 801e052:	47d0      	blx	sl
 801e054:	3001      	adds	r0, #1
 801e056:	d0ad      	beq.n	801dfb4 <_printf_i+0x160>
 801e058:	6823      	ldr	r3, [r4, #0]
 801e05a:	079b      	lsls	r3, r3, #30
 801e05c:	d413      	bmi.n	801e086 <_printf_i+0x232>
 801e05e:	68e0      	ldr	r0, [r4, #12]
 801e060:	9b03      	ldr	r3, [sp, #12]
 801e062:	4298      	cmp	r0, r3
 801e064:	bfb8      	it	lt
 801e066:	4618      	movlt	r0, r3
 801e068:	e7a6      	b.n	801dfb8 <_printf_i+0x164>
 801e06a:	2301      	movs	r3, #1
 801e06c:	4632      	mov	r2, r6
 801e06e:	4649      	mov	r1, r9
 801e070:	4640      	mov	r0, r8
 801e072:	47d0      	blx	sl
 801e074:	3001      	adds	r0, #1
 801e076:	d09d      	beq.n	801dfb4 <_printf_i+0x160>
 801e078:	3501      	adds	r5, #1
 801e07a:	68e3      	ldr	r3, [r4, #12]
 801e07c:	9903      	ldr	r1, [sp, #12]
 801e07e:	1a5b      	subs	r3, r3, r1
 801e080:	42ab      	cmp	r3, r5
 801e082:	dcf2      	bgt.n	801e06a <_printf_i+0x216>
 801e084:	e7eb      	b.n	801e05e <_printf_i+0x20a>
 801e086:	2500      	movs	r5, #0
 801e088:	f104 0619 	add.w	r6, r4, #25
 801e08c:	e7f5      	b.n	801e07a <_printf_i+0x226>
 801e08e:	bf00      	nop
 801e090:	08020c91 	.word	0x08020c91
 801e094:	08020ca2 	.word	0x08020ca2

0801e098 <__sflush_r>:
 801e098:	898a      	ldrh	r2, [r1, #12]
 801e09a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801e09e:	4605      	mov	r5, r0
 801e0a0:	0710      	lsls	r0, r2, #28
 801e0a2:	460c      	mov	r4, r1
 801e0a4:	d458      	bmi.n	801e158 <__sflush_r+0xc0>
 801e0a6:	684b      	ldr	r3, [r1, #4]
 801e0a8:	2b00      	cmp	r3, #0
 801e0aa:	dc05      	bgt.n	801e0b8 <__sflush_r+0x20>
 801e0ac:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801e0ae:	2b00      	cmp	r3, #0
 801e0b0:	dc02      	bgt.n	801e0b8 <__sflush_r+0x20>
 801e0b2:	2000      	movs	r0, #0
 801e0b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801e0b8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801e0ba:	2e00      	cmp	r6, #0
 801e0bc:	d0f9      	beq.n	801e0b2 <__sflush_r+0x1a>
 801e0be:	2300      	movs	r3, #0
 801e0c0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801e0c4:	682f      	ldr	r7, [r5, #0]
 801e0c6:	6a21      	ldr	r1, [r4, #32]
 801e0c8:	602b      	str	r3, [r5, #0]
 801e0ca:	d032      	beq.n	801e132 <__sflush_r+0x9a>
 801e0cc:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801e0ce:	89a3      	ldrh	r3, [r4, #12]
 801e0d0:	075a      	lsls	r2, r3, #29
 801e0d2:	d505      	bpl.n	801e0e0 <__sflush_r+0x48>
 801e0d4:	6863      	ldr	r3, [r4, #4]
 801e0d6:	1ac0      	subs	r0, r0, r3
 801e0d8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801e0da:	b10b      	cbz	r3, 801e0e0 <__sflush_r+0x48>
 801e0dc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801e0de:	1ac0      	subs	r0, r0, r3
 801e0e0:	2300      	movs	r3, #0
 801e0e2:	4602      	mov	r2, r0
 801e0e4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801e0e6:	6a21      	ldr	r1, [r4, #32]
 801e0e8:	4628      	mov	r0, r5
 801e0ea:	47b0      	blx	r6
 801e0ec:	1c43      	adds	r3, r0, #1
 801e0ee:	89a3      	ldrh	r3, [r4, #12]
 801e0f0:	d106      	bne.n	801e100 <__sflush_r+0x68>
 801e0f2:	6829      	ldr	r1, [r5, #0]
 801e0f4:	291d      	cmp	r1, #29
 801e0f6:	d82b      	bhi.n	801e150 <__sflush_r+0xb8>
 801e0f8:	4a29      	ldr	r2, [pc, #164]	; (801e1a0 <__sflush_r+0x108>)
 801e0fa:	410a      	asrs	r2, r1
 801e0fc:	07d6      	lsls	r6, r2, #31
 801e0fe:	d427      	bmi.n	801e150 <__sflush_r+0xb8>
 801e100:	2200      	movs	r2, #0
 801e102:	6062      	str	r2, [r4, #4]
 801e104:	04d9      	lsls	r1, r3, #19
 801e106:	6922      	ldr	r2, [r4, #16]
 801e108:	6022      	str	r2, [r4, #0]
 801e10a:	d504      	bpl.n	801e116 <__sflush_r+0x7e>
 801e10c:	1c42      	adds	r2, r0, #1
 801e10e:	d101      	bne.n	801e114 <__sflush_r+0x7c>
 801e110:	682b      	ldr	r3, [r5, #0]
 801e112:	b903      	cbnz	r3, 801e116 <__sflush_r+0x7e>
 801e114:	6560      	str	r0, [r4, #84]	; 0x54
 801e116:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801e118:	602f      	str	r7, [r5, #0]
 801e11a:	2900      	cmp	r1, #0
 801e11c:	d0c9      	beq.n	801e0b2 <__sflush_r+0x1a>
 801e11e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801e122:	4299      	cmp	r1, r3
 801e124:	d002      	beq.n	801e12c <__sflush_r+0x94>
 801e126:	4628      	mov	r0, r5
 801e128:	f7ff fc96 	bl	801da58 <_free_r>
 801e12c:	2000      	movs	r0, #0
 801e12e:	6360      	str	r0, [r4, #52]	; 0x34
 801e130:	e7c0      	b.n	801e0b4 <__sflush_r+0x1c>
 801e132:	2301      	movs	r3, #1
 801e134:	4628      	mov	r0, r5
 801e136:	47b0      	blx	r6
 801e138:	1c41      	adds	r1, r0, #1
 801e13a:	d1c8      	bne.n	801e0ce <__sflush_r+0x36>
 801e13c:	682b      	ldr	r3, [r5, #0]
 801e13e:	2b00      	cmp	r3, #0
 801e140:	d0c5      	beq.n	801e0ce <__sflush_r+0x36>
 801e142:	2b1d      	cmp	r3, #29
 801e144:	d001      	beq.n	801e14a <__sflush_r+0xb2>
 801e146:	2b16      	cmp	r3, #22
 801e148:	d101      	bne.n	801e14e <__sflush_r+0xb6>
 801e14a:	602f      	str	r7, [r5, #0]
 801e14c:	e7b1      	b.n	801e0b2 <__sflush_r+0x1a>
 801e14e:	89a3      	ldrh	r3, [r4, #12]
 801e150:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801e154:	81a3      	strh	r3, [r4, #12]
 801e156:	e7ad      	b.n	801e0b4 <__sflush_r+0x1c>
 801e158:	690f      	ldr	r7, [r1, #16]
 801e15a:	2f00      	cmp	r7, #0
 801e15c:	d0a9      	beq.n	801e0b2 <__sflush_r+0x1a>
 801e15e:	0793      	lsls	r3, r2, #30
 801e160:	680e      	ldr	r6, [r1, #0]
 801e162:	bf08      	it	eq
 801e164:	694b      	ldreq	r3, [r1, #20]
 801e166:	600f      	str	r7, [r1, #0]
 801e168:	bf18      	it	ne
 801e16a:	2300      	movne	r3, #0
 801e16c:	eba6 0807 	sub.w	r8, r6, r7
 801e170:	608b      	str	r3, [r1, #8]
 801e172:	f1b8 0f00 	cmp.w	r8, #0
 801e176:	dd9c      	ble.n	801e0b2 <__sflush_r+0x1a>
 801e178:	6a21      	ldr	r1, [r4, #32]
 801e17a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 801e17c:	4643      	mov	r3, r8
 801e17e:	463a      	mov	r2, r7
 801e180:	4628      	mov	r0, r5
 801e182:	47b0      	blx	r6
 801e184:	2800      	cmp	r0, #0
 801e186:	dc06      	bgt.n	801e196 <__sflush_r+0xfe>
 801e188:	89a3      	ldrh	r3, [r4, #12]
 801e18a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801e18e:	81a3      	strh	r3, [r4, #12]
 801e190:	f04f 30ff 	mov.w	r0, #4294967295
 801e194:	e78e      	b.n	801e0b4 <__sflush_r+0x1c>
 801e196:	4407      	add	r7, r0
 801e198:	eba8 0800 	sub.w	r8, r8, r0
 801e19c:	e7e9      	b.n	801e172 <__sflush_r+0xda>
 801e19e:	bf00      	nop
 801e1a0:	dfbffffe 	.word	0xdfbffffe

0801e1a4 <_fflush_r>:
 801e1a4:	b538      	push	{r3, r4, r5, lr}
 801e1a6:	690b      	ldr	r3, [r1, #16]
 801e1a8:	4605      	mov	r5, r0
 801e1aa:	460c      	mov	r4, r1
 801e1ac:	b913      	cbnz	r3, 801e1b4 <_fflush_r+0x10>
 801e1ae:	2500      	movs	r5, #0
 801e1b0:	4628      	mov	r0, r5
 801e1b2:	bd38      	pop	{r3, r4, r5, pc}
 801e1b4:	b118      	cbz	r0, 801e1be <_fflush_r+0x1a>
 801e1b6:	6a03      	ldr	r3, [r0, #32]
 801e1b8:	b90b      	cbnz	r3, 801e1be <_fflush_r+0x1a>
 801e1ba:	f7ff fa85 	bl	801d6c8 <__sinit>
 801e1be:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801e1c2:	2b00      	cmp	r3, #0
 801e1c4:	d0f3      	beq.n	801e1ae <_fflush_r+0xa>
 801e1c6:	6e62      	ldr	r2, [r4, #100]	; 0x64
 801e1c8:	07d0      	lsls	r0, r2, #31
 801e1ca:	d404      	bmi.n	801e1d6 <_fflush_r+0x32>
 801e1cc:	0599      	lsls	r1, r3, #22
 801e1ce:	d402      	bmi.n	801e1d6 <_fflush_r+0x32>
 801e1d0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801e1d2:	f7ff fbd2 	bl	801d97a <__retarget_lock_acquire_recursive>
 801e1d6:	4628      	mov	r0, r5
 801e1d8:	4621      	mov	r1, r4
 801e1da:	f7ff ff5d 	bl	801e098 <__sflush_r>
 801e1de:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801e1e0:	07da      	lsls	r2, r3, #31
 801e1e2:	4605      	mov	r5, r0
 801e1e4:	d4e4      	bmi.n	801e1b0 <_fflush_r+0xc>
 801e1e6:	89a3      	ldrh	r3, [r4, #12]
 801e1e8:	059b      	lsls	r3, r3, #22
 801e1ea:	d4e1      	bmi.n	801e1b0 <_fflush_r+0xc>
 801e1ec:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801e1ee:	f7ff fbc5 	bl	801d97c <__retarget_lock_release_recursive>
 801e1f2:	e7dd      	b.n	801e1b0 <_fflush_r+0xc>

0801e1f4 <__swbuf_r>:
 801e1f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801e1f6:	460e      	mov	r6, r1
 801e1f8:	4614      	mov	r4, r2
 801e1fa:	4605      	mov	r5, r0
 801e1fc:	b118      	cbz	r0, 801e206 <__swbuf_r+0x12>
 801e1fe:	6a03      	ldr	r3, [r0, #32]
 801e200:	b90b      	cbnz	r3, 801e206 <__swbuf_r+0x12>
 801e202:	f7ff fa61 	bl	801d6c8 <__sinit>
 801e206:	69a3      	ldr	r3, [r4, #24]
 801e208:	60a3      	str	r3, [r4, #8]
 801e20a:	89a3      	ldrh	r3, [r4, #12]
 801e20c:	071a      	lsls	r2, r3, #28
 801e20e:	d525      	bpl.n	801e25c <__swbuf_r+0x68>
 801e210:	6923      	ldr	r3, [r4, #16]
 801e212:	b31b      	cbz	r3, 801e25c <__swbuf_r+0x68>
 801e214:	6823      	ldr	r3, [r4, #0]
 801e216:	6922      	ldr	r2, [r4, #16]
 801e218:	1a98      	subs	r0, r3, r2
 801e21a:	6963      	ldr	r3, [r4, #20]
 801e21c:	b2f6      	uxtb	r6, r6
 801e21e:	4283      	cmp	r3, r0
 801e220:	4637      	mov	r7, r6
 801e222:	dc04      	bgt.n	801e22e <__swbuf_r+0x3a>
 801e224:	4621      	mov	r1, r4
 801e226:	4628      	mov	r0, r5
 801e228:	f7ff ffbc 	bl	801e1a4 <_fflush_r>
 801e22c:	b9e0      	cbnz	r0, 801e268 <__swbuf_r+0x74>
 801e22e:	68a3      	ldr	r3, [r4, #8]
 801e230:	3b01      	subs	r3, #1
 801e232:	60a3      	str	r3, [r4, #8]
 801e234:	6823      	ldr	r3, [r4, #0]
 801e236:	1c5a      	adds	r2, r3, #1
 801e238:	6022      	str	r2, [r4, #0]
 801e23a:	701e      	strb	r6, [r3, #0]
 801e23c:	6962      	ldr	r2, [r4, #20]
 801e23e:	1c43      	adds	r3, r0, #1
 801e240:	429a      	cmp	r2, r3
 801e242:	d004      	beq.n	801e24e <__swbuf_r+0x5a>
 801e244:	89a3      	ldrh	r3, [r4, #12]
 801e246:	07db      	lsls	r3, r3, #31
 801e248:	d506      	bpl.n	801e258 <__swbuf_r+0x64>
 801e24a:	2e0a      	cmp	r6, #10
 801e24c:	d104      	bne.n	801e258 <__swbuf_r+0x64>
 801e24e:	4621      	mov	r1, r4
 801e250:	4628      	mov	r0, r5
 801e252:	f7ff ffa7 	bl	801e1a4 <_fflush_r>
 801e256:	b938      	cbnz	r0, 801e268 <__swbuf_r+0x74>
 801e258:	4638      	mov	r0, r7
 801e25a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801e25c:	4621      	mov	r1, r4
 801e25e:	4628      	mov	r0, r5
 801e260:	f000 f806 	bl	801e270 <__swsetup_r>
 801e264:	2800      	cmp	r0, #0
 801e266:	d0d5      	beq.n	801e214 <__swbuf_r+0x20>
 801e268:	f04f 37ff 	mov.w	r7, #4294967295
 801e26c:	e7f4      	b.n	801e258 <__swbuf_r+0x64>
	...

0801e270 <__swsetup_r>:
 801e270:	b538      	push	{r3, r4, r5, lr}
 801e272:	4b2a      	ldr	r3, [pc, #168]	; (801e31c <__swsetup_r+0xac>)
 801e274:	4605      	mov	r5, r0
 801e276:	6818      	ldr	r0, [r3, #0]
 801e278:	460c      	mov	r4, r1
 801e27a:	b118      	cbz	r0, 801e284 <__swsetup_r+0x14>
 801e27c:	6a03      	ldr	r3, [r0, #32]
 801e27e:	b90b      	cbnz	r3, 801e284 <__swsetup_r+0x14>
 801e280:	f7ff fa22 	bl	801d6c8 <__sinit>
 801e284:	89a3      	ldrh	r3, [r4, #12]
 801e286:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801e28a:	0718      	lsls	r0, r3, #28
 801e28c:	d422      	bmi.n	801e2d4 <__swsetup_r+0x64>
 801e28e:	06d9      	lsls	r1, r3, #27
 801e290:	d407      	bmi.n	801e2a2 <__swsetup_r+0x32>
 801e292:	2309      	movs	r3, #9
 801e294:	602b      	str	r3, [r5, #0]
 801e296:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 801e29a:	81a3      	strh	r3, [r4, #12]
 801e29c:	f04f 30ff 	mov.w	r0, #4294967295
 801e2a0:	e034      	b.n	801e30c <__swsetup_r+0x9c>
 801e2a2:	0758      	lsls	r0, r3, #29
 801e2a4:	d512      	bpl.n	801e2cc <__swsetup_r+0x5c>
 801e2a6:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801e2a8:	b141      	cbz	r1, 801e2bc <__swsetup_r+0x4c>
 801e2aa:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801e2ae:	4299      	cmp	r1, r3
 801e2b0:	d002      	beq.n	801e2b8 <__swsetup_r+0x48>
 801e2b2:	4628      	mov	r0, r5
 801e2b4:	f7ff fbd0 	bl	801da58 <_free_r>
 801e2b8:	2300      	movs	r3, #0
 801e2ba:	6363      	str	r3, [r4, #52]	; 0x34
 801e2bc:	89a3      	ldrh	r3, [r4, #12]
 801e2be:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801e2c2:	81a3      	strh	r3, [r4, #12]
 801e2c4:	2300      	movs	r3, #0
 801e2c6:	6063      	str	r3, [r4, #4]
 801e2c8:	6923      	ldr	r3, [r4, #16]
 801e2ca:	6023      	str	r3, [r4, #0]
 801e2cc:	89a3      	ldrh	r3, [r4, #12]
 801e2ce:	f043 0308 	orr.w	r3, r3, #8
 801e2d2:	81a3      	strh	r3, [r4, #12]
 801e2d4:	6923      	ldr	r3, [r4, #16]
 801e2d6:	b94b      	cbnz	r3, 801e2ec <__swsetup_r+0x7c>
 801e2d8:	89a3      	ldrh	r3, [r4, #12]
 801e2da:	f403 7320 	and.w	r3, r3, #640	; 0x280
 801e2de:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801e2e2:	d003      	beq.n	801e2ec <__swsetup_r+0x7c>
 801e2e4:	4621      	mov	r1, r4
 801e2e6:	4628      	mov	r0, r5
 801e2e8:	f000 f840 	bl	801e36c <__smakebuf_r>
 801e2ec:	89a0      	ldrh	r0, [r4, #12]
 801e2ee:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801e2f2:	f010 0301 	ands.w	r3, r0, #1
 801e2f6:	d00a      	beq.n	801e30e <__swsetup_r+0x9e>
 801e2f8:	2300      	movs	r3, #0
 801e2fa:	60a3      	str	r3, [r4, #8]
 801e2fc:	6963      	ldr	r3, [r4, #20]
 801e2fe:	425b      	negs	r3, r3
 801e300:	61a3      	str	r3, [r4, #24]
 801e302:	6923      	ldr	r3, [r4, #16]
 801e304:	b943      	cbnz	r3, 801e318 <__swsetup_r+0xa8>
 801e306:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 801e30a:	d1c4      	bne.n	801e296 <__swsetup_r+0x26>
 801e30c:	bd38      	pop	{r3, r4, r5, pc}
 801e30e:	0781      	lsls	r1, r0, #30
 801e310:	bf58      	it	pl
 801e312:	6963      	ldrpl	r3, [r4, #20]
 801e314:	60a3      	str	r3, [r4, #8]
 801e316:	e7f4      	b.n	801e302 <__swsetup_r+0x92>
 801e318:	2000      	movs	r0, #0
 801e31a:	e7f7      	b.n	801e30c <__swsetup_r+0x9c>
 801e31c:	20000154 	.word	0x20000154

0801e320 <__swhatbuf_r>:
 801e320:	b570      	push	{r4, r5, r6, lr}
 801e322:	460c      	mov	r4, r1
 801e324:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801e328:	2900      	cmp	r1, #0
 801e32a:	b096      	sub	sp, #88	; 0x58
 801e32c:	4615      	mov	r5, r2
 801e32e:	461e      	mov	r6, r3
 801e330:	da0d      	bge.n	801e34e <__swhatbuf_r+0x2e>
 801e332:	89a3      	ldrh	r3, [r4, #12]
 801e334:	f013 0f80 	tst.w	r3, #128	; 0x80
 801e338:	f04f 0100 	mov.w	r1, #0
 801e33c:	bf0c      	ite	eq
 801e33e:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 801e342:	2340      	movne	r3, #64	; 0x40
 801e344:	2000      	movs	r0, #0
 801e346:	6031      	str	r1, [r6, #0]
 801e348:	602b      	str	r3, [r5, #0]
 801e34a:	b016      	add	sp, #88	; 0x58
 801e34c:	bd70      	pop	{r4, r5, r6, pc}
 801e34e:	466a      	mov	r2, sp
 801e350:	f000 f848 	bl	801e3e4 <_fstat_r>
 801e354:	2800      	cmp	r0, #0
 801e356:	dbec      	blt.n	801e332 <__swhatbuf_r+0x12>
 801e358:	9901      	ldr	r1, [sp, #4]
 801e35a:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 801e35e:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 801e362:	4259      	negs	r1, r3
 801e364:	4159      	adcs	r1, r3
 801e366:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801e36a:	e7eb      	b.n	801e344 <__swhatbuf_r+0x24>

0801e36c <__smakebuf_r>:
 801e36c:	898b      	ldrh	r3, [r1, #12]
 801e36e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801e370:	079d      	lsls	r5, r3, #30
 801e372:	4606      	mov	r6, r0
 801e374:	460c      	mov	r4, r1
 801e376:	d507      	bpl.n	801e388 <__smakebuf_r+0x1c>
 801e378:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801e37c:	6023      	str	r3, [r4, #0]
 801e37e:	6123      	str	r3, [r4, #16]
 801e380:	2301      	movs	r3, #1
 801e382:	6163      	str	r3, [r4, #20]
 801e384:	b002      	add	sp, #8
 801e386:	bd70      	pop	{r4, r5, r6, pc}
 801e388:	ab01      	add	r3, sp, #4
 801e38a:	466a      	mov	r2, sp
 801e38c:	f7ff ffc8 	bl	801e320 <__swhatbuf_r>
 801e390:	9900      	ldr	r1, [sp, #0]
 801e392:	4605      	mov	r5, r0
 801e394:	4630      	mov	r0, r6
 801e396:	f7ff f871 	bl	801d47c <_malloc_r>
 801e39a:	b948      	cbnz	r0, 801e3b0 <__smakebuf_r+0x44>
 801e39c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801e3a0:	059a      	lsls	r2, r3, #22
 801e3a2:	d4ef      	bmi.n	801e384 <__smakebuf_r+0x18>
 801e3a4:	f023 0303 	bic.w	r3, r3, #3
 801e3a8:	f043 0302 	orr.w	r3, r3, #2
 801e3ac:	81a3      	strh	r3, [r4, #12]
 801e3ae:	e7e3      	b.n	801e378 <__smakebuf_r+0xc>
 801e3b0:	89a3      	ldrh	r3, [r4, #12]
 801e3b2:	6020      	str	r0, [r4, #0]
 801e3b4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801e3b8:	81a3      	strh	r3, [r4, #12]
 801e3ba:	9b00      	ldr	r3, [sp, #0]
 801e3bc:	6163      	str	r3, [r4, #20]
 801e3be:	9b01      	ldr	r3, [sp, #4]
 801e3c0:	6120      	str	r0, [r4, #16]
 801e3c2:	b15b      	cbz	r3, 801e3dc <__smakebuf_r+0x70>
 801e3c4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801e3c8:	4630      	mov	r0, r6
 801e3ca:	f000 f81d 	bl	801e408 <_isatty_r>
 801e3ce:	b128      	cbz	r0, 801e3dc <__smakebuf_r+0x70>
 801e3d0:	89a3      	ldrh	r3, [r4, #12]
 801e3d2:	f023 0303 	bic.w	r3, r3, #3
 801e3d6:	f043 0301 	orr.w	r3, r3, #1
 801e3da:	81a3      	strh	r3, [r4, #12]
 801e3dc:	89a3      	ldrh	r3, [r4, #12]
 801e3de:	431d      	orrs	r5, r3
 801e3e0:	81a5      	strh	r5, [r4, #12]
 801e3e2:	e7cf      	b.n	801e384 <__smakebuf_r+0x18>

0801e3e4 <_fstat_r>:
 801e3e4:	b538      	push	{r3, r4, r5, lr}
 801e3e6:	4d07      	ldr	r5, [pc, #28]	; (801e404 <_fstat_r+0x20>)
 801e3e8:	2300      	movs	r3, #0
 801e3ea:	4604      	mov	r4, r0
 801e3ec:	4608      	mov	r0, r1
 801e3ee:	4611      	mov	r1, r2
 801e3f0:	602b      	str	r3, [r5, #0]
 801e3f2:	f7e4 f842 	bl	800247a <_fstat>
 801e3f6:	1c43      	adds	r3, r0, #1
 801e3f8:	d102      	bne.n	801e400 <_fstat_r+0x1c>
 801e3fa:	682b      	ldr	r3, [r5, #0]
 801e3fc:	b103      	cbz	r3, 801e400 <_fstat_r+0x1c>
 801e3fe:	6023      	str	r3, [r4, #0]
 801e400:	bd38      	pop	{r3, r4, r5, pc}
 801e402:	bf00      	nop
 801e404:	200137f0 	.word	0x200137f0

0801e408 <_isatty_r>:
 801e408:	b538      	push	{r3, r4, r5, lr}
 801e40a:	4d06      	ldr	r5, [pc, #24]	; (801e424 <_isatty_r+0x1c>)
 801e40c:	2300      	movs	r3, #0
 801e40e:	4604      	mov	r4, r0
 801e410:	4608      	mov	r0, r1
 801e412:	602b      	str	r3, [r5, #0]
 801e414:	f7e4 f836 	bl	8002484 <_isatty>
 801e418:	1c43      	adds	r3, r0, #1
 801e41a:	d102      	bne.n	801e422 <_isatty_r+0x1a>
 801e41c:	682b      	ldr	r3, [r5, #0]
 801e41e:	b103      	cbz	r3, 801e422 <_isatty_r+0x1a>
 801e420:	6023      	str	r3, [r4, #0]
 801e422:	bd38      	pop	{r3, r4, r5, pc}
 801e424:	200137f0 	.word	0x200137f0

0801e428 <_init>:
 801e428:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801e42a:	bf00      	nop
 801e42c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801e42e:	bc08      	pop	{r3}
 801e430:	469e      	mov	lr, r3
 801e432:	4770      	bx	lr

0801e434 <_fini>:
 801e434:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801e436:	bf00      	nop
 801e438:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801e43a:	bc08      	pop	{r3}
 801e43c:	469e      	mov	lr, r3
 801e43e:	4770      	bx	lr
