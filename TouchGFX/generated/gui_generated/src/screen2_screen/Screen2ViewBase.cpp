/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen2_screen/Screen2ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>

Screen2ViewBase::Screen2ViewBase() :
    flexButtonCallback(this, &Screen2ViewBase::flexButtonCallbackHandler)
{

    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    image1.setXY(95, 160);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_REDCAR_ID));

    flexButton1.setIconBitmaps(Bitmap(BITMAP_BLUE_ICONS_HOME_32_ID), Bitmap(BITMAP_BLUE_ICONS_HOME_32_ID));
    flexButton1.setIconXY(0, 0);
    flexButton1.setPosition(204, 282, 32, 32);
    flexButton1.setAction(flexButtonCallback);

    lamb.setXY(63, 20);
    lamb.setBitmap(touchgfx::Bitmap(BITMAP_LAMB_ID));

    add(__background);
    add(image1);
    add(flexButton1);
    add(lamb);
}

void Screen2ViewBase::setupScreen()
{

}

void Screen2ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton1)
    {
        //Interaction1
        //When flexButton1 clicked change screen to Screen1
        //Go to Screen1 with screen transition towards East
        application().gotoScreen1ScreenWipeTransitionEast();

        //Interaction2
        //When Interaction1 completed call virtual function
        //Call ExitFromScreen2
        ExitFromScreen2();

        //Interaction3
        //When Interaction1 completed change screen to Screen3
        //Go to Screen3 with screen transition towards East
        application().gotoScreen3ScreenSlideTransitionEast();
    }
}
